#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: LivshitzRudy2007
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:12:09 2020
//! 
//! <autogenerated>

#include "livshitz_rudy_2007.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamiclivshitz_rudy_2007FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_amplitude =  -15.0; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Dynamiclivshitz_rudy_2007FromCellMLCvode::Dynamiclivshitz_rudy_2007FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiclivshitz_rudy_2007FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamiclivshitz_rudy_2007FromCellMLCvode::~Dynamiclivshitz_rudy_2007FromCellMLCvode()
    {
    }
    
    double Dynamiclivshitz_rudy_2007FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 12);
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 13);
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: 0.0257059808595638
        
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__R = 8314.0; // mJ_per_mole_K
        const double var_Environment__Temp = 310.0; // kelvin
        const double var_Environment__FonRT = (var_Environment__F / var_Environment__Temp) / var_Environment__R; // per_mV
        const double var_Environment__K_o = 4.5; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_Ca__kmtrpn = 0.00050000000000000001; // mM
        const double var_Ca__kmcmdn = 0.0023800000000000002; // mM
        const double var_Ca__Ca_T = var_chaste_interface__Ca__Ca_T; // mM
        const double var_Ca__cmdnbar = 0.050000000000000003; // mM
        const double var_Ca__trpnbar = 0.070000000000000007; // mM
        const double var_Ca__bmyo = ((var_Ca__cmdnbar + var_Ca__trpnbar) - var_Ca__Ca_T) + var_Ca__kmtrpn + var_Ca__kmcmdn; // mM
        const double var_Ca__cmyo = ((var_Ca__kmcmdn * var_Ca__kmtrpn) - (var_Ca__Ca_T * (var_Ca__kmtrpn + var_Ca__kmcmdn))) + (var_Ca__trpnbar * var_Ca__kmcmdn) + (var_Ca__cmdnbar * var_Ca__kmtrpn); // mM2
        const double var_Ca__dmyo = (-var_Ca__kmtrpn) * var_Ca__kmcmdn * var_Ca__Ca_T; // mM3
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) / 3.0) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * var_Ca__dmyo)) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) / 3.0)) - (var_Ca__bmyo / 3.0); // mM
        const double var_ICaL__Ca_i = var_Ca__Ca_i; // mM
        const double var_ICaL__F = var_Environment__F; // C_per_mole
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.00054000000000000001; // L_per_F_ms
        const double var_ICaL__ibarca = (var_ICaL__G_CaL_mult * var_ICaL__pca * 4.0 * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gacai * var_ICaL__Ca_i * exp(2.0 * var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__gacao * var_ICaL__Ca_o))) / (exp(2.0 * var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__kmca = 0.00059999999999999995; // mM
        const double var_ICaL__fca = 1.0 / (1.0 + (var_ICaL__Ca_i / var_ICaL__kmca)); // dimensionless
        const double var_ICaL__ilca = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibarca; // uA_per_uF
        const double var_cell__ilca = var_ICaL__ilca; // uA_per_uF
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICab__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICab__Ca_i = var_Ca__Ca_i; // mM
        const double var_ICab__gcab = 0.003016; // mS_per_uF
        const double var_ICab__icab = var_ICab__gcab * (var_ICab__V - (log(var_ICab__Ca_o / var_ICab__Ca_i) / (2.0 * var_ICab__FonRT))); // uA_per_uF
        const double var_cell__icab = var_ICab__icab; // uA_per_uF
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 1.1499999999999999; // uA_per_uF
        const double var_IpCa__Ca_i = var_Ca__Ca_i; // mM
        const double var_IpCa__ipca = (var_IpCa__ibarpca * var_IpCa__Ca_i) / (var_IpCa__kmpca + var_IpCa__Ca_i); // uA_per_uF
        const double var_cell__ipca = var_IpCa__ipca; // uA_per_uF
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__gammas = 0.14999999999999999; // dimensionless
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__Ca_i = var_Ca__Ca_i; // mM
        const double var_INaCa__c1 = 0.00025000000000000001; // uA_per_uF
        const double var_INaCa__c2 = 0.0001; // dimensionless
        const double var_INaCa__inaca = (var_INaCa__c1 * exp((var_INaCa__gammas - 1.0) * var_INaCa__V * var_INaCa__FonRT) * ((exp(var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i))) / (1.0 + (var_INaCa__c2 * exp((var_INaCa__gammas - 1.0) * var_INaCa__V * var_INaCa__FonRT) * ((exp(var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i)))); // uA_per_uF
        const double var_cell__inaca = var_INaCa__inaca; // uA_per_uF
        const double var_ICaT__gcat = 0.050000000000000003; // mS_per_uF
        const double var_ICaT__g = var_chaste_interface__ICaT__g; // dimensionless
        const double var_ICaT__b = var_chaste_interface__ICaT__b; // dimensionless
        const double var_ICaT__V = var_chaste_interface__cell__V; // mV
        const double var_reversal_potentials__Ca_o = var_Environment__Ca_o; // mM
        const double var_reversal_potentials__Ca_i = var_Ca__Ca_i; // mM
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_reversal_potentials__ECa = (log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i) / 2.0) / var_reversal_potentials__FonRT; // mV
        const double var_ICaT__ECa = var_reversal_potentials__ECa; // mV
        const double var_ICaT__icat = var_ICaT__gcat * var_ICaT__b * var_ICaT__b * var_ICaT__g * (var_ICaT__V - var_ICaT__ECa); // uA_per_uF
        const double var_cell__icat = var_ICaT__icat; // uA_per_uF
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__ENa = log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i) / var_reversal_potentials__FonRT; // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_INa__ina = var_INa__GNa * var_INa__m * var_INa__m * var_INa__m * var_INa__H * var_INa__J * (var_INa__V - var_INa__ENa); // uA_per_uF
        const double var_cell__ina = var_INa__ina; // uA_per_uF
        const double var_INab__GNab = 0.0040000000000000001; // mS_per_uF
        const double var_INab__ENa = var_reversal_potentials__ENa; // mV
        const double var_INab__V = var_chaste_interface__cell__V; // mV
        const double var_INab__inab = var_INab__GNab * (var_INab__V - var_INab__ENa); // uA_per_uF
        const double var_cell__inab = var_INab__inab; // uA_per_uF
        const double var_ICaL__Na_o = var_Environment__Na_o; // mM
        const double var_ICaL__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_ICaL__ganao = 0.75; // dimensionless
        const double var_ICaL__ganai = 0.75; // dimensionless
        const double var_ICaL__pna = 6.75e-07; // L_per_F_ms
        const double var_ICaL__ibarna = (var_ICaL__G_CaL_mult * var_ICaL__pna * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__ganai * var_ICaL__Na_i * exp(var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__ganao * var_ICaL__Na_o))) / (exp(var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__ilcana = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibarna; // uA_per_uF
        const double var_cell__ilcana = var_ICaL__ilcana; // uA_per_uF
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__ibarnak = 2.25; // uA_per_uF
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__inak = ((var_INaK__ibarnak * var_INaK__fnak) / (1.0 + pow(var_INaK__kmnai / var_INaK__Na_i, 2.0))) / (1.0 + (var_INaK__kmko / var_INaK__K_o)); // uA_per_uF
        const double var_cell__inak = var_INaK__inak; // uA_per_uF
        const double var_IKr__K_o = var_Environment__K_o; // mM
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__r = 1.0 / (1.0 + exp((var_IKr__V + 9.0) / 22.399999999999999)); // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
        const double var_reversal_potentials__EK = log(var_reversal_potentials__K_o / var_reversal_potentials__K_i) / var_reversal_potentials__FonRT; // mV
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IKr__ikr = var_IKr__gkrmax * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__xr * var_IKr__r * (var_IKr__V - var_IKr__EK); // uA_per_uF
        const double var_cell__ikr = var_IKr__ikr; // uA_per_uF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__Ca_i = var_Ca__Ca_i; // mM
        const double var_IKs__GKsmax = 0.433; // mS_per_uF
        const double var_IKs__gks = var_IKs__GKsmax * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))) / var_reversal_potentials__FonRT; // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__iks = var_IKs__gks * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__EKs); // uA_per_uF
        const double var_cell__iks = var_IKs__iks; // uA_per_uF
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1__GK1max = 0.75; // mS_per_uF
        const double var_IK1__K_o = var_Environment__K_o; // mM
        const double var_IK1__GK1_ = var_IK1__GK1max * sqrt(var_IK1__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__EK) - 59.215000000000003))); // per_ms
        const double var_IK1__bk1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__EK) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__EK) + 4.7530000000000001))); // per_ms
        const double var_IK1__gK1 = (var_IK1__GK1_ * var_IK1__ak1) / (var_IK1__ak1 + var_IK1__bk1); // mS_per_uF
        const double var_IK1__IK1 = var_IK1__gK1 * (var_IK1__V - var_IK1__EK); // uA_per_uF
        const double var_cell__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_IKp__GKpmax = 0.0055199999999999997; // mS_per_uF
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__V = var_chaste_interface__cell__V; // mV
        const double var_IKp__ikp = (var_IKp__GKpmax * (var_IKp__V - var_IKp__EK)) / (1.0 + exp((7.4880000000000004 - var_IKp__V) / 5.9800000000000004)); // uA_per_uF
        const double var_cell__ikp = var_IKp__ikp; // uA_per_uF
        const double var_ICaL__K_o = var_Environment__K_o; // mM
        const double var_ICaL__K_i = var_chaste_interface__K__K_i; // mM
        const double var_ICaL__pk = 1.9299999999999999e-07; // L_per_F_ms
        const double var_ICaL__gako = 0.75; // dimensionless
        const double var_ICaL__gaki = 0.75; // dimensionless
        const double var_ICaL__ibark = (var_ICaL__G_CaL_mult * var_ICaL__pk * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gaki * var_ICaL__K_i * exp(var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__gako * var_ICaL__K_o))) / (exp(var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__ilcak = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibark; // uA_per_uF
        const double var_cell__ilcak = var_ICaL__ilcak; // uA_per_uF
        const double var_cell__caiont = ((var_cell__ilca + var_cell__icab + var_cell__ipca) - (2.0 * var_cell__inaca)) + var_cell__icat; // uA_per_uF
        const double var_cell__naiont = var_cell__ina + var_cell__inab + (3.0 * var_cell__inaca) + var_cell__ilcana + (3.0 * var_cell__inak); // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__kiont = ((var_cell__ikr + var_cell__iks + var_cell__IK1 + var_cell__ikp + var_cell__ilcak) - (2.0 * var_cell__inak)) + var_cell__i_Stim; // uA_per_uF
        const double var_chaste_interface__cell__kiont = var_cell__kiont; // uA_per_uF
        const double var_chaste_interface__cell__caiont = var_cell__caiont; // uA_per_uF
        const double var_chaste_interface__cell__naiont = var_cell__naiont; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__naiont + var_chaste_interface__cell__kiont + var_chaste_interface__cell__caiont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Irel__Rel = NV_Ith_S(rY, 11);
        // Units: mM_per_ms; Initial value: 1.06874246141923e-23
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 12);
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 13);
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: 0.0257059808595638
        double var_chaste_interface__Ca__Ca_JSR_T = NV_Ith_S(rY, 15);
        // Units: mM; Initial value: 7.87371650296567
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 16);
        // Units: mM; Initial value: 2.71518235696672
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__R = 8314.0; // mJ_per_mole_K
        const double var_Environment__Temp = 310.0; // kelvin
        const double var_Environment__FonRT = (var_Environment__F / var_Environment__Temp) / var_Environment__R; // per_mV
        const double var_Environment__K_o = 4.5; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_cell__F = var_Environment__F; // C_per_mole
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_Ca__kmtrpn = 0.00050000000000000001; // mM
        const double var_Ca__kmcmdn = 0.0023800000000000002; // mM
        const double var_Ca__Ca_T = var_chaste_interface__Ca__Ca_T; // mM
        const double var_Ca__cmdnbar = 0.050000000000000003; // mM
        const double var_Ca__trpnbar = 0.070000000000000007; // mM
        const double var_Ca__bmyo = ((var_Ca__cmdnbar + var_Ca__trpnbar) - var_Ca__Ca_T) + var_Ca__kmtrpn + var_Ca__kmcmdn; // mM
        const double var_Ca__cmyo = ((var_Ca__kmcmdn * var_Ca__kmtrpn) - (var_Ca__Ca_T * (var_Ca__kmtrpn + var_Ca__kmcmdn))) + (var_Ca__trpnbar * var_Ca__kmcmdn) + (var_Ca__cmdnbar * var_Ca__kmtrpn); // mM2
        const double var_Ca__dmyo = (-var_Ca__kmtrpn) * var_Ca__kmcmdn * var_Ca__Ca_T; // mM3
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) / 3.0) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * var_Ca__dmyo)) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) / 3.0)) - (var_Ca__bmyo / 3.0); // mM
        const double var_ICaL__Ca_i = var_Ca__Ca_i; // mM
        const double var_ICaL__F = var_Environment__F; // C_per_mole
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.00054000000000000001; // L_per_F_ms
        const double var_ICaL__ibarca = (var_ICaL__G_CaL_mult * var_ICaL__pca * 4.0 * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gacai * var_ICaL__Ca_i * exp(2.0 * var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__gacao * var_ICaL__Ca_o))) / (exp(2.0 * var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__kmca = 0.00059999999999999995; // mM
        const double var_ICaL__fca = 1.0 / (1.0 + (var_ICaL__Ca_i / var_ICaL__kmca)); // dimensionless
        const double var_ICaL__ilca = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibarca; // uA_per_uF
        const double var_cell__ilca = var_ICaL__ilca; // uA_per_uF
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICab__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICab__Ca_i = var_Ca__Ca_i; // mM
        const double var_ICab__gcab = 0.003016; // mS_per_uF
        const double var_ICab__icab = var_ICab__gcab * (var_ICab__V - (log(var_ICab__Ca_o / var_ICab__Ca_i) / (2.0 * var_ICab__FonRT))); // uA_per_uF
        const double var_cell__icab = var_ICab__icab; // uA_per_uF
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 1.1499999999999999; // uA_per_uF
        const double var_IpCa__Ca_i = var_Ca__Ca_i; // mM
        const double var_IpCa__ipca = (var_IpCa__ibarpca * var_IpCa__Ca_i) / (var_IpCa__kmpca + var_IpCa__Ca_i); // uA_per_uF
        const double var_cell__ipca = var_IpCa__ipca; // uA_per_uF
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__gammas = 0.14999999999999999; // dimensionless
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__Ca_i = var_Ca__Ca_i; // mM
        const double var_INaCa__c1 = 0.00025000000000000001; // uA_per_uF
        const double var_INaCa__c2 = 0.0001; // dimensionless
        const double var_INaCa__inaca = (var_INaCa__c1 * exp((var_INaCa__gammas - 1.0) * var_INaCa__V * var_INaCa__FonRT) * ((exp(var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i))) / (1.0 + (var_INaCa__c2 * exp((var_INaCa__gammas - 1.0) * var_INaCa__V * var_INaCa__FonRT) * ((exp(var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i)))); // uA_per_uF
        const double var_cell__inaca = var_INaCa__inaca; // uA_per_uF
        const double var_ICaT__gcat = 0.050000000000000003; // mS_per_uF
        const double var_ICaT__g = var_chaste_interface__ICaT__g; // dimensionless
        const double var_ICaT__b = var_chaste_interface__ICaT__b; // dimensionless
        const double var_ICaT__V = var_chaste_interface__cell__V; // mV
        const double var_reversal_potentials__Ca_o = var_Environment__Ca_o; // mM
        const double var_reversal_potentials__Ca_i = var_Ca__Ca_i; // mM
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_reversal_potentials__ECa = (log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i) / 2.0) / var_reversal_potentials__FonRT; // mV
        const double var_ICaT__ECa = var_reversal_potentials__ECa; // mV
        const double var_ICaT__icat = var_ICaT__gcat * var_ICaT__b * var_ICaT__b * var_ICaT__g * (var_ICaT__V - var_ICaT__ECa); // uA_per_uF
        const double var_cell__icat = var_ICaT__icat; // uA_per_uF
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__ENa = log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i) / var_reversal_potentials__FonRT; // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_INa__ina = var_INa__GNa * var_INa__m * var_INa__m * var_INa__m * var_INa__H * var_INa__J * (var_INa__V - var_INa__ENa); // uA_per_uF
        const double var_cell__ina = var_INa__ina; // uA_per_uF
        const double var_INab__GNab = 0.0040000000000000001; // mS_per_uF
        const double var_INab__ENa = var_reversal_potentials__ENa; // mV
        const double var_INab__V = var_chaste_interface__cell__V; // mV
        const double var_INab__inab = var_INab__GNab * (var_INab__V - var_INab__ENa); // uA_per_uF
        const double var_cell__inab = var_INab__inab; // uA_per_uF
        const double var_ICaL__Na_o = var_Environment__Na_o; // mM
        const double var_ICaL__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_ICaL__ganao = 0.75; // dimensionless
        const double var_ICaL__ganai = 0.75; // dimensionless
        const double var_ICaL__pna = 6.75e-07; // L_per_F_ms
        const double var_ICaL__ibarna = (var_ICaL__G_CaL_mult * var_ICaL__pna * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__ganai * var_ICaL__Na_i * exp(var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__ganao * var_ICaL__Na_o))) / (exp(var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__ilcana = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibarna; // uA_per_uF
        const double var_cell__ilcana = var_ICaL__ilcana; // uA_per_uF
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__ibarnak = 2.25; // uA_per_uF
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__inak = ((var_INaK__ibarnak * var_INaK__fnak) / (1.0 + pow(var_INaK__kmnai / var_INaK__Na_i, 2.0))) / (1.0 + (var_INaK__kmko / var_INaK__K_o)); // uA_per_uF
        const double var_cell__inak = var_INaK__inak; // uA_per_uF
        const double var_IKr__K_o = var_Environment__K_o; // mM
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__r = 1.0 / (1.0 + exp((var_IKr__V + 9.0) / 22.399999999999999)); // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
        const double var_reversal_potentials__EK = log(var_reversal_potentials__K_o / var_reversal_potentials__K_i) / var_reversal_potentials__FonRT; // mV
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IKr__ikr = var_IKr__gkrmax * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__xr * var_IKr__r * (var_IKr__V - var_IKr__EK); // uA_per_uF
        const double var_cell__ikr = var_IKr__ikr; // uA_per_uF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__Ca_i = var_Ca__Ca_i; // mM
        const double var_IKs__GKsmax = 0.433; // mS_per_uF
        const double var_IKs__gks = var_IKs__GKsmax * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))) / var_reversal_potentials__FonRT; // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__iks = var_IKs__gks * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__EKs); // uA_per_uF
        const double var_cell__iks = var_IKs__iks; // uA_per_uF
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1__GK1max = 0.75; // mS_per_uF
        const double var_IK1__K_o = var_Environment__K_o; // mM
        const double var_IK1__GK1_ = var_IK1__GK1max * sqrt(var_IK1__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__EK) - 59.215000000000003))); // per_ms
        const double var_IK1__bk1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__EK) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__EK) + 4.7530000000000001))); // per_ms
        const double var_IK1__gK1 = (var_IK1__GK1_ * var_IK1__ak1) / (var_IK1__ak1 + var_IK1__bk1); // mS_per_uF
        const double var_IK1__IK1 = var_IK1__gK1 * (var_IK1__V - var_IK1__EK); // uA_per_uF
        const double var_cell__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_IKp__GKpmax = 0.0055199999999999997; // mS_per_uF
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__V = var_chaste_interface__cell__V; // mV
        const double var_IKp__ikp = (var_IKp__GKpmax * (var_IKp__V - var_IKp__EK)) / (1.0 + exp((7.4880000000000004 - var_IKp__V) / 5.9800000000000004)); // uA_per_uF
        const double var_cell__ikp = var_IKp__ikp; // uA_per_uF
        const double var_ICaL__K_o = var_Environment__K_o; // mM
        const double var_ICaL__K_i = var_chaste_interface__K__K_i; // mM
        const double var_ICaL__pk = 1.9299999999999999e-07; // L_per_F_ms
        const double var_ICaL__gako = 0.75; // dimensionless
        const double var_ICaL__gaki = 0.75; // dimensionless
        const double var_ICaL__ibark = (var_ICaL__G_CaL_mult * var_ICaL__pk * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gaki * var_ICaL__K_i * exp(var_ICaL__V * var_ICaL__FonRT)) - (var_ICaL__gako * var_ICaL__K_o))) / (exp(var_ICaL__V * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__ilcak = var_ICaL__d * var_ICaL__f * var_ICaL__fca * var_ICaL__ibark; // uA_per_uF
        const double var_cell__ilcak = var_ICaL__ilcak; // uA_per_uF
        const double var_cell__caiont = ((var_cell__ilca + var_cell__icab + var_cell__ipca) - (2.0 * var_cell__inaca)) + var_cell__icat; // uA_per_uF
        const double var_cell__naiont = var_cell__ina + var_cell__inab + (3.0 * var_cell__inaca) + var_cell__ilcana + (3.0 * var_cell__inak); // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__kiont = ((var_cell__ikr + var_cell__iks + var_cell__IK1 + var_cell__ikp + var_cell__ilcak) - (2.0 * var_cell__inak)) + var_cell__i_Stim; // uA_per_uF
        const double var_cell__l = 0.01; // cm
        const double var_cell__ra = 0.0011000000000000001; // cm
        const double var_cell__vcell = 1000.0 * M_PI * var_cell__ra * var_cell__ra * var_cell__l; // uL
        const double var_cell__ageo = (2.0 * M_PI * var_cell__ra * var_cell__ra) + (2.0 * M_PI * var_cell__ra * var_cell__l); // cm2
        const double var_cell__Acap = var_cell__ageo * 2.0; // uF
        const double var_cell__AF = var_cell__Acap / var_cell__F; // uF_mole_per_C
        const double var_cell__vmyo = var_cell__vcell * 0.68000000000000005; // uL
        const double var_cell__vnsr = var_cell__vcell * 0.055199999999999999; // uL
        const double var_cell__vjsr = var_cell__vcell * 0.0047999999999999996; // uL
        const double var_INa__a = 1.0 - (1.0 / (1.0 + exp((-(var_INa__V + 40.0)) / 0.024))); // per_ms
        const double var_INa__aH = var_INa__a * 0.13500000000000001 * exp((80.0 + var_INa__V) / (-6.7999999999999998)); // per_ms
        const double var_INa__bH = ((1.0 - var_INa__a) / (0.13 * (1.0 + exp((var_INa__V + 10.66) / (-11.1))))) + (var_INa__a * ((3.5600000000000001 * exp(0.079000000000000001 * var_INa__V)) + (3.1000000000000001 * 100000.0 * exp(0.34999999999999998 * var_INa__V)))); // per_ms
        const double var_INa__aj = (var_INa__a * (((-127140.0) * exp(0.24440000000000001 * var_INa__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa__V))) * 1.0 * (var_INa__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_INa__V + 79.230000000000004))); // per_ms
        const double var_INa__bj = (((1.0 - var_INa__a) * 0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa__V + 32.0)))) + ((var_INa__a * 0.1212 * exp((-0.01052) * var_INa__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa__V + 40.140000000000001)))); // per_ms
        const double var_INa__am = (0.32000000000000001 * 1.0 * (var_INa__V + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INa__V + 47.130000000000003))); // per_ms
        const double var_INa__bm = 0.080000000000000002 * exp((-var_INa__V) / 11.0); // per_ms
        const double var_INa__d_H_d_Environment__time = (var_INa__aH * (1.0 - var_INa__H)) - (var_INa__bH * var_INa__H); // 'per millisecond'
        const double var_INa__d_m_d_Environment__time = (var_INa__am * (1.0 - var_INa__m)) - (var_INa__bm * var_INa__m); // 'per millisecond'
        const double var_INa__d_J_d_Environment__time = (var_INa__aj * (1.0 - var_INa__J)) - (var_INa__bj * var_INa__J); // 'per millisecond'
        const double var_ICaL__dss0 = 1.0 / (1.0 + exp((-(var_ICaL__V + 10.0)) / 6.2400000000000002)); // dimensionless
        const double var_ICaL__taud = (var_ICaL__dss0 * 1.0 * (1.0 - exp((-(var_ICaL__V + 10.0)) / 6.2400000000000002))) / (0.035000000000000003 * (var_ICaL__V + 10.0)); // ms
        const double var_ICaL__dss1 = 1.0 / (1.0 + exp((-(var_ICaL__V + 60.0)) / 0.024)); // dimensionless
        const double var_ICaL__dss = var_ICaL__dss0 * var_ICaL__dss1; // dimensionless
        const double var_ICaL__fss = (1.0 / (1.0 + exp((var_ICaL__V + 32.0) / 8.0))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_ICaL__V) / 20.0))); // dimensionless
        const double var_ICaL__tauf = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_ICaL__V + 10.0), 2.0))) + 0.02); // ms
        const double var_ICaL__d_d_d_Environment__time = (var_ICaL__dss - var_ICaL__d) / var_ICaL__taud; // 'per millisecond'
        const double var_ICaL__d_f_d_Environment__time = (var_ICaL__fss - var_ICaL__f) / var_ICaL__tauf; // 'per millisecond'
        const double var_IKr__xrss = 1.0 / (1.0 + exp((-(var_IKr__V + 10.085000000000001)) / 4.25)); // dimensionless
        const double var_IKr__tauxr = 1.0 / (((0.0013799999999999999 * (var_IKr__V + 14.199999999999999)) / (1.0 - exp((-0.123) * (var_IKr__V + 14.199999999999999)))) + ((0.00060999999999999997 * (var_IKr__V + 38.899999999999999)) / (exp(0.14499999999999999 * (var_IKr__V + 38.899999999999999)) - 1.0))); // ms
        const double var_IKr__d_xr_d_Environment__time = (var_IKr__xrss - var_IKr__xr) / var_IKr__tauxr; // 'per millisecond'
        const double var_IKs__xss = 1.0 / (1.0 + exp((-(var_IKs__V - 1.5)) / 16.699999999999999)); // dimensionless
        const double var_IKs__tauxs = 1.0 / (((7.1899999999999999e-05 * (var_IKs__V + 30.0)) / (1.0 - exp((-0.14799999999999999) * (var_IKs__V + 30.0)))) + ((0.00013100000000000001 * (var_IKs__V + 30.0)) / (exp(0.068699999999999997 * (var_IKs__V + 30.0)) - 1.0))); // ms
        const double var_IKs__d_xs1_d_Environment__time = (var_IKs__xss - var_IKs__xs1) / var_IKs__tauxs; // 'per millisecond'
        const double var_IKs__d_xs2_d_Environment__time = ((var_IKs__xss - var_IKs__xs2) / var_IKs__tauxs) / 4.0; // 'per millisecond'
        const double var_ICaT__bss = 1.0 / (1.0 + exp((-(var_ICaT__V + 14.0)) / 10.800000000000001)); // dimensionless
        const double var_ICaT__taub = 3.7000000000000002 + (6.0999999999999996 / (1.0 + exp((var_ICaT__V + 25.0) / 4.5))); // ms
        const double var_ICaT__gss = 1.0 / (1.0 + exp((var_ICaT__V + 60.0) / 5.5999999999999996)); // dimensionless
        const double var_ICaT__aa = 1.0 - (1.0 / (1.0 + exp((-var_ICaT__V) / 0.0023999999999999998))); // dimensionless
        const double var_ICaT__taug = (var_ICaT__aa * 1.0 * (((-0.875) * var_ICaT__V) + 12.0)) + (12.0 * (1.0 - var_ICaT__aa)); // ms
        const double var_ICaT__d_b_d_Environment__time = (var_ICaT__bss - var_ICaT__b) / var_ICaT__taub; // 'per millisecond'
        const double var_ICaT__d_g_d_Environment__time = (var_ICaT__gss - var_ICaT__g) / var_ICaT__taug; // 'per millisecond'
        const double var_Irel__Ca_JSR_T = var_chaste_interface__Ca__Ca_JSR_T; // mM
        const double var_Irel__Rel = var_chaste_interface__Irel__Rel; // mM_per_ms
        const double var_Irel__K_Relss = 1.0; // mM
        const double var_Irel__ilca = var_ICaL__ilca; // uA_per_uF
        const double var_Irel__kappa = 0.125; // mM_per_mV_ms
        const double var_Irel__tau = 4.75; // ms
        const double var_Irel__alpha_Rel = var_Irel__tau * var_Irel__kappa; // mM_per_mV
        const double var_Irel__qn = 9.0; // dimensionless
        const double var_Irel__kmcsqn = 0.80000000000000004; // mM
        const double var_Irel__c = var_Irel__Ca_JSR_T * var_Irel__kmcsqn; // mM2
        const double var_Irel__csqnbar = 10.0; // mM
        const double var_Irel__bbb = (var_Irel__csqnbar + var_Irel__kmcsqn) - var_Irel__Ca_JSR_T; // mM
        const double var_Irel__Ca_JSR_free = ((-var_Irel__bbb) / 2.0) + (sqrt(pow(var_Irel__bbb, 2.0) + (4.0 * var_Irel__c)) / 2.0); // mM
        const double var_Irel__Rel_ss = (var_Irel__ilca * var_Irel__alpha_Rel) / (1.0 + pow(var_Irel__K_Relss / var_Irel__Ca_JSR_free, var_Irel__qn)); // mM_per_ms
        const double var_Irel__tau_Rel = var_Irel__tau / (1.0 + (0.0123 / var_Irel__Ca_JSR_free)); // ms
        const double var_Irel__d_Rel_d_Environment__time = (-(var_Irel__Rel_ss + var_Irel__Rel)) / var_Irel__tau_Rel; // 'mM per millisecond per ms'
        const double var_Iup_Ileak__Ca_i = var_Ca__Ca_i; // mM
        const double var_Iup_Ileak__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // mM
        const double var_Iup_Ileak__kmup = 0.00092000000000000003; // mM
        const double var_Iup_Ileak__iupbar = 0.0087500000000000008; // mM_per_ms
        const double var_Iup_Ileak__nsrbar = 15.0; // mM
        const double var_Iup_Ileak__iup = (var_Iup_Ileak__iupbar * var_Iup_Ileak__Ca_i) / (var_Iup_Ileak__Ca_i + var_Iup_Ileak__kmup); // mM_per_ms
        const double var_Iup_Ileak__ileak = (var_Iup_Ileak__iupbar * var_Iup_Ileak__Ca_NSR) / var_Iup_Ileak__nsrbar; // mM_per_ms
        const double var_Itr__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // mM
        const double var_Itr__Ca_JSR_free = var_Irel__Ca_JSR_free; // mM
        const double var_Itr__tautr = 120.0; // ms
        const double var_Itr__itr = (var_Itr__Ca_NSR - var_Itr__Ca_JSR_free) / var_Itr__tautr; // mM_per_ms
        const double var_Na__AF = var_cell__AF; // uF_mole_per_C
        const double var_Na__vmyo = var_cell__vmyo; // uL
        const double var_Na__naiont = var_cell__naiont; // uA_per_uF
        const double var_Na__d_Na_i_d_Environment__time = ((-var_Na__naiont) * var_Na__AF) / var_Na__vmyo; // 'millimole per litre per millisecond'
        const double var_K__AF = var_cell__AF; // uF_mole_per_C
        const double var_K__vmyo = var_cell__vmyo; // uL
        const double var_K__kiont = var_cell__kiont; // uA_per_uF
        const double var_K__d_K_i_d_Environment__time = ((-var_K__kiont) * var_K__AF) / var_K__vmyo; // 'millimole per litre per millisecond'
        const double var_Ca__AF = var_cell__AF; // uF_mole_per_C
        const double var_Ca__vmyo = var_cell__vmyo; // uL
        const double var_Ca__vjsr = var_cell__vjsr; // uL
        const double var_Ca__vnsr = var_cell__vnsr; // uL
        const double var_Ca__caiont = var_cell__caiont; // uA_per_uF
        const double var_Ca__iup = var_Iup_Ileak__iup; // mM_per_ms
        const double var_Ca__itr = var_Itr__itr; // mM_per_ms
        const double var_Ca__ileak = var_Iup_Ileak__ileak; // mM_per_ms
        const double var_Ca__Rel = var_chaste_interface__Irel__Rel; // mM_per_ms
        const double var_Ca__d_Ca_T_d_Environment__time = (((-var_Ca__caiont) * var_Ca__AF) / (var_Ca__vmyo * 2.0)) + (((var_Ca__ileak - var_Ca__iup) * var_Ca__vnsr) / var_Ca__vmyo) + ((var_Ca__Rel * var_Ca__vjsr) / var_Ca__vmyo); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_JSR_T_d_Environment__time = var_Ca__itr - var_Ca__Rel; // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_NSR_d_Environment__time = (var_Ca__iup - ((var_Ca__itr * var_Ca__vjsr) / var_Ca__vnsr)) - var_Ca__ileak; // 'millimole per litre per millisecond'
        const double var_Ca__d_Over_d_Environment__time = 0.0; // 'per millisecond'
        const double var_chaste_interface__INa__d_H_d_Environment__time = var_INa__d_H_d_Environment__time; // ___units_26
        const double var_chaste_interface__INa__d_m_d_Environment__time = var_INa__d_m_d_Environment__time; // ___units_26
        const double var_chaste_interface__INa__d_J_d_Environment__time = var_INa__d_J_d_Environment__time; // ___units_26
        const double var_chaste_interface__ICaL__d_d_d_Environment__time = var_ICaL__d_d_d_Environment__time; // ___units_26
        const double var_chaste_interface__ICaL__d_f_d_Environment__time = var_ICaL__d_f_d_Environment__time; // ___units_26
        const double var_chaste_interface__IKr__d_xr_d_Environment__time = var_IKr__d_xr_d_Environment__time; // ___units_26
        const double var_chaste_interface__IKs__d_xs1_d_Environment__time = var_IKs__d_xs1_d_Environment__time; // ___units_26
        const double var_chaste_interface__IKs__d_xs2_d_Environment__time = var_IKs__d_xs2_d_Environment__time; // ___units_26
        const double var_chaste_interface__ICaT__d_b_d_Environment__time = var_ICaT__d_b_d_Environment__time; // ___units_26
        const double var_chaste_interface__ICaT__d_g_d_Environment__time = var_ICaT__d_g_d_Environment__time; // ___units_26
        const double var_chaste_interface__Irel__d_Rel_d_Environment__time = var_Irel__d_Rel_d_Environment__time; // ___units_83
        const double var_chaste_interface__Na__d_Na_i_d_Environment__time = var_Na__d_Na_i_d_Environment__time; // ___units_84
        const double var_chaste_interface__K__d_K_i_d_Environment__time = var_K__d_K_i_d_Environment__time; // ___units_84
        const double var_chaste_interface__Ca__d_Ca_T_d_Environment__time = var_Ca__d_Ca_T_d_Environment__time; // ___units_84
        const double var_chaste_interface__Ca__d_Ca_JSR_T_d_Environment__time = var_Ca__d_Ca_JSR_T_d_Environment__time; // ___units_84
        const double var_chaste_interface__Ca__d_Ca_NSR_d_Environment__time = var_Ca__d_Ca_NSR_d_Environment__time; // ___units_84
        const double var_chaste_interface__Ca__d_Over_d_Environment__time = var_Ca__d_Over_d_Environment__time; // ___units_26
        const double d_dt_chaste_interface__INa__H = var_chaste_interface__INa__d_H_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__m = var_chaste_interface__INa__d_m_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__J = var_chaste_interface__INa__d_J_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__d = var_chaste_interface__ICaL__d_d_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__f = var_chaste_interface__ICaL__d_f_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKr__xr = var_chaste_interface__IKr__d_xr_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs1 = var_chaste_interface__IKs__d_xs1_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs2 = var_chaste_interface__IKs__d_xs2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaT__b = var_chaste_interface__ICaT__d_b_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaT__g = var_chaste_interface__ICaT__d_g_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Rel = var_chaste_interface__Irel__d_Rel_d_Environment__time; // 'mM per millisecond per ms'
        const double d_dt_chaste_interface__Na__Na_i = var_chaste_interface__Na__d_Na_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__K__K_i = var_chaste_interface__K__d_K_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_T = var_chaste_interface__Ca__d_Ca_T_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_JSR_T = var_chaste_interface__Ca__d_Ca_JSR_T_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_NSR = var_chaste_interface__Ca__d_Ca_NSR_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Over = var_chaste_interface__Ca__d_Over_d_Environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_cell__d_V_d_Environment__time = -(var_cell__naiont + var_cell__kiont + var_cell__caiont); // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_Environment__time = var_cell__d_V_d_Environment__time; // ___units_17
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_Environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__INa__H;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa__m;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa__J;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__ICaL__d;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__ICaL__f;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__IKr__xr;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__IKs__xs1;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__IKs__xs2;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__ICaT__b;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__ICaT__g;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__Irel__Rel;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__K__K_i;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__Ca__Ca_T;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Ca__Ca_JSR_T;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Ca__Ca_NSR;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Ca__Over;
    }
    
    void Dynamiclivshitz_rudy_2007FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -89.4356034692784
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.994401369032678
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000734780346592185
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.996100688673679
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 3.2514786721066e-27
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.997404948824816
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.000162194715543637
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0285147332973946
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.0764114040188678
        double var_chaste_interface__ICaT__b = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.000927461915392873
        double var_chaste_interface__ICaT__g = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.952834331760863
        double var_chaste_interface__Irel__Rel = NV_Ith_S(rY, 11);
        // Units: mM_per_ms; Initial value: 1.06874246141923e-23
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 12);
        // Units: mM; Initial value: 16.612739313555
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 13);
        // Units: mM; Initial value: 139.730914103161
        double var_chaste_interface__Ca__Ca_T = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: 0.0257059808595638
        double var_chaste_interface__Ca__Ca_JSR_T = NV_Ith_S(rY, 15);
        // Units: mM; Initial value: 7.87371650296567
        
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__R = 8314.0; // mJ_per_mole_K
        const double var_Environment__Temp = 310.0; // kelvin
        const double var_Environment__K_o = 4.5; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_chaste_interface__Environment__fake_dt = 1.0; // ms
        const double var_cell__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_Ca__kmtrpn = 0.00050000000000000001; // mM
        const double var_Ca__kmcmdn = 0.0023800000000000002; // mM
        const double var_Ca__Ca_T = var_chaste_interface__Ca__Ca_T; // mM
        const double var_Ca__cmdnbar = 0.050000000000000003; // mM
        const double var_Ca__trpnbar = 0.070000000000000007; // mM
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.00054000000000000001; // L_per_F_ms
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__kmca = 0.00059999999999999995; // mM
        const double var_ICab__gcab = 0.003016; // mS_per_uF
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 1.1499999999999999; // uA_per_uF
        const double var_INaCa__gammas = 0.14999999999999999; // dimensionless
        const double var_INaCa__c1 = 0.00025000000000000001; // uA_per_uF
        const double var_INaCa__c2 = 0.0001; // dimensionless
        const double var_ICaT__gcat = 0.050000000000000003; // mS_per_uF
        const double var_ICaT__g = var_chaste_interface__ICaT__g; // dimensionless
        const double var_ICaT__b = var_chaste_interface__ICaT__b; // dimensionless
        const double var_INa__GNa = 16.0; // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_INab__GNab = 0.0040000000000000001; // mS_per_uF
        const double var_ICaL__ganao = 0.75; // dimensionless
        const double var_ICaL__ganai = 0.75; // dimensionless
        const double var_ICaL__pna = 6.75e-07; // L_per_F_ms
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__ibarnak = 2.25; // uA_per_uF
        const double var_INaK__kmnai = 10.0; // mM
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKr__gkrmax = 0.02614; // mS_per_uF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__GKsmax = 0.433; // mS_per_uF
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_IK1__GK1max = 0.75; // mS_per_uF
        const double var_IKp__GKpmax = 0.0055199999999999997; // mS_per_uF
        const double var_ICaL__pk = 1.9299999999999999e-07; // L_per_F_ms
        const double var_ICaL__gako = 0.75; // dimensionless
        const double var_ICaL__gaki = 0.75; // dimensionless
        const double var_cell__l = 0.01; // cm
        const double var_cell__ra = 0.0011000000000000001; // cm
        const double var_Irel__Rel = var_chaste_interface__Irel__Rel; // mM_per_ms
        const double var_Irel__K_Relss = 1.0; // mM
        const double var_Irel__kappa = 0.125; // mM_per_mV_ms
        const double var_Irel__tau = 4.75; // ms
        const double var_Irel__qn = 9.0; // dimensionless
        const double var_Irel__kmcsqn = 0.80000000000000004; // mM
        const double var_Irel__csqnbar = 10.0; // mM
        const double var_Iup_Ileak__kmup = 0.00092000000000000003; // mM
        const double var_Iup_Ileak__iupbar = 0.0087500000000000008; // mM_per_ms
        const double var_Iup_Ileak__nsrbar = 15.0; // mM
        const double var_Itr__tautr = 120.0; // ms
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_K__K_i = var_chaste_interface__K__K_i; // mM
        const double var_Ca__Ca_JSR_T = var_chaste_interface__Ca__Ca_JSR_T; // mM
        const double var_t1 = pow(var_Environment__K_o, 1.0 / 2.0); // dimensionless
        const double var_t2 = var_IK1__GK1max * var_t1; // dimensionless
        const double var_t4 = 1.0 / var_K__K_i; // dimensionless
        const double var_t6 = log(var_Environment__K_o * var_t4); // dimensionless
        const double var_t7 = 1.0 / var_Environment__F; // dimensionless
        const double var_t9 = var_Environment__Temp * var_Environment__R; // dimensionless
        const double var_t10 = (var_t6 * var_t7) * var_t9; // dimensionless
        const double var_t13 = exp(((0.23849999999999999 * var_cell__V) - (0.23849999999999999 * var_t10)) - 14.1227775); // dimensionless
        const double var_t14 = 1.0 + var_t13; // dimensionless
        const double var_t15 = 1.0 / var_t14; // dimensionless
        const double var_t20 = exp(((0.080320000000000003 * var_cell__V) - (0.080320000000000003 * var_t10)) + 0.43983232); // dimensionless
        const double var_t25 = exp(((0.061749999999999999 * var_cell__V) - (0.061749999999999999 * var_t10)) - 36.698642499999998); // dimensionless
        const double var_t26 = (0.49124000000000001 * var_t20) + var_t25; // dimensionless
        const double var_t30 = exp((((-0.51429999999999998) * var_cell__V) + (0.51429999999999998 * var_t10)) - 2.4444678999999998); // dimensionless
        const double var_t31 = 1.0 + var_t30; // dimensionless
        const double var_t32 = 1.0 / var_t31; // dimensionless
        const double var_t34 = (1.02 * var_t15) + (var_t26 * var_t32); // dimensionless
        const double var_t35 = 1.0 / var_t34; // dimensionless
        const double var_t37 = (var_t2 * var_t15) * var_t35; // dimensionless
        const double var_t38 = 0.43893811259999999 * var_t37; // dimensionless
        const double var_t39 = pow(var_INa__m, 2.0); // dimensionless
        const double var_t41 = (var_INa__GNa * var_t39) * var_INa__m; // dimensionless
        const double var_t42 = var_INa__H * var_INa__J; // dimensionless
        const double var_t43 = var_t41 * var_t42; // dimensionless
        const double var_t44 = var_IKr__gkrmax * var_t1; // dimensionless
        const double var_t47 = exp((0.044642857139999999 * var_cell__V) + 0.40178571429999999); // dimensionless
        const double var_t48 = 1.0 + var_t47; // dimensionless
        const double var_t49 = 1.0 / var_t48; // dimensionless
        const double var_t51 = (var_t44 * var_IKr__xr) * var_t49; // dimensionless
        const double var_t52 = 0.43033148290000001 * var_t51; // dimensionless
        const double var_t53 = var_Ca__kmcmdn * var_Ca__kmtrpn; // dimensionless
        const double var_t54 = var_Ca__cmdnbar * var_Ca__kmtrpn; // dimensionless
        const double var_t55 = var_Ca__trpnbar * var_Ca__kmcmdn; // dimensionless
        const double var_t56 = pow(var_Ca__cmdnbar, 2.0); // dimensionless
        const double var_t63 = pow(var_Ca__trpnbar, 2.0); // dimensionless
        const double var_t68 = pow(var_Ca__Ca_T, 2.0); // dimensionless
        const double var_t71 = pow(var_Ca__kmtrpn, 2.0); // dimensionless
        const double var_t72 = pow(var_Ca__kmcmdn, 2.0); // dimensionless
        const double var_t73 = ((((((((((((((-var_t53) - var_t54) - var_t55) + var_t56) + ((2.0 * var_Ca__cmdnbar) * var_Ca__trpnbar)) - ((2.0 * var_Ca__cmdnbar) * var_Ca__Ca_T)) + ((2.0 * var_Ca__cmdnbar) * var_Ca__kmcmdn)) + var_t63) - ((2.0 * var_Ca__trpnbar) * var_Ca__Ca_T)) + ((2.0 * var_Ca__trpnbar) * var_Ca__kmtrpn)) + var_t68) + (var_Ca__Ca_T * var_Ca__kmtrpn)) + (var_Ca__Ca_T * var_Ca__kmcmdn)) + var_t71) + var_t72; // dimensionless
        const double var_t74 = pow(var_t73, 1.0 / 2.0); // dimensionless
        const double var_t75 = (((var_Ca__cmdnbar + var_Ca__trpnbar) - var_Ca__Ca_T) + var_Ca__kmtrpn) + var_Ca__kmcmdn; // dimensionless
        const double var_t76 = var_Ca__kmtrpn + var_Ca__kmcmdn; // dimensionless
        const double var_t77 = var_Ca__Ca_T * var_t76; // dimensionless
        const double var_t81 = pow(var_t75, 2.0); // dimensionless
        const double var_t86 = (((9.0 * var_t75) * (((var_t53 - var_t77) + var_t55) + var_t54)) - ((2.0 * var_t81) * var_t75)) + ((27.0 * var_t53) * var_Ca__Ca_T); // dimensionless
        const double var_t91 = (((var_t81 - (3.0 * var_t53)) + (3.0 * var_t77)) - (3.0 * var_t55)) - (3.0 * var_t54); // dimensionless
        const double var_t92 = 1.0 / pow(var_t91, 1.5); // dimensionless
        const double var_t95 = acos(((1.0 / 2.0) * var_t86) * var_t92); // dimensionless
        const double var_t96 = (1.0 / 3.0) * var_t95; // dimensionless
        const double var_t97 = cos(var_t96); // dimensionless
        const double var_t99 = ((2.0 / 3.0) * var_t74) * var_t97; // dimensionless
        const double var_t100 = (1.0 / 3.0) * var_Ca__cmdnbar; // dimensionless
        const double var_t101 = (1.0 / 3.0) * var_Ca__trpnbar; // dimensionless
        const double var_t102 = (1.0 / 3.0) * var_Ca__Ca_T; // dimensionless
        const double var_t103 = (1.0 / 3.0) * var_Ca__kmtrpn; // dimensionless
        const double var_t104 = (1.0 / 3.0) * var_Ca__kmcmdn; // dimensionless
        const double var_t105 = ((((var_t99 - var_t100) - var_t101) + var_t102) - var_t103) - var_t104; // dimensionless
        const double var_t106 = 1.0 / var_t105; // dimensionless
        const double var_t107 = pow(var_t106, 1.3999999999999999); // dimensionless
        const double var_t109 = 1.0 + (6.481821026e-07 * var_t107); // dimensionless
        const double var_t113 = var_IKs__GKsmax * (1.0 + (0.59999999999999998 / var_t109)); // dimensionless
        const double var_t115 = (var_t113 * var_IKs__xs1) * var_IKs__xs2; // dimensionless
        const double var_t116 = var_cell__V - var_t10; // dimensionless
        const double var_t120 = exp(1.252173913 - (0.16722408029999999 * var_cell__V)); // dimensionless
        const double var_t121 = 1.0 + var_t120; // dimensionless
        const double var_t122 = pow(var_t121, 2.0); // dimensionless
        const double var_t126 = (((0.16722408029999999 * var_IKp__GKpmax) * var_t116) / var_t122) * var_t120; // dimensionless
        const double var_t128 = pow(var_t48, 2.0); // dimensionless
        const double var_t133 = ((((0.01921122691 * var_t44) * var_IKr__xr) / var_t128) * var_t116) * var_t47; // dimensionless
        const double var_t134 = var_t2 * var_t15; // dimensionless
        const double var_t135 = pow(var_t34, 2.0); // dimensionless
        const double var_t137 = (1.0 / var_t135) * var_t116; // dimensionless
        const double var_t138 = pow(var_t14, 2.0); // dimensionless
        const double var_t139 = 1.0 / var_t138; // dimensionless
        const double var_t146 = pow(var_t31, 2.0); // dimensionless
        const double var_t148 = var_t26 / var_t146; // dimensionless
        const double var_t154 = ((0.43893811259999999 * var_t134) * var_t137) * (((((-0.24326999999999999) * var_t139) * var_t13) + (((0.039456396800000001 * var_t20) + (0.061749999999999999 * var_t25)) * var_t32)) + ((0.51429999999999998 * var_t148) * var_t30)); // dimensionless
        const double var_t159 = ((((0.10468673990000001 * var_t2) * var_t139) * var_t35) * var_t116) * var_t13; // dimensionless
        const double var_t160 = var_INaCa__gammas - 1.0; // dimensionless
        const double var_t162 = 1.0 / var_Environment__Temp; // dimensionless
        const double var_t163 = var_Environment__F * var_t162; // dimensionless
        const double var_t164 = 1.0 / var_Environment__R; // dimensionless
        const double var_t167 = exp(((var_t160 * var_cell__V) * var_t163) * var_t164); // dimensionless
        const double var_t168 = var_INaCa__c1 * var_t167; // dimensionless
        const double var_t170 = var_t162 * var_t164; // dimensionless
        const double var_t171 = (var_cell__V * var_Environment__F) * var_t170; // dimensionless
        const double var_t172 = exp(var_t171); // dimensionless
        const double var_t173 = pow(var_Na__Na_i, 2.0); // dimensionless
        const double var_t174 = var_t173 * var_Na__Na_i; // dimensionless
        const double var_t176 = (var_t172 * var_t174) * var_Environment__Ca_o; // dimensionless
        const double var_t177 = pow(var_Environment__Na_o, 2.0); // dimensionless
        const double var_t178 = var_t177 * var_Environment__Na_o; // dimensionless
        const double var_t179 = var_t178 * var_t105; // dimensionless
        const double var_t180 = var_t176 - var_t179; // dimensionless
        const double var_t181 = var_INaCa__c2 * var_t167; // dimensionless
        const double var_t182 = var_t176 + var_t179; // dimensionless
        const double var_t184 = 1.0 + (var_t181 * var_t182); // dimensionless
        const double var_t185 = pow(var_t184, 2.0); // dimensionless
        const double var_t186 = 1.0 / var_t185; // dimensionless
        const double var_t187 = var_t180 * var_t186; // dimensionless
        const double var_t194 = var_t164 * var_t172; // dimensionless
        const double var_t195 = var_t174 * var_Environment__Ca_o; // dimensionless
        const double var_t200 = (var_t168 * var_t187) * ((((((var_INaCa__c2 * var_t160) * var_Environment__F) * var_t170) * var_t167) * var_t182) + (((var_t181 * var_t163) * var_t194) * var_t195)); // dimensionless
        const double var_t202 = exp((-0.10000000000000001) * var_t171); // dimensionless
        const double var_t205 = exp(0.01485884101 * var_Environment__Na_o); // dimensionless
        const double var_t206 = var_t205 - 1.0; // dimensionless
        const double var_t207 = exp(-var_t171); // dimensionless
        const double var_t210 = (1.0 + (0.1245 * var_t202)) + ((0.0052142857139999997 * var_t206) * var_t207); // dimensionless
        const double var_t211 = pow(var_t210, 2.0); // dimensionless
        const double var_t214 = pow(var_INaK__kmnai, 2.0); // dimensionless
        const double var_t217 = 1.0 + (var_t214 / var_t173); // dimensionless
        const double var_t222 = 1.0 / (1.0 + (var_INaK__kmko / var_Environment__K_o)); // dimensionless
        const double var_t233 = (((var_INaK__ibarnak / var_t211) / var_t217) * var_t222) * (((((-0.012449999999999999) * var_t163) * var_t164) * var_t202) - ((((0.0052142857139999997 * var_t206) * var_Environment__F) * var_t170) * var_t207)); // dimensionless
        const double var_t234 = 1.0 / var_t121; // dimensionless
        const double var_t235 = var_IKp__GKpmax * var_t234; // dimensionless
        const double var_t236 = pow(var_ICaT__b, 2.0); // dimensionless
        const double var_t237 = var_ICaT__gcat * var_t236; // dimensionless
        const double var_t238 = var_t237 * var_ICaT__g; // dimensionless
        const double var_t239 = (((((((((((-var_t38) - var_t43) - var_t52) - var_t115) - var_t126) + var_t133) + var_t154) + var_t159) + var_t200) + var_t233) - var_t235) - var_t238; // dimensionless
        const double var_t243 = 1.0 / var_t184; // dimensionless
        const double var_t246 = (((((var_INaCa__c1 * var_t160) * var_t163) * var_t164) * var_t167) * var_t180) * var_t243; // dimensionless
        const double var_t250 = (((var_t168 * var_t163) * var_t194) * var_t195) * var_t243; // dimensionless
        const double var_t251 = var_ICaL__d * var_ICaL__f; // dimensionless
        const double var_t252 = 1.0 / var_ICaL__kmca; // dimensionless
        const double var_t254 = 1.0 + (var_t105 * var_t252); // dimensionless
        const double var_t255 = 1.0 / var_t254; // dimensionless
        const double var_t256 = var_t255 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t259 = pow(var_Environment__F, 2.0); // dimensionless
        const double var_t260 = var_t259 * var_t162; // dimensionless
        const double var_t261 = var_ICaL__ganai * var_Na__Na_i; // dimensionless
        const double var_t264 = (var_t261 * var_t172) - (var_ICaL__ganao * var_Environment__Na_o); // dimensionless
        const double var_t266 = var_t172 - 1.0; // dimensionless
        const double var_t267 = 1.0 / var_t266; // dimensionless
        const double var_t268 = (var_t164 * var_t264) * var_t267; // dimensionless
        const double var_t269 = var_t260 * var_t268; // dimensionless
        const double var_t270 = ((var_t251 * var_t256) * var_ICaL__pna) * var_t269; // dimensionless
        const double var_t271 = var_t251 * var_t255; // dimensionless
        const double var_t273 = (var_ICaL__G_CaL_mult * var_ICaL__pna) * var_cell__V; // dimensionless
        const double var_t274 = var_t271 * var_t273; // dimensionless
        const double var_t275 = var_t259 * var_Environment__F; // dimensionless
        const double var_t276 = pow(var_Environment__Temp, 2.0); // dimensionless
        const double var_t277 = 1.0 / var_t276; // dimensionless
        const double var_t278 = var_t275 * var_t277; // dimensionless
        const double var_t279 = pow(var_Environment__R, 2.0); // dimensionless
        const double var_t280 = 1.0 / var_t279; // dimensionless
        const double var_t281 = var_t278 * var_t280; // dimensionless
        const double var_t282 = var_t172 * var_t267; // dimensionless
        const double var_t285 = ((var_t274 * var_t281) * var_t261) * var_t282; // dimensionless
        const double var_t286 = pow(var_t266, 2.0); // dimensionless
        const double var_t287 = 1.0 / var_t286; // dimensionless
        const double var_t291 = (((var_t274 * var_t281) * var_t264) * var_t287) * var_t172; // dimensionless
        const double var_t294 = var_ICaL__gaki * var_K__K_i; // dimensionless
        const double var_t297 = (var_t294 * var_t172) - (var_ICaL__gako * var_Environment__K_o); // dimensionless
        const double var_t299 = (var_t164 * var_t297) * var_t267; // dimensionless
        const double var_t300 = var_t260 * var_t299; // dimensionless
        const double var_t301 = ((var_t251 * var_t256) * var_ICaL__pk) * var_t300; // dimensionless
        const double var_t303 = (var_ICaL__G_CaL_mult * var_ICaL__pk) * var_cell__V; // dimensionless
        const double var_t304 = var_t271 * var_t303; // dimensionless
        const double var_t307 = ((var_t304 * var_t281) * var_t294) * var_t282; // dimensionless
        const double var_t311 = (((var_t304 * var_t281) * var_t297) * var_t287) * var_t172; // dimensionless
        const double var_t314 = var_ICaL__gacai * var_t105; // dimensionless
        const double var_t316 = exp(2.0 * var_t171); // dimensionless
        const double var_t319 = (var_t314 * var_t316) - (var_ICaL__gacao * var_Environment__Ca_o); // dimensionless
        const double var_t320 = var_t164 * var_t319; // dimensionless
        const double var_t321 = var_t316 - 1.0; // dimensionless
        const double var_t322 = 1.0 / var_t321; // dimensionless
        const double var_t323 = var_t320 * var_t322; // dimensionless
        const double var_t324 = var_t260 * var_t323; // dimensionless
        const double var_t326 = (((4.0 * var_t251) * var_t256) * var_ICaL__pca) * var_t324; // dimensionless
        const double var_t327 = var_ICaL__G_CaL_mult * var_ICaL__pca; // dimensionless
        const double var_t328 = var_t327 * var_cell__V; // dimensionless
        const double var_t329 = var_t271 * var_t328; // dimensionless
        const double var_t330 = var_t316 * var_t322; // dimensionless
        const double var_t334 = (((8.0 * var_t329) * var_t281) * var_t314) * var_t330; // dimensionless
        const double var_t335 = pow(var_t321, 2.0); // dimensionless
        const double var_t337 = var_t319 / var_t335; // dimensionless
        const double var_t341 = (((8.0 * var_t329) * var_t281) * var_t337) * var_t316; // dimensionless
        const double var_t342 = ((((((((((((-var_ICab__gcab) - var_INab__GNab) - var_t246) - var_t250) - var_t270) - var_t285) + var_t291) - var_t301) - var_t307) + var_t311) - var_t326) - var_t334) + var_t341; // dimensionless
        const double var_t344 = 1.0 / var_Na__Na_i; // dimensionless
        const double var_t346 = log(var_Environment__Na_o * var_t344); // dimensionless
        const double var_t349 = var_cell__V - ((var_t346 * var_t7) * var_t9); // dimensionless
        const double var_t351 = (var_t41 * var_INa__J) * var_t349; // dimensionless
        const double var_t354 = ((var_INa__GNa * var_t39) * var_t42) * var_t349; // dimensionless
        const double var_t357 = (var_t41 * var_INa__H) * var_t349; // dimensionless
        const double var_t358 = var_ICaL__f * var_t255; // dimensionless
        const double var_t367 = var_ICaL__d * var_t255; // dimensionless
        const double var_t377 = (var_t44 * var_t49) * var_t116; // dimensionless
        const double var_t383 = 1.0 / (var_K__K_i + (var_reversal_potentials__prnak * var_Na__Na_i)); // dimensionless
        const double var_t385 = log((var_Environment__K_o + (var_reversal_potentials__prnak * var_Environment__Na_o)) * var_t383); // dimensionless
        const double var_t388 = var_cell__V - ((var_t385 * var_t7) * var_t9); // dimensionless
        const double var_t389 = var_IKs__xs2 * var_t388; // dimensionless
        const double var_t390 = var_t113 * var_t389; // dimensionless
        const double var_t392 = (var_t113 * var_IKs__xs1) * var_t388; // dimensionless
        const double var_t395 = log(var_Environment__Ca_o * var_t106); // dimensionless
        const double var_t399 = var_cell__V - ((((1.0 / 2.0) * var_t395) * var_t7) * var_t9); // dimensionless
        const double var_t401 = ((var_ICaT__gcat * var_ICaT__b) * var_ICaT__g) * var_t399; // dimensionless
        const double var_t406 = ((var_t43 * var_t344) * var_t7) * var_t9; // dimensionless
        const double var_t408 = var_t7 * var_Environment__Temp; // dimensionless
        const double var_t409 = var_t408 * var_Environment__R; // dimensionless
        const double var_t410 = (var_INab__GNab * var_t344) * var_t409; // dimensionless
        const double var_t412 = var_t173 * var_Environment__Ca_o; // dimensionless
        const double var_t414 = ((var_t168 * var_t172) * var_t412) * var_t243; // dimensionless
        const double var_t416 = pow(var_t167, 2.0); // dimensionless
        const double var_t417 = var_INaCa__c1 * var_t416; // dimensionless
        const double var_t421 = (((var_t417 * var_t187) * var_INaCa__c2) * var_t172) * var_t412; // dimensionless
        const double var_t423 = var_t260 * var_t164; // dimensionless
        const double var_t427 = (((var_t274 * var_t423) * var_ICaL__ganai) * var_t172) * var_t267; // dimensionless
        const double var_t430 = pow(var_t217, 2.0); // dimensionless
        const double var_t436 = ((((var_INaK__ibarnak / var_t210) / var_t430) * var_t222) * var_t214) / var_t174; // dimensionless
        const double var_t440 = ((var_t115 * var_t383) * var_reversal_potentials__prnak) * var_t409; // dimensionless
        const double var_t442 = var_t4 * var_t7; // dimensionless
        const double var_t443 = var_t442 * var_t9; // dimensionless
        const double var_t452 = var_t9 * var_t13; // dimensionless
        const double var_t487 = ((((((((-0.43033148290000001) * var_t51) * var_t443) - (((var_t115 * var_t383) * var_t7) * var_t9)) + ((((((0.10468673990000001 * var_t2) * var_t139) * var_t35) * var_t116) * var_t442) * var_t452)) + (((0.43893811259999999 * var_t134) * var_t137) * (((((((-0.24326999999999999) * var_t139) * var_t4) * var_t7) * var_t452) + (((((0.039456396800000001 * var_t442) * var_t9) * var_t20) + (((0.061749999999999999 * var_t442) * var_t9) * var_t25)) * var_t32)) + (((((0.51429999999999998 * var_t148) * var_t4) * var_t408) * var_Environment__R) * var_t30)))) - ((0.43893811259999999 * var_t37) * var_t443)) - ((((var_IKp__GKpmax * var_t4) * var_t7) * var_t9) * var_t234)) - ((((var_t304 * var_t423) * var_ICaL__gaki) * var_t172) * var_t267); // dimensionless
        const double var_t493 = (((((-2.0) * var_Ca__cmdnbar) - (2.0 * var_Ca__trpnbar)) + (2.0 * var_Ca__Ca_T)) + var_Ca__kmtrpn) + var_Ca__kmcmdn; // dimensionless
        const double var_t496 = sin(var_t96); // dimensionless
        const double var_t508 = 1.0 / pow(var_t91, 2.5); // dimensionless
        const double var_t513 = pow(var_t86, 2.0); // dimensionless
        const double var_t514 = 1.0 / pow(var_t91, 3.0); // dimensionless
        const double var_t517 = pow(4.0 - (var_t513 * var_t514), 1.0 / 2.0); // dimensionless
        const double var_t522 = (((((1.0 / 3.0) / var_t74) * var_t97) * var_t493) + (((((4.0 / 9.0) * var_t74) * var_t496) * ((((1.0 / 2.0) * ((((((18.0 * var_t53) + (9.0 * var_t77)) - (9.0 * var_t55)) - (9.0 * var_t54)) - ((9.0 * var_t75) * var_t76)) + (6.0 * var_t81))) * var_t92) - (((0.75 * var_t86) * var_t508) * var_t493))) / var_t517)) + (1.0 / 3.0); // dimensionless
        const double var_t523 = var_t178 * var_t522; // dimensionless
        const double var_t525 = (var_t168 * var_t523) * var_t243; // dimensionless
        const double var_t529 = (((var_t417 * var_t180) * var_t186) * var_INaCa__c2) * var_t523; // dimensionless
        const double var_t530 = pow(var_t254, 2.0); // dimensionless
        const double var_t531 = 1.0 / var_t530; // dimensionless
        const double var_t532 = var_t251 * var_t531; // dimensionless
        const double var_t535 = var_t522 * var_t252; // dimensionless
        const double var_t538 = ((((var_t532 * var_t273) * var_t423) * var_t264) * var_t267) * var_t535; // dimensionless
        const double var_t539 = pow(var_t109, 2.0); // dimensionless
        const double var_t542 = pow(var_t106, 0.40000000000000002); // dimensionless
        const double var_t543 = pow(var_t105, 2.0); // dimensionless
        const double var_t550 = ((((((5.4447296619999995e-07 * var_IKs__GKsmax) / var_t539) * var_t542) / var_t543) * var_t522) * var_IKs__xs1) * var_t389; // dimensionless
        const double var_t555 = ((((var_t532 * var_t303) * var_t423) * var_t297) * var_t267) * var_t535; // dimensionless
        const double var_t557 = var_t319 * var_t322; // dimensionless
        const double var_t561 = ((((4.0 * var_t532) * var_t328) * var_t423) * var_t557) * var_t535; // dimensionless
        const double var_t566 = ((((4.0 * var_t329) * var_t423) * var_ICaL__gacai) * var_t522) * var_t330; // dimensionless
        const double var_t570 = ((((1.0 / 2.0) * var_ICab__gcab) * var_t106) * var_t522) * var_t409; // dimensionless
        const double var_t572 = (((((var_IpCa__kmpca + var_t99) - var_t100) - var_t101) + var_t102) - var_t103) - var_t104; // dimensionless
        const double var_t574 = (var_IpCa__ibarpca * var_t522) / var_t572; // dimensionless
        const double var_t576 = pow(var_t572, 2.0); // dimensionless
        const double var_t579 = ((var_IpCa__ibarpca * var_t105) / var_t576) * var_t522; // dimensionless
        const double var_t585 = ((((((1.0 / 2.0) * var_t237) * var_ICaT__g) * var_t106) * var_t522) * var_t7) * var_t9; // dimensionless
        const double var_t586 = (((((((((var_t525 + var_t529) + var_t538) - var_t550) + var_t555) + var_t561) - var_t566) - var_t570) - var_t574) + var_t579) - var_t585; // dimensionless
        const double var_t587 = 41.666666669999998 * var_cell__V; // dimensionless
        const double var_t589 = exp((-var_t587) - 1666.666667); // dimensionless
        const double var_t590 = 1.0 + var_t589; // dimensionless
        const double var_t591 = pow(var_t590, 2.0); // dimensionless
        const double var_t592 = 1.0 / var_t591; // dimensionless
        const double var_t593 = var_t592 * var_t589; // dimensionless
        const double var_t596 = exp((-11.764705879999999) - (0.14705882349999999 * var_cell__V)); // dimensionless
        const double var_t597 = 1.0 - var_INa__H; // dimensionless
        const double var_t601 = 1.0 / var_t590; // dimensionless
        const double var_t602 = 1.0 - var_t601; // dimensionless
        const double var_t603 = var_t602 * var_t596; // dimensionless
        const double var_t608 = exp(((-0.090090090090000005) * var_cell__V) - 0.96036036039999995); // dimensionless
        const double var_t610 = 0.13 + (0.13 * var_t608); // dimensionless
        const double var_t611 = 1.0 / var_t610; // dimensionless
        const double var_t615 = pow(var_t610, 2.0); // dimensionless
        const double var_t621 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t624 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t626 = (3.5600000000000001 * var_t621) + (310000.0 * var_t624); // dimensionless
        const double var_t640 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t642 = exp((-var_t640) - 4.7130000000000001); // dimensionless
        const double var_t643 = 1.0 - var_t642; // dimensionless
        const double var_t644 = 1.0 / var_t643; // dimensionless
        const double var_t645 = 1.0 - var_INa__m; // dimensionless
        const double var_t648 = var_cell__V + 47.130000000000003; // dimensionless
        const double var_t649 = pow(var_t643, 2.0); // dimensionless
        const double var_t656 = exp(((-1.0) / 11.0) * var_cell__V); // dimensionless
        const double var_t665 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t668 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t670 = ((-127140.0) * var_t665) - (3.4740000000000003e-05 * var_t668); // dimensionless
        const double var_t672 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t675 = exp((0.311 * var_cell__V) + 24.640529999999998); // dimensionless
        const double var_t676 = 1.0 + var_t675; // dimensionless
        const double var_t677 = 1.0 / var_t676; // dimensionless
        const double var_t678 = var_t672 * var_t677; // dimensionless
        const double var_t679 = 1.0 - var_INa__J; // dimensionless
        const double var_t680 = var_t678 * var_t679; // dimensionless
        const double var_t688 = var_t602 * var_t670; // dimensionless
        const double var_t692 = pow(var_t676, 2.0); // dimensionless
        const double var_t699 = exp((-2.5349999999999999e-07) * var_cell__V); // dimensionless
        const double var_t702 = exp((-var_t640) - 3.2000000000000002); // dimensionless
        const double var_t703 = 1.0 + var_t702; // dimensionless
        const double var_t704 = 1.0 / var_t703; // dimensionless
        const double var_t708 = var_t601 * var_t699; // dimensionless
        const double var_t709 = var_t708 * var_t704; // dimensionless
        const double var_t711 = pow(var_t703, 2.0); // dimensionless
        const double var_t717 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t720 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919999999997); // dimensionless
        const double var_t721 = 1.0 + var_t720; // dimensionless
        const double var_t722 = 1.0 / var_t721; // dimensionless
        const double var_t726 = var_t602 * var_t717; // dimensionless
        const double var_t727 = var_t726 * var_t722; // dimensionless
        const double var_t729 = pow(var_t721, 2.0); // dimensionless
        const double var_t743 = exp(((-0.16025641030000001) * var_cell__V) - 1.602564103); // dimensionless
        const double var_t744 = 1.0 + var_t743; // dimensionless
        const double var_t745 = pow(var_t744, 2.0); // dimensionless
        const double var_t748 = exp((-var_t587) - 2500.0); // dimensionless
        const double var_t749 = 1.0 + var_t748; // dimensionless
        const double var_t750 = 1.0 / var_t749; // dimensionless
        const double var_t754 = 1.0 / var_t744; // dimensionless
        const double var_t755 = pow(var_t749, 2.0); // dimensionless
        const double var_t762 = 1.0 - var_t743; // dimensionless
        const double var_t763 = 1.0 / var_t762; // dimensionless
        const double var_t765 = (0.035000000000000003 * var_cell__V) + 0.34999999999999998; // dimensionless
        const double var_t766 = var_t763 * var_t765; // dimensionless
        const double var_t769 = (var_t754 * var_t750) - var_ICaL__d; // dimensionless
        const double var_t773 = var_t769 * var_t744; // dimensionless
        const double var_t774 = pow(var_t762, 2.0); // dimensionless
        const double var_t787 = exp(((1.0 / 8.0) * var_cell__V) + 4.0); // dimensionless
        const double var_t788 = 1.0 + var_t787; // dimensionless
        const double var_t789 = pow(var_t788, 2.0); // dimensionless
        const double var_t795 = exp((5.0 / 2.0) - ((1.0 / 20.0) * var_cell__V)); // dimensionless
        const double var_t796 = 1.0 + var_t795; // dimensionless
        const double var_t797 = pow(var_t796, 2.0); // dimensionless
        const double var_t804 = pow((0.033700000000000001 * var_cell__V) + 0.33700000000000002, 2.0); // dimensionless
        const double var_t805 = exp(-var_t804); // dimensionless
        const double var_t807 = (0.019699999999999999 * var_t805) + 0.02; // dimensionless
        const double var_t821 = exp(((-0.23529411759999999) * var_cell__V) - 2.3729411759999999); // dimensionless
        const double var_t822 = 1.0 + var_t821; // dimensionless
        const double var_t823 = pow(var_t822, 2.0); // dimensionless
        const double var_t826 = var_cell__V + 14.199999999999999; // dimensionless
        const double var_t829 = exp(((-0.123) * var_cell__V) - 1.7465999999999999); // dimensionless
        const double var_t830 = 1.0 - var_t829; // dimensionless
        const double var_t831 = 1.0 / var_t830; // dimensionless
        const double var_t834 = var_cell__V + 38.899999999999999; // dimensionless
        const double var_t837 = exp((0.14499999999999999 * var_cell__V) + 5.6405000000000003); // dimensionless
        const double var_t838 = var_t837 - 1.0; // dimensionless
        const double var_t839 = 1.0 / var_t838; // dimensionless
        const double var_t842 = ((0.0013799999999999999 * var_t826) * var_t831) + ((0.00060999999999999997 * var_t834) * var_t839); // dimensionless
        const double var_t848 = pow(var_t830, 2.0); // dimensionless
        const double var_t854 = pow(var_t838, 2.0); // dimensionless
        const double var_t864 = exp(((-0.059880239520000003) * var_cell__V) + 0.089820359279999998); // dimensionless
        const double var_t865 = 1.0 + var_t864; // dimensionless
        const double var_t866 = pow(var_t865, 2.0); // dimensionless
        const double var_t869 = var_cell__V + 30.0; // dimensionless
        const double var_t872 = exp(((-0.14799999999999999) * var_cell__V) - 4.4400000000000004); // dimensionless
        const double var_t873 = 1.0 - var_t872; // dimensionless
        const double var_t874 = 1.0 / var_t873; // dimensionless
        const double var_t875 = var_t869 * var_t874; // dimensionless
        const double var_t879 = exp((0.068699999999999997 * var_cell__V) + 2.0609999999999999); // dimensionless
        const double var_t880 = var_t879 - 1.0; // dimensionless
        const double var_t881 = 1.0 / var_t880; // dimensionless
        const double var_t882 = var_t869 * var_t881; // dimensionless
        const double var_t884 = (7.1899999999999999e-05 * var_t875) + (0.00013100000000000001 * var_t882); // dimensionless
        const double var_t885 = ((1.0 / var_t866) * var_t864) * var_t884; // dimensionless
        const double var_t887 = 1.0 / var_t865; // dimensionless
        const double var_t890 = pow(var_t873, 2.0); // dimensionless
        const double var_t896 = pow(var_t880, 2.0); // dimensionless
        const double var_t901 = (((7.1899999999999999e-05 * var_t874) - (((1.0641200000000001e-05 * var_t869) / var_t890) * var_t872)) + (0.00013100000000000001 * var_t881)) - (((8.9996999999999996e-06 * var_t869) / var_t896) * var_t879); // dimensionless
        const double var_t914 = exp(((-0.092592592589999995) * var_cell__V) - 1.296296296); // dimensionless
        const double var_t915 = 1.0 + var_t914; // dimensionless
        const double var_t916 = pow(var_t915, 2.0); // dimensionless
        const double var_t921 = exp((0.22222222220000001 * var_cell__V) + 5.5555555549999998); // dimensionless
        const double var_t922 = 1.0 + var_t921; // dimensionless
        const double var_t925 = 3.7000000000000002 + (6.0999999999999996 / var_t922); // dimensionless
        const double var_t926 = 1.0 / var_t925; // dimensionless
        const double var_t931 = pow(var_t925, 2.0); // dimensionless
        const double var_t934 = pow(var_t922, 2.0); // dimensionless
        const double var_t942 = exp((0.1785714286 * var_cell__V) + 10.714285719999999); // dimensionless
        const double var_t943 = 1.0 + var_t942; // dimensionless
        const double var_t944 = pow(var_t943, 2.0); // dimensionless
        const double var_t948 = exp((-416.66666670000001) * var_cell__V); // dimensionless
        const double var_t949 = 1.0 + var_t948; // dimensionless
        const double var_t950 = 1.0 / var_t949; // dimensionless
        const double var_t953 = ((-0.875) * var_cell__V) + 12.0; // dimensionless
        const double var_t956 = ((1.0 - var_t950) * var_t953) + (12.0 * var_t950); // dimensionless
        const double var_t957 = 1.0 / var_t956; // dimensionless
        const double var_t962 = pow(var_t956, 2.0); // dimensionless
        const double var_t965 = pow(var_t949, 2.0); // dimensionless
        const double var_t967 = (1.0 / var_t965) * var_t948; // dimensionless
        const double var_t977 = var_t170 * var_t319; // dimensionless
        const double var_t978 = var_t322 * var_Irel__tau; // dimensionless
        const double var_t979 = pow(var_Irel__csqnbar, 2.0); // dimensionless
        const double var_t984 = pow(var_Irel__kmcsqn, 2.0); // dimensionless
        const double var_t987 = pow(var_Ca__Ca_JSR_T, 2.0); // dimensionless
        const double var_t989 = pow(((((var_t979 + ((2.0 * var_Irel__csqnbar) * var_Irel__kmcsqn)) - ((2.0 * var_Irel__csqnbar) * var_Ca__Ca_JSR_T)) + var_t984) + ((2.0 * var_Ca__Ca_JSR_T) * var_Irel__kmcsqn)) + var_t987, 1.0 / 2.0); // dimensionless
        const double var_t990 = (((-var_Irel__csqnbar) - var_Irel__kmcsqn) + var_Ca__Ca_JSR_T) + var_t989; // dimensionless
        const double var_t991 = 2.0 / var_t990; // dimensionless
        const double var_t993 = pow(var_Irel__K_Relss * var_t991, var_Irel__qn); // dimensionless
        const double var_t994 = 1.0 + var_t993; // dimensionless
        const double var_t995 = 1.0 / var_t994; // dimensionless
        const double var_t996 = var_Irel__kappa * var_t995; // dimensionless
        const double var_t997 = var_t978 * var_t996; // dimensionless
        const double var_t998 = var_t977 * var_t997; // dimensionless
        const double var_t1001 = var_t251 * var_t256; // dimensionless
        const double var_t1002 = var_ICaL__pca * var_cell__V; // dimensionless
        const double var_t1023 = 1.0 / var_Irel__tau; // dimensionless
        const double var_t1026 = 1.0 + (0.0123 * var_t991); // dimensionless
        const double var_t1028 = var_t358 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t1029 = var_t1002 * var_t259; // dimensionless
        const double var_t1034 = (((var_t977 * var_t322) * var_Irel__kappa) * var_t995) * var_t1026; // dimensionless
        const double var_t1037 = var_t367 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t1044 = var_t1002 * var_t260; // dimensionless
        const double var_t1061 = pow(var_t994, 2.0); // dimensionless
        const double var_t1070 = (1.0 / 2.0) + (((1.0 / 2.0) / var_t989) * (((-var_Irel__csqnbar) + var_Irel__kmcsqn) + var_Ca__Ca_JSR_T)); // dimensionless
        const double var_t1095 = pow(var_cell__ra, 2.0); // dimensionless
        const double var_t1099 = (M_PI * var_t1095) + ((M_PI * var_cell__ra) * var_cell__l); // dimensionless
        const double var_t1102 = 1.0 / M_PI; // dimensionless
        const double var_t1103 = 1.0 / var_t1095; // dimensionless
        const double var_t1105 = 1.0 / var_cell__l; // dimensionless
        const double var_t1106 = (var_t1102 * var_t1103) * var_t1105; // dimensionless
        const double var_t1110 = ((4.0 * var_t1099) * var_t7) * var_t1106; // dimensionless
        const double var_t1118 = (var_ICaL__pna * var_cell__V) * var_t163; // dimensionless
        const double var_t1121 = var_t1103 * var_t1105; // dimensionless
        const double var_t1122 = ((4.0 * var_t1099) * var_t1102) * var_t1121; // dimensionless
        const double var_t1123 = var_t268 * var_t1122; // dimensionless
        const double var_t1145 = (((((((((((-var_t133) + var_t52) + var_t115) - var_t159) - var_t154) + var_t38) + var_t235) + var_t126) + var_t301) + var_t307) - var_t311) + (2.0 * var_t233); // dimensionless
        const double var_t1151 = (var_ICaL__pk * var_cell__V) * var_t163; // dimensionless
        const double var_t1153 = var_t299 * var_t1122; // dimensionless
        const double var_t1188 = var_t1002 * var_t163; // dimensionless
        const double var_t1190 = var_t323 * var_t1122; // dimensionless
        const double var_t1217 = (((((var_t99 - var_t100) - var_t101) + var_t102) - var_t103) - var_t104) + var_Iup_Ileak__kmup; // dimensionless
        const double var_t1219 = (var_Iup_Ileak__iupbar * var_t522) / var_t1217; // dimensionless
        const double var_t1222 = pow(var_t1217, 2.0); // dimensionless
        const double var_t1225 = ((var_Iup_Ileak__iupbar * var_t105) / var_t1222) * var_t522; // dimensionless
        const double var_t1229 = var_Iup_Ileak__iupbar / var_Iup_Ileak__nsrbar; // dimensionless
        const double var_t1231 = 1.0 / var_Itr__tautr; // dimensionless
        const double var_t1232 = (-var_t1070) * var_t1231; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t239 + var_t342));
        IJth(rJacobian, 1, 0) = var_chaste_interface__Environment__fake_dt * ((((((-5.625) * var_t593) * var_t596) * var_t597) - ((0.019852941169999999 * var_t603) * var_t597)) - (((((((41.666666669999998 * var_t592) * var_t611) * var_t589) + (((0.011711711709999999 * var_t601) / var_t615) * var_t608)) - ((41.666666669999998 * var_t593) * var_t626)) + (var_t602 * ((0.28123999999999999 * var_t621) + (108500.0 * var_t624)))) * var_INa__H));
        IJth(rJacobian, 2, 0) = var_chaste_interface__Environment__fake_dt * ((((0.32000000000000001 * var_t644) * var_t645) - ((((0.032000000000000001 * var_t648) / var_t649) * var_t645) * var_t642)) + ((0.0072727272729999999 * var_t656) * var_INa__m));
        IJth(rJacobian, 3, 0) = var_chaste_interface__Environment__fake_dt * ((((((((-41.666666669999998) * var_t593) * var_t670) * var_t680) + ((var_t602 * (((-31073.016) * var_t665) + (1.5254334000000001e-06 * var_t668))) * var_t680)) + ((var_t688 * var_t677) * var_t679)) - (((((0.311 * var_t688) * var_t672) / var_t692) * var_t679) * var_t675)) - ((((((((((12.5 * var_t592) * var_t699) * var_t704) * var_t589) - (7.6049999999999996e-08 * var_t709)) + (((0.029999999999999999 * var_t708) / var_t711) * var_t702)) - (((5.0499999999999998 * var_t593) * var_t717) * var_t722)) - (0.001275024 * var_t727)) + (((0.016701359999999998 * var_t726) / var_t729) * var_t720)) * var_INa__J));
        IJth(rJacobian, 4, 0) = var_chaste_interface__Environment__fake_dt * (((((((((0.16025641030000001 / var_t745) * var_t750) * var_t743) + (((41.666666669999998 * var_t754) / var_t755) * var_t748)) * var_t744) * var_t766) - (((0.16025641030000001 * var_t769) * var_t743) * var_t766)) - ((((0.16025641030000001 * var_t773) / var_t774) * var_t765) * var_t743)) + ((0.035000000000000003 * var_t773) * var_t763));
        IJth(rJacobian, 5, 0) = var_chaste_interface__Environment__fake_dt * (((((((-1.0) / 8.0) / var_t789) * var_t787) + ((0.029999999999999999 / var_t797) * var_t795)) * var_t807) + (((0.019699999999999999 * (((1.0 / var_t788) + (0.59999999999999998 / var_t796)) - var_ICaL__f)) * (((-0.0022713799999999999) * var_cell__V) - 0.022713799999999999)) * var_t805));
        IJth(rJacobian, 6, 0) = var_chaste_interface__Environment__fake_dt * ((((0.23529411759999999 / var_t823) * var_t821) * var_t842) + (((1.0 / var_t822) - var_IKr__xr) * ((((0.0013799999999999999 * var_t831) - (((0.00016974000000000001 * var_t826) / var_t848) * var_t829)) + (0.00060999999999999997 * var_t839)) - (((8.8449999999999995e-05 * var_t834) / var_t854) * var_t837))));
        IJth(rJacobian, 7, 0) = var_chaste_interface__Environment__fake_dt * ((0.059880239520000003 * var_t885) + ((var_t887 - var_IKs__xs1) * var_t901));
        IJth(rJacobian, 8, 0) = var_chaste_interface__Environment__fake_dt * ((0.014970059880000001 * var_t885) + (((1.0 / 4.0) * (var_t887 - var_IKs__xs2)) * var_t901));
        IJth(rJacobian, 9, 0) = var_chaste_interface__Environment__fake_dt * ((((0.092592592589999995 / var_t916) * var_t914) * var_t926) + ((((1.355555555 * ((1.0 / var_t915) - var_ICaT__b)) / var_t931) / var_t934) * var_t921));
        IJth(rJacobian, 10, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.1785714286) / var_t944) * var_t942) * var_t957) - ((((1.0 / var_t943) - var_ICaT__g) / var_t962) * ((((((-416.66666670000001) * var_t967) * var_t953) - 0.875) + (0.875 * var_t950)) + (5000.0 * var_t967))));
        IJth(rJacobian, 11, 0) = var_chaste_interface__Environment__fake_dt * (((((((((-4.0) * var_t271) * var_t327) * var_t259) * var_t998) - ((((((((8.0 * var_t1001) * var_t1002) * var_t278) * var_t280) * var_ICaL__gacai) * var_t105) * var_t316) * var_t997)) + (((((((((((8.0 * var_t271) * var_t327) * var_cell__V) * var_t275) * var_t277) * var_t280) * var_t337) * var_Irel__tau) * var_Irel__kappa) * var_t995) * var_t316)) * var_t1023) * var_t1026);
        IJth(rJacobian, 12, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * ((((((((var_t43 + var_INab__GNab) + (3.0 * var_t246)) + (3.0 * var_t250)) - (3.0 * var_t200)) + var_t270) + var_t285) - var_t291) - (3.0 * var_t233))) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 13, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * var_t1145) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 14, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.0029411764700000001) * (((((((var_t326 + var_t334) - var_t341) + var_ICab__gcab) - (2.0 * var_t246)) - (2.0 * var_t250)) + (2.0 * var_t200)) + var_t238)) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 0, 1) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t351));
        IJth(rJacobian, 1, 1) = var_chaste_interface__Environment__fake_dt * ((((-0.13500000000000001) * var_t603) - (var_t601 * var_t611)) - (var_t602 * var_t626));
        IJth(rJacobian, 12, 1) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t351) * var_t1110);
        IJth(rJacobian, 0, 2) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-3.0) * var_t354));
        IJth(rJacobian, 2, 2) = var_chaste_interface__Environment__fake_dt * ((((-0.32000000000000001) * var_t648) * var_t644) - (0.080000000000000002 * var_t656));
        IJth(rJacobian, 12, 2) = var_chaste_interface__Environment__fake_dt * (((-0.0044117647049999997) * var_t354) * var_t1110);
        IJth(rJacobian, 0, 3) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t357));
        IJth(rJacobian, 3, 3) = var_chaste_interface__Environment__fake_dt * ((((-var_t688) * var_t678) - (0.29999999999999999 * var_t709)) - (0.1212 * var_t727));
        IJth(rJacobian, 12, 3) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t357) * var_t1110);
        IJth(rJacobian, 0, 4) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t358) * var_t273) * var_t269) - ((var_t358 * var_t303) * var_t300)) - (((4.0 * var_t358) * var_t328) * var_t324)));
        IJth(rJacobian, 4, 4) = var_chaste_interface__Environment__fake_dt * (((-var_t744) * var_t763) * var_t765);
        IJth(rJacobian, 11, 4) = var_chaste_interface__Environment__fake_dt * ((((-4.0) * var_t1028) * var_t1029) * var_t1034);
        IJth(rJacobian, 12, 4) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t1028) * var_t1118) * var_t1123);
        IJth(rJacobian, 13, 4) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t1028) * var_t1151) * var_t1153);
        IJth(rJacobian, 14, 4) = var_chaste_interface__Environment__fake_dt * ((((-0.0029411764700000001) * var_t1028) * var_t1188) * var_t1190);
        IJth(rJacobian, 0, 5) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t367) * var_t273) * var_t269) - ((var_t367 * var_t303) * var_t300)) - (((4.0 * var_t367) * var_t328) * var_t324)));
        IJth(rJacobian, 5, 5) = var_chaste_interface__Environment__fake_dt * (-var_t807);
        IJth(rJacobian, 11, 5) = var_chaste_interface__Environment__fake_dt * ((((-4.0) * var_t1037) * var_t1029) * var_t1034);
        IJth(rJacobian, 12, 5) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t1037) * var_t1118) * var_t1123);
        IJth(rJacobian, 13, 5) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t1037) * var_t1151) * var_t1153);
        IJth(rJacobian, 14, 5) = var_chaste_interface__Environment__fake_dt * ((((-0.0029411764700000001) * var_t1037) * var_t1188) * var_t1190);
        IJth(rJacobian, 0, 6) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.43033148290000001) * var_t377));
        IJth(rJacobian, 6, 6) = var_chaste_interface__Environment__fake_dt * (-var_t842);
        IJth(rJacobian, 13, 6) = var_chaste_interface__Environment__fake_dt * (((-0.00063284041589999995) * var_t377) * var_t1110);
        IJth(rJacobian, 0, 7) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t390));
        IJth(rJacobian, 7, 7) = var_chaste_interface__Environment__fake_dt * (-var_t884);
        IJth(rJacobian, 13, 7) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t390) * var_t1110);
        IJth(rJacobian, 0, 8) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t392));
        IJth(rJacobian, 8, 8) = var_chaste_interface__Environment__fake_dt * (((-1.7975e-05) * var_t875) - (3.2750000000000003e-05 * var_t882));
        IJth(rJacobian, 13, 8) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t392) * var_t1110);
        IJth(rJacobian, 0, 9) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-2.0) * var_t401));
        IJth(rJacobian, 9, 9) = var_chaste_interface__Environment__fake_dt * (-var_t926);
        IJth(rJacobian, 14, 9) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t401) * var_t1110);
        IJth(rJacobian, 0, 10) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t237) * var_t399));
        IJth(rJacobian, 10, 10) = var_chaste_interface__Environment__fake_dt * (-var_t957);
        IJth(rJacobian, 14, 10) = var_chaste_interface__Environment__fake_dt * (((((((-0.0029411764700000001) * var_t237) * var_t399) * var_t1099) * var_t7) * var_t1102) * var_t1121);
        IJth(rJacobian, 11, 11) = var_chaste_interface__Environment__fake_dt * ((-var_t1023) * var_t1026);
        IJth(rJacobian, 14, 11) = var_chaste_interface__Environment__fake_dt * (0.0070588235289999997);
        IJth(rJacobian, 15, 11) = var_chaste_interface__Environment__fake_dt * (-1.0);
        IJth(rJacobian, 0, 12) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-var_t406) - var_t410) - (3.0 * var_t414)) + (3.0 * var_t421)) - var_t427) - (2.0 * var_t436)) - var_t440));
        IJth(rJacobian, 12, 12) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * (((((var_t406 + var_t410) + (9.0 * var_t414)) - (9.0 * var_t421)) + var_t427) + (6.0 * var_t436))) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 13, 12) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * (var_t440 - (4.0 * var_t436))) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 14, 12) = var_chaste_interface__Environment__fake_dt * (((((-0.017647058819999999) * ((-var_t414) + var_t421)) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 0, 13) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t487);
        IJth(rJacobian, 13, 13) = var_chaste_interface__Environment__fake_dt * ((((0.0058823529400000001 * var_t487) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 0, 14) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t586);
        IJth(rJacobian, 11, 14) = var_chaste_interface__Environment__fake_dt * (((4.0 * ((((((((var_t251 * var_t531) * var_ICaL__G_CaL_mult) * var_t1044) * var_t320) * var_t978) * var_t996) * var_t535) - ((((((var_t1001 * var_t1044) * var_t164) * var_ICaL__gacai) * var_t522) * var_t316) * var_t997))) * var_t1023) * var_t1026);
        IJth(rJacobian, 12, 14) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * ((((-3.0) * var_t525) - (3.0 * var_t529)) - var_t538)) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 13, 14) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * (var_t550 - var_t555)) * var_t1099) * var_t7) * var_t1106);
        IJth(rJacobian, 14, 14) = var_chaste_interface__Environment__fake_dt * (((((((-0.0029411764700000001) * ((((((((-var_t561) + var_t566) + var_t570) + var_t574) - var_t579) + (2.0 * var_t525)) + (2.0 * var_t529)) + var_t585)) * var_t1099) * var_t7) * var_t1106) - (0.081176470589999994 * var_t1219)) + (0.081176470589999994 * var_t1225));
        IJth(rJacobian, 16, 14) = var_chaste_interface__Environment__fake_dt * (var_t1219 - var_t1225);
        IJth(rJacobian, 11, 15) = var_chaste_interface__Environment__fake_dt * (((((((((((((-4.0) * var_t1001) * var_t1002) * var_t423) * var_t557) * var_Irel__kappa) / var_t1061) * var_t993) * var_Irel__qn) * var_t991) * var_t1070) * var_t1026) - ((((0.049200000000000001 * (((((((-4.0) * var_t271) * var_t327) * var_cell__V) * var_t259) * var_t998) - var_Irel__Rel)) * var_t1023) / pow(var_t990, 2.0)) * var_t1070));
        IJth(rJacobian, 15, 15) = var_chaste_interface__Environment__fake_dt * (var_t1232);
        IJth(rJacobian, 16, 15) = var_chaste_interface__Environment__fake_dt * ((-0.086956521740000001) * var_t1232);
        IJth(rJacobian, 14, 16) = var_chaste_interface__Environment__fake_dt * (0.081176470589999994 * var_t1229);
        IJth(rJacobian, 15, 16) = var_chaste_interface__Environment__fake_dt * (var_t1231);
        IJth(rJacobian, 16, 16) = var_chaste_interface__Environment__fake_dt * (((-0.086956521740000001) * var_t1231) - var_t1229);
    }
    
    N_Vector Dynamiclivshitz_rudy_2007FromCellMLCvode::ComputeDerivedQuantities(double var_chaste_interface__Environment__time, const N_Vector & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Ca__Ca_T = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: 0.0257059808595638
        
        
        // Mathematics
        const double var_Ca__kmtrpn = 0.00050000000000000001; // mM
        const double var_Ca__kmcmdn = 0.0023800000000000002; // mM
        const double var_Ca__Ca_T = var_chaste_interface__Ca__Ca_T; // mM
        const double var_Ca__cmdnbar = 0.050000000000000003; // mM
        const double var_Ca__trpnbar = 0.070000000000000007; // mM
        const double var_Ca__bmyo = ((var_Ca__cmdnbar + var_Ca__trpnbar) - var_Ca__Ca_T) + var_Ca__kmtrpn + var_Ca__kmcmdn; // mM
        const double var_Ca__cmyo = ((var_Ca__kmcmdn * var_Ca__kmtrpn) - (var_Ca__Ca_T * (var_Ca__kmtrpn + var_Ca__kmcmdn))) + (var_Ca__trpnbar * var_Ca__kmcmdn) + (var_Ca__cmdnbar * var_Ca__kmtrpn); // mM2
        const double var_Ca__dmyo = (-var_Ca__kmtrpn) * var_Ca__kmcmdn * var_Ca__Ca_T; // mM3
        const double var_Ca__Ca_i = (((2.0 * sqrt((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo))) / 3.0) * cos(acos((((9.0 * var_Ca__bmyo * var_Ca__cmyo) - (2.0 * var_Ca__bmyo * var_Ca__bmyo * var_Ca__bmyo)) - (27.0 * var_Ca__dmyo)) / (2.0 * pow((var_Ca__bmyo * var_Ca__bmyo) - (3.0 * var_Ca__cmyo), 1.5))) / 3.0)) - (var_Ca__bmyo / 3.0); // mM
        const double var_chaste_interface__Ca__Ca_i = var_Ca__Ca_i; // millimolar
        
        N_Vector dqs = N_VNew_Serial(1);
        NV_Ith_S(dqs, 0) = var_chaste_interface__Ca__Ca_i;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Dynamiclivshitz_rudy_2007FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "LivshitzRudy2007";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-89.4356034692784);

    // rY[1]:
    this->mVariableNames.push_back("INa__H");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.994401369032678);

    // rY[2]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000734780346592185);

    // rY[3]:
    this->mVariableNames.push_back("INa__J");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.996100688673679);

    // rY[4]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.2514786721066e-27);

    // rY[5]:
    this->mVariableNames.push_back("ICaL__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997404948824816);

    // rY[6]:
    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000162194715543637);

    // rY[7]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0285147332973946);

    // rY[8]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0764114040188678);

    // rY[9]:
    this->mVariableNames.push_back("ICaT__b");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000927461915392873);

    // rY[10]:
    this->mVariableNames.push_back("ICaT__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.952834331760863);

    // rY[11]:
    this->mVariableNames.push_back("Irel__Rel");
    this->mVariableUnits.push_back("mM_per_ms");
    this->mInitialConditions.push_back(1.06874246141923e-23);

    // rY[12]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(16.612739313555);

    // rY[13]:
    this->mVariableNames.push_back("K__K_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(139.730914103161);

    // rY[14]:
    this->mVariableNames.push_back("Ca__Ca_T");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.0257059808595638);

    // rY[15]:
    this->mVariableNames.push_back("Ca__Ca_JSR_T");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(7.87371650296567);

    // rY[16]:
    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.71518235696672);

    // rY[17]:
    this->mVariableNames.push_back("Ca__Over");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-12);

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_concentration");
    this->mDerivedQuantityUnits.push_back("millimolar");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiclivshitz_rudy_2007FromCellMLCvode)

#endif // CHASTE_CVODE
