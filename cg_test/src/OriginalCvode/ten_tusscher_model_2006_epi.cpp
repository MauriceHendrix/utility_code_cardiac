#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: tentusscher_panfilov_2006_epi
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:15:21 2020
//! 
//! <autogenerated>

#include "ten_tusscher_model_2006_epi.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicten_tusscher_model_2006_epiFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__i_Stim_Start = 10.0; // millisecond
        const double var_membrane__i_Stim_Amplitude =  -52.0; // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__membrane__i_Stim_Amplitude_converter = var_membrane__i_Stim_Amplitude; // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim_Amplitude = var_chaste_interface__membrane__i_Stim_Amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__i_Stim_Amplitude),
                var_chaste_interface__membrane__i_Stim_PulseDuration,
                var_chaste_interface__membrane__i_Stim_Period,
                var_chaste_interface__membrane__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicten_tusscher_model_2006_epiFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicten_tusscher_model_2006_epiFromCellMLCvode::Dynamicten_tusscher_model_2006_epiFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                19,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicten_tusscher_model_2006_epiFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicten_tusscher_model_2006_epiFromCellMLCvode::~Dynamicten_tusscher_model_2006_epiFromCellMLCvode()
    {
    }
    
    double Dynamicten_tusscher_model_2006_epiFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89
        
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_inward_rectifier_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_inward_rectifier_potassium_current__beta_K1 = ((3.0 * exp(0.00020000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 10.0))) / (1.0 + exp((-0.5) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K))); // dimensionless
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * var_inward_rectifier_potassium_current__xK1_inf * sqrt(var_inward_rectifier_potassium_current__K_o / 5.4000000000000004) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K); // picoA_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__r * var_transient_outward_current__s * (var_transient_outward_current__V - var_transient_outward_current__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_time_dependent_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_rapid_time_dependent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_rapid_time_dependent_potassium_current__K_o / 5.4000000000000004) * var_rapid_time_dependent_potassium_current__Xr1 * var_rapid_time_dependent_potassium_current__Xr2 * (var_rapid_time_dependent_potassium_current__V - var_rapid_time_dependent_potassium_current__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.39200000000000002; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_slow_time_dependent_potassium_current__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_slow_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_slow_time_dependent_potassium_current__Xs, 2.0) * (var_slow_time_dependent_potassium_current__V - var_slow_time_dependent_potassium_current__E_Ks); // picoA_per_picoF
        const double var_L_type_Ca_current__Ca_ss = var_chaste_interface__calcium_dynamics__Ca_ss; // millimolar
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_L_type_Ca_current__f2 = var_chaste_interface__L_type_Ca_current_f2_gate__f2; // dimensionless
        const double var_L_type_Ca_current__fCass = var_chaste_interface__L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_L_type_Ca_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_current__T = var_membrane__T; // kelvin
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_L_type_Ca_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_L_type_Ca_current__d * var_L_type_Ca_current__f * var_L_type_Ca_current__f2 * var_L_type_Ca_current__fCass * 4.0 * (var_L_type_Ca_current__V - 15.0) * pow(var_L_type_Ca_current__F, 2.0)) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) * ((0.25 * var_L_type_Ca_current__Ca_ss * exp((2.0 * (var_L_type_Ca_current__V - 15.0) * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T))) - var_L_type_Ca_current__Ca_o)) / (exp((2.0 * (var_L_type_Ca_current__V - 15.0) * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_potassium_pump_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_potassium_pump_current__T = var_membrane__T; // kelvin
        const double var_sodium_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 2.7240000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_potassium_pump_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_sodium_potassium_pump_current__K_o) / (var_sodium_potassium_pump_current__K_o + var_sodium_potassium_pump_current__K_mk)) * var_sodium_potassium_pump_current__Na_i) / (var_sodium_potassium_pump_current__Na_i + var_sodium_potassium_pump_current__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump_current__V * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump_current__V) * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T)))); // picoA_per_picoF
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_fast_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * var_fast_sodium_current__j * (var_fast_sodium_current__V - var_fast_sodium_current__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_calcium_exchanger_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_calcium_exchanger_current__T = var_membrane__T; // kelvin
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_sodium_calcium_exchanger_current__gamma * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_i, 3.0) * var_sodium_calcium_exchanger_current__Ca_o) - (exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_o, 3.0) * var_sodium_calcium_exchanger_current__Ca_i * var_sodium_calcium_exchanger_current__alpha))) / ((pow(var_sodium_calcium_exchanger_current__Km_Nai, 3.0) + pow(var_sodium_calcium_exchanger_current__Na_o, 3.0)) * (var_sodium_calcium_exchanger_current__Km_Ca + var_sodium_calcium_exchanger_current__Ca_o) * (1.0 + (var_sodium_calcium_exchanger_current__K_sat * exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T))))); // picoA_per_picoF
        const double var_reversal_potentials__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_pump_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_potassium_pump_current__V - var_potassium_pump_current__E_K)) / (1.0 + exp((25.0 - var_potassium_pump_current__V) / 5.9800000000000004)); // picoA_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.12379999999999999; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_chaste_interface__L_type_Ca_current__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
        const double var_chaste_interface__inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_chaste_interface__slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
        const double var_chaste_interface__calcium_pump_current__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
        const double var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_chaste_interface__sodium_potassium_pump_current__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_chaste_interface__potassium_pump_current__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
        const double var_chaste_interface__transient_outward_current__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__inward_rectifier_potassium_current__i_K1 + var_chaste_interface__transient_outward_current__i_to + var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr + var_chaste_interface__slow_time_dependent_potassium_current__i_Ks + var_chaste_interface__L_type_Ca_current__i_CaL + var_chaste_interface__sodium_potassium_pump_current__i_NaK + var_chaste_interface__fast_sodium_current__i_Na + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_pump_current__i_p_K + var_chaste_interface__calcium_pump_current__i_p_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 3.64
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__calcium_dynamics__R_prime = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9073
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__Cm = 0.185; // microF
        const double var_membrane__V_c = 0.016403999999999998; // micrometre3
        const double var_inward_rectifier_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_inward_rectifier_potassium_current__beta_K1 = ((3.0 * exp(0.00020000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 10.0))) / (1.0 + exp((-0.5) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K))); // dimensionless
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * var_inward_rectifier_potassium_current__xK1_inf * sqrt(var_inward_rectifier_potassium_current__K_o / 5.4000000000000004) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K); // picoA_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_transient_outward_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__r * var_transient_outward_current__s * (var_transient_outward_current__V - var_transient_outward_current__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_time_dependent_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_rapid_time_dependent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_rapid_time_dependent_potassium_current__K_o / 5.4000000000000004) * var_rapid_time_dependent_potassium_current__Xr1 * var_rapid_time_dependent_potassium_current__Xr2 * (var_rapid_time_dependent_potassium_current__V - var_rapid_time_dependent_potassium_current__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.39200000000000002; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_slow_time_dependent_potassium_current__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_slow_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_slow_time_dependent_potassium_current__Xs, 2.0) * (var_slow_time_dependent_potassium_current__V - var_slow_time_dependent_potassium_current__E_Ks); // picoA_per_picoF
        const double var_L_type_Ca_current__Ca_ss = var_chaste_interface__calcium_dynamics__Ca_ss; // millimolar
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_L_type_Ca_current__f2 = var_chaste_interface__L_type_Ca_current_f2_gate__f2; // dimensionless
        const double var_L_type_Ca_current__fCass = var_chaste_interface__L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_L_type_Ca_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_current__T = var_membrane__T; // kelvin
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_L_type_Ca_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_L_type_Ca_current__d * var_L_type_Ca_current__f * var_L_type_Ca_current__f2 * var_L_type_Ca_current__fCass * 4.0 * (var_L_type_Ca_current__V - 15.0) * pow(var_L_type_Ca_current__F, 2.0)) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) * ((0.25 * var_L_type_Ca_current__Ca_ss * exp((2.0 * (var_L_type_Ca_current__V - 15.0) * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T))) - var_L_type_Ca_current__Ca_o)) / (exp((2.0 * (var_L_type_Ca_current__V - 15.0) * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_potassium_pump_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_potassium_pump_current__T = var_membrane__T; // kelvin
        const double var_sodium_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 2.7240000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_potassium_pump_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_sodium_potassium_pump_current__K_o) / (var_sodium_potassium_pump_current__K_o + var_sodium_potassium_pump_current__K_mk)) * var_sodium_potassium_pump_current__Na_i) / (var_sodium_potassium_pump_current__Na_i + var_sodium_potassium_pump_current__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump_current__V * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump_current__V) * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T)))); // picoA_per_picoF
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_fast_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * var_fast_sodium_current__j * (var_fast_sodium_current__V - var_fast_sodium_current__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_calcium_exchanger_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_calcium_exchanger_current__T = var_membrane__T; // kelvin
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_sodium_calcium_exchanger_current__gamma * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_i, 3.0) * var_sodium_calcium_exchanger_current__Ca_o) - (exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_o, 3.0) * var_sodium_calcium_exchanger_current__Ca_i * var_sodium_calcium_exchanger_current__alpha))) / ((pow(var_sodium_calcium_exchanger_current__Km_Nai, 3.0) + pow(var_sodium_calcium_exchanger_current__Na_o, 3.0)) * (var_sodium_calcium_exchanger_current__Km_Ca + var_sodium_calcium_exchanger_current__Ca_o) * (1.0 + (var_sodium_calcium_exchanger_current__K_sat * exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T))))); // picoA_per_picoF
        const double var_reversal_potentials__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_pump_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_potassium_pump_current__V - var_potassium_pump_current__E_K)) / (1.0 + exp((25.0 - var_potassium_pump_current__V) / 5.9800000000000004)); // picoA_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.12379999999999999; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__V = var_rapid_time_dependent_potassium_current__V; // millivolt
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 = 450.0 / (1.0 + exp(((-45.0) - var_rapid_time_dependent_potassium_current_Xr1_gate__V) / 10.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1 = 6.0 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr1_gate__V + 30.0) / 11.5)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1 = 1.0 * var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 * var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_rapid_time_dependent_potassium_current__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf = 1.0 / (1.0 + exp(((-26.0) - var_rapid_time_dependent_potassium_current_Xr1_gate__V) / 7.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = (var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf - var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1; // per_millisecond
        const double var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = var_rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__V = var_rapid_time_dependent_potassium_current__V; // millivolt
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 = 3.0 / (1.0 + exp(((-60.0) - var_rapid_time_dependent_potassium_current_Xr2_gate__V) / 20.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2 = 1.1200000000000001 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr2_gate__V - 60.0) / 20.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2 = 1.0 * var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 * var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf = 1.0 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr2_gate__V + 88.0) / 24.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_rapid_time_dependent_potassium_current__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = (var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf - var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2; // per_millisecond
        const double var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = var_rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__V = var_slow_time_dependent_potassium_current__V; // millivolt
        const double var_slow_time_dependent_potassium_current_Xs_gate__beta_xs = 1.0 / (1.0 + exp((var_slow_time_dependent_potassium_current_Xs_gate__V - 35.0) / 15.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs = 1400.0 / sqrt(1.0 + exp((5.0 - var_slow_time_dependent_potassium_current_Xs_gate__V) / 6.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__tau_xs = (1.0 * var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs * var_slow_time_dependent_potassium_current_Xs_gate__beta_xs) + 80.0; // millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__xs_inf = 1.0 / (1.0 + exp(((-5.0) - var_slow_time_dependent_potassium_current_Xs_gate__V) / 14.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__Xs = var_slow_time_dependent_potassium_current__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = (var_slow_time_dependent_potassium_current_Xs_gate__xs_inf - var_slow_time_dependent_potassium_current_Xs_gate__Xs) / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs; // per_millisecond
        const double var_slow_time_dependent_potassium_current__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = var_slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_m_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_m_gate__alpha_m = 1.0 / (1.0 + exp(((-60.0) - var_fast_sodium_current_m_gate__V) / 5.0)); // dimensionless
        const double var_fast_sodium_current_m_gate__beta_m = (0.10000000000000001 / (1.0 + exp((var_fast_sodium_current_m_gate__V + 35.0) / 5.0))) + (0.10000000000000001 / (1.0 + exp((var_fast_sodium_current_m_gate__V - 50.0) / 200.0))); // dimensionless
        const double var_fast_sodium_current_m_gate__tau_m = 1.0 * var_fast_sodium_current_m_gate__alpha_m * var_fast_sodium_current_m_gate__beta_m; // millisecond
        const double var_fast_sodium_current_m_gate__m_inf = 1.0 / pow(1.0 + exp(((-56.859999999999999) - var_fast_sodium_current_m_gate__V) / 9.0299999999999994), 2.0); // dimensionless
        const double var_fast_sodium_current_m_gate__m = var_fast_sodium_current__m; // dimensionless
        const double var_fast_sodium_current_m_gate__d_m_d_environment__time = (var_fast_sodium_current_m_gate__m_inf - var_fast_sodium_current_m_gate__m) / var_fast_sodium_current_m_gate__tau_m; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time = var_fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_h_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_h_gate__h_inf = 1.0 / pow(1.0 + exp((var_fast_sodium_current_h_gate__V + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_fast_sodium_current_h_gate__beta_h = (var_fast_sodium_current_h_gate__V < (-40.0)) ? ((2.7000000000000002 * exp(0.079000000000000001 * var_fast_sodium_current_h_gate__V)) + (310000.0 * exp(0.34849999999999998 * var_fast_sodium_current_h_gate__V))) : (0.77000000000000002 / (0.13 * (1.0 + exp((var_fast_sodium_current_h_gate__V + 10.66) / (-11.1))))); // per_millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = (var_fast_sodium_current_h_gate__V < (-40.0)) ? (0.057000000000000002 * exp((-(var_fast_sodium_current_h_gate__V + 80.0)) / 6.7999999999999998)) : 0.0; // per_millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1.0 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double var_fast_sodium_current_h_gate__h = var_fast_sodium_current__h; // dimensionless
        const double var_fast_sodium_current_h_gate__d_h_d_environment__time = (var_fast_sodium_current_h_gate__h_inf - var_fast_sodium_current_h_gate__h) / var_fast_sodium_current_h_gate__tau_h; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time = var_fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_j_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_j_gate__j_inf = 1.0 / pow(1.0 + exp((var_fast_sodium_current_j_gate__V + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_fast_sodium_current_j_gate__alpha_j = (var_fast_sodium_current_j_gate__V < (-40.0)) ? ((((((-25428.0) * exp(0.24440000000000001 * var_fast_sodium_current_j_gate__V)) - (6.9480000000000002e-06 * exp((-0.043909999999999998) * var_fast_sodium_current_j_gate__V))) * (var_fast_sodium_current_j_gate__V + 37.780000000000001)) / 1.0) / (1.0 + exp(0.311 * (var_fast_sodium_current_j_gate__V + 79.230000000000004)))) : 0.0; // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = (var_fast_sodium_current_j_gate__V < (-40.0)) ? ((0.024240000000000001 * exp((-0.01052) * var_fast_sodium_current_j_gate__V)) / (1.0 + exp((-0.13780000000000001) * (var_fast_sodium_current_j_gate__V + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * var_fast_sodium_current_j_gate__V)) / (1.0 + exp((-0.10000000000000001) * (var_fast_sodium_current_j_gate__V + 32.0)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1.0 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double var_fast_sodium_current_j_gate__j = var_fast_sodium_current__j; // dimensionless
        const double var_fast_sodium_current_j_gate__d_j_d_environment__time = (var_fast_sodium_current_j_gate__j_inf - var_fast_sodium_current_j_gate__j) / var_fast_sodium_current_j_gate__tau_j; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_j_gate__d_j_d_environment__time = var_fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_d_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_d_gate__alpha_d = (1.3999999999999999 / (1.0 + exp(((-35.0) - var_L_type_Ca_current_d_gate__V) / 13.0))) + 0.25; // dimensionless
        const double var_L_type_Ca_current_d_gate__gamma_d = 1.0 / (1.0 + exp((50.0 - var_L_type_Ca_current_d_gate__V) / 20.0)); // millisecond
        const double var_L_type_Ca_current_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp((var_L_type_Ca_current_d_gate__V + 5.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_current_d_gate__tau_d = (1.0 * var_L_type_Ca_current_d_gate__alpha_d * var_L_type_Ca_current_d_gate__beta_d) + var_L_type_Ca_current_d_gate__gamma_d; // millisecond
        const double var_L_type_Ca_current_d_gate__d_inf = 1.0 / (1.0 + exp(((-8.0) - var_L_type_Ca_current_d_gate__V) / 7.5)); // dimensionless
        const double var_L_type_Ca_current_d_gate__d = var_L_type_Ca_current__d; // dimensionless
        const double var_L_type_Ca_current_d_gate__d_d_d_environment__time = (var_L_type_Ca_current_d_gate__d_inf - var_L_type_Ca_current_d_gate__d) / var_L_type_Ca_current_d_gate__tau_d; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_d_gate__d_d_d_environment__time = var_L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_f_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_f_gate__tau_f = (1102.5 * exp((-pow(var_L_type_Ca_current_f_gate__V + 27.0, 2.0)) / 225.0)) + (200.0 / (1.0 + exp((13.0 - var_L_type_Ca_current_f_gate__V) / 10.0))) + (180.0 / (1.0 + exp((var_L_type_Ca_current_f_gate__V + 30.0) / 10.0))) + 20.0; // millisecond
        const double var_L_type_Ca_current_f_gate__f_inf = 1.0 / (1.0 + exp((var_L_type_Ca_current_f_gate__V + 20.0) / 7.0)); // dimensionless
        const double var_L_type_Ca_current_f_gate__f = var_L_type_Ca_current__f; // dimensionless
        const double var_L_type_Ca_current_f_gate__d_f_d_environment__time = (var_L_type_Ca_current_f_gate__f_inf - var_L_type_Ca_current_f_gate__f) / var_L_type_Ca_current_f_gate__tau_f; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_f_gate__d_f_d_environment__time = var_L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_f2_gate__f2 = var_L_type_Ca_current__f2; // dimensionless
        const double var_L_type_Ca_current_f2_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_f2_gate__f2_inf = (0.67000000000000004 / (1.0 + exp((var_L_type_Ca_current_f2_gate__V + 35.0) / 7.0))) + 0.33000000000000002; // dimensionless
        const double var_L_type_Ca_current_f2_gate__tau_f2 = (562.0 * exp((-pow(var_L_type_Ca_current_f2_gate__V + 27.0, 2.0)) / 240.0)) + (31.0 / (1.0 + exp((25.0 - var_L_type_Ca_current_f2_gate__V) / 10.0))) + (80.0 / (1.0 + exp((var_L_type_Ca_current_f2_gate__V + 30.0) / 10.0))); // millisecond
        const double var_L_type_Ca_current_f2_gate__d_f2_d_environment__time = (var_L_type_Ca_current_f2_gate__f2_inf - var_L_type_Ca_current_f2_gate__f2) / var_L_type_Ca_current_f2_gate__tau_f2; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_f2_gate__d_f2_d_environment__time = var_L_type_Ca_current_f2_gate__d_f2_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_fCass_gate__Ca_ss = var_L_type_Ca_current__Ca_ss; // millimolar
        const double var_L_type_Ca_current_fCass_gate__tau_fCass = (80.0 / (1.0 + pow(var_L_type_Ca_current_fCass_gate__Ca_ss / 0.050000000000000003, 2.0))) + 2.0; // millisecond
        const double var_L_type_Ca_current_fCass_gate__fCass_inf = (0.59999999999999998 / (1.0 + pow(var_L_type_Ca_current_fCass_gate__Ca_ss / 0.050000000000000003, 2.0))) + 0.40000000000000002; // dimensionless
        const double var_L_type_Ca_current_fCass_gate__fCass = var_L_type_Ca_current__fCass; // dimensionless
        const double var_L_type_Ca_current_fCass_gate__d_fCass_d_environment__time = (var_L_type_Ca_current_fCass_gate__fCass_inf - var_L_type_Ca_current_fCass_gate__fCass) / var_L_type_Ca_current_fCass_gate__tau_fCass; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_fCass_gate__d_fCass_d_environment__time = var_L_type_Ca_current_fCass_gate__d_fCass_d_environment__time; // per_millisecond
        const double var_transient_outward_current_s_gate__s_gateparam = 20.0; // millivolt
        const double var_transient_outward_current_s_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_s_gate__s_inf = 1.0 / (1.0 + exp((var_transient_outward_current_s_gate__V + var_transient_outward_current_s_gate__s_gateparam) / 5.0)); // dimensionless
        const double var_transient_outward_current_s_gate__tau_s_t1V = 45.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_term2 = 5.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_term1 = 85.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_t1Vdenom = 320.0; // millivolt_square
        const double var_transient_outward_current_s_gate__tau_sconstant1 = 3.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s = (var_transient_outward_current_s_gate__tau_s_term1 * exp((-pow(var_transient_outward_current_s_gate__V + var_transient_outward_current_s_gate__tau_s_t1V, 2.0)) / var_transient_outward_current_s_gate__tau_s_t1Vdenom)) + (var_transient_outward_current_s_gate__tau_s_term2 / (1.0 + exp((var_transient_outward_current_s_gate__V - 20.0) / 5.0))) + var_transient_outward_current_s_gate__tau_sconstant1; // millisecond
        const double var_transient_outward_current_s_gate__s = var_transient_outward_current__s; // dimensionless
        const double var_transient_outward_current_s_gate__d_s_d_environment__time = (var_transient_outward_current_s_gate__s_inf - var_transient_outward_current_s_gate__s) / var_transient_outward_current_s_gate__tau_s; // per_millisecond
        const double var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time = var_transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double var_transient_outward_current_r_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_r_gate__r_inf = 1.0 / (1.0 + exp((20.0 - var_transient_outward_current_r_gate__V) / 6.0)); // dimensionless
        const double var_transient_outward_current_r_gate__tau_r = (9.5 * exp((-pow(var_transient_outward_current_r_gate__V + 40.0, 2.0)) / 1800.0)) + 0.80000000000000004; // millisecond
        const double var_transient_outward_current_r_gate__r = var_transient_outward_current__r; // dimensionless
        const double var_transient_outward_current_r_gate__d_r_d_environment__time = (var_transient_outward_current_r_gate__r_inf - var_transient_outward_current_r_gate__r) / var_transient_outward_current_r_gate__tau_r; // per_millisecond
        const double var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time = var_transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double var_calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
        const double var_calcium_dynamics__Ca_ss = var_chaste_interface__calcium_dynamics__Ca_ss; // millimolar
        const double var_calcium_dynamics__V_rel = 0.10199999999999999; // per_millisecond
        const double var_calcium_dynamics__R_prime = var_chaste_interface__calcium_dynamics__R_prime; // dimensionless
        const double var_calcium_dynamics__k1_prime = 0.14999999999999999; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__max_sr = 2.5; // dimensionless
        const double var_calcium_dynamics__EC = 1.5; // millimolar
        const double var_calcium_dynamics__min_sr = 1.0; // dimensionless
        const double var_calcium_dynamics__kcasr = var_calcium_dynamics__max_sr - ((var_calcium_dynamics__max_sr - var_calcium_dynamics__min_sr) / (1.0 + pow(var_calcium_dynamics__EC / var_calcium_dynamics__Ca_SR, 2.0))); // dimensionless
        const double var_calcium_dynamics__k1 = var_calcium_dynamics__k1_prime / var_calcium_dynamics__kcasr; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__k3 = 0.059999999999999998; // per_millisecond
        const double var_calcium_dynamics__O = (var_calcium_dynamics__k1 * pow(var_calcium_dynamics__Ca_ss, 2.0) * var_calcium_dynamics__R_prime) / (var_calcium_dynamics__k3 + (var_calcium_dynamics__k1 * pow(var_calcium_dynamics__Ca_ss, 2.0))); // dimensionless
        const double var_calcium_dynamics__i_rel = var_calcium_dynamics__V_rel * var_calcium_dynamics__O * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss); // millimolar_per_millisecond
        const double var_calcium_dynamics__Vmax_up = 0.0063749999999999996; // millimolar_per_millisecond
        const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__i_up = var_calcium_dynamics__Vmax_up / (1.0 + (pow(var_calcium_dynamics__K_up, 2.0) / pow(var_calcium_dynamics__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_calcium_dynamics__V_leak = 0.00036000000000000002; // per_millisecond
        const double var_calcium_dynamics__i_leak = var_calcium_dynamics__V_leak * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__V_xfer = 0.0038; // per_millisecond
        const double var_calcium_dynamics__i_xfer = var_calcium_dynamics__V_xfer * (var_calcium_dynamics__Ca_ss - var_calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__k2_prime = 0.044999999999999998; // per_millimolar_per_millisecond
        const double var_calcium_dynamics__k2 = var_calcium_dynamics__k2_prime * var_calcium_dynamics__kcasr; // per_millimolar_per_millisecond
        const double var_calcium_dynamics__k4 = 0.0050000000000000001; // per_millisecond
        const double var_calcium_dynamics__Buf_c = 0.20000000000000001; // millimolar
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__Ca_i_bufc = 1.0 / (1.0 + ((var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c) / pow(var_calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c, 2.0))); // dimensionless
        const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
        const double var_calcium_dynamics__Ca_sr_bufsr = 1.0 / (1.0 + ((var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr) / pow(var_calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr, 2.0))); // dimensionless
        const double var_calcium_dynamics__Buf_ss = 0.40000000000000002; // millimolar
        const double var_calcium_dynamics__K_buf_ss = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__Ca_ss_bufss = 1.0 / (1.0 + ((var_calcium_dynamics__Buf_ss * var_calcium_dynamics__K_buf_ss) / pow(var_calcium_dynamics__Ca_ss + var_calcium_dynamics__K_buf_ss, 2.0))); // dimensionless
        const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
        const double var_calcium_dynamics__V_ss = 5.4679999999999998e-05; // micrometre3
        const double var_calcium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_calcium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_calcium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_calcium_dynamics__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_calcium_dynamics__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_calcium_dynamics__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
        const double var_calcium_dynamics__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
        const double var_calcium_dynamics__d_Ca_i_d_environment__time = var_calcium_dynamics__Ca_i_bufc * (((((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) * var_calcium_dynamics__V_sr) / var_calcium_dynamics__V_c) + var_calcium_dynamics__i_xfer) - ((1.0 * ((var_calcium_dynamics__i_b_Ca + var_calcium_dynamics__i_p_Ca) - (2.0 * var_calcium_dynamics__i_NaCa)) * var_calcium_dynamics__Cm) / (2.0 * 1.0 * var_calcium_dynamics__V_c * var_calcium_dynamics__F))); // 'millimole per litre per millisecond'
        const double var_calcium_dynamics__d_Ca_SR_d_environment__time = var_calcium_dynamics__Ca_sr_bufsr * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak)); // 'millimole per litre per millisecond'
        const double var_calcium_dynamics__d_Ca_ss_d_environment__time = var_calcium_dynamics__Ca_ss_bufss * (((((-1.0) * var_calcium_dynamics__i_CaL * var_calcium_dynamics__Cm) / (2.0 * 1.0 * var_calcium_dynamics__V_ss * var_calcium_dynamics__F)) + ((var_calcium_dynamics__i_rel * var_calcium_dynamics__V_sr) / var_calcium_dynamics__V_ss)) - ((var_calcium_dynamics__i_xfer * var_calcium_dynamics__V_c) / var_calcium_dynamics__V_ss)); // 'millimole per litre per millisecond'
        const double var_calcium_dynamics__d_R_prime_d_environment__time = ((-var_calcium_dynamics__k2) * var_calcium_dynamics__Ca_ss * var_calcium_dynamics__R_prime) + (var_calcium_dynamics__k4 * (1.0 - var_calcium_dynamics__R_prime)); // per_millisecond
        const double var_sodium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_sodium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_sodium_dynamics__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_sodium_dynamics__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_sodium_dynamics__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_sodium_dynamics__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
        const double var_sodium_dynamics__d_Na_i_d_environment__time = (((-1.0) * (var_sodium_dynamics__i_Na + var_sodium_dynamics__i_b_Na + (3.0 * var_sodium_dynamics__i_NaK) + (3.0 * var_sodium_dynamics__i_NaCa))) / (1.0 * var_sodium_dynamics__V_c * var_sodium_dynamics__F)) * var_sodium_dynamics__Cm; // 'millimole per litre per millisecond'
        const double var_potassium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_potassium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_potassium_dynamics__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
        const double var_potassium_dynamics__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
        const double var_potassium_dynamics__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_potassium_dynamics__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_potassium_dynamics__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
        const double var_potassium_dynamics__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
        const double var_potassium_dynamics__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_potassium_dynamics__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
        const double var_potassium_dynamics__i_Stim = var_potassium_dynamics__i_Stim_converter / var_potassium_dynamics__chaste_interface__chaste_membrane_capacitance; // picoA_per_picoF
        const double var_potassium_dynamics__d_K_i_d_environment__time = (((-1.0) * ((var_potassium_dynamics__i_K1 + var_potassium_dynamics__i_to + var_potassium_dynamics__i_Kr + var_potassium_dynamics__i_Ks + var_potassium_dynamics__i_p_K + var_potassium_dynamics__i_Stim) - (2.0 * var_potassium_dynamics__i_NaK))) / (1.0 * var_potassium_dynamics__V_c * var_potassium_dynamics__F)) * var_potassium_dynamics__Cm; // 'millimole per litre per millisecond'
        const double var_chaste_interface__calcium_dynamics__d_Ca_i_d_environment__time = var_calcium_dynamics__d_Ca_i_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = var_slow_time_dependent_potassium_current__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time = var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time = var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_j_gate__d_j_d_environment__time = var_fast_sodium_current__fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_d_gate__d_d_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_f_gate__d_f_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_f2_gate__d_f2_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_f2_gate__d_f2_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_fCass_gate__d_fCass_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_fCass_gate__d_fCass_d_environment__time; // per_millisecond
        const double var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time = var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time = var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double var_chaste_interface__calcium_dynamics__d_Ca_SR_d_environment__time = var_calcium_dynamics__d_Ca_SR_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__calcium_dynamics__d_Ca_ss_d_environment__time = var_calcium_dynamics__d_Ca_ss_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__calcium_dynamics__d_R_prime_d_environment__time = var_calcium_dynamics__d_R_prime_d_environment__time; // per_millisecond
        const double var_chaste_interface__sodium_dynamics__d_Na_i_d_environment__time = var_sodium_dynamics__d_Na_i_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__potassium_dynamics__d_K_i_d_environment__time = var_potassium_dynamics__d_K_i_d_environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__d_Ca_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_j_gate__j = var_chaste_interface__fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_d_gate__d = var_chaste_interface__L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_f_gate__f = var_chaste_interface__L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_f2_gate__f2 = var_chaste_interface__L_type_Ca_current_f2_gate__d_f2_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass = var_chaste_interface__L_type_Ca_current_fCass_gate__d_fCass_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__d_Ca_SR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_ss = var_chaste_interface__calcium_dynamics__d_Ca_ss_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__R_prime = var_chaste_interface__calcium_dynamics__d_R_prime_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__sodium_dynamics__Na_i = var_chaste_interface__sodium_dynamics__d_Na_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__potassium_dynamics__K_i = var_chaste_interface__potassium_dynamics__d_K_i_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
            const double var_membrane__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
            const double var_membrane__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
            const double var_membrane__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
            const double var_membrane__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
            const double var_membrane__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
            const double var_membrane__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
            const double var_membrane__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
            const double var_membrane__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
            const double var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
            const double var_membrane__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
            const double var_membrane__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
            const double var_membrane__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
            const double var_membrane__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_membrane__i_Stim = var_membrane__i_Stim_converter / var_membrane__chaste_interface__chaste_membrane_capacitance; // picoA_per_picoF
            const double var_membrane__d_V_d_environment__time = -(var_membrane__i_K1 + var_membrane__i_to + var_membrane__i_Kr + var_membrane__i_Ks + var_membrane__i_CaL + var_membrane__i_NaK + var_membrane__i_Na + var_membrane__i_b_Na + var_membrane__i_NaCa + var_membrane__i_b_Ca + var_membrane__i_p_K + var_membrane__i_p_Ca + var_membrane__i_Stim); // 'millivolt per millisecond'
            const double var_chaste_interface__membrane__d_V_d_environment__time = var_membrane__d_V_d_environment__time; // ___units_2
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__calcium_dynamics__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__L_type_Ca_current_d_gate__d;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__L_type_Ca_current_f_gate__f;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__L_type_Ca_current_f2_gate__f2;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__L_type_Ca_current_fCass_gate__fCass;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__calcium_dynamics__Ca_ss;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__calcium_dynamics__R_prime;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__sodium_dynamics__Na_i;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__potassium_dynamics__K_i;
    }
    
    void Dynamicten_tusscher_model_2006_epiFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.23
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000126
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.00621
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.4712
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.0095
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00172
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.7444
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.7045
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 3.373e-5
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.7888
        double var_chaste_interface__L_type_Ca_current_f2_gate__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.9755
        double var_chaste_interface__L_type_Ca_current_fCass_gate__fCass = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.9953
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.999998
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.42e-8
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 14);
        // Units: millimolar; Initial value: 3.64
        double var_chaste_interface__calcium_dynamics__Ca_ss = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 0.00036
        double var_chaste_interface__calcium_dynamics__R_prime = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.9073
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 17);
        // Units: millimolar; Initial value: 8.604
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 136.89
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // millisecond
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__Cm = 0.185; // microF
        const double var_membrane__V_c = 0.016403999999999998; // micrometre3
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.29399999999999998; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.153; // nanoS_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.39200000000000002; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_L_type_Ca_current__g_CaL = 3.9799999999999998e-05; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__f2 = var_chaste_interface__L_type_Ca_current_f2_gate__f2; // dimensionless
        const double var_L_type_Ca_current__fCass = var_chaste_interface__L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 2.7240000000000002; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.12379999999999999; // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_rapid_time_dependent_potassium_current__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_rapid_time_dependent_potassium_current__Xr2; // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__Xs = var_slow_time_dependent_potassium_current__Xs; // dimensionless
        const double var_fast_sodium_current_m_gate__m = var_fast_sodium_current__m; // dimensionless
        const double var_fast_sodium_current_h_gate__h = var_fast_sodium_current__h; // dimensionless
        const double var_fast_sodium_current_j_gate__j = var_fast_sodium_current__j; // dimensionless
        const double var_L_type_Ca_current_d_gate__d = var_L_type_Ca_current__d; // dimensionless
        const double var_L_type_Ca_current_f_gate__f = var_L_type_Ca_current__f; // dimensionless
        const double var_L_type_Ca_current_f2_gate__f2 = var_L_type_Ca_current__f2; // dimensionless
        const double var_L_type_Ca_current_fCass_gate__fCass = var_L_type_Ca_current__fCass; // dimensionless
        const double var_transient_outward_current_s_gate__s_gateparam = 20.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_t1V = 45.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_term2 = 5.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_term1 = 85.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_t1Vdenom = 320.0; // millivolt_square
        const double var_transient_outward_current_s_gate__tau_sconstant1 = 3.0; // millisecond
        const double var_transient_outward_current_s_gate__s = var_transient_outward_current__s; // dimensionless
        const double var_transient_outward_current_r_gate__r = var_transient_outward_current__r; // dimensionless
        const double var_calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
        const double var_calcium_dynamics__Ca_ss = var_chaste_interface__calcium_dynamics__Ca_ss; // millimolar
        const double var_calcium_dynamics__V_rel = 0.10199999999999999; // per_millisecond
        const double var_calcium_dynamics__R_prime = var_chaste_interface__calcium_dynamics__R_prime; // dimensionless
        const double var_calcium_dynamics__k1_prime = 0.14999999999999999; // per_millimolar2_per_millisecond
        const double var_calcium_dynamics__max_sr = 2.5; // dimensionless
        const double var_calcium_dynamics__EC = 1.5; // millimolar
        const double var_calcium_dynamics__min_sr = 1.0; // dimensionless
        const double var_calcium_dynamics__k3 = 0.059999999999999998; // per_millisecond
        const double var_calcium_dynamics__Vmax_up = 0.0063749999999999996; // millimolar_per_millisecond
        const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__V_leak = 0.00036000000000000002; // per_millisecond
        const double var_calcium_dynamics__V_xfer = 0.0038; // per_millisecond
        const double var_calcium_dynamics__k2_prime = 0.044999999999999998; // per_millimolar_per_millisecond
        const double var_calcium_dynamics__k4 = 0.0050000000000000001; // per_millisecond
        const double var_calcium_dynamics__Buf_c = 0.20000000000000001; // millimolar
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
        const double var_calcium_dynamics__Buf_ss = 0.40000000000000002; // millimolar
        const double var_calcium_dynamics__K_buf_ss = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
        const double var_calcium_dynamics__V_ss = 5.4679999999999998e-05; // micrometre3
        const double var_sodium_dynamics__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_potassium_dynamics__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_t2 = var_membrane__R * var_membrane__T; // dimensionless
        const double var_t3 = 1.0 / var_membrane__F; // dimensionless
        const double var_t4 = 1.0 / var_potassium_dynamics__K_i; // dimensionless
        const double var_t6 = log(var_potassium_dynamics__K_o * var_t4); // dimensionless
        const double var_t8 = (var_t2 * var_t3) * var_t6; // dimensionless
        const double var_t11 = exp(((0.059999999999999998 * var_membrane__V) - (0.059999999999999998 * var_t8)) - 12.0); // dimensionless
        const double var_t12 = 1.0 + var_t11; // dimensionless
        const double var_t13 = pow(var_t12, 2.0); // dimensionless
        const double var_t14 = 1.0 / var_t13; // dimensionless
        const double var_t15 = var_inward_rectifier_potassium_current__g_K1 * var_t14; // dimensionless
        const double var_t16 = 1.0 / var_t12; // dimensionless
        const double var_t21 = exp(((0.00020000000000000001 * var_membrane__V) - (0.00020000000000000001 * var_t8)) + 0.02); // dimensionless
        const double var_t23 = 0.10000000000000001 * var_membrane__V; // dimensionless
        const double var_t26 = exp((var_t23 - (0.10000000000000001 * var_t8)) - 1.0); // dimensionless
        const double var_t27 = (3.0 * var_t21) + var_t26; // dimensionless
        const double var_t31 = exp(((-0.5) * var_membrane__V) + (0.5 * var_t8)); // dimensionless
        const double var_t32 = 1.0 + var_t31; // dimensionless
        const double var_t33 = 1.0 / var_t32; // dimensionless
        const double var_t35 = (0.10000000000000001 * var_t16) + (var_t27 * var_t33); // dimensionless
        const double var_t36 = 1.0 / var_t35; // dimensionless
        const double var_t38 = pow(var_potassium_dynamics__K_o, 1.0 / 2.0); // dimensionless
        const double var_t39 = var_membrane__V - var_t8; // dimensionless
        const double var_t40 = var_t38 * var_t39; // dimensionless
        const double var_t43 = (((0.0025819888969999998 * var_t15) * var_t36) * var_t40) * var_t11; // dimensionless
        const double var_t44 = var_inward_rectifier_potassium_current__g_K1 * var_t16; // dimensionless
        const double var_t45 = pow(var_t35, 2.0); // dimensionless
        const double var_t47 = var_t44 / var_t45; // dimensionless
        const double var_t54 = pow(var_t32, 2.0); // dimensionless
        const double var_t56 = var_t27 / var_t54; // dimensionless
        const double var_t62 = ((0.043033148290000003 * var_t47) * var_t40) * (((((-0.0060000000000000001) * var_t14) * var_t11) + (((0.00059999999999999995 * var_t21) + (0.10000000000000001 * var_t26)) * var_t33)) + ((0.5 * var_t56) * var_t31)); // dimensionless
        const double var_t63 = var_t36 * var_t38; // dimensionless
        const double var_t64 = var_t44 * var_t63; // dimensionless
        const double var_t65 = 0.043033148290000003 * var_t64; // dimensionless
        const double var_t66 = var_transient_outward_current__g_to * var_transient_outward_current_r_gate__r; // dimensionless
        const double var_t67 = var_t66 * var_transient_outward_current_s_gate__s; // dimensionless
        const double var_t68 = var_rapid_time_dependent_potassium_current__g_Kr * var_t38; // dimensionless
        const double var_t70 = (var_t68 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_t71 = 0.43033148290000001 * var_t70; // dimensionless
        const double var_t72 = pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t73 = var_slow_time_dependent_potassium_current__g_Ks * var_t72; // dimensionless
        const double var_t74 = var_L_type_Ca_current__g_CaL * var_L_type_Ca_current_d_gate__d; // dimensionless
        const double var_t75 = var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_f2_gate__f2; // dimensionless
        const double var_t77 = (var_t74 * var_t75) * var_L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_t78 = pow(var_membrane__F, 2.0); // dimensionless
        const double var_t79 = 1.0 / var_membrane__R; // dimensionless
        const double var_t81 = 1.0 / var_membrane__T; // dimensionless
        const double var_t82 = var_membrane__V - 15.0; // dimensionless
        const double var_t84 = var_t79 * var_t81; // dimensionless
        const double var_t87 = exp(((2.0 * var_t82) * var_membrane__F) * var_t84); // dimensionless
        const double var_t88 = var_calcium_dynamics__Ca_ss * var_t87; // dimensionless
        const double var_t90 = (0.25 * var_t88) - var_calcium_dynamics__Ca_o; // dimensionless
        const double var_t92 = var_t87 - 1.0; // dimensionless
        const double var_t93 = 1.0 / var_t92; // dimensionless
        const double var_t95 = (((var_t78 * var_t79) * var_t81) * var_t90) * var_t93; // dimensionless
        const double var_t98 = var_t74 * var_L_type_Ca_current_f_gate__f; // dimensionless
        const double var_t99 = var_L_type_Ca_current_f2_gate__f2 * var_L_type_Ca_current_fCass_gate__fCass; // dimensionless
        const double var_t100 = var_t99 * var_t82; // dimensionless
        const double var_t101 = var_t98 * var_t100; // dimensionless
        const double var_t103 = pow(var_membrane__R, 2.0); // dimensionless
        const double var_t104 = 1.0 / var_t103; // dimensionless
        const double var_t106 = pow(var_membrane__T, 2.0); // dimensionless
        const double var_t107 = 1.0 / var_t106; // dimensionless
        const double var_t108 = ((var_t78 * var_membrane__F) * var_t104) * var_t107; // dimensionless
        const double var_t113 = pow(var_t92, 2.0); // dimensionless
        const double var_t114 = 1.0 / var_t113; // dimensionless
        const double var_t120 = var_sodium_potassium_pump_current__P_NaK * var_potassium_dynamics__K_o; // dimensionless
        const double var_t122 = 1.0 / (var_potassium_dynamics__K_o + var_sodium_potassium_pump_current__K_mk); // dimensionless
        const double var_t123 = var_t120 * var_t122; // dimensionless
        const double var_t124 = var_sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa; // dimensionless
        const double var_t125 = 1.0 / var_t124; // dimensionless
        const double var_t128 = (var_membrane__V * var_membrane__F) * var_t84; // dimensionless
        const double var_t130 = exp((-0.10000000000000001) * var_t128); // dimensionless
        const double var_t132 = exp(-var_t128); // dimensionless
        const double var_t134 = (1.0 + (0.1245 * var_t130)) + (0.035299999999999998 * var_t132); // dimensionless
        const double var_t135 = pow(var_t134, 2.0); // dimensionless
        const double var_t137 = var_membrane__F * var_t79; // dimensionless
        const double var_t147 = (((var_t123 * var_sodium_dynamics__Na_i) * var_t125) / var_t135) * (((((-0.012449999999999999) * var_t137) * var_t81) * var_t130) - (((0.035299999999999998 * var_t137) * var_t81) * var_t132)); // dimensionless
        const double var_t148 = pow(var_fast_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t150 = (var_fast_sodium_current__g_Na * var_t148) * var_fast_sodium_current_m_gate__m; // dimensionless
        const double var_t151 = var_fast_sodium_current_h_gate__h * var_fast_sodium_current_j_gate__j; // dimensionless
        const double var_t152 = var_t150 * var_t151; // dimensionless
        const double var_t156 = var_t137 * var_t81; // dimensionless
        const double var_t158 = exp((var_sodium_calcium_exchanger_current__gamma * var_membrane__V) * var_t156); // dimensionless
        const double var_t160 = pow(var_sodium_dynamics__Na_i, 2.0); // dimensionless
        const double var_t161 = var_t160 * var_sodium_dynamics__Na_i; // dimensionless
        const double var_t165 = var_sodium_calcium_exchanger_current__gamma - 1.0; // dimensionless
        const double var_t170 = exp((var_t165 * var_membrane__V) * var_t156); // dimensionless
        const double var_t171 = pow(var_sodium_dynamics__Na_o, 2.0); // dimensionless
        const double var_t172 = var_t171 * var_sodium_dynamics__Na_o; // dimensionless
        const double var_t175 = ((var_t170 * var_t172) * var_calcium_dynamics__Ca_i) * var_sodium_calcium_exchanger_current__alpha; // dimensionless
        const double var_t179 = pow(var_sodium_calcium_exchanger_current__Km_Nai, 2.0); // dimensionless
        const double var_t182 = 1.0 / ((var_t179 * var_sodium_calcium_exchanger_current__Km_Nai) + var_t172); // dimensionless
        const double var_t184 = 1.0 / (var_sodium_calcium_exchanger_current__Km_Ca + var_calcium_dynamics__Ca_o); // dimensionless
        const double var_t185 = var_t182 * var_t184; // dimensionless
        const double var_t187 = 1.0 + (var_sodium_calcium_exchanger_current__K_sat * var_t170); // dimensionless
        const double var_t188 = 1.0 / var_t187; // dimensionless
        const double var_t189 = var_t185 * var_t188; // dimensionless
        const double var_t190 = (var_sodium_calcium_exchanger_current__K_NaCa * (((((((var_sodium_calcium_exchanger_current__gamma * var_membrane__F) * var_t79) * var_t81) * var_t158) * var_t161) * var_calcium_dynamics__Ca_o) - (((var_t165 * var_membrane__F) * var_t84) * var_t175))) * var_t189; // dimensionless
        const double var_t194 = var_sodium_calcium_exchanger_current__K_NaCa * (((var_t158 * var_t161) * var_calcium_dynamics__Ca_o) - var_t175); // dimensionless
        const double var_t195 = pow(var_t187, 2.0); // dimensionless
        const double var_t203 = ((((((var_t194 * var_t185) / var_t195) * var_sodium_calcium_exchanger_current__K_sat) * var_t165) * var_membrane__F) * var_t84) * var_t170; // dimensionless
        const double var_t206 = exp(4.1806020080000001 - (0.16722408029999999 * var_membrane__V)); // dimensionless
        const double var_t207 = 1.0 + var_t206; // dimensionless
        const double var_t208 = 1.0 / var_t207; // dimensionless
        const double var_t209 = var_potassium_pump_current__g_pK * var_t208; // dimensionless
        const double var_t211 = pow(var_t207, 2.0); // dimensionless
        const double var_t215 = (((0.16722408029999999 * var_potassium_pump_current__g_pK) * var_t39) / var_t211) * var_t206; // dimensionless
        const double var_t216 = (((((((((((((((var_t43 + var_t62) - var_t65) - var_t67) - var_t71) - var_t73) - ((4.0 * var_t77) * var_t95)) - ((((2.0 * var_t101) * var_t108) * var_t88) * var_t93)) + (((((8.0 * var_t101) * var_t108) * var_t90) * var_t114) * var_t87)) + var_t147) - var_t152) - var_sodium_background_current__g_bna) - var_t190) + var_t203) - var_calcium_background_current__g_bca) - var_t209) - var_t215; // dimensionless
        const double var_t228 = 1.0 / (var_potassium_dynamics__K_i + (var_reversal_potentials__P_kna * var_sodium_dynamics__Na_i)); // dimensionless
        const double var_t230 = log((var_potassium_dynamics__K_o + (var_reversal_potentials__P_kna * var_sodium_dynamics__Na_o)) * var_t228); // dimensionless
        const double var_t234 = (var_slow_time_dependent_potassium_current__g_Ks * var_slow_time_dependent_potassium_current_Xs_gate__Xs) * (var_membrane__V - ((var_t2 * var_t3) * var_t230)); // dimensionless
        const double var_t236 = var_fast_sodium_current__g_Na * var_t148; // dimensionless
        const double var_t237 = 1.0 / var_sodium_dynamics__Na_i; // dimensionless
        const double var_t239 = log(var_sodium_dynamics__Na_o * var_t237); // dimensionless
        const double var_t242 = var_membrane__V - ((var_t2 * var_t3) * var_t239); // dimensionless
        const double var_t258 = (var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_fCass_gate__fCass) * var_t82; // dimensionless
        const double var_t262 = var_t75 * var_t82; // dimensionless
        const double var_t266 = var_t66 * var_t39; // dimensionless
        const double var_t268 = (var_transient_outward_current__g_to * var_transient_outward_current_s_gate__s) * var_t39; // dimensionless
        const double var_t269 = var_sodium_calcium_exchanger_current__K_NaCa * var_t170; // dimensionless
        const double var_t272 = var_t184 * var_t188; // dimensionless
        const double var_t274 = (((var_t269 * var_t172) * var_sodium_calcium_exchanger_current__alpha) * var_t182) * var_t272; // dimensionless
        const double var_t276 = var_membrane__T * var_t3; // dimensionless
        const double var_t277 = 1.0 / var_calcium_dynamics__Ca_i; // dimensionless
        const double var_t280 = (((0.5 * var_calcium_background_current__g_bca) * var_membrane__R) * var_t276) * var_t277; // dimensionless
        const double var_t281 = var_calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa; // dimensionless
        const double var_t282 = 1.0 / var_t281; // dimensionless
        const double var_t283 = var_calcium_pump_current__g_pCa * var_t282; // dimensionless
        const double var_t284 = var_calcium_pump_current__g_pCa * var_calcium_dynamics__Ca_i; // dimensionless
        const double var_t285 = pow(var_t281, 2.0); // dimensionless
        const double var_t287 = var_t284 / var_t285; // dimensionless
        const double var_t289 = var_t82 * var_t78; // dimensionless
        const double var_t296 = var_t73 * var_membrane__R; // dimensionless
        const double var_t299 = ((var_t296 * var_t276) * var_t228) * var_reversal_potentials__P_kna; // dimensionless
        const double var_t301 = 1.0 / var_t134; // dimensionless
        const double var_t303 = ((var_t120 * var_t122) * var_t125) * var_t301; // dimensionless
        const double var_t304 = pow(var_t124, 2.0); // dimensionless
        const double var_t308 = ((var_t123 * var_sodium_dynamics__Na_i) / var_t304) * var_t301; // dimensionless
        const double var_t311 = ((var_t152 * var_t2) * var_t3) * var_t237; // dimensionless
        const double var_t314 = ((var_sodium_background_current__g_bna * var_membrane__R) * var_t276) * var_t237; // dimensionless
        const double var_t319 = ((((var_sodium_calcium_exchanger_current__K_NaCa * var_t158) * var_t160) * var_calcium_dynamics__Ca_o) * var_t182) * var_t272; // dimensionless
        const double var_t324 = var_t3 * var_t4; // dimensionless
        const double var_t325 = var_t324 * var_t11; // dimensionless
        const double var_t350 = var_t2 * var_t324; // dimensionless
        const double var_t362 = ((((((((((0.0025819888969999998 * var_t15) * var_t63) * var_t39) * var_t2) * var_t325) + (((0.043033148290000003 * var_t47) * var_t40) * (((((((-0.0060000000000000001) * var_t14) * var_membrane__R) * var_membrane__T) * var_t325) + (((((0.00059999999999999995 * var_t2) * var_t324) * var_t21) + (((0.10000000000000001 * var_t2) * var_t324) * var_t26)) * var_t33)) + (((((0.5 * var_t56) * var_membrane__R) * var_t276) * var_t4) * var_t31)))) - ((0.043033148290000003 * var_t64) * var_t350)) - (var_t67 * var_t350)) - ((0.43033148290000001 * var_t70) * var_t350)) - ((var_t296 * var_t276) * var_t228)) - ((((var_potassium_pump_current__g_pK * var_membrane__R) * var_membrane__T) * var_t324) * var_t208); // dimensionless
        const double var_t363 = (1.0 / 7.0) * var_membrane__V; // dimensionless
        const double var_t365 = exp(((-26.0) / 7.0) - var_t363); // dimensionless
        const double var_t366 = 1.0 + var_t365; // dimensionless
        const double var_t367 = pow(var_t366, 2.0); // dimensionless
        const double var_t370 = (1.0 / 10.0) * var_membrane__V; // dimensionless
        const double var_t372 = exp(((-9.0) / 2.0) - var_t370); // dimensionless
        const double var_t373 = 1.0 + var_t372; // dimensionless
        const double var_t376 = exp((0.086956521740000001 * var_membrane__V) + 2.6086956520000002); // dimensionless
        const double var_t377 = 1.0 + var_t376; // dimensionless
        const double var_t378 = var_t373 * var_t377; // dimensionless
        const double var_t382 = (1.0 / var_t366) - var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_t393 = exp(((1.0 / 24.0) * var_membrane__V) + (11.0 / 3.0)); // dimensionless
        const double var_t394 = 1.0 + var_t393; // dimensionless
        const double var_t395 = pow(var_t394, 2.0); // dimensionless
        const double var_t398 = (1.0 / 20.0) * var_membrane__V; // dimensionless
        const double var_t400 = exp((-3.0) - var_t398); // dimensionless
        const double var_t401 = 1.0 + var_t400; // dimensionless
        const double var_t403 = exp(var_t398 - 3.0); // dimensionless
        const double var_t404 = 1.0 + var_t403; // dimensionless
        const double var_t405 = var_t401 * var_t404; // dimensionless
        const double var_t409 = (1.0 / var_t394) - var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_t420 = exp(((-5.0) / 14.0) - ((1.0 / 14.0) * var_membrane__V)); // dimensionless
        const double var_t421 = 1.0 + var_t420; // dimensionless
        const double var_t422 = pow(var_t421, 2.0); // dimensionless
        const double var_t425 = (1.0 / 6.0) * var_membrane__V; // dimensionless
        const double var_t427 = exp((5.0 / 6.0) - var_t425); // dimensionless
        const double var_t428 = 1.0 + var_t427; // dimensionless
        const double var_t429 = pow(var_t428, 1.0 / 2.0); // dimensionless
        const double var_t430 = 1.0 / var_t429; // dimensionless
        const double var_t433 = exp(((1.0 / 15.0) * var_membrane__V) - (7.0 / 3.0)); // dimensionless
        const double var_t434 = 1.0 + var_t433; // dimensionless
        const double var_t435 = 1.0 / var_t434; // dimensionless
        const double var_t438 = ((1400.0 * var_t430) * var_t435) + 80.0; // dimensionless
        const double var_t439 = 1.0 / var_t438; // dimensionless
        const double var_t444 = pow(var_t438, 2.0); // dimensionless
        const double var_t452 = pow(var_t434, 2.0); // dimensionless
        const double var_t462 = exp((-6.2967884820000002) - (0.1107419712 * var_membrane__V)); // dimensionless
        const double var_t463 = 1.0 + var_t462; // dimensionless
        const double var_t464 = pow(var_t463, 2.0); // dimensionless
        const double var_t468 = (1.0 / 5.0) * var_membrane__V; // dimensionless
        const double var_t470 = exp((-12.0) - var_t468); // dimensionless
        const double var_t471 = 1.0 + var_t470; // dimensionless
        const double var_t473 = exp(var_t468 + 7.0); // dimensionless
        const double var_t474 = 1.0 + var_t473; // dimensionless
        const double var_t479 = exp(((1.0 / 200.0) * var_membrane__V) - (1.0 / 4.0)); // dimensionless
        const double var_t480 = 1.0 + var_t479; // dimensionless
        const double var_t483 = (0.10000000000000001 / var_t474) + (0.10000000000000001 / var_t480); // dimensionless
        const double var_t484 = 1.0 / var_t483; // dimensionless
        const double var_t485 = var_t471 * var_t484; // dimensionless
        const double var_t489 = (1.0 / var_t464) - var_fast_sodium_current_m_gate__m; // dimensionless
        const double var_t494 = pow(var_t483, 2.0); // dimensionless
        const double var_t496 = pow(var_t474, 2.0); // dimensionless
        const double var_t500 = pow(var_t480, 2.0); // dimensionless
        const double var_t510 = exp((0.134589502 * var_membrane__V) + 9.6298788680000005); // dimensionless
        const double var_t511 = 1.0 + var_t510; // dimensionless
        const double var_t512 = pow(var_t511, 2.0); // dimensionless
        const double var_t515 = ((1.0 / var_t512) / var_t511) * var_t510; // dimensionless
        const double var_t516 = var_membrane__V < (-40.0); // dimensionless
        const double var_t519 = exp(((-0.14705882349999999) * var_membrane__V) - 11.764705879999999); // dimensionless
        const double var_t521 = var_t516 ? (0.057000000000000002 * var_t519) : 0.0; // dimensionless
        const double var_t523 = exp(0.079000000000000001 * var_membrane__V); // dimensionless
        const double var_t526 = exp(0.34849999999999998 * var_membrane__V); // dimensionless
        const double var_t531 = exp(((-0.090090090090000005) * var_membrane__V) - 0.96036036039999995); // dimensionless
        const double var_t536 = var_t516 ? ((2.7000000000000002 * var_t523) + (310000.0 * var_t526)) : (0.77000000000000002 / (0.13 + (0.13 * var_t531))); // dimensionless
        const double var_t537 = var_t521 + var_t536; // dimensionless
        const double var_t540 = 1.0 / var_t512; // dimensionless
        const double var_t542 = var_membrane__V < (-40.0); // dimensionless
        const double var_t545 = (-40.0) < var_membrane__V; // dimensionless
        const double var_t546 = var_t542 ? ((-0.0083823529409999993) * var_t519) : ((-40.0) <= var_membrane__V) ? 0.0 : NAN; // dimensionless
        const double var_t548 = exp(0.079000000000000001 * var_membrane__V); // dimensionless
        const double var_t551 = exp(0.34849999999999998 * var_membrane__V); // dimensionless
        const double var_t556 = pow(0.13 + (0.13 * var_t531), 2.0); // dimensionless
        const double var_t560 = (var_membrane__V <= (-40.0)) ? ((0.21329999999999999 * var_t548) + (108035.0 * var_t551)) : var_t545 ? ((0.009018018018 / var_t556) * var_t531) : NAN; // dimensionless
        const double var_t565 = exp(0.24440000000000001 * var_membrane__V); // dimensionless
        const double var_t568 = exp((-0.043909999999999998) * var_membrane__V); // dimensionless
        const double var_t575 = exp((0.311 * var_membrane__V) + 24.640529999999998); // dimensionless
        const double var_t579 = var_t516 ? (((((-25428.0) * var_t565) - (6.9480000000000002e-06 * var_t568)) * (var_membrane__V + 37.780000000000001)) / (1.0 + var_t575)) : 0.0; // dimensionless
        const double var_t581 = exp((-0.01052) * var_membrane__V); // dimensionless
        const double var_t584 = exp(((-0.13780000000000001) * var_membrane__V) - 5.5312919999999997); // dimensionless
        const double var_t590 = exp(0.057000000000000002 * var_membrane__V); // dimensionless
        const double var_t592 = exp((-var_t23) - 3.2000000000000002); // dimensionless
        const double var_t597 = var_t516 ? ((0.024240000000000001 * var_t581) / (1.0 + var_t584)) : ((0.59999999999999998 * var_t590) / (1.0 + var_t592)); // dimensionless
        const double var_t598 = var_t579 + var_t597; // dimensionless
        const double var_t603 = exp(0.24440000000000001 * var_membrane__V); // dimensionless
        const double var_t606 = exp((-0.043909999999999998) * var_membrane__V); // dimensionless
        const double var_t609 = var_membrane__V + 37.780000000000001; // dimensionless
        const double var_t613 = exp((0.311 * var_membrane__V) + 24.640530009999999); // dimensionless
        const double var_t614 = 1.0 + var_t613; // dimensionless
        const double var_t615 = 1.0 / var_t614; // dimensionless
        const double var_t619 = ((-25428.0) * var_t603) - (6.9480000000000002e-06 * var_t606); // dimensionless
        const double var_t622 = pow(var_t614, 2.0); // dimensionless
        const double var_t628 = var_t542 ? (((((((-6214.6031999999996) * var_t603) + (3.0508668000000001e-07 * var_t606)) * var_t609) * var_t615) + (var_t619 * var_t615)) - ((((0.311 * var_t619) * var_t609) / var_t622) * var_t613)) : ((-40.0) <= var_membrane__V) ? 0.0 : NAN; // dimensionless
        const double var_t630 = exp((-0.01052) * var_membrane__V); // dimensionless
        const double var_t633 = exp(((-0.13780000000000001) * var_membrane__V) - 5.5312919950000001); // dimensionless
        const double var_t634 = 1.0 + var_t633; // dimensionless
        const double var_t638 = pow(var_t634, 2.0); // dimensionless
        const double var_t645 = exp(0.057000000000000002 * var_membrane__V); // dimensionless
        const double var_t648 = exp(((-0.10000000000000001) * var_membrane__V) - 3.2000000000000002); // dimensionless
        const double var_t649 = 1.0 + var_t648; // dimensionless
        const double var_t653 = pow(var_t649, 2.0); // dimensionless
        const double var_t659 = (var_membrane__V <= (-40.0)) ? ((((-0.00025500479999999997) * var_t630) / var_t634) + (((0.003340272 * var_t630) / var_t638) * var_t633)) : var_t545 ? (((0.034200000000000001 * var_t645) / var_t649) + (((0.059999999999999998 * var_t645) / var_t653) * var_t648)) : NAN; // dimensionless
        const double var_t665 = exp((-1.0666666659999999) - (0.1333333333 * var_membrane__V)); // dimensionless
        const double var_t666 = 1.0 + var_t665; // dimensionless
        const double var_t667 = pow(var_t666, 2.0); // dimensionless
        const double var_t672 = exp(((-35.0) / 13.0) - ((1.0 / 13.0) * var_membrane__V)); // dimensionless
        const double var_t673 = 1.0 + var_t672; // dimensionless
        const double var_t676 = (1.3999999999999999 / var_t673) + 0.25; // dimensionless
        const double var_t678 = exp(var_t468 + 1.0); // dimensionless
        const double var_t679 = 1.0 + var_t678; // dimensionless
        const double var_t680 = 1.0 / var_t679; // dimensionless
        const double var_t684 = exp((5.0 / 2.0) - var_t398); // dimensionless
        const double var_t685 = 1.0 + var_t684; // dimensionless
        const double var_t687 = ((1.3999999999999999 * var_t676) * var_t680) + (1.0 / var_t685); // dimensionless
        const double var_t688 = 1.0 / var_t687; // dimensionless
        const double var_t693 = pow(var_t687, 2.0); // dimensionless
        const double var_t696 = pow(var_t673, 2.0); // dimensionless
        const double var_t701 = pow(var_t679, 2.0); // dimensionless
        const double var_t706 = pow(var_t685, 2.0); // dimensionless
        const double var_t714 = exp(var_t363 + (20.0 / 7.0)); // dimensionless
        const double var_t715 = 1.0 + var_t714; // dimensionless
        const double var_t716 = pow(var_t715, 2.0); // dimensionless
        const double var_t720 = pow(var_membrane__V + 27.0, 2.0); // dimensionless
        const double var_t722 = exp(((-1.0) / 225.0) * var_t720); // dimensionless
        const double var_t725 = exp((13.0 / 10.0) - var_t370); // dimensionless
        const double var_t726 = 1.0 + var_t725; // dimensionless
        const double var_t730 = exp(var_t370 + 3.0); // dimensionless
        const double var_t731 = 1.0 + var_t730; // dimensionless
        const double var_t732 = 1.0 / var_t731; // dimensionless
        const double var_t734 = (((1102.5 * var_t722) + (200.0 / var_t726)) + (180.0 * var_t732)) + 20.0; // dimensionless
        const double var_t735 = 1.0 / var_t734; // dimensionless
        const double var_t740 = pow(var_t734, 2.0); // dimensionless
        const double var_t747 = pow(var_t726, 2.0); // dimensionless
        const double var_t751 = pow(var_t731, 2.0); // dimensionless
        const double var_t753 = (1.0 / var_t751) * var_t730; // dimensionless
        const double var_t759 = exp(var_t363 + 5.0); // dimensionless
        const double var_t760 = 1.0 + var_t759; // dimensionless
        const double var_t761 = pow(var_t760, 2.0); // dimensionless
        const double var_t765 = exp(((-1.0) / 240.0) * var_t720); // dimensionless
        const double var_t768 = exp((5.0 / 2.0) - var_t370); // dimensionless
        const double var_t769 = 1.0 + var_t768; // dimensionless
        const double var_t773 = ((562.0 * var_t765) + (31.0 / var_t769)) + (80.0 * var_t732); // dimensionless
        const double var_t774 = 1.0 / var_t773; // dimensionless
        const double var_t780 = pow(var_t773, 2.0); // dimensionless
        const double var_t787 = pow(var_t769, 2.0); // dimensionless
        const double var_t795 = pow(var_calcium_dynamics__Ca_ss, 2.0); // dimensionless
        const double var_t797 = 1.0 + (400.0 * var_t795); // dimensionless
        const double var_t798 = 1.0 / var_t797; // dimensionless
        const double var_t800 = (80.0 * var_t798) + 2.0; // dimensionless
        const double var_t801 = 1.0 / var_t800; // dimensionless
        const double var_t802 = pow(var_t797, 2.0); // dimensionless
        const double var_t804 = (1.0 / var_t802) * var_calcium_dynamics__Ca_ss; // dimensionless
        const double var_t809 = pow(var_t800, 2.0); // dimensionless
        const double var_t816 = exp(((1.0 / 5.0) * var_membrane__V) + ((1.0 / 5.0) * var_transient_outward_current_s_gate__s_gateparam)); // dimensionless
        const double var_t817 = 1.0 + var_t816; // dimensionless
        const double var_t818 = pow(var_t817, 2.0); // dimensionless
        const double var_t821 = var_membrane__V + var_transient_outward_current_s_gate__tau_s_t1V; // dimensionless
        const double var_t822 = pow(var_t821, 2.0); // dimensionless
        const double var_t823 = 1.0 / var_transient_outward_current_s_gate__tau_s_t1Vdenom; // dimensionless
        const double var_t825 = exp((-var_t822) * var_t823); // dimensionless
        const double var_t828 = exp(var_t468 - 4.0); // dimensionless
        const double var_t829 = 1.0 + var_t828; // dimensionless
        const double var_t832 = ((var_transient_outward_current_s_gate__tau_s_term1 * var_t825) + (var_transient_outward_current_s_gate__tau_s_term2 / var_t829)) + var_transient_outward_current_s_gate__tau_sconstant1; // dimensionless
        const double var_t833 = 1.0 / var_t832; // dimensionless
        const double var_t838 = pow(var_t832, 2.0); // dimensionless
        const double var_t845 = pow(var_t829, 2.0); // dimensionless
        const double var_t854 = exp((10.0 / 3.0) - var_t425); // dimensionless
        const double var_t855 = 1.0 + var_t854; // dimensionless
        const double var_t856 = pow(var_t855, 2.0); // dimensionless
        const double var_t860 = pow(40.0 + var_membrane__V, 2.0); // dimensionless
        const double var_t862 = exp(((-1.0) / 1800.0) * var_t860); // dimensionless
        const double var_t864 = (9.5 * var_t862) + 0.80000000000000004; // dimensionless
        const double var_t865 = 1.0 / var_t864; // dimensionless
        const double var_t870 = pow(var_t864, 2.0); // dimensionless
        const double var_t879 = var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c; // dimensionless
        const double var_t880 = var_calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c; // dimensionless
        const double var_t881 = pow(var_t880, 2.0); // dimensionless
        const double var_t884 = 1.0 + (var_t879 / var_t881); // dimensionless
        const double var_t885 = 1.0 / var_t884; // dimensionless
        const double var_t890 = 1.0 / var_membrane__V_c; // dimensionless
        const double var_t892 = (var_membrane__Cm * var_t890) * var_t3; // dimensionless
        const double var_t895 = pow(var_t884, 2.0); // dimensionless
        const double var_t898 = var_calcium_dynamics__V_leak * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_i); // dimensionless
        const double var_t899 = pow(var_calcium_dynamics__K_up, 2.0); // dimensionless
        const double var_t900 = pow(var_calcium_dynamics__Ca_i, 2.0); // dimensionless
        const double var_t903 = 1.0 + (var_t899 / var_t900); // dimensionless
        const double var_t905 = var_calcium_dynamics__Vmax_up / var_t903; // dimensionless
        const double var_t910 = var_calcium_dynamics__V_xfer * (var_calcium_dynamics__Ca_ss - var_calcium_dynamics__Ca_i); // dimensionless
        const double var_t912 = log(var_calcium_dynamics__Ca_o * var_t277); // dimensionless
        const double var_t923 = var_t890 * var_t3; // dimensionless
        const double var_t933 = pow(var_t903, 2.0); // dimensionless
        const double var_t941 = (-var_calcium_dynamics__V_leak) - (((((2.0 * var_calcium_dynamics__Vmax_up) / var_t933) * var_t899) / var_t900) / var_calcium_dynamics__Ca_i); // dimensionless
        const double var_t963 = var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr; // dimensionless
        const double var_t964 = var_calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr; // dimensionless
        const double var_t965 = pow(var_t964, 2.0); // dimensionless
        const double var_t968 = 1.0 + (var_t963 / var_t965); // dimensionless
        const double var_t969 = 1.0 / var_t968; // dimensionless
        const double var_t971 = pow(var_t968, 2.0); // dimensionless
        const double var_t973 = var_calcium_dynamics__V_rel * var_calcium_dynamics__k1_prime; // dimensionless
        const double var_t974 = var_calcium_dynamics__max_sr - var_calcium_dynamics__min_sr; // dimensionless
        const double var_t975 = pow(var_calcium_dynamics__EC, 2.0); // dimensionless
        const double var_t976 = pow(var_calcium_dynamics__Ca_SR, 2.0); // dimensionless
        const double var_t979 = 1.0 + (var_t975 / var_t976); // dimensionless
        const double var_t982 = var_calcium_dynamics__max_sr - (var_t974 / var_t979); // dimensionless
        const double var_t983 = 1.0 / var_t982; // dimensionless
        const double var_t984 = var_t973 * var_t983; // dimensionless
        const double var_t985 = var_t795 * var_calcium_dynamics__R_prime; // dimensionless
        const double var_t986 = var_calcium_dynamics__k1_prime * var_t983; // dimensionless
        const double var_t988 = var_calcium_dynamics__k3 + (var_t986 * var_t795); // dimensionless
        const double var_t989 = 1.0 / var_t988; // dimensionless
        const double var_t990 = var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss; // dimensionless
        const double var_t991 = var_t989 * var_t990; // dimensionless
        const double var_t1001 = pow(var_t982, 2.0); // dimensionless
        const double var_t1002 = 1.0 / var_t1001; // dimensionless
        const double var_t1007 = pow(var_t979, 2.0); // dimensionless
        const double var_t1008 = 1.0 / var_t1007; // dimensionless
        const double var_t1011 = (1.0 / var_t976) / var_calcium_dynamics__Ca_SR; // dimensionless
        const double var_t1012 = (var_t1008 * var_t975) * var_t1011; // dimensionless
        const double var_t1016 = pow(var_calcium_dynamics__k1_prime, 2.0); // dimensionless
        const double var_t1017 = var_calcium_dynamics__V_rel * var_t1016; // dimensionless
        const double var_t1019 = (1.0 / var_t1001) / var_t982; // dimensionless
        const double var_t1020 = pow(var_t795, 2.0); // dimensionless
        const double var_t1024 = pow(var_t988, 2.0); // dimensionless
        const double var_t1025 = 1.0 / var_t1024; // dimensionless
        const double var_t1026 = var_t1025 * var_t990; // dimensionless
        const double var_t1031 = var_t985 * var_t989; // dimensionless
        const double var_t1032 = var_t984 * var_t1031; // dimensionless
        const double var_t1036 = var_calcium_dynamics__Ca_ss * var_calcium_dynamics__R_prime; // dimensionless
        const double var_t1041 = var_t795 * var_calcium_dynamics__Ca_ss; // dimensionless
        const double var_t1050 = var_t983 * var_t795; // dimensionless
        const double var_t1053 = var_calcium_dynamics__Buf_ss * var_calcium_dynamics__K_buf_ss; // dimensionless
        const double var_t1054 = var_calcium_dynamics__Ca_ss + var_calcium_dynamics__K_buf_ss; // dimensionless
        const double var_t1055 = pow(var_t1054, 2.0); // dimensionless
        const double var_t1058 = 1.0 + (var_t1053 / var_t1055); // dimensionless
        const double var_t1059 = 1.0 / var_t1058; // dimensionless
        const double var_t1064 = 1.0 / var_calcium_dynamics__V_ss; // dimensionless
        const double var_t1070 = (var_t98 * var_t99) * var_t289; // dimensionless
        const double var_t1071 = var_t104 * var_t107; // dimensionless
        const double var_t1074 = var_membrane__Cm * var_t1064; // dimensionless
        const double var_t1075 = (var_t87 * var_t93) * var_t1074; // dimensionless
        const double var_t1088 = var_t1059 * var_L_type_Ca_current__g_CaL; // dimensionless
        const double var_t1093 = ((var_t156 * var_t90) * var_t93) * var_t1074; // dimensionless
        const double var_t1096 = var_t1088 * var_L_type_Ca_current_d_gate__d; // dimensionless
        const double var_t1107 = var_membrane__V_c * var_t1064; // dimensionless
        const double var_t1112 = (var_t990 * var_calcium_dynamics__V_sr) * var_t1064; // dimensionless
        const double var_t1114 = var_t975 * var_t1011; // dimensionless
        const double var_t1116 = ((var_t1112 * var_t974) * var_t1008) * var_t1114; // dimensionless
        const double var_t1125 = var_t973 * var_t1050; // dimensionless
        const double var_t1126 = var_calcium_dynamics__R_prime * var_t989; // dimensionless
        const double var_t1129 = ((var_t1125 * var_t1126) * var_calcium_dynamics__V_sr) * var_t1064; // dimensionless
        const double var_t1132 = pow(var_t1058, 2.0); // dimensionless
        const double var_t1136 = var_t1126 * var_t1112; // dimensionless
        const double var_t1174 = var_calcium_dynamics__k2_prime * var_t982; // dimensionless
        const double var_t1183 = var_t3 * var_membrane__Cm; // dimensionless
        const double var_t1187 = (var_t242 * var_t890) * var_t1183; // dimensionless
        const double var_t1212 = (var_t39 * var_t890) * var_t1183; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t216);
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((((-1.0) / 2.0) * var_t885) * ((var_calcium_background_current__g_bca - (2.0 * var_t190)) + (2.0 * var_t203))) * var_t892);
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((((1.0 / 18900.0) / var_t367) * var_t365) * var_t378) - ((((1.0 / 27000.0) * var_t382) * var_t372) * var_t377)) + (((3.2206119159999999e-05 * var_t382) * var_t373) * var_t376));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((((((-0.01240079365) / var_t395) * var_t393) * var_t405) - (((0.01488095238 * var_t409) * var_t400) * var_t404)) + (((0.01488095238 * var_t409) * var_t401) * var_t403));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * (((((1.0 / 14.0) / var_t422) * var_t420) * var_t439) - ((((1.0 / var_t421) - var_slow_time_dependent_potassium_current_Xs_gate__Xs) / var_t444) * ((((((350.0 / 3.0) / var_t429) / var_t428) * var_t435) * var_t427) - ((((280.0 / 3.0) * var_t430) / var_t452) * var_t433))));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((((0.22148394239999999 / var_t464) / var_t463) * var_t462) * var_t485) - ((((1.0 / 5.0) * var_t489) * var_t470) * var_t484)) - (((var_t489 * var_t471) / var_t494) * ((((-0.02) / var_t496) * var_t473) - ((0.00050000000000000001 / var_t500) * var_t479))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((-0.269179004) * var_t515) * var_t537) + ((var_t540 - var_fast_sodium_current_h_gate__h) * (var_t546 + var_t560)));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((-0.269179004) * var_t515) * var_t598) + ((var_t540 - var_fast_sodium_current_j_gate__j) * (var_t628 + var_t659)));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * ((((0.1333333333 / var_t667) * var_t665) * var_t688) - ((((1.0 / var_t666) - var_L_type_Ca_current_d_gate__d) / var_t693) * (((((0.15076923079999999 / var_t696) * var_t672) * var_t680) - (((0.28000000000000003 * var_t676) / var_t701) * var_t678)) + (((1.0 / 20.0) / var_t706) * var_t684))));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 7.0) / var_t716) * var_t714) * var_t735) - ((((1.0 / var_t715) - var_L_type_Ca_current_f_gate__f) / var_t740) * ((((1102.5 * ((((-2.0) / 225.0) * var_membrane__V) - (6.0 / 25.0))) * var_t722) + ((20.0 / var_t747) * var_t725)) - (18.0 * var_t753))));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * (((((-0.09571428572) / var_t761) * var_t759) * var_t774) - (((((0.67000000000000004 / var_t760) + 0.33000000000000002) - var_L_type_Ca_current_f2_gate__f2) / var_t780) * ((((562.0 * ((((-1.0) / 120.0) * var_membrane__V) - (9.0 / 40.0))) * var_t765) + (((31.0 / 10.0) / var_t787) * var_t768)) - (8.0 * var_t753))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 5.0) / var_t818) * var_t816) * var_t833) - ((((1.0 / var_t817) - var_transient_outward_current_s_gate__s) / var_t838) * ((((((-2.0) * var_transient_outward_current_s_gate__tau_s_term1) * var_t821) * var_t823) * var_t825) - ((((1.0 / 5.0) * var_transient_outward_current_s_gate__tau_s_term2) / var_t845) * var_t828))));
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * (((((1.0 / 6.0) / var_t856) * var_t854) * var_t865) - ((((9.5 * ((1.0 / var_t855) - var_transient_outward_current_r_gate__r)) / var_t870) * (((-2.0) / 45.0) - ((1.0 / 900.0) * var_membrane__V))) * var_t862));
        IJth(rJacobian, 15, 0) = var_chaste_interface__environment__fake_dt * (var_t1059 * (((((((((((-2.0) * var_t98) * var_t99) * var_membrane__F) * var_t84) * var_t90) * var_t93) * var_membrane__Cm) * var_t1064) - ((((1.0 * var_t1070) * var_t1071) * var_calcium_dynamics__Ca_ss) * var_t1075)) + (((((((4.0 * var_t1070) * var_t1071) * var_t90) * var_t114) * var_membrane__Cm) * var_t1064) * var_t87)));
        IJth(rJacobian, 17, 0) = var_chaste_interface__environment__fake_dt * (((-((((var_t152 + var_sodium_background_current__g_bna) - (3.0 * var_t147)) + (3.0 * var_t190)) - (3.0 * var_t203))) * var_t890) * var_t1183);
        IJth(rJacobian, 18, 0) = var_chaste_interface__environment__fake_dt * (((-(((((((((-var_t43) - var_t62) + var_t65) + var_t67) + var_t71) + var_t73) + var_t209) + var_t215) + (2.0 * var_t147))) * var_t890) * var_t1183);
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((var_t274 - var_t280) - var_t283) + var_t287));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t895) * (((((var_t898 - var_t905) * var_calcium_dynamics__V_sr) * var_t890) + var_t910) - ((((1.0 / 2.0) * (((var_calcium_background_current__g_bca * (var_membrane__V - (((0.5 * var_t2) * var_t3) * var_t912))) + (var_t284 * var_t282)) - ((2.0 * var_t194) * var_t189))) * var_membrane__Cm) * var_t923))) * var_t879) / var_t881) / var_t880) + (var_t885 * ((((var_t941 * var_calcium_dynamics__V_sr) * var_t890) - var_calcium_dynamics__V_xfer) - ((((1.0 / 2.0) * (((var_t280 + var_t283) - var_t287) + (2.0 * var_t274))) * var_membrane__Cm) * var_t923))));
        IJth(rJacobian, 14, 1) = var_chaste_interface__environment__fake_dt * ((-var_t969) * var_t941);
        IJth(rJacobian, 15, 1) = var_chaste_interface__environment__fake_dt * ((var_t1059 * var_calcium_dynamics__V_xfer) * var_t1107);
        IJth(rJacobian, 17, 1) = var_chaste_interface__environment__fake_dt * ((((((3.0 * var_t269) * var_t172) * var_sodium_calcium_exchanger_current__alpha) * var_t182) * var_t272) * var_t892);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) * var_t39));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (((-1.0) / 2700.0) * var_t378);
        IJth(rJacobian, 18, 2) = var_chaste_interface__environment__fake_dt * ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) * var_t1212);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_t39));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * ((-0.29761904760000002) * var_t405);
        IJth(rJacobian, 18, 3) = var_chaste_interface__environment__fake_dt * ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_t1212);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-2.0) * var_t234));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (-var_t439);
        IJth(rJacobian, 18, 4) = var_chaste_interface__environment__fake_dt * (((-2.0) * var_t234) * var_t892);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t236) * var_t151) * var_t242));
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t485);
        IJth(rJacobian, 17, 5) = var_chaste_interface__environment__fake_dt * ((((-3.0) * var_t236) * var_t151) * var_t1187);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t150) * var_fast_sodium_current_j_gate__j) * var_t242));
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (-var_t537);
        IJth(rJacobian, 17, 6) = var_chaste_interface__environment__fake_dt * (((-var_t150) * var_fast_sodium_current_j_gate__j) * var_t1187);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t150) * var_fast_sodium_current_h_gate__h) * var_t242));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t598);
        IJth(rJacobian, 17, 7) = var_chaste_interface__environment__fake_dt * (((-var_t150) * var_fast_sodium_current_h_gate__h) * var_t1187);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-4.0) * var_L_type_Ca_current__g_CaL) * var_L_type_Ca_current_f_gate__f) * var_t100) * var_t95));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t688);
        IJth(rJacobian, 15, 8) = var_chaste_interface__environment__fake_dt * (((((-2.0) * var_t1088) * var_L_type_Ca_current_f_gate__f) * var_t100) * var_t1093);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t74) * var_t100) * var_t95));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t735);
        IJth(rJacobian, 15, 9) = var_chaste_interface__environment__fake_dt * ((((-2.0) * var_t1096) * var_t100) * var_t1093);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t74) * var_t258) * var_t95));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (-var_t774);
        IJth(rJacobian, 15, 10) = var_chaste_interface__environment__fake_dt * ((((-2.0) * var_t1096) * var_t258) * var_t1093);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t74) * var_t262) * var_t95));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t801);
        IJth(rJacobian, 15, 11) = var_chaste_interface__environment__fake_dt * ((((-2.0) * var_t1096) * var_t262) * var_t1093);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t266));
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (-var_t833);
        IJth(rJacobian, 18, 12) = var_chaste_interface__environment__fake_dt * ((-var_t266) * var_t892);
        IJth(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t268));
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (-var_t865);
        IJth(rJacobian, 18, 13) = var_chaste_interface__environment__fake_dt * ((-var_t268) * var_t892);
        IJth(rJacobian, 1, 14) = var_chaste_interface__environment__fake_dt * (((var_t885 * var_calcium_dynamics__V_leak) * var_calcium_dynamics__V_sr) * var_t890);
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t971) * ((var_t905 - ((var_t984 * var_t985) * var_t991)) - var_t898)) * var_t963) / var_t965) / var_t964) + (var_t969 * (((((((((((-2.0) * var_t973) * var_t1002) * var_t795) * var_calcium_dynamics__R_prime) * var_t991) * var_t974) * var_t1012) + (((((((2.0 * var_t1017) * var_t1019) * var_t1020) * var_calcium_dynamics__R_prime) * var_t1026) * var_t974) * var_t1012)) - var_t1032) - var_calcium_dynamics__V_leak)));
        IJth(rJacobian, 15, 14) = var_chaste_interface__environment__fake_dt * (var_t1059 * ((((((2.0 * var_t973) * var_t1002) * var_t1031) * var_t1116) - ((((((2.0 * var_t1017) * var_t1019) * var_t1020) * var_calcium_dynamics__R_prime) * var_t1025) * var_t1116)) + var_t1129));
        IJth(rJacobian, 16, 14) = var_chaste_interface__environment__fake_dt * (((((2.0 * var_calcium_dynamics__k2_prime) * var_t974) * var_t1008) * var_t1114) * var_t1036);
        IJth(rJacobian, 0, 15) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-1.0) * var_t77) * var_t289) * var_t79) * var_t81) * var_t87) * var_t93));
        IJth(rJacobian, 1, 15) = var_chaste_interface__environment__fake_dt * (var_t885 * var_calcium_dynamics__V_xfer);
        IJth(rJacobian, 11, 15) = var_chaste_interface__environment__fake_dt * ((((-480.0) * var_t804) * var_t801) + (((64000.0 * (((0.59999999999999998 * var_t798) + 0.40000000000000002) - var_L_type_Ca_current_fCass_gate__fCass)) / var_t809) * var_t804));
        IJth(rJacobian, 14, 15) = var_chaste_interface__environment__fake_dt * (var_t969 * ((((((-2.0) * var_t984) * var_t1036) * var_t991) + (((((2.0 * var_t1017) * var_t1002) * var_t1041) * var_calcium_dynamics__R_prime) * var_t1026)) + var_t1032));
        IJth(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t1132) * (((((-2.0) * var_t101) * var_t1093) + (var_t1125 * var_t1136)) - (var_t910 * var_t1107))) * var_t1053) / var_t1055) / var_t1054) + (var_t1059 * ((((((((-0.5) * var_t101) * var_t156) * var_t1075) + ((((2.0 * var_t973) * var_t983) * var_calcium_dynamics__Ca_ss) * var_t1136)) - ((((((2.0 * var_t1017) * var_t1002) * var_t1041) * var_calcium_dynamics__R_prime) * var_t1025) * var_t1112)) - var_t1129) - ((var_calcium_dynamics__V_xfer * var_membrane__V_c) * var_t1064))));
        IJth(rJacobian, 16, 15) = var_chaste_interface__environment__fake_dt * ((-var_t1174) * var_calcium_dynamics__R_prime);
        IJth(rJacobian, 14, 16) = var_chaste_interface__environment__fake_dt * (((((-var_t969) * var_calcium_dynamics__V_rel) * var_calcium_dynamics__k1_prime) * var_t1050) * var_t991);
        IJth(rJacobian, 15, 16) = var_chaste_interface__environment__fake_dt * (((((var_t1059 * var_calcium_dynamics__V_rel) * var_t986) * var_t795) * var_t989) * var_t1112);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * (((-var_t1174) * var_calcium_dynamics__Ca_ss) - var_calcium_dynamics__k4);
        IJth(rJacobian, 0, 17) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t299) - var_t303) + var_t308) - var_t311) - var_t314) - (3.0 * var_t319)));
        IJth(rJacobian, 1, 17) = var_chaste_interface__environment__fake_dt * (((((((3.0 * var_t885) * var_sodium_calcium_exchanger_current__K_NaCa) * var_t158) * var_t160) * var_calcium_dynamics__Ca_o) * var_t189) * var_t892);
        IJth(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * (((-((((var_t311 + var_t314) + (3.0 * var_t303)) - (3.0 * var_t308)) + (9.0 * var_t319))) * var_t890) * var_t1183);
        IJth(rJacobian, 18, 17) = var_chaste_interface__environment__fake_dt * (((-((var_t299 - (2.0 * var_t303)) + (2.0 * var_t308))) * var_t890) * var_t1183);
        IJth(rJacobian, 0, 18) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t362);
        IJth(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * ((var_t362 * var_t890) * var_t1183);
    }
    
template<>
void OdeSystemInformation<Dynamicten_tusscher_model_2006_epiFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "tentusscher_panfilov_2006_epi";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.23);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000126);

    // rY[2]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00621);

    // rY[3]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4712);

    // rY[4]:
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0095);

    // rY[5]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00172);

    // rY[6]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7444);

    // rY[7]:
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7045);

    // rY[8]:
    this->mVariableNames.push_back("L_type_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.373e-5);

    // rY[9]:
    this->mVariableNames.push_back("L_type_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7888);

    // rY[10]:
    this->mVariableNames.push_back("L_type_Ca_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9755);

    // rY[11]:
    this->mVariableNames.push_back("L_type_Ca_current_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9953);

    // rY[12]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999998);

    // rY[13]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.42e-8);

    // rY[14]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.64);

    // rY[15]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00036);

    // rY[16]:
    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9073);

    // rY[17]:
    this->mVariableNames.push_back("sodium_dynamics__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.604);

    // rY[18]:
    this->mVariableNames.push_back("potassium_dynamics__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.89);

    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.001;
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicten_tusscher_model_2006_epiFromCellMLCvode)

#endif // CHASTE_CVODE
