#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: demir_model_1994
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:08:46 2020
//! 
//! <autogenerated>

#include "demir_model_1994.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    double Dynamicdemir_model_1994FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicdemir_model_1994FromCellMLCvode::Dynamicdemir_model_1994FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                27,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicdemir_model_1994FromCellMLCvode>::Instance();
        Init();

        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicdemir_model_1994FromCellMLCvode::~Dynamicdemir_model_1994FromCellMLCvode()
    {
    }
    
    double Dynamicdemir_model_1994FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.787018e-4
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 1.407347e2
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__Cm = 5.5000000000000002e-05; // microF
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_mole
        const double var_reversal_potentials__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_c / var_reversal_potentials__Na_i); // millivolt
        const double var_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
        const double var_sodium_current__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current__T = var_membrane__T; // kelvin
        const double var_sodium_current__R = var_membrane__R; // joule_per_kilomole_kelvin
        const double var_sodium_current__P_Na = 0.0034399999999999999; // mul_per_second
        const double var_sodium_current__i_Na = (((var_sodium_current__P_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h1 * var_sodium_current__h2 * var_sodium_current__Na_c * var_sodium_current__V * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0); // nanoA
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T = 0.02521; // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L = 0.021149999999999999; // microS
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_d_gate__V + 14.1) / (-6.0))); // dimensionless
        const double var_L_type_Ca_channel__d_L_infinity = var_L_type_Ca_channel_d_gate__d_L_infinity; // dimensionless
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.095000000000000001 * var_L_type_Ca_channel__d_L_infinity)) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
        const double var_delayed_rectifying_potassium_current__P_a = var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a; // dimensionless
        const double var_cleft_space_equations__K_b = 5.4000000000000004; // millimolar
        const double var_delayed_rectifying_potassium_current__K_b = var_cleft_space_equations__K_b; // millimolar
        const double var_delayed_rectifying_potassium_current__g_K = 0.0069300000000000004 * pow(var_delayed_rectifying_potassium_current__K_b / 1.0, 0.58999999999999997); // microS
        const double var_delayed_rectifying_potassium_current__P_i = var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i; // millimolar
        const double var_reversal_potentials__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_c / var_reversal_potentials__K_i); // millivolt
        const double var_delayed_rectifying_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_delayed_rectifying_potassium_current__i_K = var_delayed_rectifying_potassium_current__g_K * var_delayed_rectifying_potassium_current__P_a * var_delayed_rectifying_potassium_current__P_i * (var_delayed_rectifying_potassium_current__V - var_delayed_rectifying_potassium_current__E_K); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_Na = 0.0067478; // microS
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * pow(var_hyperpolarisation_activated_current__y, 2.0) * (var_hyperpolarisation_activated_current__V - 75.0); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_K = 0.0128821; // microS
        const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * pow(var_hyperpolarisation_activated_current__y, 2.0) * (var_hyperpolarisation_activated_current__V + 85.0); // nanoA
        const double var_hyperpolarisation_activated_current__i_f = var_hyperpolarisation_activated_current__i_f_Na + var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_linear_background_current__g_B_K = 6.9400000000000006e-05; // microS
        const double var_linear_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_linear_background_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_linear_background_current__i_B_K = var_linear_background_current__g_B_K * (var_linear_background_current__V - var_linear_background_current__E_K); // nanoA
        const double var_linear_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_linear_background_current__g_B_Na = 0.00016000000000000001; // microS
        const double var_linear_background_current__i_B_Na = var_linear_background_current__g_B_Na * (var_linear_background_current__V - var_linear_background_current__E_Na); // nanoA
        const double var_linear_background_current__g_B_Ca = 3.6399999999999997e-05; // microS
        const double var_reversal_potentials__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_c / var_reversal_potentials__Ca_i); // millivolt
        const double var_linear_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_linear_background_current__i_B_Ca = var_linear_background_current__g_B_Ca * (var_linear_background_current__V - var_linear_background_current__E_Ca); // nanoA
        const double var_linear_background_current__i_B = var_linear_background_current__i_B_Na + var_linear_background_current__i_B_Ca + var_linear_background_current__i_B_K; // nanoA
        const double var_sodium_potassium_pump__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_sodium_potassium_pump__K_m_Na = 5.46; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump__i_NaK_max = 0.21920000000000001; // nanoA
        const double var_sodium_potassium_pump__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_sodium_potassium_pump__i_NaK = (var_sodium_potassium_pump__i_NaK_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_c / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_c), 2.0) * 1.6000000000000001) / (1.5 + exp((var_sodium_potassium_pump__V + 60.0) / (-40.0))); // nanoA
        const double var_sodium_calcium_pump__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_sodium_calcium_pump__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_sodium_calcium_pump__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_pump__K_NaCa = 1.2480000000000001e-05; // nanoA
        const double var_sodium_calcium_pump__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_sodium_calcium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_pump__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_sodium_calcium_pump__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_pump__i_NaCa = (var_sodium_calcium_pump__K_NaCa * ((pow(var_sodium_calcium_pump__Na_i, 3.0) * var_sodium_calcium_pump__Ca_c * exp(0.037429999999999998 * var_sodium_calcium_pump__V * var_sodium_calcium_pump__gamma)) - (pow(var_sodium_calcium_pump__Na_c, 3.0) * var_sodium_calcium_pump__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_pump__V * (var_sodium_calcium_pump__gamma - 1.0))))) / (1.0 + (var_sodium_calcium_pump__d_NaCa * ((var_sodium_calcium_pump__Ca_i * pow(var_sodium_calcium_pump__Na_c, 3.0)) + (var_sodium_calcium_pump__Ca_c * pow(var_sodium_calcium_pump__Na_i, 3.0))))); // nanoA
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_calcium_pump_current__i_Ca_P_max = 0.02869; // nanoA
        const double var_calcium_pump_current__i_Ca_P = (var_calcium_pump_current__i_Ca_P_max * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + 0.00040000000000000002); // nanoA
        const double var_chaste_interface__sodium_current__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_chaste_interface__T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_chaste_interface__linear_background_current__i_B = var_linear_background_current__i_B; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f = var_hyperpolarisation_activated_current__i_f; // nanoA
        const double var_chaste_interface__membrane__Cm = var_membrane__Cm; // microF
        const double var_chaste_interface__sodium_potassium_pump__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_chaste_interface__sodium_calcium_pump__i_NaCa = var_sodium_calcium_pump__i_NaCa; // nanoA
        const double var_chaste_interface__delayed_rectifying_potassium_current__i_K = var_delayed_rectifying_potassium_current__i_K; // nanoA
        const double var_chaste_interface__L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_chaste_interface__calcium_pump_current__i_Ca_P = var_calcium_pump_current__i_Ca_P; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_chaste_interface__sodium_current__i_Na + var_chaste_interface__T_type_Ca_channel__i_Ca_T + var_chaste_interface__L_type_Ca_channel__i_Ca_L + var_chaste_interface__delayed_rectifying_potassium_current__i_K + var_chaste_interface__hyperpolarisation_activated_current__i_f + var_chaste_interface__linear_background_current__i_B + var_chaste_interface__sodium_potassium_pump__i_NaK + var_chaste_interface__sodium_calcium_pump__i_NaCa + var_chaste_interface__calcium_pump_current__i_Ca_P) / var_chaste_interface__membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicdemir_model_1994FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.787018e-4
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 1.407347e2
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.1411678
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.07331396
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7618549
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2097049
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_up = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 16.95311
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 16.85024
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9528726
        double var_chaste_interface__SR_Ca_uptake_and_release__F1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.1133251
        double var_chaste_interface__SR_Ca_uptake_and_release__F2 = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0007594214
        double var_chaste_interface__SR_Ca_uptake_and_release__F3 = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.8859153
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_mole
        const double var_reversal_potentials__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_c / var_reversal_potentials__Na_i); // millivolt
        const double var_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
        const double var_sodium_current__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current__T = var_membrane__T; // kelvin
        const double var_sodium_current__R = var_membrane__R; // joule_per_kilomole_kelvin
        const double var_sodium_current__P_Na = 0.0034399999999999999; // mul_per_second
        const double var_sodium_current__i_Na = (((var_sodium_current__P_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h1 * var_sodium_current__h2 * var_sodium_current__Na_c * var_sodium_current__V * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0); // nanoA
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T = 0.02521; // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L = 0.021149999999999999; // microS
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_d_gate__V + 14.1) / (-6.0))); // dimensionless
        const double var_L_type_Ca_channel__d_L_infinity = var_L_type_Ca_channel_d_gate__d_L_infinity; // dimensionless
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.095000000000000001 * var_L_type_Ca_channel__d_L_infinity)) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
        const double var_delayed_rectifying_potassium_current__P_a = var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a; // dimensionless
        const double var_cleft_space_equations__K_b = 5.4000000000000004; // millimolar
        const double var_delayed_rectifying_potassium_current__K_b = var_cleft_space_equations__K_b; // millimolar
        const double var_delayed_rectifying_potassium_current__g_K = 0.0069300000000000004 * pow(var_delayed_rectifying_potassium_current__K_b / 1.0, 0.58999999999999997); // microS
        const double var_delayed_rectifying_potassium_current__P_i = var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i; // millimolar
        const double var_reversal_potentials__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_c / var_reversal_potentials__K_i); // millivolt
        const double var_delayed_rectifying_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_delayed_rectifying_potassium_current__i_K = var_delayed_rectifying_potassium_current__g_K * var_delayed_rectifying_potassium_current__P_a * var_delayed_rectifying_potassium_current__P_i * (var_delayed_rectifying_potassium_current__V - var_delayed_rectifying_potassium_current__E_K); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_Na = 0.0067478; // microS
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * pow(var_hyperpolarisation_activated_current__y, 2.0) * (var_hyperpolarisation_activated_current__V - 75.0); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_K = 0.0128821; // microS
        const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * pow(var_hyperpolarisation_activated_current__y, 2.0) * (var_hyperpolarisation_activated_current__V + 85.0); // nanoA
        const double var_linear_background_current__g_B_K = 6.9400000000000006e-05; // microS
        const double var_linear_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_linear_background_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_linear_background_current__i_B_K = var_linear_background_current__g_B_K * (var_linear_background_current__V - var_linear_background_current__E_K); // nanoA
        const double var_linear_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_linear_background_current__g_B_Na = 0.00016000000000000001; // microS
        const double var_linear_background_current__i_B_Na = var_linear_background_current__g_B_Na * (var_linear_background_current__V - var_linear_background_current__E_Na); // nanoA
        const double var_linear_background_current__g_B_Ca = 3.6399999999999997e-05; // microS
        const double var_reversal_potentials__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_c / var_reversal_potentials__Ca_i); // millivolt
        const double var_linear_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_linear_background_current__i_B_Ca = var_linear_background_current__g_B_Ca * (var_linear_background_current__V - var_linear_background_current__E_Ca); // nanoA
        const double var_sodium_potassium_pump__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_sodium_potassium_pump__K_m_Na = 5.46; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump__i_NaK_max = 0.21920000000000001; // nanoA
        const double var_sodium_potassium_pump__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_sodium_potassium_pump__i_NaK = (var_sodium_potassium_pump__i_NaK_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_c / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_c), 2.0) * 1.6000000000000001) / (1.5 + exp((var_sodium_potassium_pump__V + 60.0) / (-40.0))); // nanoA
        const double var_sodium_calcium_pump__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_sodium_calcium_pump__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_sodium_calcium_pump__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_pump__K_NaCa = 1.2480000000000001e-05; // nanoA
        const double var_sodium_calcium_pump__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_sodium_calcium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_pump__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_sodium_calcium_pump__gamma = 0.5; // dimensionless
        const double var_sodium_calcium_pump__i_NaCa = (var_sodium_calcium_pump__K_NaCa * ((pow(var_sodium_calcium_pump__Na_i, 3.0) * var_sodium_calcium_pump__Ca_c * exp(0.037429999999999998 * var_sodium_calcium_pump__V * var_sodium_calcium_pump__gamma)) - (pow(var_sodium_calcium_pump__Na_c, 3.0) * var_sodium_calcium_pump__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_pump__V * (var_sodium_calcium_pump__gamma - 1.0))))) / (1.0 + (var_sodium_calcium_pump__d_NaCa * ((var_sodium_calcium_pump__Ca_i * pow(var_sodium_calcium_pump__Na_c, 3.0)) + (var_sodium_calcium_pump__Ca_c * pow(var_sodium_calcium_pump__Na_i, 3.0))))); // nanoA
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_calcium_pump_current__i_Ca_P_max = 0.02869; // nanoA
        const double var_calcium_pump_current__i_Ca_P = (var_calcium_pump_current__i_Ca_P_max * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + 0.00040000000000000002); // nanoA
        const double var_sodium_current_m_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_m_gate__alpha_m = ((-824.0) * (var_sodium_current_m_gate__V + 51.899999999999999)) / (exp((var_sodium_current_m_gate__V + 51.899999999999999) / (-8.9000000000000004)) - 1.0); // per_second
        const double var_sodium_current_m_gate__beta_m = 32960.0 * exp((var_sodium_current_m_gate__V + 51.899999999999999) / (-8.9000000000000004)); // per_second
        const double var_sodium_current_m_gate__m_infinity = var_sodium_current_m_gate__alpha_m / (var_sodium_current_m_gate__alpha_m + var_sodium_current_m_gate__beta_m); // dimensionless
        const double var_sodium_current_m_gate__tau_m = (1.0 / (var_sodium_current_m_gate__alpha_m + var_sodium_current_m_gate__beta_m)) + 1.5e-05; // second
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_sodium_current_m_gate__d_m_d_environment__time = (var_sodium_current_m_gate__m_infinity - var_sodium_current_m_gate__m) / var_sodium_current_m_gate__tau_m; // per_second
        const double var_sodium_current__sodium_current_m_gate__d_m_d_environment__time = var_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_h_gate__beta_h1 = 12360.0 / ((320.0 * exp((var_sodium_current_h_gate__V + 101.3) / (-12.6))) + 1.0); // per_second
        const double var_sodium_current_h_gate__alpha_h1 = 165.0 * exp((var_sodium_current_h_gate__V + 101.3) / (-12.6)); // per_second
        const double var_sodium_current_h_gate__h1_infinity = var_sodium_current_h_gate__alpha_h1 / (var_sodium_current_h_gate__alpha_h1 + var_sodium_current_h_gate__beta_h1); // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = 1.0 / (var_sodium_current_h_gate__alpha_h1 + var_sodium_current_h_gate__beta_h1); // second
        const double var_sodium_current_h_gate__d_h1_d_environment__time = (var_sodium_current_h_gate__h1_infinity - var_sodium_current_h_gate__h1) / var_sodium_current_h_gate__tau_h1; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time = var_sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_sodium_current_h_gate__tau_h2 = 20.0 * var_sodium_current_h_gate__tau_h1; // second
        const double var_sodium_current_h_gate__h2_infinity = var_sodium_current_h_gate__h1_infinity; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current_h_gate__d_h2_d_environment__time = (var_sodium_current_h_gate__h2_infinity - var_sodium_current_h_gate__h2) / var_sodium_current_h_gate__tau_h2; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time = var_sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_L_type_Ca_channel_d_gate__beta_d_L = (11.43 * (var_L_type_Ca_channel_d_gate__V - 5.0)) / (exp(0.40000000000000002 * (var_L_type_Ca_channel_d_gate__V - 5.0)) - 1.0); // per_second
        const double var_L_type_Ca_channel_d_gate__alpha_d_L = (((-28.390000000000001) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((var_L_type_Ca_channel_d_gate__V + 35.0) / (-2.5)) - 1.0)) + (((-84.900000000000006) * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0)); // per_second
        const double var_L_type_Ca_channel_d_gate__tau_d_L = 1.0 / (var_L_type_Ca_channel_d_gate__alpha_d_L + var_L_type_Ca_channel_d_gate__beta_d_L); // second
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time = (var_L_type_Ca_channel_d_gate__d_L_infinity - var_L_type_Ca_channel_d_gate__d_L) / var_L_type_Ca_channel_d_gate__tau_d_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_L_type_Ca_channel_f_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_f_gate__alpha_f_L = (3.75 * (var_L_type_Ca_channel_f_gate__V + 28.0)) / (exp((var_L_type_Ca_channel_f_gate__V + 28.0) / 4.0) - 1.0); // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f_L = 30.0 / (1.0 + exp((var_L_type_Ca_channel_f_gate__V + 28.0) / (-4.0))); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f_L = 1.0 / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L); // second
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_f_gate__V + 30.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time = (var_L_type_Ca_channel_f_gate__f_L_infinity - var_L_type_Ca_channel_f_gate__f_L) / var_L_type_Ca_channel_f_gate__tau_f_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_T_type_Ca_channel_d_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_d_gate__beta_d_T = 1068.0 * exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / (-30.0)); // per_second
        const double var_T_type_Ca_channel_d_gate__alpha_d_T = 1068.0 * exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__tau_d_T = 1.0 / (var_T_type_Ca_channel_d_gate__alpha_d_T + var_T_type_Ca_channel_d_gate__beta_d_T); // second
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T_infinity = 1.0 / (1.0 + exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / (-6.0))); // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time = (var_T_type_Ca_channel_d_gate__d_T_infinity - var_T_type_Ca_channel_d_gate__d_T) / var_T_type_Ca_channel_d_gate__tau_d_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_T_type_Ca_channel_f_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_f_gate__alpha_f_T = 15.300000000000001 * exp((var_T_type_Ca_channel_f_gate__V + 61.700000000000003) / (-83.299999999999997)); // per_second
        const double var_T_type_Ca_channel_f_gate__beta_f_T = 15.0 * exp((var_T_type_Ca_channel_f_gate__V + 61.700000000000003) / 15.380000000000001); // per_second
        const double var_T_type_Ca_channel_f_gate__tau_f_T = 1.0 / (var_T_type_Ca_channel_f_gate__alpha_f_T + var_T_type_Ca_channel_f_gate__beta_f_T); // second
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T_infinity = 1.0 / (1.0 + exp((var_T_type_Ca_channel_f_gate__V + 61.700000000000003) / 5.5999999999999996)); // dimensionless
        const double var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time = (var_T_type_Ca_channel_f_gate__f_T_infinity - var_T_type_Ca_channel_f_gate__f_T) / var_T_type_Ca_channel_f_gate__tau_f_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_delayed_rectifying_potassium_current_P_a_gate__V = var_delayed_rectifying_potassium_current__V; // millivolt
        const double var_delayed_rectifying_potassium_current_P_a_gate__P_a_infinity = 1.0 / (1.0 + exp((var_delayed_rectifying_potassium_current_P_a_gate__V + 5.0999999999999996) / (-7.4000000000000004))); // dimensionless
        const double var_delayed_rectifying_potassium_current_P_a_gate__tau_P_a = 1.0 / ((17.0 * exp(0.039800000000000002 * var_delayed_rectifying_potassium_current_P_a_gate__V)) + (2.1099999999999999 * exp((-0.050999999999999997) * var_delayed_rectifying_potassium_current_P_a_gate__V))); // second
        const double var_delayed_rectifying_potassium_current_P_a_gate__P_a = var_delayed_rectifying_potassium_current__P_a; // dimensionless
        const double var_delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time = (var_delayed_rectifying_potassium_current_P_a_gate__P_a_infinity - var_delayed_rectifying_potassium_current_P_a_gate__P_a) / var_delayed_rectifying_potassium_current_P_a_gate__tau_P_a; // per_second
        const double var_delayed_rectifying_potassium_current__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time = var_delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time; // per_second
        const double var_delayed_rectifying_potassium_current_P_i_gate__V = var_delayed_rectifying_potassium_current__V; // millivolt
        const double var_delayed_rectifying_potassium_current_P_i_gate__alpha_P_i = 100.0 * exp((-0.0183) * var_delayed_rectifying_potassium_current_P_i_gate__V); // per_second
        const double var_delayed_rectifying_potassium_current_P_i_gate__P_i = var_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_delayed_rectifying_potassium_current_P_i_gate__beta_P_i = 656.0 * exp(0.0094199999999999996 * var_delayed_rectifying_potassium_current_P_i_gate__V); // per_second
        const double var_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = (var_delayed_rectifying_potassium_current_P_i_gate__alpha_P_i * (1.0 - var_delayed_rectifying_potassium_current_P_i_gate__P_i)) - (var_delayed_rectifying_potassium_current_P_i_gate__beta_P_i * var_delayed_rectifying_potassium_current_P_i_gate__P_i); // per_second
        const double var_delayed_rectifying_potassium_current__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = var_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_hyperpolarisation_activated_current_y_gate__V = var_hyperpolarisation_activated_current__V; // millivolt
        const double var_hyperpolarisation_activated_current_y_gate__tau_y = 1.0 / ((1.6483000000000001 * exp((var_hyperpolarisation_activated_current_y_gate__V + 54.060000000000002) / (-24.329999999999998))) + (14.01055 / (0.69999999999999996 + exp((var_hyperpolarisation_activated_current_y_gate__V + 60.0) / (-5.5))))); // second
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__y_infinity = 1.0 / (1.0 + exp((var_hyperpolarisation_activated_current_y_gate__V + 72.200000000000003) / 9.0)); // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = (var_hyperpolarisation_activated_current_y_gate__y_infinity - var_hyperpolarisation_activated_current_y_gate__y) / var_hyperpolarisation_activated_current_y_gate__tau_y; // per_second
        const double var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_intracellular_concentrations_and_buffer_equations__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Calmod = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__phi_C = (129000.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i * (1.0 - var_intracellular_concentrations_and_buffer_equations__Ca_Calmod)) - (307.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Calmod); // per_second
        const double var_intracellular_concentrations_and_buffer_equations__phi_TC = (50500.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i * (1.0 - var_intracellular_concentrations_and_buffer_equations__Ca_Trop)) - (252.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Trop); // per_second
        const double var_intracellular_concentrations_and_buffer_equations__phi_TMgC = (129000.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i * (1.0 - (var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop + var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop))) - (4.25 * var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop); // per_second
        const double var_intracellular_concentrations_and_buffer_equations__Mg_i = 2.5; // millimolar
        const double var_intracellular_concentrations_and_buffer_equations__phi_TMgM = (1290.0 * var_intracellular_concentrations_and_buffer_equations__Mg_i * (1.0 - (var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop + var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop))) - (429.0 * var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop); // per_second
        const double var_intracellular_concentrations_and_buffer_equations__F_C = 0.089999999999999997 * var_intracellular_concentrations_and_buffer_equations__phi_C; // millimolar_per_second
        const double var_intracellular_concentrations_and_buffer_equations__F_TMgC = 0.062 * var_intracellular_concentrations_and_buffer_equations__phi_TMgC; // millimolar_per_second
        const double var_intracellular_concentrations_and_buffer_equations__F_TC = 0.031 * var_intracellular_concentrations_and_buffer_equations__phi_TC; // millimolar_per_second
        const double var_intracellular_concentrations_and_buffer_equations__phi_B = var_intracellular_concentrations_and_buffer_equations__F_C + var_intracellular_concentrations_and_buffer_equations__F_TC + var_intracellular_concentrations_and_buffer_equations__F_TMgC; // millimolar_per_second
        const double var_cleft_space_equations__Vol = 3.4970000000000001e-06; // microLitre
        const double var_intracellular_concentrations_and_buffer_equations__Vol = var_cleft_space_equations__Vol; // microLitre
        const double var_intracellular_concentrations_and_buffer_equations__V_i = 0.46500000000000002 * var_intracellular_concentrations_and_buffer_equations__Vol; // microLitre
        const double var_intracellular_concentrations_and_buffer_equations__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_NaCa = var_sodium_calcium_pump__i_NaCa; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_B_Na = var_linear_background_current__i_B_Na; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_K = var_delayed_rectifying_potassium_current__i_K; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_B_K = var_linear_background_current__i_B_K; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_Ca_P = var_calcium_pump_current__i_Ca_P; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_B_Ca = var_linear_background_current__i_B_Ca; // nanoA
        const double var_SR_Ca_uptake_and_release__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_SR_Ca_uptake_and_release__Ca_up = var_chaste_interface__SR_Ca_uptake_and_release__Ca_up; // millimolar
        const double var_SR_Ca_uptake_and_release__alpha_up = 0.080000000000000002; // nanoA
        const double var_SR_Ca_uptake_and_release__beta_up = 0.071999999999999995; // nanoA
        const double var_SR_Ca_uptake_and_release__k_xcs = 0.90000000000000002; // dimensionless
        const double var_SR_Ca_uptake_and_release__k_SRCa = 22.0; // millimolar
        const double var_SR_Ca_uptake_and_release__k_cyca = 5.0000000000000002e-05; // millimolar
        const double var_SR_Ca_uptake_and_release__K1 = (var_SR_Ca_uptake_and_release__k_cyca * var_SR_Ca_uptake_and_release__k_xcs) / var_SR_Ca_uptake_and_release__k_SRCa; // dimensionless
        const double var_SR_Ca_uptake_and_release__K2 = var_SR_Ca_uptake_and_release__Ca_i + (var_SR_Ca_uptake_and_release__Ca_up * var_SR_Ca_uptake_and_release__K1) + (var_SR_Ca_uptake_and_release__k_cyca * var_SR_Ca_uptake_and_release__k_xcs) + var_SR_Ca_uptake_and_release__k_cyca; // millimolar
        const double var_SR_Ca_uptake_and_release__i_up = ((var_SR_Ca_uptake_and_release__alpha_up * var_SR_Ca_uptake_and_release__Ca_i) - (var_SR_Ca_uptake_and_release__beta_up * var_SR_Ca_uptake_and_release__Ca_up * var_SR_Ca_uptake_and_release__K1)) / var_SR_Ca_uptake_and_release__K2; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_up = var_SR_Ca_uptake_and_release__i_up; // nanoA
        const double var_SR_Ca_uptake_and_release__F2 = var_chaste_interface__SR_Ca_uptake_and_release__F2; // dimensionless
        const double var_SR_Ca_uptake_and_release__alpha_rel = 0.5; // nanoA_per_millimolar
        const double var_SR_Ca_uptake_and_release__Ca_rel = var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel; // millimolar
        const double var_SR_Ca_uptake_and_release__i_rel = var_SR_Ca_uptake_and_release__alpha_rel * pow(var_SR_Ca_uptake_and_release__F2 / (var_SR_Ca_uptake_and_release__F2 + 0.25), 2.0) * var_SR_Ca_uptake_and_release__Ca_rel; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__i_rel = var_SR_Ca_uptake_and_release__i_rel; // nanoA
        const double var_intracellular_concentrations_and_buffer_equations__F = var_membrane__F; // coulomb_per_mole
        const double var_intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time = ((((2.0 * var_intracellular_concentrations_and_buffer_equations__i_NaCa) + var_intracellular_concentrations_and_buffer_equations__i_rel) - (var_intracellular_concentrations_and_buffer_equations__i_Ca_L + var_intracellular_concentrations_and_buffer_equations__i_Ca_T + var_intracellular_concentrations_and_buffer_equations__i_Ca_P + var_intracellular_concentrations_and_buffer_equations__i_B_Ca + var_intracellular_concentrations_and_buffer_equations__i_up)) / (2.0 * var_intracellular_concentrations_and_buffer_equations__V_i * var_intracellular_concentrations_and_buffer_equations__F)) - var_intracellular_concentrations_and_buffer_equations__phi_B; // 'millimole per litre per second'
        const double var_intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time = (-((3.0 * var_intracellular_concentrations_and_buffer_equations__i_NaK) + (3.0 * var_intracellular_concentrations_and_buffer_equations__i_NaCa) + var_intracellular_concentrations_and_buffer_equations__i_B_Na + var_intracellular_concentrations_and_buffer_equations__i_f_Na + var_intracellular_concentrations_and_buffer_equations__i_Na)) / (var_intracellular_concentrations_and_buffer_equations__F * var_intracellular_concentrations_and_buffer_equations__V_i); // 'millimole per litre per second'
        const double var_intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time = ((2.0 * var_intracellular_concentrations_and_buffer_equations__i_NaK) - (var_intracellular_concentrations_and_buffer_equations__i_K + var_intracellular_concentrations_and_buffer_equations__i_f_K + var_intracellular_concentrations_and_buffer_equations__i_B_K)) / (var_intracellular_concentrations_and_buffer_equations__F * var_intracellular_concentrations_and_buffer_equations__V_i); // 'millimole per litre per second'
        const double var_intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time = var_intracellular_concentrations_and_buffer_equations__phi_C; // per_second
        const double var_intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time = var_intracellular_concentrations_and_buffer_equations__phi_TC; // per_second
        const double var_intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time = var_intracellular_concentrations_and_buffer_equations__phi_TMgC; // per_second
        const double var_intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time = var_intracellular_concentrations_and_buffer_equations__phi_TMgM; // per_second
        const double var_cleft_space_equations__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_cleft_space_equations__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_cleft_space_equations__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_cleft_space_equations__Na_b = 140.0; // millimolar
        const double var_cleft_space_equations__Ca_b = 2.0; // millimolar
        const double var_cleft_space_equations__V_c = 0.13600000000000001 * var_cleft_space_equations__Vol; // microLitre
        const double var_cleft_space_equations__tau_p = 0.01; // second
        const double var_cleft_space_equations__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
        const double var_cleft_space_equations__i_NaCa = var_sodium_calcium_pump__i_NaCa; // nanoA
        const double var_cleft_space_equations__i_B_Na = var_linear_background_current__i_B_Na; // nanoA
        const double var_cleft_space_equations__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
        const double var_cleft_space_equations__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_cleft_space_equations__i_K = var_delayed_rectifying_potassium_current__i_K; // nanoA
        const double var_cleft_space_equations__i_B_K = var_linear_background_current__i_B_K; // nanoA
        const double var_cleft_space_equations__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_cleft_space_equations__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_cleft_space_equations__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_cleft_space_equations__i_Ca_P = var_calcium_pump_current__i_Ca_P; // nanoA
        const double var_cleft_space_equations__i_B_Ca = var_linear_background_current__i_B_Ca; // nanoA
        const double var_cleft_space_equations__F = var_membrane__F; // coulomb_per_mole
        const double var_cleft_space_equations__d_Na_c_d_environment__time = ((var_cleft_space_equations__Na_b - var_cleft_space_equations__Na_c) / var_cleft_space_equations__tau_p) + ((var_cleft_space_equations__i_Na + (3.0 * var_cleft_space_equations__i_NaCa) + (3.0 * var_cleft_space_equations__i_NaK) + var_cleft_space_equations__i_B_Na + var_cleft_space_equations__i_f_Na) / (var_cleft_space_equations__F * var_cleft_space_equations__V_c)); // 'millimole per litre per second'
        const double var_cleft_space_equations__d_Ca_c_d_environment__time = ((var_cleft_space_equations__Ca_b - var_cleft_space_equations__Ca_c) / var_cleft_space_equations__tau_p) + ((((-2.0) * var_cleft_space_equations__i_NaCa) + var_cleft_space_equations__i_Ca_L + var_cleft_space_equations__i_Ca_T + var_cleft_space_equations__i_Ca_P + var_cleft_space_equations__i_B_Ca) / (2.0 * var_cleft_space_equations__F * var_cleft_space_equations__V_c)); // 'millimole per litre per second'
        const double var_cleft_space_equations__d_K_c_d_environment__time = ((var_cleft_space_equations__K_b - var_cleft_space_equations__K_c) / var_cleft_space_equations__tau_p) + ((((-2.0) * var_cleft_space_equations__i_NaK) + var_cleft_space_equations__i_K + var_cleft_space_equations__i_B_K + var_cleft_space_equations__i_f_K) / (var_cleft_space_equations__F * var_cleft_space_equations__V_c)); // 'millimole per litre per second'
        const double var_SR_Ca_uptake_and_release__F = var_membrane__F; // coulomb_per_mole
        const double var_SR_Ca_uptake_and_release__V_i = var_intracellular_concentrations_and_buffer_equations__V_i; // microLitre
        const double var_SR_Ca_uptake_and_release__V_up = 0.01166 * var_SR_Ca_uptake_and_release__V_i; // microLitre
        const double var_SR_Ca_uptake_and_release__i_tr = ((var_SR_Ca_uptake_and_release__Ca_up - var_SR_Ca_uptake_and_release__Ca_rel) * 2.0 * var_SR_Ca_uptake_and_release__F * var_SR_Ca_uptake_and_release__V_up) / 0.064180000000000001; // nanoA
        const double var_SR_Ca_uptake_and_release__k_rel = 0.0040000000000000001; // millimolar
        const double var_SR_Ca_uptake_and_release__V = var_chaste_interface__membrane__V; // millivolt
        const double var_SR_Ca_uptake_and_release__r_act = (240.0 * exp((var_SR_Ca_uptake_and_release__V - 40.0) * 0.080000000000000002)) + (240.0 * pow(var_SR_Ca_uptake_and_release__Ca_i / (var_SR_Ca_uptake_and_release__Ca_i + var_SR_Ca_uptake_and_release__k_rel), 4.0)); // per_second
        const double var_SR_Ca_uptake_and_release__r_inact = 40.0 + (240.0 * pow(var_SR_Ca_uptake_and_release__Ca_i / (var_SR_Ca_uptake_and_release__Ca_i + var_SR_Ca_uptake_and_release__k_rel), 4.0)); // per_second
        const double var_SR_Ca_uptake_and_release__Ca_Calse = var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse; // dimensionless
        const double var_SR_Ca_uptake_and_release__phi_Calse = (770.0 * var_SR_Ca_uptake_and_release__Ca_rel * (1.0 - var_SR_Ca_uptake_and_release__Ca_Calse)) - (641.0 * var_SR_Ca_uptake_and_release__Ca_Calse); // per_second
        const double var_SR_Ca_uptake_and_release__F1 = var_chaste_interface__SR_Ca_uptake_and_release__F1; // dimensionless
        const double var_SR_Ca_uptake_and_release__F3 = var_chaste_interface__SR_Ca_uptake_and_release__F3; // dimensionless
        const double var_SR_Ca_uptake_and_release__V_rel = 0.0012960000000000001 * var_SR_Ca_uptake_and_release__V_i; // microLitre
        const double var_SR_Ca_uptake_and_release__d_Ca_up_d_environment__time = (var_SR_Ca_uptake_and_release__i_up - var_SR_Ca_uptake_and_release__i_tr) / (2.0 * var_SR_Ca_uptake_and_release__V_up * var_SR_Ca_uptake_and_release__F); // 'millimole per litre per second'
        const double var_SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time = ((var_SR_Ca_uptake_and_release__i_tr - var_SR_Ca_uptake_and_release__i_rel) / (2.0 * var_SR_Ca_uptake_and_release__V_rel * var_SR_Ca_uptake_and_release__F)) - (11.48 * var_SR_Ca_uptake_and_release__phi_Calse); // 'millimole per litre per second'
        const double var_SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time = var_SR_Ca_uptake_and_release__phi_Calse; // per_second
        const double var_SR_Ca_uptake_and_release__d_F1_d_environment__time = (0.95999999999999996 * var_SR_Ca_uptake_and_release__F3) - (var_SR_Ca_uptake_and_release__r_act * var_SR_Ca_uptake_and_release__F1); // per_second
        const double var_SR_Ca_uptake_and_release__d_F2_d_environment__time = (var_SR_Ca_uptake_and_release__r_act * var_SR_Ca_uptake_and_release__F1) - (var_SR_Ca_uptake_and_release__r_inact * var_SR_Ca_uptake_and_release__F2); // per_second
        const double var_SR_Ca_uptake_and_release__d_F3_d_environment__time = (var_SR_Ca_uptake_and_release__r_inact * var_SR_Ca_uptake_and_release__F2) - (0.95999999999999996 * var_SR_Ca_uptake_and_release__F3); // per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time; // ___units_32
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter = var_sodium_current__sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time = 0.001 * var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time_converter = var_delayed_rectifying_potassium_current__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time; // per_second
        const double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time = 0.001 * var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter = var_delayed_rectifying_potassium_current__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = 0.001 * var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter = var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time; // per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time; // per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time; // per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time_converter = var_intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time; // per_second
        const double var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time = 0.001 * var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__cleft_space_equations__d_Na_c_d_environment__time_converter = var_cleft_space_equations__d_Na_c_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__cleft_space_equations__d_Na_c_d_environment__time = 0.001 * var_chaste_interface__cleft_space_equations__d_Na_c_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__cleft_space_equations__d_Ca_c_d_environment__time_converter = var_cleft_space_equations__d_Ca_c_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__cleft_space_equations__d_Ca_c_d_environment__time = 0.001 * var_chaste_interface__cleft_space_equations__d_Ca_c_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__cleft_space_equations__d_K_c_d_environment__time_converter = var_cleft_space_equations__d_K_c_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__cleft_space_equations__d_K_c_d_environment__time = 0.001 * var_chaste_interface__cleft_space_equations__d_K_c_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_up_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_Ca_up_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_up_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_up_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time; // millimole_per_litre_per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time; // per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F1_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_F1_d_environment__time; // per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F1_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_F1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F2_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_F2_d_environment__time; // per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F2_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_F2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F3_d_environment__time_converter = var_SR_Ca_uptake_and_release__d_F3_d_environment__time; // per_second
        const double var_chaste_interface__SR_Ca_uptake_and_release__d_F3_d_environment__time = 0.001 * var_chaste_interface__SR_Ca_uptake_and_release__d_F3_d_environment__time_converter; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__sodium_current_m_gate__m = var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h1 = var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h2 = var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__d_P_a_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Na_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_K_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Calmod_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Trop_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Ca_Mg_Trop_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__d_Mg_Mg_Trop_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__cleft_space_equations__Na_c = var_chaste_interface__cleft_space_equations__d_Na_c_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cleft_space_equations__Ca_c = var_chaste_interface__cleft_space_equations__d_Ca_c_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cleft_space_equations__K_c = var_chaste_interface__cleft_space_equations__d_K_c_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_up = var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_up_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_rel = var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_rel_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse = var_chaste_interface__SR_Ca_uptake_and_release__d_Ca_Calse_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__F1 = var_chaste_interface__SR_Ca_uptake_and_release__d_F1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__F2 = var_chaste_interface__SR_Ca_uptake_and_release__d_F2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__SR_Ca_uptake_and_release__F3 = var_chaste_interface__SR_Ca_uptake_and_release__d_F3_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__Cm = 5.5000000000000002e-05; // microF
            const double var_membrane__i_Na = var_sodium_current__i_Na; // nanoA
            const double var_membrane__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
            const double var_membrane__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
            const double var_membrane__i_K = var_delayed_rectifying_potassium_current__i_K; // nanoA
            const double var_hyperpolarisation_activated_current__i_f = var_hyperpolarisation_activated_current__i_f_Na + var_hyperpolarisation_activated_current__i_f_K; // nanoA
            const double var_membrane__i_f = var_hyperpolarisation_activated_current__i_f; // nanoA
            const double var_linear_background_current__i_B = var_linear_background_current__i_B_Na + var_linear_background_current__i_B_Ca + var_linear_background_current__i_B_K; // nanoA
            const double var_membrane__i_B = var_linear_background_current__i_B; // nanoA
            const double var_membrane__i_NaK = var_sodium_potassium_pump__i_NaK; // nanoA
            const double var_membrane__i_NaCa = var_sodium_calcium_pump__i_NaCa; // nanoA
            const double var_membrane__i_Ca_P = var_calcium_pump_current__i_Ca_P; // nanoA
            const double var_membrane__d_V_d_environment__time = (-(var_membrane__i_Na + var_membrane__i_Ca_T + var_membrane__i_Ca_L + var_membrane__i_K + var_membrane__i_f + var_membrane__i_B + var_membrane__i_NaK + var_membrane__i_NaCa + var_membrane__i_Ca_P)) / var_membrane__Cm; // 'millivolt per second'
            const double var_chaste_interface__membrane__d_V_d_environment__time_converter = var_membrane__d_V_d_environment__time; // ___units_1
            const double var_chaste_interface__membrane__d_V_d_environment__time = 0.001 * var_chaste_interface__membrane__d_V_d_environment__time_converter; // 'millivolt per millisecond'
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__sodium_current_m_gate__m;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__sodium_current_h_gate__h1;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__sodium_current_h_gate__h2;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__cleft_space_equations__Na_c;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__cleft_space_equations__Ca_c;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__cleft_space_equations__K_c;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_up;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_rel;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__SR_Ca_uptake_and_release__F1;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__SR_Ca_uptake_and_release__F2;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__SR_Ca_uptake_and_release__F3;
    }
    
    void Dynamicdemir_model_1994FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -49.54105
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 3.787018e-4
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.250113
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001386897
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.002065463
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.002572773
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.98651
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.02012114
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.1945111
        double var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.02302278
        double var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.3777728
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.09227776
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i = NV_Ith_S(rY, 12);
        // Units: millimolar; Initial value: 9.701621
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 1.407347e2
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.1411678
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.07331396
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7618549
        double var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.2097049
        double var_chaste_interface__cleft_space_equations__Na_c = NV_Ith_S(rY, 18);
        // Units: millimolar; Initial value: 139.9988
        double var_chaste_interface__cleft_space_equations__Ca_c = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 2.00474
        double var_chaste_interface__cleft_space_equations__K_c = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 5.389014
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_up = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 16.95311
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 16.85024
        double var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.9528726
        double var_chaste_interface__SR_Ca_uptake_and_release__F1 = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.1133251
        double var_chaste_interface__SR_Ca_uptake_and_release__F2 = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.0007594214
        
        const double var_chaste_interface__environment__fake_dt = 0.001; // second
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__R = 8314.4719999999998; // joule_per_kilomole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_mole
        const double var_membrane__Cm = 5.5000000000000002e-05; // microF
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current__P_Na = 0.0034399999999999999; // mul_per_second
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T = 0.02521; // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L = 0.021149999999999999; // microS
        const double var_delayed_rectifying_potassium_current__P_a = var_chaste_interface__delayed_rectifying_potassium_current_P_a_gate__P_a; // dimensionless
        const double var_cleft_space_equations__K_b = 5.4000000000000004; // millimolar
        const double var_delayed_rectifying_potassium_current__P_i = var_chaste_interface__delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_Na = 0.0067478; // microS
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_K = 0.0128821; // microS
        const double var_linear_background_current__g_B_K = 6.9400000000000006e-05; // microS
        const double var_linear_background_current__g_B_Na = 0.00016000000000000001; // microS
        const double var_linear_background_current__g_B_Ca = 3.6399999999999997e-05; // microS
        const double var_sodium_potassium_pump__K_m_Na = 5.46; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__i_NaK_max = 0.21920000000000001; // nanoA
        const double var_sodium_calcium_pump__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_pump__K_NaCa = 1.2480000000000001e-05; // nanoA
        const double var_sodium_calcium_pump__gamma = 0.5; // dimensionless
        const double var_calcium_pump_current__i_Ca_P_max = 0.02869; // nanoA
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_delayed_rectifying_potassium_current_P_a_gate__P_a = var_delayed_rectifying_potassium_current__P_a; // dimensionless
        const double var_delayed_rectifying_potassium_current_P_i_gate__P_i = var_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Na_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Na_i; // millimolar
        const double var_intracellular_concentrations_and_buffer_equations__Ca_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_i; // millimolar
        const double var_intracellular_concentrations_and_buffer_equations__K_i = var_chaste_interface__intracellular_concentrations_and_buffer_equations__K_i; // millimolar
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Calmod = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Calmod; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop = var_chaste_interface__intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop; // dimensionless
        const double var_intracellular_concentrations_and_buffer_equations__Mg_i = 2.5; // millimolar
        const double var_cleft_space_equations__Vol = 3.4970000000000001e-06; // microLitre
        const double var_SR_Ca_uptake_and_release__Ca_up = var_chaste_interface__SR_Ca_uptake_and_release__Ca_up; // millimolar
        const double var_SR_Ca_uptake_and_release__alpha_up = 0.080000000000000002; // nanoA
        const double var_SR_Ca_uptake_and_release__beta_up = 0.071999999999999995; // nanoA
        const double var_SR_Ca_uptake_and_release__k_xcs = 0.90000000000000002; // dimensionless
        const double var_SR_Ca_uptake_and_release__k_SRCa = 22.0; // millimolar
        const double var_SR_Ca_uptake_and_release__k_cyca = 5.0000000000000002e-05; // millimolar
        const double var_SR_Ca_uptake_and_release__F2 = var_chaste_interface__SR_Ca_uptake_and_release__F2; // dimensionless
        const double var_SR_Ca_uptake_and_release__alpha_rel = 0.5; // nanoA_per_millimolar
        const double var_SR_Ca_uptake_and_release__Ca_rel = var_chaste_interface__SR_Ca_uptake_and_release__Ca_rel; // millimolar
        const double var_cleft_space_equations__Na_c = var_chaste_interface__cleft_space_equations__Na_c; // millimolar
        const double var_cleft_space_equations__Ca_c = var_chaste_interface__cleft_space_equations__Ca_c; // millimolar
        const double var_cleft_space_equations__K_c = var_chaste_interface__cleft_space_equations__K_c; // millimolar
        const double var_cleft_space_equations__tau_p = 0.01; // second
        const double var_SR_Ca_uptake_and_release__k_rel = 0.0040000000000000001; // millimolar
        const double var_SR_Ca_uptake_and_release__Ca_Calse = var_chaste_interface__SR_Ca_uptake_and_release__Ca_Calse; // dimensionless
        const double var_SR_Ca_uptake_and_release__F1 = var_chaste_interface__SR_Ca_uptake_and_release__F1; // dimensionless
        const double var_t1 = pow(var_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t3 = (var_sodium_current__P_Na * var_t1) * var_sodium_current_m_gate__m; // dimensionless
        const double var_t4 = var_sodium_current_h_gate__h1 * var_sodium_current_h_gate__h2; // dimensionless
        const double var_t6 = (var_t3 * var_t4) * var_cleft_space_equations__Na_c; // dimensionless
        const double var_t7 = pow(var_membrane__F, 2.0); // dimensionless
        const double var_t8 = 1.0 / var_membrane__R; // dimensionless
        const double var_t9 = var_t7 * var_t8; // dimensionless
        const double var_t10 = 1.0 / var_membrane__T; // dimensionless
        const double var_t11 = var_membrane__R * var_membrane__T; // dimensionless
        const double var_t12 = 1.0 / var_membrane__F; // dimensionless
        const double var_t13 = 1.0 / var_intracellular_concentrations_and_buffer_equations__Na_i; // dimensionless
        const double var_t15 = log(var_cleft_space_equations__Na_c * var_t13); // dimensionless
        const double var_t20 = var_t8 * var_t10; // dimensionless
        const double var_t22 = exp(((var_membrane__V - ((var_t11 * var_t12) * var_t15)) * var_membrane__F) * var_t20); // dimensionless
        const double var_t23 = var_t22 - 1.0; // dimensionless
        const double var_t27 = exp((var_membrane__V * var_membrane__F) * var_t20); // dimensionless
        const double var_t28 = var_t27 - 1.0; // dimensionless
        const double var_t29 = 1.0 / var_t28; // dimensionless
        const double var_t31 = ((var_t9 * var_t10) * var_t23) * var_t29; // dimensionless
        const double var_t32 = var_t6 * var_t31; // dimensionless
        const double var_t33 = var_t7 * var_membrane__F; // dimensionless
        const double var_t35 = pow(var_membrane__R, 2.0); // dimensionless
        const double var_t36 = 1.0 / var_t35; // dimensionless
        const double var_t38 = pow(var_membrane__T, 2.0); // dimensionless
        const double var_t39 = 1.0 / var_t38; // dimensionless
        const double var_t43 = (((((var_t6 * var_membrane__V) * var_t33) * var_t36) * var_t39) * var_t22) * var_t29; // dimensionless
        const double var_t46 = (var_sodium_current_h_gate__h2 * var_cleft_space_equations__Na_c) * var_membrane__V; // dimensionless
        const double var_t47 = (var_t3 * var_sodium_current_h_gate__h1) * var_t46; // dimensionless
        const double var_t50 = pow(var_t28, 2.0); // dimensionless
        const double var_t55 = (((((var_t47 * var_t33) * var_t36) * var_t39) * var_t23) / var_t50) * var_t27; // dimensionless
        const double var_t56 = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_t57 = var_t56 * var_T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_t58 = (1.0 / 6.0) * var_membrane__V; // dimensionless
        const double var_t60 = exp((-var_t58) - 2.3500000000000001); // dimensionless
        const double var_t61 = 1.0 + var_t60; // dimensionless
        const double var_t62 = pow(var_t61, 2.0); // dimensionless
        const double var_t63 = 1.0 / var_t62; // dimensionless
        const double var_t65 = var_membrane__V - var_L_type_Ca_channel__E_Ca_L; // dimensionless
        const double var_t68 = (((0.015833333330000001 * var_L_type_Ca_channel__g_Ca_L) * var_t63) * var_t60) * var_t65; // dimensionless
        const double var_t70 = 1.0 / var_t61; // dimensionless
        const double var_t73 = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel_f_gate__f_L * var_L_type_Ca_channel_d_gate__d_L) + (0.095000000000000001 * var_t70)); // dimensionless
        const double var_t74 = pow(var_cleft_space_equations__K_b, 0.58999999999999997); // dimensionless
        const double var_t75 = var_t74 * var_delayed_rectifying_potassium_current_P_a_gate__P_a; // dimensionless
        const double var_t76 = var_t75 * var_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_t77 = 0.0069300000000000004 * var_t76; // dimensionless
        const double var_t78 = pow(var_hyperpolarisation_activated_current_y_gate__y, 2.0); // dimensionless
        const double var_t79 = var_hyperpolarisation_activated_current__g_f_Na * var_t78; // dimensionless
        const double var_t80 = var_hyperpolarisation_activated_current__g_f_K * var_t78; // dimensionless
        const double var_t81 = pow(var_intracellular_concentrations_and_buffer_equations__Na_i, 2.0); // dimensionless
        const double var_t82 = var_t81 * var_intracellular_concentrations_and_buffer_equations__Na_i; // dimensionless
        const double var_t83 = var_sodium_potassium_pump__i_NaK_max * var_t82; // dimensionless
        const double var_t84 = var_sodium_potassium_pump__K_m_Na + var_intracellular_concentrations_and_buffer_equations__Na_i; // dimensionless
        const double var_t85 = pow(var_t84, 2.0); // dimensionless
        const double var_t87 = (1.0 / var_t85) / var_t84; // dimensionless
        const double var_t88 = var_t83 * var_t87; // dimensionless
        const double var_t89 = pow(var_cleft_space_equations__K_c, 2.0); // dimensionless
        const double var_t90 = var_sodium_potassium_pump__K_m_K + var_cleft_space_equations__K_c; // dimensionless
        const double var_t91 = pow(var_t90, 2.0); // dimensionless
        const double var_t92 = 1.0 / var_t91; // dimensionless
        const double var_t93 = var_t89 * var_t92; // dimensionless
        const double var_t96 = exp((((-1.0) / 40.0) * var_membrane__V) - (3.0 / 2.0)); // dimensionless
        const double var_t97 = 1.5 + var_t96; // dimensionless
        const double var_t98 = pow(var_t97, 2.0); // dimensionless
        const double var_t102 = ((var_t88 * var_t93) / var_t98) * var_t96; // dimensionless
        const double var_t104 = var_cleft_space_equations__Ca_c * var_t82; // dimensionless
        const double var_t107 = exp((0.037429999999999998 * var_membrane__V) * var_sodium_calcium_pump__gamma); // dimensionless
        const double var_t111 = pow(var_cleft_space_equations__Na_c, 2.0); // dimensionless
        const double var_t112 = var_t111 * var_cleft_space_equations__Na_c; // dimensionless
        const double var_t113 = var_intracellular_concentrations_and_buffer_equations__Ca_i * var_t112; // dimensionless
        const double var_t119 = exp((0.037429999999999998 * var_membrane__V) * (var_sodium_calcium_pump__gamma - 1.0)); // dimensionless
        const double var_t126 = 1.0 + (var_sodium_calcium_pump__d_NaCa * (var_t113 + var_t104)); // dimensionless
        const double var_t127 = 1.0 / var_t126; // dimensionless
        const double var_t128 = (var_sodium_calcium_pump__K_NaCa * ((((0.037429999999999998 * var_t104) * var_sodium_calcium_pump__gamma) * var_t107) - ((var_t113 * ((0.037429999999999998 * var_sodium_calcium_pump__gamma) - 0.037429999999999998)) * var_t119))) * var_t127; // dimensionless
        const double var_t129 = (((((((((((((-var_t32) - var_t43) + var_t55) - var_t57) - var_t68) - var_t73) - var_t77) - var_t79) - var_t80) - var_linear_background_current__g_B_Na) - var_linear_background_current__g_B_Ca) - var_linear_background_current__g_B_K) - (0.040000000000000001 * var_t102)) - var_t128; // dimensionless
        const double var_t130 = 1.0 / var_membrane__Cm; // dimensionless
        const double var_t134 = ((var_sodium_current__P_Na * var_t1) * var_sodium_current_h_gate__h1) * var_t46; // dimensionless
        const double var_t135 = var_t9 * var_t10; // dimensionless
        const double var_t136 = var_t23 * var_t29; // dimensionless
        const double var_t138 = (var_t135 * var_t136) * var_t130; // dimensionless
        const double var_t141 = var_t3 * var_t46; // dimensionless
        const double var_t145 = ((var_t3 * var_sodium_current_h_gate__h1) * var_cleft_space_equations__Na_c) * var_membrane__V; // dimensionless
        const double var_t147 = var_L_type_Ca_channel__g_Ca_L * var_L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_t148 = var_t65 * var_t130; // dimensionless
        const double var_t150 = var_L_type_Ca_channel__g_Ca_L * var_L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_t152 = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_t153 = var_membrane__V - var_T_type_Ca_channel__E_Ca_T; // dimensionless
        const double var_t154 = var_t153 * var_t130; // dimensionless
        const double var_t157 = var_t74 * var_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_t158 = 1.0 / var_intracellular_concentrations_and_buffer_equations__K_i; // dimensionless
        const double var_t160 = log(var_cleft_space_equations__K_c * var_t158); // dimensionless
        const double var_t163 = var_membrane__V - ((var_t11 * var_t12) * var_t160); // dimensionless
        const double var_t164 = var_t163 * var_t130; // dimensionless
        const double var_t169 = var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_t170 = var_membrane__V - 75.0; // dimensionless
        const double var_t172 = var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_t173 = var_membrane__V + 85.0; // dimensionless
        const double var_t180 = (((var_t47 * var_t135) * var_t13) * var_t22) * var_t29; // dimensionless
        const double var_t181 = var_linear_background_current__g_B_Na * var_membrane__R; // dimensionless
        const double var_t182 = var_membrane__T * var_t12; // dimensionless
        const double var_t184 = (var_t181 * var_t182) * var_t13; // dimensionless
        const double var_t187 = 1.0 / var_t97; // dimensionless
        const double var_t188 = var_t93 * var_t187; // dimensionless
        const double var_t189 = ((var_sodium_potassium_pump__i_NaK_max * var_t81) * var_t87) * var_t188; // dimensionless
        const double var_t191 = pow(var_t85, 2.0); // dimensionless
        const double var_t194 = (var_t83 / var_t191) * var_t188; // dimensionless
        const double var_t199 = (((var_sodium_calcium_pump__K_NaCa * var_t81) * var_cleft_space_equations__Ca_c) * var_t107) * var_t127; // dimensionless
        const double var_t204 = var_sodium_calcium_pump__K_NaCa * ((var_t104 * var_t107) - (var_t113 * var_t119)); // dimensionless
        const double var_t205 = pow(var_t126, 2.0); // dimensionless
        const double var_t206 = 1.0 / var_t205; // dimensionless
        const double var_t207 = var_t204 * var_t206; // dimensionless
        const double var_t210 = ((var_t207 * var_sodium_calcium_pump__d_NaCa) * var_cleft_space_equations__Ca_c) * var_t81; // dimensionless
        const double var_t214 = var_linear_background_current__g_B_Ca * var_membrane__R; // dimensionless
        const double var_t218 = ((0.5 * var_t214) * var_t182) / var_intracellular_concentrations_and_buffer_equations__Ca_i; // dimensionless
        const double var_t221 = ((var_sodium_calcium_pump__K_NaCa * var_t112) * var_t119) * var_t127; // dimensionless
        const double var_t222 = var_t206 * var_sodium_calcium_pump__d_NaCa; // dimensionless
        const double var_t224 = (var_t204 * var_t222) * var_t112; // dimensionless
        const double var_t225 = var_intracellular_concentrations_and_buffer_equations__Ca_i + 0.00040000000000000002; // dimensionless
        const double var_t227 = var_calcium_pump_current__i_Ca_P_max / var_t225; // dimensionless
        const double var_t229 = pow(var_t225, 2.0); // dimensionless
        const double var_t231 = (var_calcium_pump_current__i_Ca_P_max * var_intracellular_concentrations_and_buffer_equations__Ca_i) / var_t229; // dimensionless
        const double var_t238 = var_linear_background_current__g_B_K * var_membrane__R; // dimensionless
        const double var_t241 = (((((-0.0069300000000000004) * var_t76) * var_t11) * var_t12) * var_t158) - ((var_t238 * var_t182) * var_t158); // dimensionless
        const double var_t244 = (var_t3 * var_t4) * var_membrane__V; // dimensionless
        const double var_t245 = var_t244 * var_t31; // dimensionless
        const double var_t249 = (((var_t244 * var_t9) * var_t10) * var_t22) * var_t29; // dimensionless
        const double var_t252 = (var_t181 * var_t182) / var_cleft_space_equations__Na_c; // dimensionless
        const double var_t256 = (((var_sodium_calcium_pump__K_NaCa * var_t111) * var_intracellular_concentrations_and_buffer_equations__Ca_i) * var_t119) * var_t127; // dimensionless
        const double var_t260 = ((var_t207 * var_sodium_calcium_pump__d_NaCa) * var_intracellular_concentrations_and_buffer_equations__Ca_i) * var_t111; // dimensionless
        const double var_t267 = ((0.5 * var_t214) * var_t182) / var_cleft_space_equations__Ca_c; // dimensionless
        const double var_t270 = ((var_sodium_calcium_pump__K_NaCa * var_t82) * var_t107) * var_t127; // dimensionless
        const double var_t272 = (var_t204 * var_t222) * var_t82; // dimensionless
        const double var_t275 = 1.0 / var_cleft_space_equations__K_c; // dimensionless
        const double var_t279 = (((0.0069300000000000004 * var_t76) * var_t11) * var_t12) * var_t275; // dimensionless
        const double var_t281 = (var_t238 * var_t182) * var_t275; // dimensionless
        const double var_t284 = ((var_t88 * var_cleft_space_equations__K_c) * var_t92) * var_t187; // dimensionless
        const double var_t290 = (((var_t88 * var_t89) / var_t91) / var_t90) * var_t187; // dimensionless
        const double var_t296 = exp(((-0.1123595506) * var_membrane__V) - 5.8314606759999998); // dimensionless
        const double var_t297 = var_t296 - 1.0; // dimensionless
        const double var_t298 = 1.0 / var_t297; // dimensionless
        const double var_t299 = var_membrane__V + 51.899999999999999; // dimensionless
        const double var_t300 = var_t299 * var_t298; // dimensionless
        const double var_t303 = ((-824.0) * var_t300) + (32960.0 * var_t296); // dimensionless
        const double var_t304 = 1.0 / var_t303; // dimensionless
        const double var_t307 = pow(var_t297, 2.0); // dimensionless
        const double var_t309 = var_t299 / var_t307; // dimensionless
        const double var_t313 = pow(var_t303, 2.0); // dimensionless
        const double var_t320 = (1.0 / var_t313) * ((((-824.0) * var_t298) - ((92.584269689999999 * var_t309) * var_t296)) - (3703.3707880000002 * var_t296)); // dimensionless
        const double var_t324 = var_t304 + 1.5e-05; // dimensionless
        const double var_t325 = 1.0 / var_t324; // dimensionless
        const double var_t330 = pow(var_t324, 2.0); // dimensionless
        const double var_t337 = exp(((-0.079365079359999993) * var_membrane__V) - 8.0396825389999993); // dimensionless
        const double var_t340 = (320.0 * var_t337) + 1.0; // dimensionless
        const double var_t341 = 1.0 / var_t340; // dimensionless
        const double var_t343 = (165.0 * var_t337) + (12360.0 * var_t341); // dimensionless
        const double var_t345 = var_t337 / var_t343; // dimensionless
        const double var_t347 = pow(var_t343, 2.0); // dimensionless
        const double var_t351 = pow(var_t340, 2.0); // dimensionless
        const double var_t355 = ((-13.09523809) * var_t337) + ((313904.76189999998 / var_t351) * var_t337); // dimensionless
        const double var_t359 = (((-13.09523809) * var_t345) - (((165.0 * var_t337) / var_t347) * var_t355)) * var_t343; // dimensionless
        const double var_t360 = 165.0 * var_t345; // dimensionless
        const double var_t371 = var_membrane__V + 35.0; // dimensionless
        const double var_t374 = exp(((-0.40000000000000002) * var_membrane__V) - 14.0); // dimensionless
        const double var_t375 = var_t374 - 1.0; // dimensionless
        const double var_t376 = 1.0 / var_t375; // dimensionless
        const double var_t380 = exp((-0.20799999999999999) * var_membrane__V); // dimensionless
        const double var_t381 = var_t380 - 1.0; // dimensionless
        const double var_t382 = 1.0 / var_t381; // dimensionless
        const double var_t385 = var_membrane__V - 5.0; // dimensionless
        const double var_t388 = exp((0.40000000000000002 * var_membrane__V) - 2.0); // dimensionless
        const double var_t389 = var_t388 - 1.0; // dimensionless
        const double var_t390 = 1.0 / var_t389; // dimensionless
        const double var_t393 = ((((-28.390000000000001) * var_t371) * var_t376) - ((84.900000000000006 * var_membrane__V) * var_t382)) + ((11.43 * var_t385) * var_t390); // dimensionless
        const double var_t398 = pow(var_t375, 2.0); // dimensionless
        const double var_t404 = pow(var_t381, 2.0); // dimensionless
        const double var_t410 = pow(var_t389, 2.0); // dimensionless
        const double var_t420 = exp(((1.0 / 5.0) * var_membrane__V) + 6.0); // dimensionless
        const double var_t421 = 1.0 + var_t420; // dimensionless
        const double var_t422 = pow(var_t421, 2.0); // dimensionless
        const double var_t425 = var_membrane__V + 28.0; // dimensionless
        const double var_t427 = ((1.0 / 4.0) * var_membrane__V) + 7.0; // dimensionless
        const double var_t428 = exp(var_t427); // dimensionless
        const double var_t429 = var_t428 - 1.0; // dimensionless
        const double var_t430 = 1.0 / var_t429; // dimensionless
        const double var_t433 = exp(-var_t427); // dimensionless
        const double var_t434 = 1.0 + var_t433; // dimensionless
        const double var_t437 = ((3.75 * var_t425) * var_t430) + (30.0 / var_t434); // dimensionless
        const double var_t443 = pow(var_t429, 2.0); // dimensionless
        const double var_t448 = pow(var_t434, 2.0); // dimensionless
        const double var_t456 = exp((-var_t58) - 4.3833333330000004); // dimensionless
        const double var_t457 = 1.0 + var_t456; // dimensionless
        const double var_t458 = pow(var_t457, 2.0); // dimensionless
        const double var_t462 = ((1.0 / 30.0) * var_membrane__V) + 0.87666666670000004; // dimensionless
        const double var_t463 = exp(var_t462); // dimensionless
        const double var_t464 = exp(-var_t462); // dimensionless
        const double var_t465 = var_t463 + var_t464; // dimensionless
        const double var_t475 = exp((0.1785714286 * var_membrane__V) + 11.01785714); // dimensionless
        const double var_t476 = 1.0 + var_t475; // dimensionless
        const double var_t477 = pow(var_t476, 2.0); // dimensionless
        const double var_t482 = exp(((-0.012004801920000001) * var_membrane__V) - 0.74069627849999997); // dimensionless
        const double var_t486 = exp((0.065019505850000006 * var_membrane__V) + 4.0117035110000003); // dimensionless
        const double var_t488 = (15.300000000000001 * var_t482) + (15.0 * var_t486); // dimensionless
        const double var_t500 = exp(((-0.1351351351) * var_membrane__V) - 0.68918918900000004); // dimensionless
        const double var_t501 = 1.0 + var_t500; // dimensionless
        const double var_t502 = pow(var_t501, 2.0); // dimensionless
        const double var_t506 = exp(0.039800000000000002 * var_membrane__V); // dimensionless
        const double var_t509 = exp((-0.050999999999999997) * var_membrane__V); // dimensionless
        const double var_t511 = (17.0 * var_t506) + (2.1099999999999999 * var_t509); // dimensionless
        const double var_t522 = exp((-0.0183) * var_membrane__V); // dimensionless
        const double var_t527 = exp(0.0094199999999999996 * var_membrane__V); // dimensionless
        const double var_t536 = exp(((1.0 / 9.0) * var_membrane__V) + 8.0222222219999999); // dimensionless
        const double var_t537 = 1.0 + var_t536; // dimensionless
        const double var_t538 = pow(var_t537, 2.0); // dimensionless
        const double var_t543 = exp(((-0.041101520760000003) * var_membrane__V) - 2.221948212); // dimensionless
        const double var_t547 = exp(((-0.18181818180000001) * var_membrane__V) - 10.90909091); // dimensionless
        const double var_t548 = 0.69999999999999996 + var_t547; // dimensionless
        const double var_t551 = (1.6483000000000001 * var_t543) + (14.01055 / var_t548); // dimensionless
        const double var_t557 = pow(var_t548, 2.0); // dimensionless
        const double var_t566 = (((((((-0.12) * var_t102) - (3.0 * var_t128)) - var_linear_background_current__g_B_Na) - var_t79) - var_t32) - var_t43) + var_t55; // dimensionless
        const double var_t568 = 1.0 / var_cleft_space_equations__Vol; // dimensionless
        const double var_t574 = (((var_membrane__F * var_t8) * var_t10) * var_t136) * var_t568; // dimensionless
        const double var_t575 = var_t134 * var_t574; // dimensionless
        const double var_t577 = var_t141 * var_t574; // dimensionless
        const double var_t579 = var_t145 * var_t574; // dimensionless
        const double var_t583 = ((var_t169 * var_t170) * var_t12) * var_t568; // dimensionless
        const double var_t589 = ((((((-14.4) * var_t189) + (14.4 * var_t194)) - (9.0 * var_t199)) + (9.0 * var_t210)) - var_t184) - var_t180; // dimensionless
        const double var_t593 = var_t221 + var_t224; // dimensionless
        const double var_t599 = ((((9.0 * var_t256) + (9.0 * var_t260)) + var_t252) - var_t245) + var_t249; // dimensionless
        const double var_t603 = (-var_t270) + var_t272; // dimensionless
        const double var_t609 = ((-9.5999999999999996) * var_t284) + (9.5999999999999996 * var_t290); // dimensionless
        const double var_t614 = ((((2.0 * var_t128) - var_t68) - var_t73) - var_t57) - var_linear_background_current__g_B_Ca; // dimensionless
        const double var_t619 = (var_t65 * var_t12) * var_t568; // dimensionless
        const double var_t620 = var_t147 * var_t619; // dimensionless
        const double var_t622 = var_t150 * var_t619; // dimensionless
        const double var_t625 = (var_t153 * var_t12) * var_t568; // dimensionless
        const double var_t626 = var_t152 * var_t625; // dimensionless
        const double var_t628 = var_t56 * var_t625; // dimensionless
        const double var_t630 = var_t199 - var_t210; // dimensionless
        const double var_t634 = 2.0 * var_t221; // dimensionless
        const double var_t635 = 2.0 * var_t224; // dimensionless
        const double var_t637 = 1.0 / var_SR_Ca_uptake_and_release__k_SRCa; // dimensionless
        const double var_t638 = var_SR_Ca_uptake_and_release__k_xcs * var_t637; // dimensionless
        const double var_t640 = var_SR_Ca_uptake_and_release__k_cyca * var_SR_Ca_uptake_and_release__k_xcs; // dimensionless
        const double var_t641 = ((var_intracellular_concentrations_and_buffer_equations__Ca_i + ((var_SR_Ca_uptake_and_release__Ca_up * var_SR_Ca_uptake_and_release__k_cyca) * var_t638)) + var_t640) + var_SR_Ca_uptake_and_release__k_cyca; // dimensionless
        const double var_t642 = 1.0 / var_t641; // dimensionless
        const double var_t643 = var_SR_Ca_uptake_and_release__alpha_up * var_t642; // dimensionless
        const double var_t646 = var_t640 * var_t637; // dimensionless
        const double var_t649 = pow(var_t641, 2.0); // dimensionless
        const double var_t651 = ((var_SR_Ca_uptake_and_release__alpha_up * var_intracellular_concentrations_and_buffer_equations__Ca_i) - ((var_SR_Ca_uptake_and_release__beta_up * var_SR_Ca_uptake_and_release__Ca_up) * var_t646)) / var_t649; // dimensionless
        const double var_t665 = 7998.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i; // dimensionless
        const double var_t667 = (-var_t256) - var_t260; // dimensionless
        const double var_t673 = ((2.0 * var_t270) - (2.0 * var_t272)) + var_t267; // dimensionless
        const double var_t679 = ((var_SR_Ca_uptake_and_release__beta_up * var_SR_Ca_uptake_and_release__k_cyca) * var_t638) * var_t642; // dimensionless
        const double var_t680 = var_t651 * var_t646; // dimensionless
        const double var_t685 = pow(var_SR_Ca_uptake_and_release__F2, 2.0); // dimensionless
        const double var_t686 = var_SR_Ca_uptake_and_release__alpha_rel * var_t685; // dimensionless
        const double var_t687 = var_SR_Ca_uptake_and_release__F2 + 0.25; // dimensionless
        const double var_t688 = pow(var_t687, 2.0); // dimensionless
        const double var_t689 = 1.0 / var_t688; // dimensionless
        const double var_t701 = (((var_SR_Ca_uptake_and_release__alpha_rel * var_SR_Ca_uptake_and_release__F2) * var_t689) * var_SR_Ca_uptake_and_release__Ca_rel) - (((var_t686 / var_t688) / var_t687) * var_SR_Ca_uptake_and_release__Ca_rel); // dimensionless
        const double var_t706 = (((0.080000000000000002 * var_t102) - var_t77) - var_t80) - var_linear_background_current__g_B_K; // dimensionless
        const double var_t711 = (var_t163 * var_t12) * var_t568; // dimensionless
        const double var_t712 = var_t157 * var_t711; // dimensionless
        const double var_t714 = var_t75 * var_t711; // dimensionless
        const double var_t718 = ((var_t172 * var_t173) * var_t12) * var_t568; // dimensionless
        const double var_t722 = (9.5999999999999996 * var_t189) - (9.5999999999999996 * var_t194); // dimensionless
        const double var_t731 = (((6.4000000000000004 * var_t284) - (6.4000000000000004 * var_t290)) + var_t279) + var_t281; // dimensionless
        const double var_t736 = 129000.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i; // dimensionless
        const double var_t743 = 1290.0 * var_intracellular_concentrations_and_buffer_equations__Mg_i; // dimensionless
        const double var_t758 = 1.0 / var_cleft_space_equations__tau_p; // dimensionless
        const double var_t811 = (0.16895917730000001 * var_membrane__F) * var_cleft_space_equations__Vol; // dimensionless
        const double var_t833 = exp((0.080000000000000002 * var_membrane__V) - 3.2000000000000002); // dimensionless
        const double var_t835 = (19.199999999999999 * var_t833) * var_SR_Ca_uptake_and_release__F1; // dimensionless
        const double var_t836 = pow(var_intracellular_concentrations_and_buffer_equations__Ca_i, 2.0); // dimensionless
        const double var_t838 = var_intracellular_concentrations_and_buffer_equations__Ca_i + var_SR_Ca_uptake_and_release__k_rel; // dimensionless
        const double var_t839 = pow(var_t838, 2.0); // dimensionless
        const double var_t840 = pow(var_t839, 2.0); // dimensionless
        const double var_t841 = 1.0 / var_t840; // dimensionless
        const double var_t843 = pow(var_t836, 2.0); // dimensionless
        const double var_t847 = ((var_t836 * var_intracellular_concentrations_and_buffer_equations__Ca_i) * var_t841) - ((var_t843 / var_t840) / var_t838); // dimensionless
        const double var_t848 = (960.0 * var_t847) * var_SR_Ca_uptake_and_release__F1; // dimensionless
        const double var_t849 = var_t843 * var_t841; // dimensionless
        const double var_t850 = (-var_t833) - var_t849; // dimensionless
        const double var_t851 = (960.0 * var_t847) * var_SR_Ca_uptake_and_release__F2; // dimensionless
        const double var_t854 = (-40.0) - (240.0 * var_t849); // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t129 * var_t130));
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((1.075268817 * var_t614) * var_t12) * var_t568);
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * (((((((-824.0) * var_t298) * var_t304) - (((92.584269689999999 * var_t309) * var_t304) * var_t296)) + ((824.0 * var_t300) * var_t320)) * var_t325) + ((((((-824.0) * var_t300) * var_t304) - var_sodium_current_m_gate__m) / var_t330) * var_t320));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * (var_t359 + ((var_t360 - var_sodium_current_h_gate__h1) * var_t355));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * (((1.0 / 20.0) * var_t359) + (((1.0 / 20.0) * (var_t360 - var_sodium_current_h_gate__h2)) * var_t355));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * (((((1.0 / 6.0) * var_t63) * var_t60) * var_t393) + ((var_t70 - var_L_type_Ca_channel_d_gate__d_L) * (((((((-28.390000000000001) * var_t376) - (((11.356 * var_t371) / var_t398) * var_t374)) - (84.900000000000006 * var_t382)) - (((17.659199999999998 * var_membrane__V) / var_t404) * var_t380)) + (11.43 * var_t390)) - (((4.5720000000000001 * var_t385) / var_t410) * var_t388))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 5.0) / var_t422) * var_t420) * var_t437) + (((1.0 / var_t421) - var_L_type_Ca_channel_f_gate__f_L) * (((3.75 * var_t430) - (((0.9375 * var_t425) / var_t443) * var_t428)) + (((15.0 / 2.0) / var_t448) * var_t433))));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((178.0 / var_t458) * var_t456) * var_t465) + (((178.0 / 5.0) * ((1.0 / var_t457) - var_T_type_Ca_channel_d_gate__d_T)) * (var_t463 - var_t464)));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((-0.1785714286) / var_t477) * var_t475) * var_t488) + (((1.0 / var_t476) - var_T_type_Ca_channel_f_gate__f_T) * (((-0.18367346940000001) * var_t482) + (0.97529258780000005 * var_t486))));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((0.1351351351 / var_t502) * var_t500) * var_t511) + (((1.0 / var_t501) - var_delayed_rectifying_potassium_current_P_a_gate__P_a) * ((0.67659999999999998 * var_t506) - (0.10761 * var_t509))));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((((-1.8300000000000001) * var_t522) * (1.0 - var_delayed_rectifying_potassium_current_P_i_gate__P_i)) - ((6.1795200000000001 * var_t527) * var_delayed_rectifying_potassium_current_P_i_gate__P_i));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 9.0) / var_t538) * var_t536) * var_t551) + (((1.0 / var_t537) - var_hyperpolarisation_activated_current_y_gate__y) * (((-0.06774763667) * var_t543) + ((2.5473727269999999 / var_t557) * var_t547))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t566) * var_t12) * var_t568);
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t706) * var_t12) * var_t568);
        IJth(rJacobian, 18, 0) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t566) * var_t12) * var_t568);
        IJth(rJacobian, 19, 0) = var_chaste_interface__environment__fake_dt * ((((-3.6764705879999999) * var_t614) * var_t12) * var_t568);
        IJth(rJacobian, 20, 0) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t706) * var_t12) * var_t568);
        IJth(rJacobian, 24, 0) = var_chaste_interface__environment__fake_dt * (-var_t835);
        IJth(rJacobian, 25, 0) = var_chaste_interface__environment__fake_dt * (var_t835);
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t218) + var_t221) + var_t224) - var_t227) + var_t231) * var_t130));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * ((((((((1.075268817 * (((((((-var_t634) - var_t635) - var_t227) + var_t231) - var_t218) - var_t643) + var_t651)) * var_t12) * var_t568) - 21173.5) + (11610.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Calmod)) + (1565.5 * var_intracellular_concentrations_and_buffer_equations__Ca_Trop)) + (7998.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop)) + (7998.0 * var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop));
        IJth(rJacobian, 12, 1) = var_chaste_interface__environment__fake_dt * (((6.4516129019999999 * var_t593) * var_t12) * var_t568);
        IJth(rJacobian, 14, 1) = var_chaste_interface__environment__fake_dt * (129000.0 - (129000.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Calmod));
        IJth(rJacobian, 15, 1) = var_chaste_interface__environment__fake_dt * (50500.0 - (50500.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Trop));
        IJth(rJacobian, 16, 1) = var_chaste_interface__environment__fake_dt * ((129000.0 - (129000.0 * var_intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop)) - (129000.0 * var_intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop));
        IJth(rJacobian, 18, 1) = var_chaste_interface__environment__fake_dt * ((((-22.058823530000002) * var_t593) * var_t12) * var_t568);
        IJth(rJacobian, 19, 1) = var_chaste_interface__environment__fake_dt * (((3.6764705879999999 * ((((var_t634 + var_t635) + var_t227) - var_t231) + var_t218)) * var_t12) * var_t568);
        IJth(rJacobian, 21, 1) = var_chaste_interface__environment__fake_dt * (((92.218594949999996 * (var_t643 - var_t651)) * var_t568) * var_t12);
        IJth(rJacobian, 24, 1) = var_chaste_interface__environment__fake_dt * (-var_t848);
        IJth(rJacobian, 25, 1) = var_chaste_interface__environment__fake_dt * (var_t848 - var_t851);
        IJth(rJacobian, 26, 1) = var_chaste_interface__environment__fake_dt * (var_t851);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-3.0) * var_t134) * var_t138));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (-var_t325);
        IJth(rJacobian, 12, 2) = var_chaste_interface__environment__fake_dt * ((-6.4516129019999999) * var_t575);
        IJth(rJacobian, 18, 2) = var_chaste_interface__environment__fake_dt * (22.058823530000002 * var_t575);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t141) * var_t138));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (-var_t343);
        IJth(rJacobian, 12, 3) = var_chaste_interface__environment__fake_dt * ((-2.150537634) * var_t577);
        IJth(rJacobian, 18, 3) = var_chaste_interface__environment__fake_dt * (7.3529411759999999 * var_t577);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t145) * var_t138));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * ((((-33.0) / 4.0) * var_t337) - (618.0 * var_t341));
        IJth(rJacobian, 12, 4) = var_chaste_interface__environment__fake_dt * ((-2.150537634) * var_t579);
        IJth(rJacobian, 18, 4) = var_chaste_interface__environment__fake_dt * (7.3529411759999999 * var_t579);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t147) * var_t148));
        IJth(rJacobian, 1, 5) = var_chaste_interface__environment__fake_dt * ((-1.075268817) * var_t620);
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t393);
        IJth(rJacobian, 19, 5) = var_chaste_interface__environment__fake_dt * (3.6764705879999999 * var_t620);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t150) * var_t148));
        IJth(rJacobian, 1, 6) = var_chaste_interface__environment__fake_dt * ((-1.075268817) * var_t622);
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (-var_t437);
        IJth(rJacobian, 19, 6) = var_chaste_interface__environment__fake_dt * (3.6764705879999999 * var_t622);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t152) * var_t154));
        IJth(rJacobian, 1, 7) = var_chaste_interface__environment__fake_dt * ((-1.075268817) * var_t626);
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * ((-1068.0) * var_t465);
        IJth(rJacobian, 19, 7) = var_chaste_interface__environment__fake_dt * (3.6764705879999999 * var_t626);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t56) * var_t154));
        IJth(rJacobian, 1, 8) = var_chaste_interface__environment__fake_dt * ((-1.075268817) * var_t628);
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t488);
        IJth(rJacobian, 19, 8) = var_chaste_interface__environment__fake_dt * (3.6764705879999999 * var_t628);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.0069300000000000004) * var_t157) * var_t164));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t511);
        IJth(rJacobian, 13, 9) = var_chaste_interface__environment__fake_dt * ((-0.014903225799999999) * var_t712);
        IJth(rJacobian, 20, 9) = var_chaste_interface__environment__fake_dt * (0.050955882350000002 * var_t712);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.0069300000000000004) * var_t75) * var_t164));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (((-100.0) * var_t522) - (656.0 * var_t527));
        IJth(rJacobian, 13, 10) = var_chaste_interface__environment__fake_dt * ((-0.014903225799999999) * var_t714);
        IJth(rJacobian, 20, 10) = var_chaste_interface__environment__fake_dt * (0.050955882350000002 * var_t714);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((2.0 * (((-var_t169) * var_t170) - (var_t172 * var_t173))) * var_t130));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t551);
        IJth(rJacobian, 12, 11) = var_chaste_interface__environment__fake_dt * ((-4.301075268) * var_t583);
        IJth(rJacobian, 13, 11) = var_chaste_interface__environment__fake_dt * ((-4.301075268) * var_t718);
        IJth(rJacobian, 18, 11) = var_chaste_interface__environment__fake_dt * (14.70588235 * var_t583);
        IJth(rJacobian, 20, 11) = var_chaste_interface__environment__fake_dt * (14.70588235 * var_t718);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-var_t180) - var_t184) - (4.7999999999999998 * var_t189)) + (4.7999999999999998 * var_t194)) - (3.0 * var_t199)) + (3.0 * var_t210)) * var_t130));
        IJth(rJacobian, 1, 12) = var_chaste_interface__environment__fake_dt * (((6.4516129019999999 * var_t630) * var_t12) * var_t568);
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t589) * var_t12) * var_t568);
        IJth(rJacobian, 13, 12) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t722) * var_t12) * var_t568);
        IJth(rJacobian, 18, 12) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t589) * var_t12) * var_t568);
        IJth(rJacobian, 19, 12) = var_chaste_interface__environment__fake_dt * ((((-22.058823530000002) * var_t630) * var_t12) * var_t568);
        IJth(rJacobian, 20, 12) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t722) * var_t12) * var_t568);
        IJth(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t241 * var_t130));
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t241) * var_t12) * var_t568);
        IJth(rJacobian, 20, 13) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t241) * var_t12) * var_t568);
        IJth(rJacobian, 1, 14) = var_chaste_interface__environment__fake_dt * ((11610.0 * var_intracellular_concentrations_and_buffer_equations__Ca_i) + 27.629999999999999);
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ((-var_t736) - 307.0);
        IJth(rJacobian, 1, 15) = var_chaste_interface__environment__fake_dt * ((1565.5 * var_intracellular_concentrations_and_buffer_equations__Ca_i) + 7.8120000000000003);
        IJth(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * (((-50500.0) * var_intracellular_concentrations_and_buffer_equations__Ca_i) - 252.0);
        IJth(rJacobian, 1, 16) = var_chaste_interface__environment__fake_dt * (var_t665 + 0.26350000000000001);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * ((-var_t736) - 4.25);
        IJth(rJacobian, 17, 16) = var_chaste_interface__environment__fake_dt * (-var_t743);
        IJth(rJacobian, 1, 17) = var_chaste_interface__environment__fake_dt * (var_t665);
        IJth(rJacobian, 16, 17) = var_chaste_interface__environment__fake_dt * (-var_t736);
        IJth(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * ((-var_t743) - 429.0);
        IJth(rJacobian, 0, 18) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t245) + var_t249) + var_t252) + (3.0 * var_t256)) + (3.0 * var_t260)) * var_t130));
        IJth(rJacobian, 1, 18) = var_chaste_interface__environment__fake_dt * (((6.4516129019999999 * var_t667) * var_t12) * var_t568);
        IJth(rJacobian, 12, 18) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t599) * var_t12) * var_t568);
        IJth(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * ((-var_t758) - (((7.3529411759999999 * var_t599) * var_t12) * var_t568));
        IJth(rJacobian, 19, 18) = var_chaste_interface__environment__fake_dt * ((((-22.058823530000002) * var_t667) * var_t12) * var_t568);
        IJth(rJacobian, 0, 19) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((var_t267 - var_t270) + var_t272) * var_t130));
        IJth(rJacobian, 1, 19) = var_chaste_interface__environment__fake_dt * (((1.075268817 * var_t673) * var_t12) * var_t568);
        IJth(rJacobian, 12, 19) = var_chaste_interface__environment__fake_dt * (((6.4516129019999999 * var_t603) * var_t12) * var_t568);
        IJth(rJacobian, 18, 19) = var_chaste_interface__environment__fake_dt * ((((-22.058823530000002) * var_t603) * var_t12) * var_t568);
        IJth(rJacobian, 19, 19) = var_chaste_interface__environment__fake_dt * ((-var_t758) - (((3.6764705879999999 * var_t673) * var_t12) * var_t568));
        IJth(rJacobian, 0, 20) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((var_t279 + var_t281) - (3.2000000000000002 * var_t284)) + (3.2000000000000002 * var_t290)) * var_t130));
        IJth(rJacobian, 12, 20) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t609) * var_t12) * var_t568);
        IJth(rJacobian, 13, 20) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t731) * var_t12) * var_t568);
        IJth(rJacobian, 18, 20) = var_chaste_interface__environment__fake_dt * ((((-7.3529411759999999) * var_t609) * var_t12) * var_t568);
        IJth(rJacobian, 20, 20) = var_chaste_interface__environment__fake_dt * ((-var_t758) - (((7.3529411759999999 * var_t731) * var_t12) * var_t568));
        IJth(rJacobian, 1, 21) = var_chaste_interface__environment__fake_dt * (((1.075268817 * (var_t679 + var_t680)) * var_t12) * var_t568);
        IJth(rJacobian, 21, 21) = var_chaste_interface__environment__fake_dt * (((92.218594949999996 * (((-var_t679) - var_t680) - var_t811)) * var_t568) * var_t12);
        IJth(rJacobian, 22, 21) = var_chaste_interface__environment__fake_dt * (140.18251140000001);
        IJth(rJacobian, 1, 22) = var_chaste_interface__environment__fake_dt * ((((1.075268817 * var_t686) * var_t689) * var_t12) * var_t568);
        IJth(rJacobian, 21, 22) = var_chaste_interface__environment__fake_dt * (15.581177930000001);
        IJth(rJacobian, 22, 22) = var_chaste_interface__environment__fake_dt * (((((829.68272950000005 * ((-var_t811) - (var_t686 * var_t689))) * var_t568) * var_t12) - 8839.6000000000004) + (8839.6000000000004 * var_SR_Ca_uptake_and_release__Ca_Calse));
        IJth(rJacobian, 23, 22) = var_chaste_interface__environment__fake_dt * (770.0 - (770.0 * var_SR_Ca_uptake_and_release__Ca_Calse));
        IJth(rJacobian, 22, 23) = var_chaste_interface__environment__fake_dt * ((8839.6000000000004 * var_SR_Ca_uptake_and_release__Ca_rel) + 7358.6800000000003);
        IJth(rJacobian, 23, 23) = var_chaste_interface__environment__fake_dt * (((-770.0) * var_SR_Ca_uptake_and_release__Ca_rel) - 641.0);
        IJth(rJacobian, 24, 24) = var_chaste_interface__environment__fake_dt * (240.0 * var_t850);
        IJth(rJacobian, 25, 24) = var_chaste_interface__environment__fake_dt * ((-240.0) * var_t850);
        IJth(rJacobian, 1, 25) = var_chaste_interface__environment__fake_dt * (((2.150537634 * var_t701) * var_t12) * var_t568);
        IJth(rJacobian, 22, 25) = var_chaste_interface__environment__fake_dt * ((((-1659.3654590000001) * var_t701) * var_t12) * var_t568);
        IJth(rJacobian, 25, 25) = var_chaste_interface__environment__fake_dt * (var_t854);
        IJth(rJacobian, 26, 25) = var_chaste_interface__environment__fake_dt * (-var_t854);
        IJth(rJacobian, 24, 26) = var_chaste_interface__environment__fake_dt * (0.95999999999999996);
        IJth(rJacobian, 26, 26) = var_chaste_interface__environment__fake_dt * (-0.95999999999999996);
    }
    
template<>
void OdeSystemInformation<Dynamicdemir_model_1994FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "demir_model_1994";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-49.54105);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.787018e-4);

    // rY[2]:
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.250113);

    // rY[3]:
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001386897);

    // rY[4]:
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002065463);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.002572773);

    // rY[6]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.98651);

    // rY[7]:
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02012114);

    // rY[8]:
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1945111);

    // rY[9]:
    this->mVariableNames.push_back("delayed_rectifying_potassium_current_P_a_gate__P_a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02302278);

    // rY[10]:
    this->mVariableNames.push_back("delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.3777728);

    // rY[11]:
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.09227776);

    // rY[12]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.701621);

    // rY[13]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.407347e2);

    // rY[14]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Calmod");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1411678);

    // rY[15]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.07331396);

    // rY[16]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Ca_Mg_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7618549);

    // rY[17]:
    this->mVariableNames.push_back("intracellular_concentrations_and_buffer_equations__Mg_Mg_Trop");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2097049);

    // rY[18]:
    this->mVariableNames.push_back("cleft_space_equations__Na_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(139.9988);

    // rY[19]:
    this->mVariableNames.push_back("cleft_space_equations__Ca_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.00474);

    // rY[20]:
    this->mVariableNames.push_back("cleft_space_equations__K_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.389014);

    // rY[21]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_up");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(16.95311);

    // rY[22]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_rel");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(16.85024);

    // rY[23]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__Ca_Calse");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9528726);

    // rY[24]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1133251);

    // rY[25]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0007594214);

    // rY[26]:
    this->mVariableNames.push_back("SR_Ca_uptake_and_release__F3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.8859153);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicdemir_model_1994FromCellMLCvode)

#endif // CHASTE_CVODE
