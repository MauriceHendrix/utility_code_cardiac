#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: tentusscher_model_2004_endo
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:14:58 2020
//! 
//! <autogenerated>

#include "ten_tusscher_model_2004_endo.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    double Dynamicten_tusscher_model_2004_endoFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicten_tusscher_model_2004_endoFromCellMLCvode::Dynamicten_tusscher_model_2004_endoFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                17,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicten_tusscher_model_2004_endoFromCellMLCvode>::Instance();
        Init();

        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicten_tusscher_model_2004_endoFromCellMLCvode::~Dynamicten_tusscher_model_2004_endoFromCellMLCvode()
    {
    }
    
    double Dynamicten_tusscher_model_2004_endoFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.3212
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_inward_rectifier_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_inward_rectifier_potassium_current__beta_K1 = ((3.0 * exp(0.00020000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 10.0))) / (1.0 + exp((-0.5) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K))); // dimensionless
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * var_inward_rectifier_potassium_current__xK1_inf * sqrt(var_inward_rectifier_potassium_current__K_o / 5.4000000000000004) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K); // picoA_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.072999999999999995; // nanoS_per_picoF
        const double var_transient_outward_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__r * var_transient_outward_current__s * (var_transient_outward_current__V - var_transient_outward_current__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_time_dependent_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_rapid_time_dependent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.096000000000000002; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_rapid_time_dependent_potassium_current__K_o / 5.4000000000000004) * var_rapid_time_dependent_potassium_current__Xr1 * var_rapid_time_dependent_potassium_current__Xr2 * (var_rapid_time_dependent_potassium_current__V - var_rapid_time_dependent_potassium_current__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.245; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_slow_time_dependent_potassium_current__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_slow_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_slow_time_dependent_potassium_current__Xs, 2.0) * (var_slow_time_dependent_potassium_current__V - var_slow_time_dependent_potassium_current__E_Ks); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 0.000175; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_L_type_Ca_current__fCa = var_chaste_interface__L_type_Ca_current_fCa_gate__fCa; // dimensionless
        const double var_L_type_Ca_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_current__T = var_membrane__T; // kelvin
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_L_type_Ca_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_L_type_Ca_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_L_type_Ca_current__d * var_L_type_Ca_current__f * var_L_type_Ca_current__fCa * 4.0 * var_L_type_Ca_current__V * pow(var_L_type_Ca_current__F, 2.0)) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) * ((var_L_type_Ca_current__Ca_i * exp((2.0 * var_L_type_Ca_current__V * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T))) - (0.34100000000000003 * var_L_type_Ca_current__Ca_o))) / (exp((2.0 * var_L_type_Ca_current__V * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_potassium_pump_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_potassium_pump_current__T = var_membrane__T; // kelvin
        const double var_sodium_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 1.3620000000000001; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_potassium_pump_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_sodium_potassium_pump_current__K_o) / (var_sodium_potassium_pump_current__K_o + var_sodium_potassium_pump_current__K_mk)) * var_sodium_potassium_pump_current__Na_i) / (var_sodium_potassium_pump_current__Na_i + var_sodium_potassium_pump_current__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump_current__V * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump_current__V) * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T)))); // picoA_per_picoF
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_fast_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * var_fast_sodium_current__j * (var_fast_sodium_current__V - var_fast_sodium_current__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_calcium_exchanger_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_calcium_exchanger_current__T = var_membrane__T; // kelvin
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_sodium_calcium_exchanger_current__gamma * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_i, 3.0) * var_sodium_calcium_exchanger_current__Ca_o) - (exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_o, 3.0) * var_sodium_calcium_exchanger_current__Ca_i * var_sodium_calcium_exchanger_current__alpha))) / ((pow(var_sodium_calcium_exchanger_current__Km_Nai, 3.0) + pow(var_sodium_calcium_exchanger_current__Na_o, 3.0)) * (var_sodium_calcium_exchanger_current__Km_Ca + var_sodium_calcium_exchanger_current__Ca_o) * (1.0 + (var_sodium_calcium_exchanger_current__K_sat * exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T))))); // picoA_per_picoF
        const double var_reversal_potentials__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_pump_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_potassium_pump_current__V - var_potassium_pump_current__E_K)) / (1.0 + exp((25.0 - var_potassium_pump_current__V) / 5.9800000000000004)); // picoA_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.82499999999999996; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_chaste_interface__L_type_Ca_current__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
        const double var_chaste_interface__inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
        const double var_chaste_interface__fast_sodium_current__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_chaste_interface__slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
        const double var_chaste_interface__calcium_pump_current__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
        const double var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_chaste_interface__sodium_potassium_pump_current__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_chaste_interface__potassium_pump_current__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
        const double var_chaste_interface__transient_outward_current__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__inward_rectifier_potassium_current__i_K1 + var_chaste_interface__transient_outward_current__i_to + var_chaste_interface__rapid_time_dependent_potassium_current__i_Kr + var_chaste_interface__slow_time_dependent_potassium_current__i_Ks + var_chaste_interface__L_type_Ca_current__i_CaL + var_chaste_interface__sodium_potassium_pump_current__i_NaK + var_chaste_interface__fast_sodium_current__i_Na + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__sodium_calcium_exchanger_current__i_NaCa + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_pump_current__i_p_K + var_chaste_interface__calcium_pump_current__i_p_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicten_tusscher_model_2004_endoFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.3212
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.2
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__Cm = 0.185; // microF
        const double var_membrane__V_c = 0.016403999999999998; // micrometre3
        const double var_inward_rectifier_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_reversal_potentials__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_reversal_potentials__T = var_membrane__T; // kelvin
        const double var_reversal_potentials__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_potentials__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_inward_rectifier_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_inward_rectifier_potassium_current__beta_K1 = ((3.0 * exp(0.00020000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) + 100.0))) + exp(0.10000000000000001 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 10.0))) / (1.0 + exp((-0.5) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K))); // dimensionless
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * ((var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K) - 200.0))); // dimensionless
        const double var_inward_rectifier_potassium_current__xK1_inf = var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + var_inward_rectifier_potassium_current__beta_K1); // dimensionless
        const double var_inward_rectifier_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_inward_rectifier_potassium_current__i_K1 = var_inward_rectifier_potassium_current__g_K1 * var_inward_rectifier_potassium_current__xK1_inf * sqrt(var_inward_rectifier_potassium_current__K_o / 5.4000000000000004) * (var_inward_rectifier_potassium_current__V - var_inward_rectifier_potassium_current__E_K); // picoA_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.072999999999999995; // nanoS_per_picoF
        const double var_transient_outward_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_transient_outward_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_transient_outward_current__i_to = var_transient_outward_current__g_to * var_transient_outward_current__r * var_transient_outward_current__s * (var_transient_outward_current__V - var_transient_outward_current__E_K); // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_time_dependent_potassium_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_rapid_time_dependent_potassium_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.096000000000000002; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__i_Kr = var_rapid_time_dependent_potassium_current__g_Kr * sqrt(var_rapid_time_dependent_potassium_current__K_o / 5.4000000000000004) * var_rapid_time_dependent_potassium_current__Xr1 * var_rapid_time_dependent_potassium_current__Xr2 * (var_rapid_time_dependent_potassium_current__V - var_rapid_time_dependent_potassium_current__E_K); // picoA_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.245; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_slow_time_dependent_potassium_current__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_slow_time_dependent_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current__i_Ks = var_slow_time_dependent_potassium_current__g_Ks * pow(var_slow_time_dependent_potassium_current__Xs, 2.0) * (var_slow_time_dependent_potassium_current__V - var_slow_time_dependent_potassium_current__E_Ks); // picoA_per_picoF
        const double var_L_type_Ca_current__g_CaL = 0.000175; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_L_type_Ca_current__fCa = var_chaste_interface__L_type_Ca_current_fCa_gate__fCa; // dimensionless
        const double var_L_type_Ca_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_current__T = var_membrane__T; // kelvin
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_L_type_Ca_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_L_type_Ca_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_L_type_Ca_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_L_type_Ca_current__i_CaL = (((var_L_type_Ca_current__g_CaL * var_L_type_Ca_current__d * var_L_type_Ca_current__f * var_L_type_Ca_current__fCa * 4.0 * var_L_type_Ca_current__V * pow(var_L_type_Ca_current__F, 2.0)) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) * ((var_L_type_Ca_current__Ca_i * exp((2.0 * var_L_type_Ca_current__V * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T))) - (0.34100000000000003 * var_L_type_Ca_current__Ca_o))) / (exp((2.0 * var_L_type_Ca_current__V * var_L_type_Ca_current__F) / (var_L_type_Ca_current__R * var_L_type_Ca_current__T)) - 1.0); // picoA_per_picoF
        const double var_sodium_potassium_pump_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_potassium_pump_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_potassium_pump_current__T = var_membrane__T; // kelvin
        const double var_sodium_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 1.3620000000000001; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_sodium_potassium_pump_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_potassium_pump_current__K_o = var_potassium_dynamics__K_o; // millimolar
        const double var_sodium_potassium_pump_current__i_NaK = ((((var_sodium_potassium_pump_current__P_NaK * var_sodium_potassium_pump_current__K_o) / (var_sodium_potassium_pump_current__K_o + var_sodium_potassium_pump_current__K_mk)) * var_sodium_potassium_pump_current__Na_i) / (var_sodium_potassium_pump_current__Na_i + var_sodium_potassium_pump_current__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_sodium_potassium_pump_current__V * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T))) + (0.035299999999999998 * exp(((-var_sodium_potassium_pump_current__V) * var_sodium_potassium_pump_current__F) / (var_sodium_potassium_pump_current__R * var_sodium_potassium_pump_current__T)))); // picoA_per_picoF
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_fast_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_fast_sodium_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_fast_sodium_current__i_Na = var_fast_sodium_current__g_Na * pow(var_fast_sodium_current__m, 3.0) * var_fast_sodium_current__h * var_fast_sodium_current__j * (var_fast_sodium_current__V - var_fast_sodium_current__E_Na); // picoA_per_picoF
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_bna * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_calcium_exchanger_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger_current__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger_current__R = var_membrane__R; // joule_per_mole_kelvin
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_o = var_sodium_dynamics__Na_o; // millimolar
        const double var_sodium_calcium_exchanger_current__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_sodium_calcium_exchanger_current__T = var_membrane__T; // kelvin
        const double var_sodium_calcium_exchanger_current__i_NaCa = (var_sodium_calcium_exchanger_current__K_NaCa * ((exp((var_sodium_calcium_exchanger_current__gamma * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_i, 3.0) * var_sodium_calcium_exchanger_current__Ca_o) - (exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T)) * pow(var_sodium_calcium_exchanger_current__Na_o, 3.0) * var_sodium_calcium_exchanger_current__Ca_i * var_sodium_calcium_exchanger_current__alpha))) / ((pow(var_sodium_calcium_exchanger_current__Km_Nai, 3.0) + pow(var_sodium_calcium_exchanger_current__Na_o, 3.0)) * (var_sodium_calcium_exchanger_current__Km_Ca + var_sodium_calcium_exchanger_current__Ca_o) * (1.0 + (var_sodium_calcium_exchanger_current__K_sat * exp(((var_sodium_calcium_exchanger_current__gamma - 1.0) * var_sodium_calcium_exchanger_current__V * var_sodium_calcium_exchanger_current__F) / (var_sodium_calcium_exchanger_current__R * var_sodium_calcium_exchanger_current__T))))); // picoA_per_picoF
        const double var_reversal_potentials__Ca_o = var_calcium_dynamics__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_bca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // picoA_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_potassium_pump_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_pump_current__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_potassium_pump_current__i_p_K = (var_potassium_pump_current__g_pK * (var_potassium_pump_current__V - var_potassium_pump_current__E_K)) / (1.0 + exp((25.0 - var_potassium_pump_current__V) / 5.9800000000000004)); // picoA_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.82499999999999996; // picoA_per_picoF
        const double var_calcium_pump_current__i_p_Ca = (var_calcium_pump_current__g_pCa * var_calcium_pump_current__Ca_i) / (var_calcium_pump_current__Ca_i + var_calcium_pump_current__K_pCa); // picoA_per_picoF
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__V = var_rapid_time_dependent_potassium_current__V; // millivolt
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 = 450.0 / (1.0 + exp(((-45.0) - var_rapid_time_dependent_potassium_current_Xr1_gate__V) / 10.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1 = 6.0 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr1_gate__V + 30.0) / 11.5)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1 = 1.0 * var_rapid_time_dependent_potassium_current_Xr1_gate__alpha_xr1 * var_rapid_time_dependent_potassium_current_Xr1_gate__beta_xr1; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_rapid_time_dependent_potassium_current__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf = 1.0 / (1.0 + exp(((-26.0) - var_rapid_time_dependent_potassium_current_Xr1_gate__V) / 7.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = (var_rapid_time_dependent_potassium_current_Xr1_gate__xr1_inf - var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) / var_rapid_time_dependent_potassium_current_Xr1_gate__tau_xr1; // per_millisecond
        const double var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = var_rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__V = var_rapid_time_dependent_potassium_current__V; // millivolt
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 = 3.0 / (1.0 + exp(((-60.0) - var_rapid_time_dependent_potassium_current_Xr2_gate__V) / 20.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2 = 1.1200000000000001 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr2_gate__V - 60.0) / 20.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2 = 1.0 * var_rapid_time_dependent_potassium_current_Xr2_gate__alpha_xr2 * var_rapid_time_dependent_potassium_current_Xr2_gate__beta_xr2; // millisecond
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf = 1.0 / (1.0 + exp((var_rapid_time_dependent_potassium_current_Xr2_gate__V + 88.0) / 24.0)); // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_rapid_time_dependent_potassium_current__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = (var_rapid_time_dependent_potassium_current_Xr2_gate__xr2_inf - var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) / var_rapid_time_dependent_potassium_current_Xr2_gate__tau_xr2; // per_millisecond
        const double var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = var_rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__V = var_slow_time_dependent_potassium_current__V; // millivolt
        const double var_slow_time_dependent_potassium_current_Xs_gate__beta_xs = 1.0 / (1.0 + exp((var_slow_time_dependent_potassium_current_Xs_gate__V - 60.0) / 20.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs = 1100.0 / sqrt(1.0 + exp(((-10.0) - var_slow_time_dependent_potassium_current_Xs_gate__V) / 6.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__tau_xs = 1.0 * var_slow_time_dependent_potassium_current_Xs_gate__alpha_xs * var_slow_time_dependent_potassium_current_Xs_gate__beta_xs; // millisecond
        const double var_slow_time_dependent_potassium_current_Xs_gate__xs_inf = 1.0 / (1.0 + exp(((-5.0) - var_slow_time_dependent_potassium_current_Xs_gate__V) / 14.0)); // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__Xs = var_slow_time_dependent_potassium_current__Xs; // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = (var_slow_time_dependent_potassium_current_Xs_gate__xs_inf - var_slow_time_dependent_potassium_current_Xs_gate__Xs) / var_slow_time_dependent_potassium_current_Xs_gate__tau_xs; // per_millisecond
        const double var_slow_time_dependent_potassium_current__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = var_slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_m_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_m_gate__alpha_m = 1.0 / (1.0 + exp(((-60.0) - var_fast_sodium_current_m_gate__V) / 5.0)); // dimensionless
        const double var_fast_sodium_current_m_gate__beta_m = (0.10000000000000001 / (1.0 + exp((var_fast_sodium_current_m_gate__V + 35.0) / 5.0))) + (0.10000000000000001 / (1.0 + exp((var_fast_sodium_current_m_gate__V - 50.0) / 200.0))); // dimensionless
        const double var_fast_sodium_current_m_gate__tau_m = 1.0 * var_fast_sodium_current_m_gate__alpha_m * var_fast_sodium_current_m_gate__beta_m; // millisecond
        const double var_fast_sodium_current_m_gate__m_inf = 1.0 / pow(1.0 + exp(((-56.859999999999999) - var_fast_sodium_current_m_gate__V) / 9.0299999999999994), 2.0); // dimensionless
        const double var_fast_sodium_current_m_gate__m = var_fast_sodium_current__m; // dimensionless
        const double var_fast_sodium_current_m_gate__d_m_d_environment__time = (var_fast_sodium_current_m_gate__m_inf - var_fast_sodium_current_m_gate__m) / var_fast_sodium_current_m_gate__tau_m; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time = var_fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_h_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_h_gate__h_inf = 1.0 / pow(1.0 + exp((var_fast_sodium_current_h_gate__V + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_fast_sodium_current_h_gate__beta_h = (var_fast_sodium_current_h_gate__V < (-40.0)) ? ((2.7000000000000002 * exp(0.079000000000000001 * var_fast_sodium_current_h_gate__V)) + (310000.0 * exp(0.34849999999999998 * var_fast_sodium_current_h_gate__V))) : (0.77000000000000002 / (0.13 * (1.0 + exp((var_fast_sodium_current_h_gate__V + 10.66) / (-11.1))))); // per_millisecond
        const double var_fast_sodium_current_h_gate__alpha_h = (var_fast_sodium_current_h_gate__V < (-40.0)) ? (0.057000000000000002 * exp((-(var_fast_sodium_current_h_gate__V + 80.0)) / 6.7999999999999998)) : 0.0; // per_millisecond
        const double var_fast_sodium_current_h_gate__tau_h = 1.0 / (var_fast_sodium_current_h_gate__alpha_h + var_fast_sodium_current_h_gate__beta_h); // millisecond
        const double var_fast_sodium_current_h_gate__h = var_fast_sodium_current__h; // dimensionless
        const double var_fast_sodium_current_h_gate__d_h_d_environment__time = (var_fast_sodium_current_h_gate__h_inf - var_fast_sodium_current_h_gate__h) / var_fast_sodium_current_h_gate__tau_h; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time = var_fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_fast_sodium_current_j_gate__V = var_fast_sodium_current__V; // millivolt
        const double var_fast_sodium_current_j_gate__j_inf = 1.0 / pow(1.0 + exp((var_fast_sodium_current_j_gate__V + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_fast_sodium_current_j_gate__alpha_j = (var_fast_sodium_current_j_gate__V < (-40.0)) ? ((((((-25428.0) * exp(0.24440000000000001 * var_fast_sodium_current_j_gate__V)) - (6.9480000000000002e-06 * exp((-0.043909999999999998) * var_fast_sodium_current_j_gate__V))) * (var_fast_sodium_current_j_gate__V + 37.780000000000001)) / 1.0) / (1.0 + exp(0.311 * (var_fast_sodium_current_j_gate__V + 79.230000000000004)))) : 0.0; // per_millisecond
        const double var_fast_sodium_current_j_gate__beta_j = (var_fast_sodium_current_j_gate__V < (-40.0)) ? ((0.024240000000000001 * exp((-0.01052) * var_fast_sodium_current_j_gate__V)) / (1.0 + exp((-0.13780000000000001) * (var_fast_sodium_current_j_gate__V + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * var_fast_sodium_current_j_gate__V)) / (1.0 + exp((-0.10000000000000001) * (var_fast_sodium_current_j_gate__V + 32.0)))); // per_millisecond
        const double var_fast_sodium_current_j_gate__tau_j = 1.0 / (var_fast_sodium_current_j_gate__alpha_j + var_fast_sodium_current_j_gate__beta_j); // millisecond
        const double var_fast_sodium_current_j_gate__j = var_fast_sodium_current__j; // dimensionless
        const double var_fast_sodium_current_j_gate__d_j_d_environment__time = (var_fast_sodium_current_j_gate__j_inf - var_fast_sodium_current_j_gate__j) / var_fast_sodium_current_j_gate__tau_j; // per_millisecond
        const double var_fast_sodium_current__fast_sodium_current_j_gate__d_j_d_environment__time = var_fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_d_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_d_gate__alpha_d = (1.3999999999999999 / (1.0 + exp(((-35.0) - var_L_type_Ca_current_d_gate__V) / 13.0))) + 0.25; // dimensionless
        const double var_L_type_Ca_current_d_gate__gamma_d = 1.0 / (1.0 + exp((50.0 - var_L_type_Ca_current_d_gate__V) / 20.0)); // millisecond
        const double var_L_type_Ca_current_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp((var_L_type_Ca_current_d_gate__V + 5.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_current_d_gate__tau_d = (1.0 * var_L_type_Ca_current_d_gate__alpha_d * var_L_type_Ca_current_d_gate__beta_d) + var_L_type_Ca_current_d_gate__gamma_d; // millisecond
        const double var_L_type_Ca_current_d_gate__d_inf = 1.0 / (1.0 + exp(((-5.0) - var_L_type_Ca_current_d_gate__V) / 7.5)); // dimensionless
        const double var_L_type_Ca_current_d_gate__d = var_L_type_Ca_current__d; // dimensionless
        const double var_L_type_Ca_current_d_gate__d_d_d_environment__time = (var_L_type_Ca_current_d_gate__d_inf - var_L_type_Ca_current_d_gate__d) / var_L_type_Ca_current_d_gate__tau_d; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_d_gate__d_d_d_environment__time = var_L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_f_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_f_gate__tau_f = (1125.0 * exp((-pow(var_L_type_Ca_current_f_gate__V + 27.0, 2.0)) / 240.0)) + 80.0 + (165.0 / (1.0 + exp((25.0 - var_L_type_Ca_current_f_gate__V) / 10.0))); // millisecond
        const double var_L_type_Ca_current_f_gate__f_inf = 1.0 / (1.0 + exp((var_L_type_Ca_current_f_gate__V + 20.0) / 7.0)); // dimensionless
        const double var_L_type_Ca_current_f_gate__f = var_L_type_Ca_current__f; // dimensionless
        const double var_L_type_Ca_current_f_gate__d_f_d_environment__time = (var_L_type_Ca_current_f_gate__f_inf - var_L_type_Ca_current_f_gate__f) / var_L_type_Ca_current_f_gate__tau_f; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_f_gate__d_f_d_environment__time = var_L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_L_type_Ca_current_fCa_gate__V = var_L_type_Ca_current__V; // millivolt
        const double var_L_type_Ca_current_fCa_gate__Ca_i = var_L_type_Ca_current__Ca_i; // millimolar
        const double var_L_type_Ca_current_fCa_gate__beta_fCa = 0.10000000000000001 / (1.0 + exp((var_L_type_Ca_current_fCa_gate__Ca_i - 0.00050000000000000001) / 0.0001)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__gama_fCa = 0.20000000000000001 / (1.0 + exp((var_L_type_Ca_current_fCa_gate__Ca_i - 0.00075000000000000002) / 0.00080000000000000004)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__alpha_fCa = 1.0 / (1.0 + pow(var_L_type_Ca_current_fCa_gate__Ca_i / 0.00032499999999999999, 8.0)); // dimensionless
        const double var_L_type_Ca_current_fCa_gate__fCa_inf = (var_L_type_Ca_current_fCa_gate__alpha_fCa + var_L_type_Ca_current_fCa_gate__beta_fCa + var_L_type_Ca_current_fCa_gate__gama_fCa + 0.23000000000000001) / 1.46; // dimensionless
        const double var_L_type_Ca_current_fCa_gate__fCa = var_L_type_Ca_current__fCa; // dimensionless
        const double var_L_type_Ca_current_fCa_gate__tau_fCa = 2.0; // millisecond
        const double var_L_type_Ca_current_fCa_gate__d_fCa = (var_L_type_Ca_current_fCa_gate__fCa_inf - var_L_type_Ca_current_fCa_gate__fCa) / var_L_type_Ca_current_fCa_gate__tau_fCa; // per_millisecond
        const double var_L_type_Ca_current_fCa_gate__d_fCa_d_environment__time = ((var_L_type_Ca_current_fCa_gate__fCa_inf > var_L_type_Ca_current_fCa_gate__fCa) && (var_L_type_Ca_current_fCa_gate__V > (-60.0))) ? 0.0 : var_L_type_Ca_current_fCa_gate__d_fCa; // per_millisecond
        const double var_L_type_Ca_current__L_type_Ca_current_fCa_gate__d_fCa_d_environment__time = var_L_type_Ca_current_fCa_gate__d_fCa_d_environment__time; // per_millisecond
        const double var_transient_outward_current_s_gate__s_gateparam = 28.0; // millivolt
        const double var_transient_outward_current_s_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_s_gate__s_inf = 1.0 / (1.0 + exp((var_transient_outward_current_s_gate__V + var_transient_outward_current_s_gate__s_gateparam) / 5.0)); // dimensionless
        const double var_transient_outward_current_s_gate__tau_s_t1V = 67.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_term2 = 0.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_term1 = 1000.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_t1Vdenom = 1000.0; // millivolt_square
        const double var_transient_outward_current_s_gate__tau_sconstant1 = 8.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s = (var_transient_outward_current_s_gate__tau_s_term1 * exp((-pow(var_transient_outward_current_s_gate__V + var_transient_outward_current_s_gate__tau_s_t1V, 2.0)) / var_transient_outward_current_s_gate__tau_s_t1Vdenom)) + (var_transient_outward_current_s_gate__tau_s_term2 / (1.0 + exp((var_transient_outward_current_s_gate__V - 20.0) / 5.0))) + var_transient_outward_current_s_gate__tau_sconstant1; // millisecond
        const double var_transient_outward_current_s_gate__s = var_transient_outward_current__s; // dimensionless
        const double var_transient_outward_current_s_gate__d_s_d_environment__time = (var_transient_outward_current_s_gate__s_inf - var_transient_outward_current_s_gate__s) / var_transient_outward_current_s_gate__tau_s; // per_millisecond
        const double var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time = var_transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double var_transient_outward_current_r_gate__V = var_transient_outward_current__V; // millivolt
        const double var_transient_outward_current_r_gate__r_inf = 1.0 / (1.0 + exp((20.0 - var_transient_outward_current_r_gate__V) / 6.0)); // dimensionless
        const double var_transient_outward_current_r_gate__tau_r = (9.5 * exp((-pow(var_transient_outward_current_r_gate__V + 40.0, 2.0)) / 1800.0)) + 0.80000000000000004; // millisecond
        const double var_transient_outward_current_r_gate__r = var_transient_outward_current__r; // dimensionless
        const double var_transient_outward_current_r_gate__d_r_d_environment__time = (var_transient_outward_current_r_gate__r_inf - var_transient_outward_current_r_gate__r) / var_transient_outward_current_r_gate__tau_r; // per_millisecond
        const double var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time = var_transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double var_calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
        const double var_calcium_dynamics__b_rel = 0.25; // millimolar
        const double var_calcium_dynamics__a_rel = 0.016463999999999999; // millimolar_per_millisecond
        const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
        const double var_calcium_dynamics__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_calcium_dynamics__g = var_chaste_interface__calcium_dynamics__g; // dimensionless
        const double var_calcium_dynamics__i_rel = (((var_calcium_dynamics__a_rel * pow(var_calcium_dynamics__Ca_SR, 2.0)) / (pow(var_calcium_dynamics__b_rel, 2.0) + pow(var_calcium_dynamics__Ca_SR, 2.0))) + var_calcium_dynamics__c_rel) * var_calcium_dynamics__d * var_calcium_dynamics__g; // millimolar_per_millisecond
        const double var_calcium_dynamics__Vmax_up = 0.00042499999999999998; // millimolar_per_millisecond
        const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__i_up = var_calcium_dynamics__Vmax_up / (1.0 + (pow(var_calcium_dynamics__K_up, 2.0) / pow(var_calcium_dynamics__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_calcium_dynamics__V_leak = 8.0000000000000007e-05; // per_millisecond
        const double var_calcium_dynamics__i_leak = var_calcium_dynamics__V_leak * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_i); // millimolar_per_millisecond
        const double var_calcium_dynamics__tau_g = 2.0; // millisecond
        const double var_calcium_dynamics__g_inf = (var_calcium_dynamics__Ca_i < 0.00035) ? (1.0 / (1.0 + pow(var_calcium_dynamics__Ca_i / 0.00035, 6.0))) : (1.0 / (1.0 + pow(var_calcium_dynamics__Ca_i / 0.00035, 16.0))); // dimensionless
        const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__Ca_i_bufc = 1.0 / (1.0 + ((var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c) / pow(var_calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c, 2.0))); // dimensionless
        const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
        const double var_calcium_dynamics__Ca_sr_bufsr = 1.0 / (1.0 + ((var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr) / pow(var_calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr, 2.0))); // dimensionless
        const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
        const double var_calcium_dynamics__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_calcium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_calcium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_calcium_dynamics__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
        const double var_calcium_dynamics__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_calcium_dynamics__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
        const double var_calcium_dynamics__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
        const double var_calcium_dynamics__d_g = (var_calcium_dynamics__g_inf - var_calcium_dynamics__g) / var_calcium_dynamics__tau_g; // per_millisecond
        const double var_calcium_dynamics__d_Ca_i_d_environment__time = var_calcium_dynamics__Ca_i_bufc * (((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) + var_calcium_dynamics__i_rel) - (((1.0 * ((var_calcium_dynamics__i_CaL + var_calcium_dynamics__i_b_Ca + var_calcium_dynamics__i_p_Ca) - (2.0 * var_calcium_dynamics__i_NaCa))) / (2.0 * 1.0 * var_calcium_dynamics__V_c * var_calcium_dynamics__F)) * var_calcium_dynamics__Cm)); // 'millimole per litre per millisecond'
        const double var_calcium_dynamics__d_Ca_SR_d_environment__time = ((var_calcium_dynamics__Ca_sr_bufsr * var_calcium_dynamics__V_c) / var_calcium_dynamics__V_sr) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak)); // 'millimole per litre per millisecond'
        const double var_calcium_dynamics__d_g_d_environment__time = ((var_calcium_dynamics__g_inf > var_calcium_dynamics__g) && (var_calcium_dynamics__V > (-60.0))) ? 0.0 : var_calcium_dynamics__d_g; // per_millisecond
        const double var_sodium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_sodium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_sodium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_sodium_dynamics__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
        const double var_sodium_dynamics__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
        const double var_sodium_dynamics__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_sodium_dynamics__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
        const double var_sodium_dynamics__d_Na_i_d_environment__time = (((-1.0) * (var_sodium_dynamics__i_Na + var_sodium_dynamics__i_b_Na + (3.0 * var_sodium_dynamics__i_NaK) + (3.0 * var_sodium_dynamics__i_NaCa))) / (1.0 * var_sodium_dynamics__V_c * var_sodium_dynamics__F)) * var_sodium_dynamics__Cm; // 'millimole per litre per millisecond'
        const double var_potassium_dynamics__F = var_membrane__F; // coulomb_per_millimole
        const double var_potassium_dynamics__Cm = var_membrane__Cm; // microF
        const double var_potassium_dynamics__V_c = var_membrane__V_c; // micrometre3
        const double var_potassium_dynamics__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
        const double var_potassium_dynamics__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
        const double var_potassium_dynamics__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
        const double var_potassium_dynamics__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
        const double var_potassium_dynamics__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
        const double var_potassium_dynamics__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
        const double var_potassium_dynamics__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_potassium_dynamics__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
        const double var_potassium_dynamics__i_Stim = var_potassium_dynamics__i_Stim_converter / var_potassium_dynamics__chaste_interface__chaste_membrane_capacitance; // picoA_per_picoF
        const double var_potassium_dynamics__d_K_i_d_environment__time = (((-1.0) * ((var_potassium_dynamics__i_K1 + var_potassium_dynamics__i_to + var_potassium_dynamics__i_Kr + var_potassium_dynamics__i_Ks + var_potassium_dynamics__i_p_K + var_potassium_dynamics__i_Stim) - (2.0 * var_potassium_dynamics__i_NaK))) / (1.0 * var_potassium_dynamics__V_c * var_potassium_dynamics__F)) * var_potassium_dynamics__Cm; // 'millimole per litre per millisecond'
        const double var_chaste_interface__calcium_dynamics__d_Ca_i_d_environment__time = var_calcium_dynamics__d_Ca_i_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time = var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time = var_rapid_time_dependent_potassium_current__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time = var_slow_time_dependent_potassium_current__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time = var_fast_sodium_current__fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time = var_fast_sodium_current__fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_chaste_interface__fast_sodium_current_j_gate__d_j_d_environment__time = var_fast_sodium_current__fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_d_gate__d_d_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_f_gate__d_f_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_chaste_interface__L_type_Ca_current_fCa_gate__d_fCa_d_environment__time = var_L_type_Ca_current__L_type_Ca_current_fCa_gate__d_fCa_d_environment__time; // per_millisecond
        const double var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time = var_transient_outward_current__transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time = var_transient_outward_current__transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double var_chaste_interface__calcium_dynamics__d_Ca_SR_d_environment__time = var_calcium_dynamics__d_Ca_SR_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__calcium_dynamics__d_g_d_environment__time = var_calcium_dynamics__d_g_d_environment__time; // per_millisecond
        const double var_chaste_interface__sodium_dynamics__d_Na_i_d_environment__time = var_sodium_dynamics__d_Na_i_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__potassium_dynamics__d_K_i_d_environment__time = var_potassium_dynamics__d_K_i_d_environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__d_Ca_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__d_Xr1_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__d_Xr2_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_m_gate__m = var_chaste_interface__fast_sodium_current_m_gate__d_m_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_h_gate__h = var_chaste_interface__fast_sodium_current_h_gate__d_h_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__fast_sodium_current_j_gate__j = var_chaste_interface__fast_sodium_current_j_gate__d_j_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_d_gate__d = var_chaste_interface__L_type_Ca_current_d_gate__d_d_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_f_gate__f = var_chaste_interface__L_type_Ca_current_f_gate__d_f_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__L_type_Ca_current_fCa_gate__fCa = var_chaste_interface__L_type_Ca_current_fCa_gate__d_fCa_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_s_gate__s = var_chaste_interface__transient_outward_current_s_gate__d_s_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__transient_outward_current_r_gate__r = var_chaste_interface__transient_outward_current_r_gate__d_r_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__d_Ca_SR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__g = var_chaste_interface__calcium_dynamics__d_g_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__sodium_dynamics__Na_i = var_chaste_interface__sodium_dynamics__d_Na_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__potassium_dynamics__K_i = var_chaste_interface__potassium_dynamics__d_K_i_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__i_K1 = var_inward_rectifier_potassium_current__i_K1; // picoA_per_picoF
            const double var_membrane__i_to = var_transient_outward_current__i_to; // picoA_per_picoF
            const double var_membrane__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr; // picoA_per_picoF
            const double var_membrane__i_Ks = var_slow_time_dependent_potassium_current__i_Ks; // picoA_per_picoF
            const double var_membrane__i_CaL = var_L_type_Ca_current__i_CaL; // picoA_per_picoF
            const double var_membrane__i_NaK = var_sodium_potassium_pump_current__i_NaK; // picoA_per_picoF
            const double var_membrane__i_Na = var_fast_sodium_current__i_Na; // picoA_per_picoF
            const double var_membrane__i_b_Na = var_sodium_background_current__i_b_Na; // picoA_per_picoF
            const double var_membrane__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa; // picoA_per_picoF
            const double var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca; // picoA_per_picoF
            const double var_membrane__i_p_K = var_potassium_pump_current__i_p_K; // picoA_per_picoF
            const double var_membrane__i_p_Ca = var_calcium_pump_current__i_p_Ca; // picoA_per_picoF
            const double var_membrane__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
            const double var_membrane__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_membrane__i_Stim = var_membrane__i_Stim_converter / var_membrane__chaste_interface__chaste_membrane_capacitance; // picoA_per_picoF
            const double var_membrane__d_V_d_environment__time = -(var_membrane__i_K1 + var_membrane__i_to + var_membrane__i_Kr + var_membrane__i_Ks + var_membrane__i_CaL + var_membrane__i_NaK + var_membrane__i_Na + var_membrane__i_b_Na + var_membrane__i_NaCa + var_membrane__i_b_Ca + var_membrane__i_p_K + var_membrane__i_p_Ca + var_membrane__i_Stim); // 'millivolt per millisecond'
            const double var_chaste_interface__membrane__d_V_d_environment__time = var_membrane__d_V_d_environment__time; // ___units_2
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__calcium_dynamics__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__fast_sodium_current_m_gate__m;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__fast_sodium_current_h_gate__h;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__fast_sodium_current_j_gate__j;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__L_type_Ca_current_d_gate__d;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__L_type_Ca_current_f_gate__f;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__L_type_Ca_current_fCa_gate__fCa;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__transient_outward_current_s_gate__s;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__transient_outward_current_r_gate__r;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__calcium_dynamics__g;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__sodium_dynamics__Na_i;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__potassium_dynamics__K_i;
    }
    
    void Dynamicten_tusscher_model_2004_endoFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.2
        double var_chaste_interface__calcium_dynamics__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_m_gate__m = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__fast_sodium_current_h_gate__h = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__fast_sodium_current_j_gate__j = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.75
        double var_chaste_interface__L_type_Ca_current_d_gate__d = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__L_type_Ca_current_f_gate__f = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__L_type_Ca_current_fCa_gate__fCa = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__transient_outward_current_s_gate__s = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.3212
        double var_chaste_interface__transient_outward_current_r_gate__r = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__calcium_dynamics__Ca_SR = NV_Ith_S(rY, 13);
        // Units: millimolar; Initial value: 0.2
        double var_chaste_interface__calcium_dynamics__g = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__sodium_dynamics__Na_i = NV_Ith_S(rY, 15);
        // Units: millimolar; Initial value: 11.6
        double var_chaste_interface__potassium_dynamics__K_i = NV_Ith_S(rY, 16);
        // Units: millimolar; Initial value: 138.3
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // millisecond
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__R = 8314.4719999999998; // joule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96485.341499999995; // coulomb_per_millimole
        const double var_membrane__Cm = 0.185; // microF
        const double var_membrane__V_c = 0.016403999999999998; // micrometre3
        const double var_potassium_dynamics__K_o = 5.4000000000000004; // millimolar
        const double var_inward_rectifier_potassium_current__g_K1 = 5.4050000000000002; // nanoS_per_picoF
        const double var_transient_outward_current__s = var_chaste_interface__transient_outward_current_s_gate__s; // dimensionless
        const double var_transient_outward_current__r = var_chaste_interface__transient_outward_current_r_gate__r; // dimensionless
        const double var_transient_outward_current__g_to = 0.072999999999999995; // nanoS_per_picoF
        const double var_rapid_time_dependent_potassium_current__Xr1 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current__Xr2 = var_chaste_interface__rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_rapid_time_dependent_potassium_current__g_Kr = 0.096000000000000002; // nanoS_per_picoF
        const double var_slow_time_dependent_potassium_current__g_Ks = 0.245; // nanoS_per_picoF
        const double var_sodium_dynamics__Na_o = 140.0; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_slow_time_dependent_potassium_current__Xs = var_chaste_interface__slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_L_type_Ca_current__g_CaL = 0.000175; // litre_per_farad_second
        const double var_L_type_Ca_current__f = var_chaste_interface__L_type_Ca_current_f_gate__f; // dimensionless
        const double var_L_type_Ca_current__d = var_chaste_interface__L_type_Ca_current_d_gate__d; // dimensionless
        const double var_L_type_Ca_current__fCa = var_chaste_interface__L_type_Ca_current_fCa_gate__fCa; // dimensionless
        const double var_calcium_dynamics__Ca_o = 2.0; // millimolar
        const double var_sodium_potassium_pump_current__K_mk = 1.0; // millimolar
        const double var_sodium_potassium_pump_current__P_NaK = 1.3620000000000001; // picoA_per_picoF
        const double var_sodium_potassium_pump_current__K_mNa = 40.0; // millimolar
        const double var_fast_sodium_current__j = var_chaste_interface__fast_sodium_current_j_gate__j; // dimensionless
        const double var_fast_sodium_current__h = var_chaste_interface__fast_sodium_current_h_gate__h; // dimensionless
        const double var_fast_sodium_current__g_Na = 14.837999999999999; // nanoS_per_picoF
        const double var_fast_sodium_current__m = var_chaste_interface__fast_sodium_current_m_gate__m; // dimensionless
        const double var_sodium_background_current__g_bna = 0.00029; // nanoS_per_picoF
        const double var_sodium_calcium_exchanger_current__alpha = 2.5; // dimensionless
        const double var_sodium_calcium_exchanger_current__gamma = 0.34999999999999998; // dimensionless
        const double var_sodium_calcium_exchanger_current__K_sat = 0.10000000000000001; // dimensionless
        const double var_sodium_calcium_exchanger_current__Km_Ca = 1.3799999999999999; // millimolar
        const double var_sodium_calcium_exchanger_current__K_NaCa = 1000.0; // picoA_per_picoF
        const double var_sodium_calcium_exchanger_current__Km_Nai = 87.5; // millimolar
        const double var_calcium_background_current__g_bca = 0.00059199999999999997; // nanoS_per_picoF
        const double var_potassium_pump_current__g_pK = 0.0146; // nanoS_per_picoF
        const double var_calcium_pump_current__K_pCa = 0.00050000000000000001; // millimolar
        const double var_calcium_pump_current__g_pCa = 0.82499999999999996; // picoA_per_picoF
        const double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = var_rapid_time_dependent_potassium_current__Xr1; // dimensionless
        const double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = var_rapid_time_dependent_potassium_current__Xr2; // dimensionless
        const double var_slow_time_dependent_potassium_current_Xs_gate__Xs = var_slow_time_dependent_potassium_current__Xs; // dimensionless
        const double var_fast_sodium_current_m_gate__m = var_fast_sodium_current__m; // dimensionless
        const double var_fast_sodium_current_h_gate__h = var_fast_sodium_current__h; // dimensionless
        const double var_fast_sodium_current_j_gate__j = var_fast_sodium_current__j; // dimensionless
        const double var_L_type_Ca_current_d_gate__d = var_L_type_Ca_current__d; // dimensionless
        const double var_L_type_Ca_current_f_gate__f = var_L_type_Ca_current__f; // dimensionless
        const double var_L_type_Ca_current_fCa_gate__fCa = var_L_type_Ca_current__fCa; // dimensionless
        const double var_transient_outward_current_s_gate__s_gateparam = 28.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_t1V = 67.0; // millivolt
        const double var_transient_outward_current_s_gate__tau_s_term2 = 0.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_term1 = 1000.0; // millisecond
        const double var_transient_outward_current_s_gate__tau_s_t1Vdenom = 1000.0; // millivolt_square
        const double var_transient_outward_current_s_gate__tau_sconstant1 = 8.0; // millisecond
        const double var_transient_outward_current_s_gate__s = var_transient_outward_current__s; // dimensionless
        const double var_transient_outward_current_r_gate__r = var_transient_outward_current__r; // dimensionless
        const double var_calcium_dynamics__Ca_i = var_chaste_interface__calcium_dynamics__Ca_i; // millimolar
        const double var_calcium_dynamics__Ca_SR = var_chaste_interface__calcium_dynamics__Ca_SR; // millimolar
        const double var_calcium_dynamics__b_rel = 0.25; // millimolar
        const double var_calcium_dynamics__a_rel = 0.016463999999999999; // millimolar_per_millisecond
        const double var_calcium_dynamics__c_rel = 0.0082319999999999997; // millimolar_per_millisecond
        const double var_calcium_dynamics__g = var_chaste_interface__calcium_dynamics__g; // dimensionless
        const double var_calcium_dynamics__Vmax_up = 0.00042499999999999998; // millimolar_per_millisecond
        const double var_calcium_dynamics__K_up = 0.00025000000000000001; // millimolar
        const double var_calcium_dynamics__V_leak = 8.0000000000000007e-05; // per_millisecond
        const double var_calcium_dynamics__tau_g = 2.0; // millisecond
        const double var_calcium_dynamics__Buf_c = 0.14999999999999999; // millimolar
        const double var_calcium_dynamics__K_buf_c = 0.001; // millimolar
        const double var_calcium_dynamics__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_calcium_dynamics__Buf_sr = 10.0; // millimolar
        const double var_calcium_dynamics__V_sr = 0.0010939999999999999; // micrometre3
        const double var_sodium_dynamics__Na_i = var_chaste_interface__sodium_dynamics__Na_i; // millimolar
        const double var_potassium_dynamics__K_i = var_chaste_interface__potassium_dynamics__K_i; // millimolar
        const double var_t2 = var_membrane__R * var_membrane__T; // dimensionless
        const double var_t3 = 1.0 / var_membrane__F; // dimensionless
        const double var_t4 = 1.0 / var_potassium_dynamics__K_i; // dimensionless
        const double var_t6 = log(var_potassium_dynamics__K_o * var_t4); // dimensionless
        const double var_t8 = (var_t2 * var_t3) * var_t6; // dimensionless
        const double var_t11 = exp(((0.059999999999999998 * var_membrane__V) - (0.059999999999999998 * var_t8)) - 12.0); // dimensionless
        const double var_t12 = 1.0 + var_t11; // dimensionless
        const double var_t13 = pow(var_t12, 2.0); // dimensionless
        const double var_t14 = 1.0 / var_t13; // dimensionless
        const double var_t15 = var_inward_rectifier_potassium_current__g_K1 * var_t14; // dimensionless
        const double var_t16 = 1.0 / var_t12; // dimensionless
        const double var_t21 = exp(((0.00020000000000000001 * var_membrane__V) - (0.00020000000000000001 * var_t8)) + 0.02); // dimensionless
        const double var_t23 = 0.10000000000000001 * var_membrane__V; // dimensionless
        const double var_t26 = exp((var_t23 - (0.10000000000000001 * var_t8)) - 1.0); // dimensionless
        const double var_t27 = (3.0 * var_t21) + var_t26; // dimensionless
        const double var_t31 = exp(((-0.5) * var_membrane__V) + (0.5 * var_t8)); // dimensionless
        const double var_t32 = 1.0 + var_t31; // dimensionless
        const double var_t33 = 1.0 / var_t32; // dimensionless
        const double var_t35 = (0.10000000000000001 * var_t16) + (var_t27 * var_t33); // dimensionless
        const double var_t36 = 1.0 / var_t35; // dimensionless
        const double var_t38 = pow(var_potassium_dynamics__K_o, 1.0 / 2.0); // dimensionless
        const double var_t39 = var_membrane__V - var_t8; // dimensionless
        const double var_t40 = var_t38 * var_t39; // dimensionless
        const double var_t43 = (((0.0025819888969999998 * var_t15) * var_t36) * var_t40) * var_t11; // dimensionless
        const double var_t44 = var_inward_rectifier_potassium_current__g_K1 * var_t16; // dimensionless
        const double var_t45 = pow(var_t35, 2.0); // dimensionless
        const double var_t47 = var_t44 / var_t45; // dimensionless
        const double var_t54 = pow(var_t32, 2.0); // dimensionless
        const double var_t56 = var_t27 / var_t54; // dimensionless
        const double var_t62 = ((0.043033148290000003 * var_t47) * var_t40) * (((((-0.0060000000000000001) * var_t14) * var_t11) + (((0.00059999999999999995 * var_t21) + (0.10000000000000001 * var_t26)) * var_t33)) + ((0.5 * var_t56) * var_t31)); // dimensionless
        const double var_t63 = var_t36 * var_t38; // dimensionless
        const double var_t64 = var_t44 * var_t63; // dimensionless
        const double var_t65 = 0.043033148290000003 * var_t64; // dimensionless
        const double var_t66 = var_transient_outward_current__g_to * var_transient_outward_current_r_gate__r; // dimensionless
        const double var_t67 = var_t66 * var_transient_outward_current_s_gate__s; // dimensionless
        const double var_t68 = var_rapid_time_dependent_potassium_current__g_Kr * var_t38; // dimensionless
        const double var_t70 = (var_t68 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_t71 = 0.43033148290000001 * var_t70; // dimensionless
        const double var_t72 = pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t73 = var_slow_time_dependent_potassium_current__g_Ks * var_t72; // dimensionless
        const double var_t74 = var_L_type_Ca_current__g_CaL * var_L_type_Ca_current_d_gate__d; // dimensionless
        const double var_t75 = var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_fCa_gate__fCa; // dimensionless
        const double var_t77 = pow(var_membrane__F, 2.0); // dimensionless
        const double var_t78 = 1.0 / var_membrane__R; // dimensionless
        const double var_t79 = var_t77 * var_t78; // dimensionless
        const double var_t80 = 1.0 / var_membrane__T; // dimensionless
        const double var_t82 = var_t78 * var_t80; // dimensionless
        const double var_t83 = (var_membrane__V * var_membrane__F) * var_t82; // dimensionless
        const double var_t85 = exp(2.0 * var_t83); // dimensionless
        const double var_t86 = var_calcium_dynamics__Ca_i * var_t85; // dimensionless
        const double var_t88 = var_t86 - (0.34100000000000003 * var_calcium_dynamics__Ca_o); // dimensionless
        const double var_t90 = var_t85 - 1.0; // dimensionless
        const double var_t91 = 1.0 / var_t90; // dimensionless
        const double var_t93 = ((var_t79 * var_t80) * var_t88) * var_t91; // dimensionless
        const double var_t95 = ((4.0 * var_t74) * var_t75) * var_t93; // dimensionless
        const double var_t97 = (var_t74 * var_t75) * var_membrane__V; // dimensionless
        const double var_t99 = pow(var_membrane__R, 2.0); // dimensionless
        const double var_t102 = pow(var_membrane__T, 2.0); // dimensionless
        const double var_t104 = ((var_t77 * var_membrane__F) / var_t99) / var_t102; // dimensionless
        const double var_t108 = (((8.0 * var_t97) * var_t104) * var_t86) * var_t91; // dimensionless
        const double var_t109 = pow(var_t90, 2.0); // dimensionless
        const double var_t115 = ((((8.0 * var_t97) * var_t104) * var_t88) / var_t109) * var_t85; // dimensionless
        const double var_t116 = var_sodium_potassium_pump_current__P_NaK * var_potassium_dynamics__K_o; // dimensionless
        const double var_t118 = 1.0 / (var_potassium_dynamics__K_o + var_sodium_potassium_pump_current__K_mk); // dimensionless
        const double var_t119 = var_t116 * var_t118; // dimensionless
        const double var_t120 = var_sodium_dynamics__Na_i + var_sodium_potassium_pump_current__K_mNa; // dimensionless
        const double var_t121 = 1.0 / var_t120; // dimensionless
        const double var_t124 = exp((-0.10000000000000001) * var_t83); // dimensionless
        const double var_t126 = exp(-var_t83); // dimensionless
        const double var_t128 = (1.0 + (0.1245 * var_t124)) + (0.035299999999999998 * var_t126); // dimensionless
        const double var_t129 = pow(var_t128, 2.0); // dimensionless
        const double var_t131 = var_membrane__F * var_t78; // dimensionless
        const double var_t141 = (((var_t119 * var_sodium_dynamics__Na_i) * var_t121) / var_t129) * (((((-0.012449999999999999) * var_t131) * var_t80) * var_t124) - (((0.035299999999999998 * var_t131) * var_t80) * var_t126)); // dimensionless
        const double var_t142 = pow(var_fast_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t144 = (var_fast_sodium_current__g_Na * var_t142) * var_fast_sodium_current_m_gate__m; // dimensionless
        const double var_t145 = var_fast_sodium_current_h_gate__h * var_fast_sodium_current_j_gate__j; // dimensionless
        const double var_t146 = var_t144 * var_t145; // dimensionless
        const double var_t150 = var_t131 * var_t80; // dimensionless
        const double var_t152 = exp((var_sodium_calcium_exchanger_current__gamma * var_membrane__V) * var_t150); // dimensionless
        const double var_t154 = pow(var_sodium_dynamics__Na_i, 2.0); // dimensionless
        const double var_t155 = var_t154 * var_sodium_dynamics__Na_i; // dimensionless
        const double var_t159 = var_sodium_calcium_exchanger_current__gamma - 1.0; // dimensionless
        const double var_t164 = exp((var_t159 * var_membrane__V) * var_t150); // dimensionless
        const double var_t165 = pow(var_sodium_dynamics__Na_o, 2.0); // dimensionless
        const double var_t166 = var_t165 * var_sodium_dynamics__Na_o; // dimensionless
        const double var_t169 = ((var_t164 * var_t166) * var_calcium_dynamics__Ca_i) * var_sodium_calcium_exchanger_current__alpha; // dimensionless
        const double var_t173 = pow(var_sodium_calcium_exchanger_current__Km_Nai, 2.0); // dimensionless
        const double var_t176 = 1.0 / ((var_t173 * var_sodium_calcium_exchanger_current__Km_Nai) + var_t166); // dimensionless
        const double var_t178 = 1.0 / (var_sodium_calcium_exchanger_current__Km_Ca + var_calcium_dynamics__Ca_o); // dimensionless
        const double var_t179 = var_t176 * var_t178; // dimensionless
        const double var_t181 = 1.0 + (var_sodium_calcium_exchanger_current__K_sat * var_t164); // dimensionless
        const double var_t182 = 1.0 / var_t181; // dimensionless
        const double var_t183 = var_t179 * var_t182; // dimensionless
        const double var_t184 = (var_sodium_calcium_exchanger_current__K_NaCa * (((((((var_sodium_calcium_exchanger_current__gamma * var_membrane__F) * var_t78) * var_t80) * var_t152) * var_t155) * var_calcium_dynamics__Ca_o) - (((var_t159 * var_membrane__F) * var_t82) * var_t169))) * var_t183; // dimensionless
        const double var_t188 = var_sodium_calcium_exchanger_current__K_NaCa * (((var_t152 * var_t155) * var_calcium_dynamics__Ca_o) - var_t169); // dimensionless
        const double var_t189 = pow(var_t181, 2.0); // dimensionless
        const double var_t197 = ((((((var_t188 * var_t179) / var_t189) * var_sodium_calcium_exchanger_current__K_sat) * var_t159) * var_membrane__F) * var_t82) * var_t164; // dimensionless
        const double var_t200 = exp(4.1806020080000001 - (0.16722408029999999 * var_membrane__V)); // dimensionless
        const double var_t201 = 1.0 + var_t200; // dimensionless
        const double var_t202 = 1.0 / var_t201; // dimensionless
        const double var_t203 = var_potassium_pump_current__g_pK * var_t202; // dimensionless
        const double var_t205 = pow(var_t201, 2.0); // dimensionless
        const double var_t209 = (((0.16722408029999999 * var_potassium_pump_current__g_pK) * var_t39) / var_t205) * var_t200; // dimensionless
        const double var_t210 = (((((((((((((((var_t43 + var_t62) - var_t65) - var_t67) - var_t71) - var_t73) - var_t95) - var_t108) + var_t115) + var_t141) - var_t146) - var_sodium_background_current__g_bna) - var_t184) + var_t197) - var_calcium_background_current__g_bca) - var_t203) - var_t209; // dimensionless
        const double var_t222 = 1.0 / (var_potassium_dynamics__K_i + (var_reversal_potentials__P_kna * var_sodium_dynamics__Na_i)); // dimensionless
        const double var_t224 = log((var_potassium_dynamics__K_o + (var_reversal_potentials__P_kna * var_sodium_dynamics__Na_o)) * var_t222); // dimensionless
        const double var_t228 = (var_slow_time_dependent_potassium_current__g_Ks * var_slow_time_dependent_potassium_current_Xs_gate__Xs) * (var_membrane__V - ((var_t2 * var_t3) * var_t224)); // dimensionless
        const double var_t230 = var_fast_sodium_current__g_Na * var_t142; // dimensionless
        const double var_t231 = 1.0 / var_sodium_dynamics__Na_i; // dimensionless
        const double var_t233 = log(var_sodium_dynamics__Na_o * var_t231); // dimensionless
        const double var_t236 = var_membrane__V - ((var_t2 * var_t3) * var_t233); // dimensionless
        const double var_t244 = var_L_type_Ca_current__g_CaL * var_L_type_Ca_current_f_gate__f; // dimensionless
        const double var_t245 = var_L_type_Ca_current_fCa_gate__fCa * var_membrane__V; // dimensionless
        const double var_t252 = var_L_type_Ca_current_f_gate__f * var_membrane__V; // dimensionless
        const double var_t256 = var_t66 * var_t39; // dimensionless
        const double var_t258 = (var_transient_outward_current__g_to * var_transient_outward_current_s_gate__s) * var_t39; // dimensionless
        const double var_t263 = ((((4.0 * var_t97) * var_t79) * var_t80) * var_t85) * var_t91; // dimensionless
        const double var_t264 = var_sodium_calcium_exchanger_current__K_NaCa * var_t164; // dimensionless
        const double var_t267 = var_t178 * var_t182; // dimensionless
        const double var_t269 = (((var_t264 * var_t166) * var_sodium_calcium_exchanger_current__alpha) * var_t176) * var_t267; // dimensionless
        const double var_t271 = var_membrane__T * var_t3; // dimensionless
        const double var_t272 = 1.0 / var_calcium_dynamics__Ca_i; // dimensionless
        const double var_t275 = (((0.5 * var_calcium_background_current__g_bca) * var_membrane__R) * var_t271) * var_t272; // dimensionless
        const double var_t276 = var_calcium_dynamics__Ca_i + var_calcium_pump_current__K_pCa; // dimensionless
        const double var_t277 = 1.0 / var_t276; // dimensionless
        const double var_t278 = var_calcium_pump_current__g_pCa * var_t277; // dimensionless
        const double var_t279 = var_calcium_pump_current__g_pCa * var_calcium_dynamics__Ca_i; // dimensionless
        const double var_t280 = pow(var_t276, 2.0); // dimensionless
        const double var_t282 = var_t279 / var_t280; // dimensionless
        const double var_t284 = var_t73 * var_membrane__R; // dimensionless
        const double var_t287 = ((var_t284 * var_t271) * var_t222) * var_reversal_potentials__P_kna; // dimensionless
        const double var_t289 = 1.0 / var_t128; // dimensionless
        const double var_t291 = ((var_t116 * var_t118) * var_t121) * var_t289; // dimensionless
        const double var_t292 = pow(var_t120, 2.0); // dimensionless
        const double var_t296 = ((var_t119 * var_sodium_dynamics__Na_i) / var_t292) * var_t289; // dimensionless
        const double var_t299 = ((var_t146 * var_t2) * var_t3) * var_t231; // dimensionless
        const double var_t302 = ((var_sodium_background_current__g_bna * var_membrane__R) * var_t271) * var_t231; // dimensionless
        const double var_t307 = ((((var_sodium_calcium_exchanger_current__K_NaCa * var_t152) * var_t154) * var_calcium_dynamics__Ca_o) * var_t176) * var_t267; // dimensionless
        const double var_t312 = var_t3 * var_t4; // dimensionless
        const double var_t313 = var_t312 * var_t11; // dimensionless
        const double var_t338 = var_t2 * var_t312; // dimensionless
        const double var_t350 = ((((((((((0.0025819888969999998 * var_t15) * var_t63) * var_t39) * var_t2) * var_t313) + (((0.043033148290000003 * var_t47) * var_t40) * (((((((-0.0060000000000000001) * var_t14) * var_membrane__R) * var_membrane__T) * var_t313) + (((((0.00059999999999999995 * var_t2) * var_t312) * var_t21) + (((0.10000000000000001 * var_t2) * var_t312) * var_t26)) * var_t33)) + (((((0.5 * var_t56) * var_membrane__R) * var_t271) * var_t4) * var_t31)))) - ((0.043033148290000003 * var_t64) * var_t338)) - (var_t67 * var_t338)) - ((0.43033148290000001 * var_t70) * var_t338)) - ((var_t284 * var_t271) * var_t222)) - ((((var_potassium_pump_current__g_pK * var_membrane__R) * var_membrane__T) * var_t312) * var_t202); // dimensionless
        const double var_t351 = (1.0 / 7.0) * var_membrane__V; // dimensionless
        const double var_t353 = exp(((-26.0) / 7.0) - var_t351); // dimensionless
        const double var_t354 = 1.0 + var_t353; // dimensionless
        const double var_t355 = pow(var_t354, 2.0); // dimensionless
        const double var_t358 = (1.0 / 10.0) * var_membrane__V; // dimensionless
        const double var_t360 = exp(((-9.0) / 2.0) - var_t358); // dimensionless
        const double var_t361 = 1.0 + var_t360; // dimensionless
        const double var_t364 = exp((0.086956521740000001 * var_membrane__V) + 2.6086956520000002); // dimensionless
        const double var_t365 = 1.0 + var_t364; // dimensionless
        const double var_t366 = var_t361 * var_t365; // dimensionless
        const double var_t370 = (1.0 / var_t354) - var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1; // dimensionless
        const double var_t381 = exp(((1.0 / 24.0) * var_membrane__V) + (11.0 / 3.0)); // dimensionless
        const double var_t382 = 1.0 + var_t381; // dimensionless
        const double var_t383 = pow(var_t382, 2.0); // dimensionless
        const double var_t386 = (1.0 / 20.0) * var_membrane__V; // dimensionless
        const double var_t388 = exp((-3.0) - var_t386); // dimensionless
        const double var_t389 = 1.0 + var_t388; // dimensionless
        const double var_t391 = exp(var_t386 - 3.0); // dimensionless
        const double var_t392 = 1.0 + var_t391; // dimensionless
        const double var_t393 = var_t389 * var_t392; // dimensionless
        const double var_t397 = (1.0 / var_t382) - var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2; // dimensionless
        const double var_t408 = exp(((-5.0) / 14.0) - ((1.0 / 14.0) * var_membrane__V)); // dimensionless
        const double var_t409 = 1.0 + var_t408; // dimensionless
        const double var_t410 = pow(var_t409, 2.0); // dimensionless
        const double var_t413 = (1.0 / 6.0) * var_membrane__V; // dimensionless
        const double var_t415 = exp(((-5.0) / 3.0) - var_t413); // dimensionless
        const double var_t417 = pow(1.0 + var_t415, 1.0 / 2.0); // dimensionless
        const double var_t418 = var_t417 * var_t392; // dimensionless
        const double var_t422 = (1.0 / var_t409) - var_slow_time_dependent_potassium_current_Xs_gate__Xs; // dimensionless
        const double var_t435 = exp((-6.2967884820000002) - (0.1107419712 * var_membrane__V)); // dimensionless
        const double var_t436 = 1.0 + var_t435; // dimensionless
        const double var_t437 = pow(var_t436, 2.0); // dimensionless
        const double var_t441 = (1.0 / 5.0) * var_membrane__V; // dimensionless
        const double var_t443 = exp((-12.0) - var_t441); // dimensionless
        const double var_t444 = 1.0 + var_t443; // dimensionless
        const double var_t446 = exp(var_t441 + 7.0); // dimensionless
        const double var_t447 = 1.0 + var_t446; // dimensionless
        const double var_t452 = exp(((1.0 / 200.0) * var_membrane__V) - (1.0 / 4.0)); // dimensionless
        const double var_t453 = 1.0 + var_t452; // dimensionless
        const double var_t456 = (0.10000000000000001 / var_t447) + (0.10000000000000001 / var_t453); // dimensionless
        const double var_t457 = 1.0 / var_t456; // dimensionless
        const double var_t458 = var_t444 * var_t457; // dimensionless
        const double var_t462 = (1.0 / var_t437) - var_fast_sodium_current_m_gate__m; // dimensionless
        const double var_t467 = pow(var_t456, 2.0); // dimensionless
        const double var_t469 = pow(var_t447, 2.0); // dimensionless
        const double var_t473 = pow(var_t453, 2.0); // dimensionless
        const double var_t483 = exp((0.134589502 * var_membrane__V) + 9.6298788680000005); // dimensionless
        const double var_t484 = 1.0 + var_t483; // dimensionless
        const double var_t485 = pow(var_t484, 2.0); // dimensionless
        const double var_t488 = ((1.0 / var_t485) / var_t484) * var_t483; // dimensionless
        const double var_t489 = var_membrane__V < (-40.0); // dimensionless
        const double var_t492 = exp(((-0.14705882349999999) * var_membrane__V) - 11.764705879999999); // dimensionless
        const double var_t494 = var_t489 ? (0.057000000000000002 * var_t492) : 0.0; // dimensionless
        const double var_t496 = exp(0.079000000000000001 * var_membrane__V); // dimensionless
        const double var_t499 = exp(0.34849999999999998 * var_membrane__V); // dimensionless
        const double var_t504 = exp(((-0.090090090090000005) * var_membrane__V) - 0.96036036039999995); // dimensionless
        const double var_t509 = var_t489 ? ((2.7000000000000002 * var_t496) + (310000.0 * var_t499)) : (0.77000000000000002 / (0.13 + (0.13 * var_t504))); // dimensionless
        const double var_t510 = var_t494 + var_t509; // dimensionless
        const double var_t513 = 1.0 / var_t485; // dimensionless
        const double var_t515 = var_membrane__V < (-40.0); // dimensionless
        const double var_t518 = (-40.0) < var_membrane__V; // dimensionless
        const double var_t519 = var_t515 ? ((-0.0083823529409999993) * var_t492) : ((-40.0) <= var_membrane__V) ? 0.0 : NAN; // dimensionless
        const double var_t521 = exp(0.079000000000000001 * var_membrane__V); // dimensionless
        const double var_t524 = exp(0.34849999999999998 * var_membrane__V); // dimensionless
        const double var_t529 = pow(0.13 + (0.13 * var_t504), 2.0); // dimensionless
        const double var_t533 = (var_membrane__V <= (-40.0)) ? ((0.21329999999999999 * var_t521) + (108035.0 * var_t524)) : var_t518 ? ((0.009018018018 / var_t529) * var_t504) : NAN; // dimensionless
        const double var_t538 = exp(0.24440000000000001 * var_membrane__V); // dimensionless
        const double var_t541 = exp((-0.043909999999999998) * var_membrane__V); // dimensionless
        const double var_t548 = exp((0.311 * var_membrane__V) + 24.640529999999998); // dimensionless
        const double var_t552 = var_t489 ? (((((-25428.0) * var_t538) - (6.9480000000000002e-06 * var_t541)) * (var_membrane__V + 37.780000000000001)) / (1.0 + var_t548)) : 0.0; // dimensionless
        const double var_t554 = exp((-0.01052) * var_membrane__V); // dimensionless
        const double var_t557 = exp(((-0.13780000000000001) * var_membrane__V) - 5.5312919999999997); // dimensionless
        const double var_t563 = exp(0.057000000000000002 * var_membrane__V); // dimensionless
        const double var_t565 = exp((-var_t23) - 3.2000000000000002); // dimensionless
        const double var_t570 = var_t489 ? ((0.024240000000000001 * var_t554) / (1.0 + var_t557)) : ((0.59999999999999998 * var_t563) / (1.0 + var_t565)); // dimensionless
        const double var_t571 = var_t552 + var_t570; // dimensionless
        const double var_t576 = exp(0.24440000000000001 * var_membrane__V); // dimensionless
        const double var_t579 = exp((-0.043909999999999998) * var_membrane__V); // dimensionless
        const double var_t582 = var_membrane__V + 37.780000000000001; // dimensionless
        const double var_t586 = exp((0.311 * var_membrane__V) + 24.640530009999999); // dimensionless
        const double var_t587 = 1.0 + var_t586; // dimensionless
        const double var_t588 = 1.0 / var_t587; // dimensionless
        const double var_t592 = ((-25428.0) * var_t576) - (6.9480000000000002e-06 * var_t579); // dimensionless
        const double var_t595 = pow(var_t587, 2.0); // dimensionless
        const double var_t601 = var_t515 ? (((((((-6214.6031999999996) * var_t576) + (3.0508668000000001e-07 * var_t579)) * var_t582) * var_t588) + (var_t592 * var_t588)) - ((((0.311 * var_t592) * var_t582) / var_t595) * var_t586)) : ((-40.0) <= var_membrane__V) ? 0.0 : NAN; // dimensionless
        const double var_t603 = exp((-0.01052) * var_membrane__V); // dimensionless
        const double var_t606 = exp(((-0.13780000000000001) * var_membrane__V) - 5.5312919950000001); // dimensionless
        const double var_t607 = 1.0 + var_t606; // dimensionless
        const double var_t611 = pow(var_t607, 2.0); // dimensionless
        const double var_t618 = exp(0.057000000000000002 * var_membrane__V); // dimensionless
        const double var_t621 = exp(((-0.10000000000000001) * var_membrane__V) - 3.2000000000000002); // dimensionless
        const double var_t622 = 1.0 + var_t621; // dimensionless
        const double var_t626 = pow(var_t622, 2.0); // dimensionless
        const double var_t632 = (var_membrane__V <= (-40.0)) ? ((((-0.00025500479999999997) * var_t603) / var_t607) + (((0.003340272 * var_t603) / var_t611) * var_t606)) : var_t518 ? (((0.034200000000000001 * var_t618) / var_t622) + (((0.059999999999999998 * var_t618) / var_t626) * var_t621)) : NAN; // dimensionless
        const double var_t638 = exp((-0.66666666649999995) - (0.1333333333 * var_membrane__V)); // dimensionless
        const double var_t639 = 1.0 + var_t638; // dimensionless
        const double var_t640 = pow(var_t639, 2.0); // dimensionless
        const double var_t645 = exp(((-35.0) / 13.0) - ((1.0 / 13.0) * var_membrane__V)); // dimensionless
        const double var_t646 = 1.0 + var_t645; // dimensionless
        const double var_t649 = (1.3999999999999999 / var_t646) + 0.25; // dimensionless
        const double var_t651 = exp(var_t441 + 1.0); // dimensionless
        const double var_t652 = 1.0 + var_t651; // dimensionless
        const double var_t653 = 1.0 / var_t652; // dimensionless
        const double var_t657 = exp((5.0 / 2.0) - var_t386); // dimensionless
        const double var_t658 = 1.0 + var_t657; // dimensionless
        const double var_t660 = ((1.3999999999999999 * var_t649) * var_t653) + (1.0 / var_t658); // dimensionless
        const double var_t661 = 1.0 / var_t660; // dimensionless
        const double var_t666 = pow(var_t660, 2.0); // dimensionless
        const double var_t669 = pow(var_t646, 2.0); // dimensionless
        const double var_t674 = pow(var_t652, 2.0); // dimensionless
        const double var_t679 = pow(var_t658, 2.0); // dimensionless
        const double var_t687 = exp(var_t351 + (20.0 / 7.0)); // dimensionless
        const double var_t688 = 1.0 + var_t687; // dimensionless
        const double var_t689 = pow(var_t688, 2.0); // dimensionless
        const double var_t693 = pow(var_membrane__V + 27.0, 2.0); // dimensionless
        const double var_t695 = exp(((-1.0) / 240.0) * var_t693); // dimensionless
        const double var_t698 = exp((5.0 / 2.0) - var_t358); // dimensionless
        const double var_t699 = 1.0 + var_t698; // dimensionless
        const double var_t702 = ((1125.0 * var_t695) + 80.0) + (165.0 / var_t699); // dimensionless
        const double var_t703 = 1.0 / var_t702; // dimensionless
        const double var_t708 = pow(var_t702, 2.0); // dimensionless
        const double var_t715 = pow(var_t699, 2.0); // dimensionless
        const double var_t722 = pow(var_calcium_dynamics__Ca_i, 2.0); // dimensionless
        const double var_t723 = pow(var_t722, 2.0); // dimensionless
        const double var_t724 = pow(var_t723, 2.0); // dimensionless
        const double var_t726 = 1.0 + (8.0340237690000001e+27 * var_t724); // dimensionless
        const double var_t731 = exp((10000.0 * var_calcium_dynamics__Ca_i) - 5.0); // dimensionless
        const double var_t732 = 1.0 + var_t731; // dimensionless
        const double var_t737 = exp((1250.0 * var_calcium_dynamics__Ca_i) - 0.9375); // dimensionless
        const double var_t738 = 1.0 + var_t737; // dimensionless
        const double var_t743 = (-60.0) < var_membrane__V; // dimensionless
        const double var_t744 = (var_L_type_Ca_current_fCa_gate__fCa < ((((0.68493150680000003 / var_t726) + (0.068493150680000003 / var_t732)) + (0.13698630140000001 / var_t738)) + 0.15753424660000001)) && var_t743; // dimensionless
        const double var_t745 = var_t744 ? 0.0 : 0.0; // dimensionless
        const double var_t746 = var_t744 ? 0.0 : ((-1.0) / 2.0); // dimensionless
        const double var_t747 = pow(var_t726, 2.0); // dimensionless
        const double var_t749 = var_t722 * var_calcium_dynamics__Ca_i; // dimensionless
        const double var_t750 = var_t723 * var_t749; // dimensionless
        const double var_t753 = pow(var_t732, 2.0); // dimensionless
        const double var_t757 = pow(var_t738, 2.0); // dimensionless
        const double var_t762 = var_t744 ? 0.0 : (((((-2.201102402e+28) / var_t747) * var_t750) - ((342.46575339999998 / var_t753) * var_t731)) - ((85.616438380000005 / var_t757) * var_t737)); // dimensionless
        const double var_t764 = exp(((1.0 / 5.0) * var_membrane__V) + ((1.0 / 5.0) * var_transient_outward_current_s_gate__s_gateparam)); // dimensionless
        const double var_t765 = 1.0 + var_t764; // dimensionless
        const double var_t766 = pow(var_t765, 2.0); // dimensionless
        const double var_t769 = var_membrane__V + var_transient_outward_current_s_gate__tau_s_t1V; // dimensionless
        const double var_t770 = pow(var_t769, 2.0); // dimensionless
        const double var_t771 = 1.0 / var_transient_outward_current_s_gate__tau_s_t1Vdenom; // dimensionless
        const double var_t773 = exp((-var_t770) * var_t771); // dimensionless
        const double var_t776 = exp(var_t441 - 4.0); // dimensionless
        const double var_t777 = 1.0 + var_t776; // dimensionless
        const double var_t780 = ((var_transient_outward_current_s_gate__tau_s_term1 * var_t773) + (var_transient_outward_current_s_gate__tau_s_term2 / var_t777)) + var_transient_outward_current_s_gate__tau_sconstant1; // dimensionless
        const double var_t781 = 1.0 / var_t780; // dimensionless
        const double var_t786 = pow(var_t780, 2.0); // dimensionless
        const double var_t793 = pow(var_t777, 2.0); // dimensionless
        const double var_t802 = exp((10.0 / 3.0) - var_t413); // dimensionless
        const double var_t803 = 1.0 + var_t802; // dimensionless
        const double var_t804 = pow(var_t803, 2.0); // dimensionless
        const double var_t808 = pow(40.0 + var_membrane__V, 2.0); // dimensionless
        const double var_t810 = exp(((-1.0) / 1800.0) * var_t808); // dimensionless
        const double var_t812 = (9.5 * var_t810) + 0.80000000000000004; // dimensionless
        const double var_t813 = 1.0 / var_t812; // dimensionless
        const double var_t818 = pow(var_t812, 2.0); // dimensionless
        const double var_t827 = var_calcium_dynamics__Buf_c * var_calcium_dynamics__K_buf_c; // dimensionless
        const double var_t828 = var_calcium_dynamics__Ca_i + var_calcium_dynamics__K_buf_c; // dimensionless
        const double var_t829 = pow(var_t828, 2.0); // dimensionless
        const double var_t832 = 1.0 + (var_t827 / var_t829); // dimensionless
        const double var_t833 = 1.0 / var_t832; // dimensionless
        const double var_t838 = 1.0 / var_membrane__V_c; // dimensionless
        const double var_t840 = (var_t838 * var_t3) * var_membrane__Cm; // dimensionless
        const double var_t843 = pow(var_calcium_dynamics__Ca_SR, 2.0); // dimensionless
        const double var_t845 = pow(var_calcium_dynamics__b_rel, 2.0); // dimensionless
        const double var_t846 = var_t845 + var_t843; // dimensionless
        const double var_t847 = 1.0 / var_t846; // dimensionless
        const double var_t849 = ((var_calcium_dynamics__a_rel * var_t843) * var_t847) + var_calcium_dynamics__c_rel; // dimensionless
        const double var_t851 = var_t245 * var_membrane__F; // dimensionless
        const double var_t856 = (((var_t82 * var_t88) * var_t91) * var_t838) * var_membrane__Cm; // dimensionless
        const double var_t862 = (var_t833 * var_L_type_Ca_current__g_CaL) * var_L_type_Ca_current_d_gate__d; // dimensionless
        const double var_t870 = pow(var_t832, 2.0); // dimensionless
        const double var_t873 = var_calcium_dynamics__V_leak * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_i); // dimensionless
        const double var_t874 = pow(var_calcium_dynamics__K_up, 2.0); // dimensionless
        const double var_t877 = 1.0 + (var_t874 / var_t722); // dimensionless
        const double var_t879 = var_calcium_dynamics__Vmax_up / var_t877; // dimensionless
        const double var_t881 = (var_t849 * var_L_type_Ca_current_d_gate__d) * var_calcium_dynamics__g; // dimensionless
        const double var_t885 = log(var_calcium_dynamics__Ca_o * var_t272); // dimensionless
        const double var_t896 = var_t3 * var_membrane__Cm; // dimensionless
        const double var_t906 = pow(var_t877, 2.0); // dimensionless
        const double var_t912 = (((2.0 * var_calcium_dynamics__Vmax_up) / var_t906) * var_t874) / var_t749; // dimensionless
        const double var_t925 = pow(var_t846, 2.0); // dimensionless
        const double var_t931 = var_calcium_dynamics__V_leak + (((2.0 * (((var_calcium_dynamics__a_rel * var_calcium_dynamics__Ca_SR) * var_t847) - (((var_calcium_dynamics__a_rel * var_t843) * var_calcium_dynamics__Ca_SR) / var_t925))) * var_L_type_Ca_current_d_gate__d) * var_calcium_dynamics__g); // dimensionless
        const double var_t943 = var_calcium_dynamics__Ca_SR + var_calcium_dynamics__K_buf_sr; // dimensionless
        const double var_t944 = pow(var_t943, 2.0); // dimensionless
        const double var_t947 = 1.0 + ((var_calcium_dynamics__Buf_sr * var_calcium_dynamics__K_buf_sr) / var_t944); // dimensionless
        const double var_t949 = (1.0 / var_t947) * var_membrane__V_c; // dimensionless
        const double var_t950 = 1.0 / var_calcium_dynamics__V_sr; // dimensionless
        const double var_t951 = var_t950 * var_t849; // dimensionless
        const double var_t957 = pow(var_t947, 2.0); // dimensionless
        const double var_t976 = (5.43991024e+20 * var_t723) * var_t722; // dimensionless
        const double var_t979 = pow(var_t724, 2.0); // dimensionless
        const double var_t980 = 1.9720198860000001e+55 * var_t979; // dimensionless
        const double var_t983 = (var_calcium_dynamics__Ca_i < 0.00035) ? (1.0 / (1.0 + var_t976)) : (1.0 / (1.0 + var_t980)); // dimensionless
        const double var_t985 = (var_calcium_dynamics__g < var_t983) && var_t743; // dimensionless
        const double var_t986 = var_t985 ? 0.0 : 0.0; // dimensionless
        const double var_t989 = pow(1.0 + var_t976, 2.0); // dimensionless
        const double var_t997 = pow(1.0 + var_t980, 2.0); // dimensionless
        const double var_t1002 = (var_calcium_dynamics__Ca_i <= 0.00035) ? ((((-3.2639461439999999e+21) / var_t989) * var_t723) * var_calcium_dynamics__Ca_i) : (0.00035 < var_calcium_dynamics__Ca_i) ? ((((-3.1552318180000002e+56) / var_t997) * var_t724) * var_t750) : NAN; // dimensionless
        const double var_t1003 = 1.0 / var_calcium_dynamics__tau_g; // dimensionless
        const double var_t1005 = var_t985 ? 0.0 : (var_t1002 * var_t1003); // dimensionless
        const double var_t1006 = var_t985 ? 0.0 : (-var_t1003); // dimensionless
        const double var_t1015 = (var_t236 * var_t838) * var_t896; // dimensionless
        const double var_t1040 = (var_t39 * var_t838) * var_t896; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t210);
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((((-1.0) / 2.0) * var_t833) * (((((var_t95 + var_t108) - var_t115) + var_calcium_background_current__g_bca) - (2.0 * var_t184)) + (2.0 * var_t197))) * var_t840);
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((((1.0 / 18900.0) / var_t355) * var_t353) * var_t366) - ((((1.0 / 27000.0) * var_t370) * var_t360) * var_t365)) + (((3.2206119159999999e-05 * var_t370) * var_t361) * var_t364));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((((((-0.01240079365) / var_t383) * var_t381) * var_t393) - (((0.01488095238 * var_t397) * var_t388) * var_t392)) + (((0.01488095238 * var_t397) * var_t389) * var_t391));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * ((((((1.0 / 15400.0) / var_t410) * var_t408) * var_t418) - (((((1.0 / 13200.0) * var_t422) / var_t417) * var_t392) * var_t415)) + ((((1.0 / 22000.0) * var_t422) * var_t417) * var_t391));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((((0.22148394239999999 / var_t437) / var_t436) * var_t435) * var_t458) - ((((1.0 / 5.0) * var_t462) * var_t443) * var_t457)) - (((var_t462 * var_t444) / var_t467) * ((((-0.02) / var_t469) * var_t446) - ((0.00050000000000000001 / var_t473) * var_t452))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((-0.269179004) * var_t488) * var_t510) + ((var_t513 - var_fast_sodium_current_h_gate__h) * (var_t519 + var_t533)));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((-0.269179004) * var_t488) * var_t571) + ((var_t513 - var_fast_sodium_current_j_gate__j) * (var_t601 + var_t632)));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * ((((0.1333333333 / var_t640) * var_t638) * var_t661) - ((((1.0 / var_t639) - var_L_type_Ca_current_d_gate__d) / var_t666) * (((((0.15076923079999999 / var_t669) * var_t645) * var_t653) - (((0.28000000000000003 * var_t649) / var_t674) * var_t651)) + (((1.0 / 20.0) / var_t679) * var_t657))));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 7.0) / var_t689) * var_t687) * var_t703) - ((((1.0 / var_t688) - var_L_type_Ca_current_f_gate__f) / var_t708) * (((1125.0 * ((((-1.0) / 120.0) * var_membrane__V) - (9.0 / 40.0))) * var_t695) + (((33.0 / 2.0) / var_t715) * var_t698))));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * (var_t745);
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 5.0) / var_t766) * var_t764) * var_t781) - ((((1.0 / var_t765) - var_transient_outward_current_s_gate__s) / var_t786) * ((((((-2.0) * var_transient_outward_current_s_gate__tau_s_term1) * var_t769) * var_t771) * var_t773) - ((((1.0 / 5.0) * var_transient_outward_current_s_gate__tau_s_term2) / var_t793) * var_t776))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * (((((1.0 / 6.0) / var_t804) * var_t802) * var_t813) - ((((9.5 * ((1.0 / var_t803) - var_transient_outward_current_r_gate__r)) / var_t818) * (((-2.0) / 45.0) - ((1.0 / 900.0) * var_membrane__V))) * var_t810));
        IJth(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * (var_t986);
        IJth(rJacobian, 15, 0) = var_chaste_interface__environment__fake_dt * (((-((((var_t146 + var_sodium_background_current__g_bna) - (3.0 * var_t141)) + (3.0 * var_t184)) - (3.0 * var_t197))) * var_t838) * var_t896);
        IJth(rJacobian, 16, 0) = var_chaste_interface__environment__fake_dt * (((-(((((((((-var_t43) - var_t62) + var_t65) + var_t67) + var_t71) + var_t73) + var_t203) + var_t209) + (2.0 * var_t141))) * var_t838) * var_t896);
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t263) + var_t269) - var_t275) - var_t278) + var_t282));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t870) * (((var_t873 - var_t879) + var_t881) - ((((1.0 / 2.0) * (((((4.0 * var_t97) * var_t93) + (var_calcium_background_current__g_bca * (var_membrane__V - (((0.5 * var_t2) * var_t3) * var_t885)))) + (var_t279 * var_t277)) - ((2.0 * var_t188) * var_t183))) * var_t838) * var_t896))) * var_t827) / var_t829) / var_t828) + (var_t833 * (((-var_calcium_dynamics__V_leak) - var_t912) - ((((1.0 / 2.0) * ((((var_t263 + var_t275) + var_t278) - var_t282) + (2.0 * var_t269))) * var_t838) * var_t896))));
        IJth(rJacobian, 10, 1) = var_chaste_interface__environment__fake_dt * (var_t762);
        IJth(rJacobian, 13, 1) = var_chaste_interface__environment__fake_dt * ((var_t949 * var_t950) * (var_t912 + var_calcium_dynamics__V_leak));
        IJth(rJacobian, 14, 1) = var_chaste_interface__environment__fake_dt * (var_t1005);
        IJth(rJacobian, 15, 1) = var_chaste_interface__environment__fake_dt * ((((((3.0 * var_t264) * var_t166) * var_sodium_calcium_exchanger_current__alpha) * var_t176) * var_t267) * var_t840);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) * var_t39));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (((-1.0) / 2700.0) * var_t366);
        IJth(rJacobian, 16, 2) = var_chaste_interface__environment__fake_dt * ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) * var_t1040);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_t39));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * ((-0.29761904760000002) * var_t393);
        IJth(rJacobian, 16, 3) = var_chaste_interface__environment__fake_dt * ((((-0.43033148290000001) * var_t68) * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_t1040);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-2.0) * var_t228));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (((-1.0) / 1100.0) * var_t418);
        IJth(rJacobian, 16, 4) = var_chaste_interface__environment__fake_dt * (((-2.0) * var_t228) * var_t840);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t230) * var_t145) * var_t236));
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t458);
        IJth(rJacobian, 15, 5) = var_chaste_interface__environment__fake_dt * ((((-3.0) * var_t230) * var_t145) * var_t1015);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t144) * var_fast_sodium_current_j_gate__j) * var_t236));
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (-var_t510);
        IJth(rJacobian, 15, 6) = var_chaste_interface__environment__fake_dt * (((-var_t144) * var_fast_sodium_current_j_gate__j) * var_t1015);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t144) * var_fast_sodium_current_h_gate__h) * var_t236));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t571);
        IJth(rJacobian, 15, 7) = var_chaste_interface__environment__fake_dt * (((-var_t144) * var_fast_sodium_current_h_gate__h) * var_t1015);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t244) * var_t245) * var_t93));
        IJth(rJacobian, 1, 8) = var_chaste_interface__environment__fake_dt * (var_t833 * ((var_t849 * var_calcium_dynamics__g) - (((2.0 * var_t244) * var_t851) * var_t856)));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t661);
        IJth(rJacobian, 13, 8) = var_chaste_interface__environment__fake_dt * (((-var_t949) * var_t951) * var_calcium_dynamics__g);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t74) * var_t245) * var_t93));
        IJth(rJacobian, 1, 9) = var_chaste_interface__environment__fake_dt * ((((-2.0) * var_t862) * var_t851) * var_t856);
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t703);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-4.0) * var_t74) * var_t252) * var_t93));
        IJth(rJacobian, 1, 10) = var_chaste_interface__environment__fake_dt * (((((-2.0) * var_t862) * var_t252) * var_membrane__F) * var_t856);
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (var_t746);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t256));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t781);
        IJth(rJacobian, 16, 11) = var_chaste_interface__environment__fake_dt * ((-var_t256) * var_t840);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t258));
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (-var_t813);
        IJth(rJacobian, 16, 12) = var_chaste_interface__environment__fake_dt * ((-var_t258) * var_t840);
        IJth(rJacobian, 1, 13) = var_chaste_interface__environment__fake_dt * (var_t833 * var_t931);
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (((((((((2.0 / var_t957) * var_membrane__V_c) * var_t950) * ((var_t879 - var_t881) - var_t873)) * var_calcium_dynamics__Buf_sr) * var_calcium_dynamics__K_buf_sr) / var_t944) / var_t943) - ((var_t949 * var_t950) * var_t931));
        IJth(rJacobian, 1, 14) = var_chaste_interface__environment__fake_dt * ((var_t833 * var_t849) * var_L_type_Ca_current_d_gate__d);
        IJth(rJacobian, 13, 14) = var_chaste_interface__environment__fake_dt * (((-var_t949) * var_t951) * var_L_type_Ca_current_d_gate__d);
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * (var_t1006);
        IJth(rJacobian, 0, 15) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t287) - var_t291) + var_t296) - var_t299) - var_t302) - (3.0 * var_t307)));
        IJth(rJacobian, 1, 15) = var_chaste_interface__environment__fake_dt * (((((((3.0 * var_t833) * var_sodium_calcium_exchanger_current__K_NaCa) * var_t152) * var_t154) * var_calcium_dynamics__Ca_o) * var_t183) * var_t840);
        IJth(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * (((-((((var_t299 + var_t302) + (3.0 * var_t291)) - (3.0 * var_t296)) + (9.0 * var_t307))) * var_t838) * var_t896);
        IJth(rJacobian, 16, 15) = var_chaste_interface__environment__fake_dt * (((-((var_t287 - (2.0 * var_t291)) + (2.0 * var_t296))) * var_t838) * var_t896);
        IJth(rJacobian, 0, 16) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t350);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * ((var_t350 * var_t838) * var_t896);
    }
    
template<>
void OdeSystemInformation<Dynamicten_tusscher_model_2004_endoFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "tentusscher_model_2004_endo";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.2);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // rY[2]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[3]:
    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[4]:
    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[5]:
    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[6]:
    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.75);

    // rY[7]:
    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.75);

    // rY[8]:
    this->mVariableNames.push_back("L_type_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[9]:
    this->mVariableNames.push_back("L_type_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[10]:
    this->mVariableNames.push_back("L_type_Ca_current_fCa_gate__fCa");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[11]:
    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.3212);

    // rY[12]:
    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[13]:
    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.2);

    // rY[14]:
    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[15]:
    this->mVariableNames.push_back("sodium_dynamics__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(11.6);

    // rY[16]:
    this->mVariableNames.push_back("potassium_dynamics__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(138.3);

    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.001;
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicten_tusscher_model_2004_endoFromCellMLCvode)

#endif // CHASTE_CVODE
