#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: grandi2010
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:09:47 2020
//! 
//! <autogenerated>

#include "grandi2010ss.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicgrandi2010ssFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_amplitude =  -15.0; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicgrandi2010ssFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 37);
    }
    
    Dynamicgrandi2010ssFromCellMLCvode::Dynamicgrandi2010ssFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                38,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicgrandi2010ssFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicgrandi2010ssFromCellMLCvode::~Dynamicgrandi2010ssFromCellMLCvode()
    {
    }
    
    double Dynamicgrandi2010ssFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__sVm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.3842590704928
        double var_chaste_interface__cell__sm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.00384941567866232
        double var_chaste_interface__cell__sh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.623723834301669
        double var_chaste_interface__cell__sj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.622080736932815
        double var_chaste_interface__cell__sd = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 2.95884913218079e-6
        double var_chaste_interface__cell__sf = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.995094078386247
        double var_chaste_interface__cell__sfcaBj = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0246274349529557
        double var_chaste_interface__cell__sfcaBsl = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0150911724206476
        double var_chaste_interface__cell__sxtos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000442853722673121
        double var_chaste_interface__cell__sytos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.789013894749951
        double var_chaste_interface__cell__sxtof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000442846429332686
        double var_chaste_interface__cell__sytof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.999995784674368
        double var_chaste_interface__cell__sxkr = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.020160578118589
        double var_chaste_interface__cell__sxks = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00430143235332308
        double var_chaste_interface__cell__sNaj = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 8.21411036389602
        double var_chaste_interface__cell__sNasl = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 8.21322794157889
        double var_chaste_interface__cell__sNai = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 8.21340895351653
        double var_chaste_interface__cell__sCaj = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.000175648385857736
        double var_chaste_interface__cell__sCasl = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.000105614570409386
        
        const double var_cell__sm = var_chaste_interface__cell__sm; // dimensionless
        const double var_cell__sh = var_chaste_interface__cell__sh; // dimensionless
        const double var_cell__sj = var_chaste_interface__cell__sj; // dimensionless
        const double var_cell__sd = var_chaste_interface__cell__sd; // dimensionless
        const double var_cell__sf = var_chaste_interface__cell__sf; // dimensionless
        const double var_cell__sfcaBj = var_chaste_interface__cell__sfcaBj; // dimensionless
        const double var_cell__sfcaBsl = var_chaste_interface__cell__sfcaBsl; // dimensionless
        const double var_cell__sxtos = var_chaste_interface__cell__sxtos; // dimensionless
        const double var_cell__sytos = var_chaste_interface__cell__sytos; // dimensionless
        const double var_cell__sxtof = var_chaste_interface__cell__sxtof; // dimensionless
        const double var_cell__sytof = var_chaste_interface__cell__sytof; // dimensionless
        const double var_cell__sxkr = var_chaste_interface__cell__sxkr; // dimensionless
        const double var_cell__sxks = var_chaste_interface__cell__sxks; // dimensionless
        const double var_cell__sNaj = var_chaste_interface__cell__sNaj; // dimensionless
        const double var_cell__sNasl = var_chaste_interface__cell__sNasl; // dimensionless
        const double var_cell__sNai = var_chaste_interface__cell__sNai; // dimensionless
        const double var_cell__sKi = 120.0; // dimensionless
        const double var_cell__sCaj = var_chaste_interface__cell__sCaj; // dimensionless
        const double var_cell__sCasl = var_chaste_interface__cell__sCasl; // dimensionless
        const double var_cell__sVm = var_chaste_interface__cell__sVm; // millivolt
        const double var_cell__R = 8314.0; // dimensionless
        const double var_cell__Frdy = 96485.0; // dimensionless
        const double var_cell__Temp = 310.0; // dimensionless
        const double var_cell__FoRT = var_cell__Frdy / (var_cell__R * var_cell__Temp); // dimensionless
        const double var_cell__Qpow = (var_cell__Temp - 310.0) / 10.0; // dimensionless
        const double var_cell__G_CaL_mult = 1.0; // dimensionless
        const double var_cell__Fjunc = 0.11; // dimensionless
        const double var_cell__Fsl = 1.0 - var_cell__Fjunc; // dimensionless
        const double var_cell__Fjunc_CaL = 0.90000000000000002; // dimensionless
        const double var_cell__Fsl_CaL = 1.0 - var_cell__Fjunc_CaL; // dimensionless
        const double var_cell__Cli = 15.0; // dimensionless
        const double var_cell__Clo = 150.0; // dimensionless
        const double var_cell__Ko = 5.4000000000000004; // dimensionless
        const double var_cell__Nao = 140.0; // dimensionless
        const double var_cell__Cao = 1.8; // dimensionless
        const double var_cell__ek = (1.0 / var_cell__FoRT) * log(var_cell__Ko / var_cell__sKi); // dimensionless
        const double var_cell__eca_junc = ((1.0 / var_cell__FoRT) / 2.0) * log(var_cell__Cao / var_cell__sCaj); // dimensionless
        const double var_cell__eca_sl = ((1.0 / var_cell__FoRT) / 2.0) * log(var_cell__Cao / var_cell__sCasl); // dimensionless
        const double var_cell__ecl = (1.0 / var_cell__FoRT) * log(var_cell__Cli / var_cell__Clo); // dimensionless
        const double var_cell__GNa = 23.0; // dimensionless
        const double var_cell__GNaB = 0.00059699999999999998; // dimensionless
        const double var_cell__IbarNaK = 1.0 * 1.8; // dimensionless
        const double var_cell__KmNaip = 11.0; // dimensionless
        const double var_cell__KmKo = 1.5; // dimensionless
        const double var_cell__pNaK = 0.018329999999999999; // dimensionless
        const double var_cell__gkp = 2.0 * 0.001; // dimensionless
        const double var_cell__GClCa = 0.5 * 0.109625; // dimensionless
        const double var_cell__GClB = 1.0 * 0.0089999999999999993; // dimensionless
        const double var_cell__KdClCa = 0.10000000000000001; // dimensionless
        const double var_cell__pNa = var_cell__G_CaL_mult * 0.5 * 1.4999999999999999e-08; // dimensionless
        const double var_cell__pCa = var_cell__G_CaL_mult * 0.5 * 0.00054000000000000001; // dimensionless
        const double var_cell__pK = var_cell__G_CaL_mult * 0.5 * 2.7000000000000001e-07; // dimensionless
        const double var_cell__Q10CaL = 1.8; // dimensionless
        const double var_cell__IbarNCX = 1.0 * 4.5; // dimensionless
        const double var_cell__KmCai = 0.0035899999999999999; // dimensionless
        const double var_cell__KmCao = 1.3; // dimensionless
        const double var_cell__KmNai = 12.289999999999999; // dimensionless
        const double var_cell__KmNao = 87.5; // dimensionless
        const double var_cell__ksat = 0.32000000000000001; // dimensionless
        const double var_cell__nu = 0.27000000000000002; // dimensionless
        const double var_cell__Kdact = 0.00014999999999999999; // dimensionless
        const double var_cell__Q10NCX = 1.5700000000000001; // dimensionless
        const double var_cell__IbarSLCaP = 0.067299999999999999; // dimensionless
        const double var_cell__KmPCa = 0.00050000000000000001; // dimensionless
        const double var_cell__GCaB = 0.00055130000000000001; // dimensionless
        const double var_cell__Q10SLCaP = 2.3500000000000001; // dimensionless
        const double var_cell__ena_junc = (1.0 / var_cell__FoRT) * log(var_cell__Nao / var_cell__sNaj); // dimensionless
        const double var_cell__I_Na_junc = var_cell__Fjunc * var_cell__GNa * pow(var_cell__sm, 3.0) * var_cell__sh * var_cell__sj * (var_cell__sVm - var_cell__ena_junc); // dimensionless
        const double var_cell__ena_sl = (1.0 / var_cell__FoRT) * log(var_cell__Nao / var_cell__sNasl); // dimensionless
        const double var_cell__I_Na_sl = var_cell__Fsl * var_cell__GNa * pow(var_cell__sm, 3.0) * var_cell__sh * var_cell__sj * (var_cell__sVm - var_cell__ena_sl); // dimensionless
        const double var_cell__I_nabk_junc = var_cell__Fjunc * var_cell__GNaB * (var_cell__sVm - var_cell__ena_junc); // dimensionless
        const double var_cell__I_nabk_sl = var_cell__Fsl * var_cell__GNaB * (var_cell__sVm - var_cell__ena_sl); // dimensionless
        const double var_cell__sigma = (exp(var_cell__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_cell__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_cell__sVm * var_cell__FoRT)) + (0.036499999999999998 * var_cell__sigma * exp((-var_cell__sVm) * var_cell__FoRT))); // dimensionless
        const double var_cell__I_nak_junc = ((1.0 * var_cell__Fjunc * var_cell__IbarNaK * var_cell__fnak * var_cell__Ko) / (1.0 + pow(var_cell__KmNaip / var_cell__sNaj, 4.0))) / (var_cell__Ko + var_cell__KmKo); // dimensionless
        const double var_cell__I_nak_sl = ((1.0 * var_cell__Fsl * var_cell__IbarNaK * var_cell__fnak * var_cell__Ko) / (1.0 + pow(var_cell__KmNaip / var_cell__sNasl, 4.0))) / (var_cell__Ko + var_cell__KmKo); // dimensionless
        const double var_cell__I_nak = var_cell__I_nak_junc + var_cell__I_nak_sl; // dimensionless
        const double var_cell__gkr_mult = 1.0; // dimensionless
        const double var_cell__gkr = var_cell__gkr_mult * 0.035000000000000003 * sqrt(var_cell__Ko / 5.4000000000000004); // dimensionless
        const double var_cell__rkr = 1.0 / (1.0 + exp((var_cell__sVm + 74.0) / 24.0)); // dimensionless
        const double var_cell__I_kr = var_cell__gkr * var_cell__sxkr * var_cell__rkr * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__eks = (1.0 / var_cell__FoRT) * log((var_cell__Ko + (var_cell__pNaK * var_cell__Nao)) / (var_cell__sKi + (var_cell__pNaK * var_cell__sNai))); // dimensionless
        const double var_cell__gks_junc = 1.0 * 0.0035000000000000001; // dimensionless
        const double var_cell__gks_sl = 1.0 * 0.0035000000000000001; // dimensionless
        const double var_cell__I_ks_junc = var_cell__Fjunc * var_cell__gks_junc * pow(var_cell__sxks, 2.0) * (var_cell__sVm - var_cell__eks); // dimensionless
        const double var_cell__I_ks_sl = var_cell__Fsl * var_cell__gks_sl * pow(var_cell__sxks, 2.0) * (var_cell__sVm - var_cell__eks); // dimensionless
        const double var_cell__I_ks = var_cell__I_ks_junc + var_cell__I_ks_sl; // dimensionless
        const double var_cell__kp_kp = 1.0 / (1.0 + exp(7.4880000000000004 - (var_cell__sVm / 5.9800000000000004))); // dimensionless
        const double var_cell__I_kp_junc = var_cell__Fjunc * var_cell__gkp * var_cell__kp_kp * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__I_kp_sl = var_cell__Fsl * var_cell__gkp * var_cell__kp_kp * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__I_kp = var_cell__I_kp_junc + var_cell__I_kp_sl; // dimensionless
        const double var_cell__GtoSlow = 1.0 * 0.13 * 0.12; // dimensionless
        const double var_cell__GtoFast = 1.0 * 0.13 * 0.88; // dimensionless
        const double var_cell__I_tos = var_cell__GtoSlow * var_cell__sxtos * var_cell__sytos * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__I_tof = var_cell__GtoFast * var_cell__sxtof * var_cell__sytof * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__I_to = var_cell__I_tos + var_cell__I_tof; // dimensionless
        const double var_cell__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_cell__sVm - var_cell__ek) - 59.215000000000003))); // dimensionless
        const double var_cell__bki = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_cell__sVm + 5.476) - var_cell__ek))) + exp(0.061749999999999999 * ((var_cell__sVm - var_cell__ek) - 594.30999999999995))) / (1.0 + exp((-0.51429999999999998) * ((var_cell__sVm - var_cell__ek) + 4.7530000000000001))); // dimensionless
        const double var_cell__kiss = var_cell__aki / (var_cell__aki + var_cell__bki); // dimensionless
        const double var_cell__I_ki = 1.0 * 0.34999999999999998 * sqrt(var_cell__Ko / 5.4000000000000004) * var_cell__kiss * (var_cell__sVm - var_cell__ek); // dimensionless
        const double var_cell__I_ClCa_junc = ((var_cell__Fjunc * var_cell__GClCa) / (1.0 + (var_cell__KdClCa / var_cell__sCaj))) * (var_cell__sVm - var_cell__ecl); // dimensionless
        const double var_cell__I_ClCa_sl = ((var_cell__Fsl * var_cell__GClCa) / (1.0 + (var_cell__KdClCa / var_cell__sCasl))) * (var_cell__sVm - var_cell__ecl); // dimensionless
        const double var_cell__I_ClCa = var_cell__I_ClCa_junc + var_cell__I_ClCa_sl; // dimensionless
        const double var_cell__I_Clbk = var_cell__GClB * (var_cell__sVm - var_cell__ecl); // dimensionless
        const double var_cell__fcaCaMSL = 0.0; // dimensionless
        const double var_cell__fcaCaj = 0.0; // dimensionless
        const double var_cell__ibarca_j = (var_cell__pCa * 4.0 * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.34100000000000003 * var_cell__sCaj * exp(2.0 * var_cell__sVm * var_cell__FoRT)) - (0.34100000000000003 * var_cell__Cao))) / (exp(2.0 * var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarca_sl = (var_cell__pCa * 4.0 * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.34100000000000003 * var_cell__sCasl * exp(2.0 * var_cell__sVm * var_cell__FoRT)) - (0.34100000000000003 * var_cell__Cao))) / (exp(2.0 * var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibark = (var_cell__pK * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sKi * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Ko))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarna_j = (var_cell__pNa * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sNaj * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Nao))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarna_sl = (var_cell__pNa * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sNasl * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Nao))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__I_Ca_junc = var_cell__Fjunc_CaL * var_cell__ibarca_j * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBj) + var_cell__fcaCaj) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_Ca_sl = var_cell__Fsl_CaL * var_cell__ibarca_sl * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBsl) + var_cell__fcaCaMSL) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_CaK = var_cell__ibark * var_cell__sd * var_cell__sf * ((var_cell__Fjunc_CaL * (var_cell__fcaCaj + (1.0 - var_cell__sfcaBj))) + (var_cell__Fsl_CaL * (var_cell__fcaCaMSL + (1.0 - var_cell__sfcaBsl)))) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_CaNa_junc = var_cell__Fjunc_CaL * var_cell__ibarna_j * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBj) + var_cell__fcaCaj) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_CaNa_sl = var_cell__Fsl_CaL * var_cell__ibarna_sl * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBsl) + var_cell__fcaCaMSL) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__Ka_junc = 1.0 / (1.0 + pow(var_cell__Kdact / var_cell__sCaj, 2.0)); // dimensionless
        const double var_cell__Ka_sl = 1.0 / (1.0 + pow(var_cell__Kdact / var_cell__sCasl, 2.0)); // dimensionless
        const double var_cell__s1_junc = exp(var_cell__nu * var_cell__sVm * var_cell__FoRT) * pow(var_cell__sNaj, 3.0) * var_cell__Cao; // dimensionless
        const double var_cell__s1_sl = exp(var_cell__nu * var_cell__sVm * var_cell__FoRT) * pow(var_cell__sNasl, 3.0) * var_cell__Cao; // dimensionless
        const double var_cell__s2_junc = exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT) * pow(var_cell__Nao, 3.0) * var_cell__sCaj; // dimensionless
        const double var_cell__s3_junc = (var_cell__KmCai * pow(var_cell__Nao, 3.0) * (1.0 + pow(var_cell__sNaj / var_cell__KmNai, 3.0))) + (pow(var_cell__KmNao, 3.0) * var_cell__sCaj * (1.0 + (var_cell__sCaj / var_cell__KmCai))) + (var_cell__KmCao * pow(var_cell__sNaj, 3.0)) + (pow(var_cell__sNaj, 3.0) * var_cell__Cao) + (pow(var_cell__Nao, 3.0) * var_cell__sCaj); // dimensionless
        const double var_cell__s2_sl = exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT) * pow(var_cell__Nao, 3.0) * var_cell__sCasl; // dimensionless
        const double var_cell__s3_sl = (var_cell__KmCai * pow(var_cell__Nao, 3.0) * (1.0 + pow(var_cell__sNasl / var_cell__KmNai, 3.0))) + (pow(var_cell__KmNao, 3.0) * var_cell__sCasl * (1.0 + (var_cell__sCasl / var_cell__KmCai))) + (var_cell__KmCao * pow(var_cell__sNasl, 3.0)) + (pow(var_cell__sNasl, 3.0) * var_cell__Cao) + (pow(var_cell__Nao, 3.0) * var_cell__sCasl); // dimensionless
        const double var_cell__I_ncx_junc = ((var_cell__Fjunc * var_cell__IbarNCX * pow(var_cell__Q10NCX, var_cell__Qpow) * var_cell__Ka_junc * (var_cell__s1_junc - var_cell__s2_junc)) / var_cell__s3_junc) / (1.0 + (var_cell__ksat * exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT))); // dimensionless
        const double var_cell__I_ncx_sl = ((var_cell__Fsl * var_cell__IbarNCX * pow(var_cell__Q10NCX, var_cell__Qpow) * var_cell__Ka_sl * (var_cell__s1_sl - var_cell__s2_sl)) / var_cell__s3_sl) / (1.0 + (var_cell__ksat * exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT))); // dimensionless
        const double var_cell__I_pca_junc = (var_cell__Fjunc * pow(var_cell__Q10SLCaP, var_cell__Qpow) * var_cell__IbarSLCaP * pow(var_cell__sCaj, 1.6000000000000001)) / (pow(var_cell__KmPCa, 1.6000000000000001) + pow(var_cell__sCaj, 1.6000000000000001)); // dimensionless
        const double var_cell__I_pca_sl = (var_cell__Fsl * pow(var_cell__Q10SLCaP, var_cell__Qpow) * var_cell__IbarSLCaP * pow(var_cell__sCasl, 1.6000000000000001)) / (pow(var_cell__KmPCa, 1.6000000000000001) + pow(var_cell__sCasl, 1.6000000000000001)); // dimensionless
        const double var_cell__I_cabk_junc = var_cell__Fjunc * var_cell__GCaB * (var_cell__sVm - var_cell__eca_junc); // dimensionless
        const double var_cell__I_cabk_sl = var_cell__Fsl * var_cell__GCaB * (var_cell__sVm - var_cell__eca_sl); // dimensionless
        const double var_cell__I_Na_tot_junc = var_cell__I_Na_junc + var_cell__I_nabk_junc + (3.0 * var_cell__I_ncx_junc) + (3.0 * var_cell__I_nak_junc) + var_cell__I_CaNa_junc; // dimensionless
        const double var_cell__I_Na_tot_sl = var_cell__I_Na_sl + var_cell__I_nabk_sl + (3.0 * var_cell__I_ncx_sl) + (3.0 * var_cell__I_nak_sl) + var_cell__I_CaNa_sl; // dimensionless
        const double var_cell__I_K_tot = ((var_cell__I_to + var_cell__I_kr + var_cell__I_ks + var_cell__I_ki) - (2.0 * var_cell__I_nak)) + var_cell__I_CaK + var_cell__I_kp; // dimensionless
        const double var_cell__I_Ca_tot_junc = (var_cell__I_Ca_junc + var_cell__I_cabk_junc + var_cell__I_pca_junc) - (2.0 * var_cell__I_ncx_junc); // dimensionless
        const double var_cell__I_Ca_tot_sl = (var_cell__I_Ca_sl + var_cell__I_cabk_sl + var_cell__I_pca_sl) - (2.0 * var_cell__I_ncx_sl); // dimensionless
        const double var_cell__I_Na_tot = var_cell__I_Na_tot_junc + var_cell__I_Na_tot_sl; // dimensionless
        const double var_cell__I_Cl_tot = var_cell__I_ClCa + var_cell__I_Clbk; // dimensionless
        const double var_cell__I_Ca_tot = var_cell__I_Ca_tot_junc + var_cell__I_Ca_tot_sl; // dimensionless
        const double var_cell__I_tot = var_cell__I_Na_tot + var_cell__I_Cl_tot + var_cell__I_Ca_tot + var_cell__I_K_tot; // uA_per_uF
        const double var_chaste_interface__cell__I_tot = var_cell__I_tot; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__I_tot) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicgrandi2010ssFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__cell__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__sVm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.3842590704928
        double var_chaste_interface__cell__sm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.00384941567866232
        double var_chaste_interface__cell__sh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.623723834301669
        double var_chaste_interface__cell__sj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.622080736932815
        double var_chaste_interface__cell__sd = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 2.95884913218079e-6
        double var_chaste_interface__cell__sf = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.995094078386247
        double var_chaste_interface__cell__sfcaBj = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0246274349529557
        double var_chaste_interface__cell__sfcaBsl = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0150911724206476
        double var_chaste_interface__cell__sxtos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000442853722673121
        double var_chaste_interface__cell__sytos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.789013894749951
        double var_chaste_interface__cell__sxtof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000442846429332686
        double var_chaste_interface__cell__sytof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.999995784674368
        double var_chaste_interface__cell__sxkr = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.020160578118589
        double var_chaste_interface__cell__sxks = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00430143235332308
        double var_chaste_interface__cell__sRyRr = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.893326456705696
        double var_chaste_interface__cell__sRyRo = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 7.56436968249499e-7
        double var_chaste_interface__cell__sRyRi = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 9.03266331737064e-8
        double var_chaste_interface__cell__sNaBj = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 3.41097946062695
        double var_chaste_interface__cell__sNaBsl = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.744248540671373
        double var_chaste_interface__cell__sTnCL = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.00904644567707666
        double var_chaste_interface__cell__sTnCHc = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.1183943202639
        double var_chaste_interface__cell__sTnCHm = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0101423649465603
        double var_chaste_interface__cell__sCaM = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.000299824763475116
        double var_chaste_interface__cell__sMyoc = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.00201443980536826
        double var_chaste_interface__cell__sMyom = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.137467597337588
        double var_chaste_interface__cell__sSRB = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.00220110816535249
        double var_chaste_interface__cell__sSLLj = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.00739549938515031
        double var_chaste_interface__cell__sSLLsl = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00979616077807075
        double var_chaste_interface__cell__sSLHj = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0735225248399363
        double var_chaste_interface__cell__sSLHsl = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.113642236788144
        double var_chaste_interface__cell__sCsqnb = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 1.20762712858574
        double var_chaste_interface__cell__sCa_sr = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.563755421404699
        double var_chaste_interface__cell__sNaj = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 8.21411036389602
        double var_chaste_interface__cell__sNasl = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 8.21322794157889
        double var_chaste_interface__cell__sNai = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 8.21340895351653
        double var_chaste_interface__cell__sCaj = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.000175648385857736
        double var_chaste_interface__cell__sCasl = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.000105614570409386
        double var_chaste_interface__cell__sCai = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 8.85230799863012e-5
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__sVm;
        const double var_cell__sm = var_chaste_interface__cell__sm; // dimensionless
        const double var_cell__sh = var_chaste_interface__cell__sh; // dimensionless
        const double var_cell__sj = var_chaste_interface__cell__sj; // dimensionless
        const double var_cell__sd = var_chaste_interface__cell__sd; // dimensionless
        const double var_cell__sf = var_chaste_interface__cell__sf; // dimensionless
        const double var_cell__sfcaBj = var_chaste_interface__cell__sfcaBj; // dimensionless
        const double var_cell__sfcaBsl = var_chaste_interface__cell__sfcaBsl; // dimensionless
        const double var_cell__sxtos = var_chaste_interface__cell__sxtos; // dimensionless
        const double var_cell__sytos = var_chaste_interface__cell__sytos; // dimensionless
        const double var_cell__sxtof = var_chaste_interface__cell__sxtof; // dimensionless
        const double var_cell__sytof = var_chaste_interface__cell__sytof; // dimensionless
        const double var_cell__sxkr = var_chaste_interface__cell__sxkr; // dimensionless
        const double var_cell__sxks = var_chaste_interface__cell__sxks; // dimensionless
        const double var_cell__sRyRr = var_chaste_interface__cell__sRyRr; // dimensionless
        const double var_cell__sRyRo = var_chaste_interface__cell__sRyRo; // dimensionless
        const double var_cell__sRyRi = var_chaste_interface__cell__sRyRi; // dimensionless
        const double var_cell__sNaBj = var_chaste_interface__cell__sNaBj; // dimensionless
        const double var_cell__sNaBsl = var_chaste_interface__cell__sNaBsl; // dimensionless
        const double var_cell__sTnCL = var_chaste_interface__cell__sTnCL; // dimensionless
        const double var_cell__sTnCHc = var_chaste_interface__cell__sTnCHc; // dimensionless
        const double var_cell__sTnCHm = var_chaste_interface__cell__sTnCHm; // dimensionless
        const double var_cell__sCaM = var_chaste_interface__cell__sCaM; // dimensionless
        const double var_cell__sMyoc = var_chaste_interface__cell__sMyoc; // dimensionless
        const double var_cell__sMyom = var_chaste_interface__cell__sMyom; // dimensionless
        const double var_cell__sSRB = var_chaste_interface__cell__sSRB; // dimensionless
        const double var_cell__sSLLj = var_chaste_interface__cell__sSLLj; // dimensionless
        const double var_cell__sSLLsl = var_chaste_interface__cell__sSLLsl; // dimensionless
        const double var_cell__sSLHj = var_chaste_interface__cell__sSLHj; // dimensionless
        const double var_cell__sSLHsl = var_chaste_interface__cell__sSLHsl; // dimensionless
        const double var_cell__sCsqnb = var_chaste_interface__cell__sCsqnb; // dimensionless
        const double var_cell__sCa_sr = var_chaste_interface__cell__sCa_sr; // dimensionless
        const double var_cell__sNaj = var_chaste_interface__cell__sNaj; // dimensionless
        const double var_cell__sNasl = var_chaste_interface__cell__sNasl; // dimensionless
        const double var_cell__sNai = var_chaste_interface__cell__sNai; // dimensionless
        const double var_cell__sCaj = var_chaste_interface__cell__sCaj; // dimensionless
        const double var_cell__sCasl = var_chaste_interface__cell__sCasl; // dimensionless
        const double var_cell__sCai = var_chaste_interface__cell__sCai; // dimensionless
        const double var_cell__sVm = var_chaste_interface__cell__sVm; // millivolt
        const double var_cell__R = 8314.0; // dimensionless
        const double var_cell__Frdy = 96485.0; // dimensionless
        const double var_cell__Temp = 310.0; // dimensionless
        const double var_cell__FoRT = var_cell__Frdy / (var_cell__R * var_cell__Temp); // dimensionless
        const double var_cell__Cmem = 1.3809999999999999e-10; // dimensionless
        const double var_cell__Qpow = (var_cell__Temp - 310.0) / 10.0; // dimensionless
        const double var_cell__cellLength = 100.0; // dimensionless
        const double var_cell__cellRadius = 10.25; // dimensionless
        const double var_cell__Vcell = M_PI * pow(var_cell__cellRadius, 2.0) * var_cell__cellLength * 1.0000000000000001e-15; // dimensionless
        const double var_cell__Vmyo = 0.65000000000000002 * var_cell__Vcell; // dimensionless
        const double var_cell__Vsr = 0.035000000000000003 * var_cell__Vcell; // dimensionless
        const double var_cell__Vsl = 0.02 * var_cell__Vcell; // dimensionless
        const double var_cell__Vjunc = 0.053900000000000003 * 0.01 * var_cell__Vcell; // dimensionless
        const double var_cell__J_ca_juncsl = 1.0 / 1213400000000.0; // dimensionless
        const double var_cell__J_ca_slmyo = 1.0 / 268510000000.0; // dimensionless
        const double var_cell__J_na_juncsl = 1.0 / ((1638200000000.0 / 3.0) * 100.0); // dimensionless
        const double var_cell__J_na_slmyo = 1.0 / ((18308000000.0 / 3.0) * 100.0); // dimensionless
        const double var_cell__G_CaL_mult = 1.0; // dimensionless
        const double var_cell__Fjunc = 0.11; // dimensionless
        const double var_cell__Fsl = 1.0 - var_cell__Fjunc; // dimensionless
        const double var_cell__Fjunc_CaL = 0.90000000000000002; // dimensionless
        const double var_cell__Fsl_CaL = 1.0 - var_cell__Fjunc_CaL; // dimensionless
        const double var_cell__Ko = 5.4000000000000004; // dimensionless
        const double var_cell__Nao = 140.0; // dimensionless
        const double var_cell__Cao = 1.8; // dimensionless
        const double var_cell__Mgi = 1.0; // dimensionless
        const double var_cell__eca_junc = ((1.0 / var_cell__FoRT) / 2.0) * log(var_cell__Cao / var_cell__sCaj); // dimensionless
        const double var_cell__eca_sl = ((1.0 / var_cell__FoRT) / 2.0) * log(var_cell__Cao / var_cell__sCasl); // dimensionless
        const double var_cell__GNa = 23.0; // dimensionless
        const double var_cell__GNaB = 0.00059699999999999998; // dimensionless
        const double var_cell__IbarNaK = 1.0 * 1.8; // dimensionless
        const double var_cell__KmNaip = 11.0; // dimensionless
        const double var_cell__KmKo = 1.5; // dimensionless
        const double var_cell__pNa = var_cell__G_CaL_mult * 0.5 * 1.4999999999999999e-08; // dimensionless
        const double var_cell__pCa = var_cell__G_CaL_mult * 0.5 * 0.00054000000000000001; // dimensionless
        const double var_cell__Q10CaL = 1.8; // dimensionless
        const double var_cell__IbarNCX = 1.0 * 4.5; // dimensionless
        const double var_cell__KmCai = 0.0035899999999999999; // dimensionless
        const double var_cell__KmCao = 1.3; // dimensionless
        const double var_cell__KmNai = 12.289999999999999; // dimensionless
        const double var_cell__KmNao = 87.5; // dimensionless
        const double var_cell__ksat = 0.32000000000000001; // dimensionless
        const double var_cell__nu = 0.27000000000000002; // dimensionless
        const double var_cell__Kdact = 0.00014999999999999999; // dimensionless
        const double var_cell__Q10NCX = 1.5700000000000001; // dimensionless
        const double var_cell__IbarSLCaP = 0.067299999999999999; // dimensionless
        const double var_cell__KmPCa = 0.00050000000000000001; // dimensionless
        const double var_cell__GCaB = 0.00055130000000000001; // dimensionless
        const double var_cell__Q10SLCaP = 2.3500000000000001; // dimensionless
        const double var_cell__Q10SRCaP = 2.6000000000000001; // dimensionless
        const double var_cell__Vmax_SRCaP = 1.0 * 0.0053114; // dimensionless
        const double var_cell__Kmf = 0.00024600000000000002; // dimensionless
        const double var_cell__Kmr = 1.7; // dimensionless
        const double var_cell__hillSRCaP = 1.7869999999999999; // dimensionless
        const double var_cell__ks = 25.0; // dimensionless
        const double var_cell__koCa = 10.0; // dimensionless
        const double var_cell__kom = 0.059999999999999998; // dimensionless
        const double var_cell__kiCa = 0.5; // dimensionless
        const double var_cell__kim = 0.0050000000000000001; // dimensionless
        const double var_cell__ec50SR = 0.45000000000000001; // dimensionless
        const double var_cell__Bmax_Naj = 7.5609999999999999; // dimensionless
        const double var_cell__Bmax_Nasl = 1.6499999999999999; // dimensionless
        const double var_cell__koff_na = 0.001; // dimensionless
        const double var_cell__kon_na = 0.0001; // dimensionless
        const double var_cell__Bmax_TnClow = 0.070000000000000007; // dimensionless
        const double var_cell__koff_tncl = 0.019599999999999999; // dimensionless
        const double var_cell__kon_tncl = 32.700000000000003; // dimensionless
        const double var_cell__Bmax_TnChigh = 0.14000000000000001; // dimensionless
        const double var_cell__koff_tnchca = 3.1999999999999999e-05; // dimensionless
        const double var_cell__kon_tnchca = 2.3700000000000001; // dimensionless
        const double var_cell__koff_tnchmg = 0.0033300000000000001; // dimensionless
        const double var_cell__kon_tnchmg = 0.0030000000000000001; // dimensionless
        const double var_cell__Bmax_CaM = 0.024; // dimensionless
        const double var_cell__koff_cam = 0.23799999999999999; // dimensionless
        const double var_cell__kon_cam = 34.0; // dimensionless
        const double var_cell__Bmax_myosin = 0.14000000000000001; // dimensionless
        const double var_cell__koff_myoca = 0.00046000000000000001; // dimensionless
        const double var_cell__kon_myoca = 13.800000000000001; // dimensionless
        const double var_cell__koff_myomg = 5.7000000000000003e-05; // dimensionless
        const double var_cell__kon_myomg = 0.015699999999999999; // dimensionless
        const double var_cell__Bmax_SR = 19.0 * 0.00089999999999999998; // dimensionless
        const double var_cell__koff_sr = 0.059999999999999998; // dimensionless
        const double var_cell__kon_sr = 100.0; // dimensionless
        const double var_cell__Bmax_SLlowsl = (0.037400000000000003 * var_cell__Vmyo) / var_cell__Vsl; // dimensionless
        const double var_cell__Bmax_SLlowj = ((0.0045999999999999999 * var_cell__Vmyo) / var_cell__Vjunc) * 0.10000000000000001; // dimensionless
        const double var_cell__koff_sll = 1.3; // dimensionless
        const double var_cell__kon_sll = 100.0; // dimensionless
        const double var_cell__Bmax_SLhighsl = (0.0134 * var_cell__Vmyo) / var_cell__Vsl; // dimensionless
        const double var_cell__Bmax_SLhighj = ((0.00165 * var_cell__Vmyo) / var_cell__Vjunc) * 0.10000000000000001; // dimensionless
        const double var_cell__koff_slh = 0.029999999999999999; // dimensionless
        const double var_cell__kon_slh = 100.0; // dimensionless
        const double var_cell__Bmax_Csqn = (0.14000000000000001 * var_cell__Vmyo) / var_cell__Vsr; // dimensionless
        const double var_cell__koff_csqn = 65.0; // dimensionless
        const double var_cell__kon_csqn = 100.0; // dimensionless
        const double var_cell__mss = 1.0 / pow(1.0 + exp((-(56.859999999999999 + var_cell__sVm)) / 9.0299999999999994), 2.0); // dimensionless
        const double var_cell__taum = (0.12920000000000001 * exp(-pow((var_cell__sVm + 45.789999999999999) / 15.539999999999999, 2.0))) + (0.064869999999999997 * exp(-pow((var_cell__sVm - 4.8230000000000004) / 51.119999999999997, 2.0))); // dimensionless
        const double var_cell__bh = (var_cell__sVm >= (-40.0)) ? (0.77000000000000002 / (0.13 * (1.0 + exp((-(var_cell__sVm + 10.66)) / 11.1)))) : ((2.7000000000000002 * exp(0.079000000000000001 * var_cell__sVm)) + (310000.0 * exp(0.34849999999999998 * var_cell__sVm))); // dimensionless
        const double var_cell__ah = (var_cell__sVm >= (-40.0)) ? 0.0 : (0.057000000000000002 * exp((-(var_cell__sVm + 80.0)) / 6.7999999999999998)); // dimensionless
        const double var_cell__tauh = 1.0 / (var_cell__ah + var_cell__bh); // dimensionless
        const double var_cell__hss = 1.0 / pow(1.0 + exp((var_cell__sVm + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_cell__bj = (var_cell__sVm >= (-40.0)) ? ((0.59999999999999998 * exp(0.057000000000000002 * var_cell__sVm)) / (1.0 + exp((-0.10000000000000001) * (var_cell__sVm + 32.0)))) : ((0.024240000000000001 * exp((-0.01052) * var_cell__sVm)) / (1.0 + exp((-0.13780000000000001) * (var_cell__sVm + 40.140000000000001)))); // dimensionless
        const double var_cell__aj = (var_cell__sVm >= (-40.0)) ? 0.0 : (((((-25428.0) * exp(0.24440000000000001 * var_cell__sVm)) - (6.9480000000000002e-06 * exp((-0.043909999999999998) * var_cell__sVm))) * (var_cell__sVm + 37.780000000000001)) / (1.0 + exp(0.311 * (var_cell__sVm + 79.230000000000004)))); // dimensionless
        const double var_cell__tauj = 1.0 / (var_cell__aj + var_cell__bj); // dimensionless
        const double var_cell__jss = 1.0 / pow(1.0 + exp((var_cell__sVm + 71.549999999999997) / 7.4299999999999997), 2.0); // dimensionless
        const double var_cell__ena_junc = (1.0 / var_cell__FoRT) * log(var_cell__Nao / var_cell__sNaj); // dimensionless
        const double var_cell__I_Na_junc = var_cell__Fjunc * var_cell__GNa * pow(var_cell__sm, 3.0) * var_cell__sh * var_cell__sj * (var_cell__sVm - var_cell__ena_junc); // dimensionless
        const double var_cell__ena_sl = (1.0 / var_cell__FoRT) * log(var_cell__Nao / var_cell__sNasl); // dimensionless
        const double var_cell__I_Na_sl = var_cell__Fsl * var_cell__GNa * pow(var_cell__sm, 3.0) * var_cell__sh * var_cell__sj * (var_cell__sVm - var_cell__ena_sl); // dimensionless
        const double var_cell__I_nabk_junc = var_cell__Fjunc * var_cell__GNaB * (var_cell__sVm - var_cell__ena_junc); // dimensionless
        const double var_cell__I_nabk_sl = var_cell__Fsl * var_cell__GNaB * (var_cell__sVm - var_cell__ena_sl); // dimensionless
        const double var_cell__sigma = (exp(var_cell__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_cell__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_cell__sVm * var_cell__FoRT)) + (0.036499999999999998 * var_cell__sigma * exp((-var_cell__sVm) * var_cell__FoRT))); // dimensionless
        const double var_cell__I_nak_junc = ((1.0 * var_cell__Fjunc * var_cell__IbarNaK * var_cell__fnak * var_cell__Ko) / (1.0 + pow(var_cell__KmNaip / var_cell__sNaj, 4.0))) / (var_cell__Ko + var_cell__KmKo); // dimensionless
        const double var_cell__I_nak_sl = ((1.0 * var_cell__Fsl * var_cell__IbarNaK * var_cell__fnak * var_cell__Ko) / (1.0 + pow(var_cell__KmNaip / var_cell__sNasl, 4.0))) / (var_cell__Ko + var_cell__KmKo); // dimensionless
        const double var_cell__xrss = 1.0 / (1.0 + exp((-(var_cell__sVm + 10.0)) / 5.0)); // dimensionless
        const double var_cell__tauxr = (((550.0 / (1.0 + exp(((-22.0) - var_cell__sVm) / 9.0))) * 6.0) / (1.0 + exp((var_cell__sVm - (-11.0)) / 9.0))) + (230.0 / (1.0 + exp((var_cell__sVm - (-40.0)) / 20.0))); // dimensionless
        const double var_cell__xsss = 1.0 / (1.0 + exp((-(var_cell__sVm + 3.7999999999999998)) / 14.25)); // dimensionless
        const double var_cell__tauxs = 990.10000000000002 / (1.0 + exp((-(var_cell__sVm + 2.4359999999999999)) / 14.119999999999999)); // dimensionless
        const double var_cell__xtoss = 1.0 / (1.0 + exp((-(var_cell__sVm - 19.0)) / 13.0)); // dimensionless
        const double var_cell__ytoss = 1.0 / (1.0 + exp((var_cell__sVm + 19.5) / 5.0)); // dimensionless
        const double var_cell__tauxtos = (9.0 / (1.0 + exp((var_cell__sVm + 3.0) / 15.0))) + 0.5; // dimensionless
        const double var_cell__tauytos = (800.0 / (1.0 + exp((var_cell__sVm + 60.0) / 10.0))) + 30.0; // dimensionless
        const double var_cell__tauxtof = (8.5 * exp(-pow((var_cell__sVm + 45.0) / 50.0, 2.0))) + 0.5; // dimensionless
        const double var_cell__tauytof = (85.0 * exp((-pow(var_cell__sVm + 40.0, 2.0)) / 220.0)) + 7.0; // dimensionless
        const double var_cell__fss = (1.0 / (1.0 + exp((var_cell__sVm + 35.0) / 9.0))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_cell__sVm) / 20.0))); // dimensionless
        const double var_cell__dss = 1.0 / (1.0 + exp((-(var_cell__sVm + 5.0)) / 6.0)); // dimensionless
        const double var_cell__taud = (var_cell__dss * (1.0 - exp((-(var_cell__sVm + 5.0)) / 6.0))) / (0.035000000000000003 * (var_cell__sVm + 5.0)); // dimensionless
        const double var_cell__tauf = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_cell__sVm + 14.5), 2.0))) + 0.02); // dimensionless
        const double var_cell__fcaCaMSL = 0.0; // dimensionless
        const double var_cell__fcaCaj = 0.0; // dimensionless
        const double var_cell__ibarca_j = (var_cell__pCa * 4.0 * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.34100000000000003 * var_cell__sCaj * exp(2.0 * var_cell__sVm * var_cell__FoRT)) - (0.34100000000000003 * var_cell__Cao))) / (exp(2.0 * var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarca_sl = (var_cell__pCa * 4.0 * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.34100000000000003 * var_cell__sCasl * exp(2.0 * var_cell__sVm * var_cell__FoRT)) - (0.34100000000000003 * var_cell__Cao))) / (exp(2.0 * var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarna_j = (var_cell__pNa * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sNaj * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Nao))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__ibarna_sl = (var_cell__pNa * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sNasl * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Nao))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
        const double var_cell__I_Ca_junc = var_cell__Fjunc_CaL * var_cell__ibarca_j * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBj) + var_cell__fcaCaj) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_Ca_sl = var_cell__Fsl_CaL * var_cell__ibarca_sl * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBsl) + var_cell__fcaCaMSL) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_CaNa_junc = var_cell__Fjunc_CaL * var_cell__ibarna_j * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBj) + var_cell__fcaCaj) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__I_CaNa_sl = var_cell__Fsl_CaL * var_cell__ibarna_sl * var_cell__sd * var_cell__sf * ((1.0 - var_cell__sfcaBsl) + var_cell__fcaCaMSL) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
        const double var_cell__Ka_junc = 1.0 / (1.0 + pow(var_cell__Kdact / var_cell__sCaj, 2.0)); // dimensionless
        const double var_cell__Ka_sl = 1.0 / (1.0 + pow(var_cell__Kdact / var_cell__sCasl, 2.0)); // dimensionless
        const double var_cell__s1_junc = exp(var_cell__nu * var_cell__sVm * var_cell__FoRT) * pow(var_cell__sNaj, 3.0) * var_cell__Cao; // dimensionless
        const double var_cell__s1_sl = exp(var_cell__nu * var_cell__sVm * var_cell__FoRT) * pow(var_cell__sNasl, 3.0) * var_cell__Cao; // dimensionless
        const double var_cell__s2_junc = exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT) * pow(var_cell__Nao, 3.0) * var_cell__sCaj; // dimensionless
        const double var_cell__s3_junc = (var_cell__KmCai * pow(var_cell__Nao, 3.0) * (1.0 + pow(var_cell__sNaj / var_cell__KmNai, 3.0))) + (pow(var_cell__KmNao, 3.0) * var_cell__sCaj * (1.0 + (var_cell__sCaj / var_cell__KmCai))) + (var_cell__KmCao * pow(var_cell__sNaj, 3.0)) + (pow(var_cell__sNaj, 3.0) * var_cell__Cao) + (pow(var_cell__Nao, 3.0) * var_cell__sCaj); // dimensionless
        const double var_cell__s2_sl = exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT) * pow(var_cell__Nao, 3.0) * var_cell__sCasl; // dimensionless
        const double var_cell__s3_sl = (var_cell__KmCai * pow(var_cell__Nao, 3.0) * (1.0 + pow(var_cell__sNasl / var_cell__KmNai, 3.0))) + (pow(var_cell__KmNao, 3.0) * var_cell__sCasl * (1.0 + (var_cell__sCasl / var_cell__KmCai))) + (var_cell__KmCao * pow(var_cell__sNasl, 3.0)) + (pow(var_cell__sNasl, 3.0) * var_cell__Cao) + (pow(var_cell__Nao, 3.0) * var_cell__sCasl); // dimensionless
        const double var_cell__I_ncx_junc = ((var_cell__Fjunc * var_cell__IbarNCX * pow(var_cell__Q10NCX, var_cell__Qpow) * var_cell__Ka_junc * (var_cell__s1_junc - var_cell__s2_junc)) / var_cell__s3_junc) / (1.0 + (var_cell__ksat * exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT))); // dimensionless
        const double var_cell__I_ncx_sl = ((var_cell__Fsl * var_cell__IbarNCX * pow(var_cell__Q10NCX, var_cell__Qpow) * var_cell__Ka_sl * (var_cell__s1_sl - var_cell__s2_sl)) / var_cell__s3_sl) / (1.0 + (var_cell__ksat * exp((var_cell__nu - 1.0) * var_cell__sVm * var_cell__FoRT))); // dimensionless
        const double var_cell__I_pca_junc = (var_cell__Fjunc * pow(var_cell__Q10SLCaP, var_cell__Qpow) * var_cell__IbarSLCaP * pow(var_cell__sCaj, 1.6000000000000001)) / (pow(var_cell__KmPCa, 1.6000000000000001) + pow(var_cell__sCaj, 1.6000000000000001)); // dimensionless
        const double var_cell__I_pca_sl = (var_cell__Fsl * pow(var_cell__Q10SLCaP, var_cell__Qpow) * var_cell__IbarSLCaP * pow(var_cell__sCasl, 1.6000000000000001)) / (pow(var_cell__KmPCa, 1.6000000000000001) + pow(var_cell__sCasl, 1.6000000000000001)); // dimensionless
        const double var_cell__I_cabk_junc = var_cell__Fjunc * var_cell__GCaB * (var_cell__sVm - var_cell__eca_junc); // dimensionless
        const double var_cell__I_cabk_sl = var_cell__Fsl * var_cell__GCaB * (var_cell__sVm - var_cell__eca_sl); // dimensionless
        const double var_cell__MaxSR = 15.0; // dimensionless
        const double var_cell__MinSR = 1.0; // dimensionless
        const double var_cell__kCaSR = var_cell__MaxSR - ((var_cell__MaxSR - var_cell__MinSR) / (1.0 + pow(var_cell__ec50SR / var_cell__sCa_sr, 2.5))); // dimensionless
        const double var_cell__koSRCa = var_cell__koCa / var_cell__kCaSR; // dimensionless
        const double var_cell__kiSRCa = var_cell__kiCa * var_cell__kCaSR; // dimensionless
        const double var_cell__RI = ((1.0 - var_cell__sRyRr) - var_cell__sRyRo) - var_cell__sRyRi; // dimensionless
        const double var_cell__J_SRCarel = var_cell__ks * var_cell__sRyRo * (var_cell__sCa_sr - var_cell__sCaj); // dimensionless
        const double var_cell__J_serca = (1.0 * pow(var_cell__Q10SRCaP, var_cell__Qpow) * var_cell__Vmax_SRCaP * (pow(var_cell__sCai / var_cell__Kmf, var_cell__hillSRCaP) - pow(var_cell__sCa_sr / var_cell__Kmr, var_cell__hillSRCaP))) / (1.0 + pow(var_cell__sCai / var_cell__Kmf, var_cell__hillSRCaP) + pow(var_cell__sCa_sr / var_cell__Kmr, var_cell__hillSRCaP)); // dimensionless
        const double var_cell__J_SRleak = 5.3480000000000003e-06 * (var_cell__sCa_sr - var_cell__sCaj); // dimensionless
        const double var_cell__I_Na_tot_junc = var_cell__I_Na_junc + var_cell__I_nabk_junc + (3.0 * var_cell__I_ncx_junc) + (3.0 * var_cell__I_nak_junc) + var_cell__I_CaNa_junc; // dimensionless
        const double var_cell__I_Na_tot_sl = var_cell__I_Na_sl + var_cell__I_nabk_sl + (3.0 * var_cell__I_ncx_sl) + (3.0 * var_cell__I_nak_sl) + var_cell__I_CaNa_sl; // dimensionless
        const double var_cell__I_Ca_tot_junc = (var_cell__I_Ca_junc + var_cell__I_cabk_junc + var_cell__I_pca_junc) - (2.0 * var_cell__I_ncx_junc); // dimensionless
        const double var_cell__I_Ca_tot_sl = (var_cell__I_Ca_sl + var_cell__I_cabk_sl + var_cell__I_pca_sl) - (2.0 * var_cell__I_ncx_sl); // dimensionless
        const double var_cell__d_sSLHj_d_cell__time = (var_cell__kon_slh * var_cell__sCaj * (var_cell__Bmax_SLhighj - var_cell__sSLHj)) - (var_cell__koff_slh * var_cell__sSLHj); // 'per millisecond'
        const double var_cell__d_sSLLj_d_cell__time = (var_cell__kon_sll * var_cell__sCaj * (var_cell__Bmax_SLlowj - var_cell__sSLLj)) - (var_cell__koff_sll * var_cell__sSLLj); // 'per millisecond'
        const double var_cell__J_CaB_junction = var_cell__d_sSLLj_d_cell__time + var_cell__d_sSLHj_d_cell__time; // dimensionless
        const double var_cell__d_sSRB_d_cell__time = (var_cell__kon_sr * var_cell__sCai * (var_cell__Bmax_SR - var_cell__sSRB)) - (var_cell__koff_sr * var_cell__sSRB); // 'per millisecond'
        const double var_cell__d_sTnCL_d_cell__time = (var_cell__kon_tncl * var_cell__sCai * (var_cell__Bmax_TnClow - var_cell__sTnCL)) - (var_cell__koff_tncl * var_cell__sTnCL); // 'per millisecond'
        const double var_cell__d_sCaM_d_cell__time = (var_cell__kon_cam * var_cell__sCai * (var_cell__Bmax_CaM - var_cell__sCaM)) - (var_cell__koff_cam * var_cell__sCaM); // 'per millisecond'
        const double var_cell__d_sMyom_d_cell__time = (var_cell__kon_myomg * var_cell__Mgi * ((var_cell__Bmax_myosin - var_cell__sMyoc) - var_cell__sMyom)) - (var_cell__koff_myomg * var_cell__sMyom); // 'per millisecond'
        const double var_cell__d_sTnCHm_d_cell__time = (var_cell__kon_tnchmg * var_cell__Mgi * ((var_cell__Bmax_TnChigh - var_cell__sTnCHc) - var_cell__sTnCHm)) - (var_cell__koff_tnchmg * var_cell__sTnCHm); // 'per millisecond'
        const double var_cell__d_sTnCHc_d_cell__time = (var_cell__kon_tnchca * var_cell__sCai * ((var_cell__Bmax_TnChigh - var_cell__sTnCHc) - var_cell__sTnCHm)) - (var_cell__koff_tnchca * var_cell__sTnCHc); // 'per millisecond'
        const double var_cell__d_sMyoc_d_cell__time = (var_cell__kon_myoca * var_cell__sCai * ((var_cell__Bmax_myosin - var_cell__sMyoc) - var_cell__sMyom)) - (var_cell__koff_myoca * var_cell__sMyoc); // 'per millisecond'
        const double var_cell__J_CaB_cytosol = var_cell__d_sTnCL_d_cell__time + var_cell__d_sTnCHc_d_cell__time + var_cell__d_sTnCHm_d_cell__time + var_cell__d_sCaM_d_cell__time + var_cell__d_sMyoc_d_cell__time + var_cell__d_sMyom_d_cell__time + var_cell__d_sSRB_d_cell__time; // dimensionless
        const double var_cell__d_sSLLsl_d_cell__time = (var_cell__kon_sll * var_cell__sCasl * (var_cell__Bmax_SLlowsl - var_cell__sSLLsl)) - (var_cell__koff_sll * var_cell__sSLLsl); // 'per millisecond'
        const double var_cell__d_sSLHsl_d_cell__time = (var_cell__kon_slh * var_cell__sCasl * (var_cell__Bmax_SLhighsl - var_cell__sSLHsl)) - (var_cell__koff_slh * var_cell__sSLHsl); // 'per millisecond'
        const double var_cell__J_CaB_sl = var_cell__d_sSLLsl_d_cell__time + var_cell__d_sSLHsl_d_cell__time; // dimensionless
        const double var_cell__d_sm_d_cell__time = (var_cell__mss - var_cell__sm) / var_cell__taum; // 'per millisecond'
        const double var_cell__d_sh_d_cell__time = (var_cell__hss - var_cell__sh) / var_cell__tauh; // 'per millisecond'
        const double var_cell__d_sj_d_cell__time = (var_cell__jss - var_cell__sj) / var_cell__tauj; // 'per millisecond'
        const double var_cell__d_sd_d_cell__time = (var_cell__dss - var_cell__sd) / var_cell__taud; // 'per millisecond'
        const double var_cell__d_sf_d_cell__time = (var_cell__fss - var_cell__sf) / var_cell__tauf; // 'per millisecond'
        const double var_cell__d_sfcaBj_d_cell__time = (1.7 * var_cell__sCaj * (1.0 - var_cell__sfcaBj)) - (0.011900000000000001 * var_cell__sfcaBj); // 'per millisecond'
        const double var_cell__d_sfcaBsl_d_cell__time = (1.7 * var_cell__sCasl * (1.0 - var_cell__sfcaBsl)) - (0.011900000000000001 * var_cell__sfcaBsl); // 'per millisecond'
        const double var_cell__d_sxtos_d_cell__time = (var_cell__xtoss - var_cell__sxtos) / var_cell__tauxtos; // 'per millisecond'
        const double var_cell__d_sytos_d_cell__time = (var_cell__ytoss - var_cell__sytos) / var_cell__tauytos; // 'per millisecond'
        const double var_cell__d_sxtof_d_cell__time = (var_cell__xtoss - var_cell__sxtof) / var_cell__tauxtof; // 'per millisecond'
        const double var_cell__d_sytof_d_cell__time = (var_cell__ytoss - var_cell__sytof) / var_cell__tauytof; // 'per millisecond'
        const double var_cell__d_sxkr_d_cell__time = (var_cell__xrss - var_cell__sxkr) / var_cell__tauxr; // 'per millisecond'
        const double var_cell__d_sxks_d_cell__time = (var_cell__xsss - var_cell__sxks) / var_cell__tauxs; // 'per millisecond'
        const double var_cell__d_sRyRr_d_cell__time = ((var_cell__kim * var_cell__RI) - (var_cell__kiSRCa * var_cell__sCaj * var_cell__sRyRr)) - ((var_cell__koSRCa * pow(var_cell__sCaj, 2.0) * var_cell__sRyRr) - (var_cell__kom * var_cell__sRyRo)); // 'per millisecond'
        const double var_cell__d_sRyRo_d_cell__time = ((var_cell__koSRCa * pow(var_cell__sCaj, 2.0) * var_cell__sRyRr) - (var_cell__kom * var_cell__sRyRo)) - ((var_cell__kiSRCa * var_cell__sCaj * var_cell__sRyRo) - (var_cell__kim * var_cell__sRyRi)); // 'per millisecond'
        const double var_cell__d_sRyRi_d_cell__time = ((var_cell__kiSRCa * var_cell__sCaj * var_cell__sRyRo) - (var_cell__kim * var_cell__sRyRi)) - ((var_cell__kom * var_cell__sRyRi) - (var_cell__koSRCa * pow(var_cell__sCaj, 2.0) * var_cell__RI)); // 'per millisecond'
        const double var_cell__d_sNaBj_d_cell__time = (var_cell__kon_na * var_cell__sNaj * (var_cell__Bmax_Naj - var_cell__sNaBj)) - (var_cell__koff_na * var_cell__sNaBj); // 'per millisecond'
        const double var_cell__d_sNaBsl_d_cell__time = (var_cell__kon_na * var_cell__sNasl * (var_cell__Bmax_Nasl - var_cell__sNaBsl)) - (var_cell__koff_na * var_cell__sNaBsl); // 'per millisecond'
        const double var_cell__d_sCsqnb_d_cell__time = (var_cell__kon_csqn * var_cell__sCa_sr * (var_cell__Bmax_Csqn - var_cell__sCsqnb)) - (var_cell__koff_csqn * var_cell__sCsqnb); // 'per millisecond'
        const double var_cell__d_sCa_sr_d_cell__time = (var_cell__J_serca - (((var_cell__J_SRleak * var_cell__Vmyo) / var_cell__Vsr) + var_cell__J_SRCarel)) - var_cell__d_sCsqnb_d_cell__time; // 'per millisecond'
        const double var_cell__d_sNaj_d_cell__time = ((((-var_cell__I_Na_tot_junc) * var_cell__Cmem) / (var_cell__Vjunc * var_cell__Frdy)) + ((var_cell__J_na_juncsl / var_cell__Vjunc) * (var_cell__sNasl - var_cell__sNaj))) - var_cell__d_sNaBj_d_cell__time; // 'per millisecond'
        const double var_cell__d_sNasl_d_cell__time = ((((-var_cell__I_Na_tot_sl) * var_cell__Cmem) / (var_cell__Vsl * var_cell__Frdy)) + ((var_cell__J_na_juncsl / var_cell__Vsl) * (var_cell__sNaj - var_cell__sNasl)) + ((var_cell__J_na_slmyo / var_cell__Vsl) * (var_cell__sNai - var_cell__sNasl))) - var_cell__d_sNaBsl_d_cell__time; // 'per millisecond'
        const double var_cell__d_sNai_d_cell__time = (var_cell__J_na_slmyo / var_cell__Vmyo) * (var_cell__sNasl - var_cell__sNai); // 'per millisecond'
        const double var_cell__d_sCaj_d_cell__time = (((((-var_cell__I_Ca_tot_junc) * var_cell__Cmem) / (var_cell__Vjunc * 2.0 * var_cell__Frdy)) + ((var_cell__J_ca_juncsl / var_cell__Vjunc) * (var_cell__sCasl - var_cell__sCaj))) - var_cell__J_CaB_junction) + ((var_cell__J_SRCarel * var_cell__Vsr) / var_cell__Vjunc) + ((var_cell__J_SRleak * var_cell__Vmyo) / var_cell__Vjunc); // 'per millisecond'
        const double var_cell__d_sCasl_d_cell__time = ((((-var_cell__I_Ca_tot_sl) * var_cell__Cmem) / (var_cell__Vsl * 2.0 * var_cell__Frdy)) + ((var_cell__J_ca_juncsl / var_cell__Vsl) * (var_cell__sCaj - var_cell__sCasl)) + ((var_cell__J_ca_slmyo / var_cell__Vsl) * (var_cell__sCai - var_cell__sCasl))) - var_cell__J_CaB_sl; // 'per millisecond'
        const double var_cell__d_sCai_d_cell__time = ((((-var_cell__J_serca) * var_cell__Vsr) / var_cell__Vmyo) - var_cell__J_CaB_cytosol) + ((var_cell__J_ca_slmyo / var_cell__Vmyo) * (var_cell__sCasl - var_cell__sCai)); // 'per millisecond'
        const double var_chaste_interface__cell__d_sm_d_cell__time = var_cell__d_sm_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sh_d_cell__time = var_cell__d_sh_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sj_d_cell__time = var_cell__d_sj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sd_d_cell__time = var_cell__d_sd_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sf_d_cell__time = var_cell__d_sf_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sfcaBj_d_cell__time = var_cell__d_sfcaBj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sfcaBsl_d_cell__time = var_cell__d_sfcaBsl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sxtos_d_cell__time = var_cell__d_sxtos_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sytos_d_cell__time = var_cell__d_sytos_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sxtof_d_cell__time = var_cell__d_sxtof_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sytof_d_cell__time = var_cell__d_sytof_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sxkr_d_cell__time = var_cell__d_sxkr_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sxks_d_cell__time = var_cell__d_sxks_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sRyRr_d_cell__time = var_cell__d_sRyRr_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sRyRo_d_cell__time = var_cell__d_sRyRo_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sRyRi_d_cell__time = var_cell__d_sRyRi_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sNaBj_d_cell__time = var_cell__d_sNaBj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sNaBsl_d_cell__time = var_cell__d_sNaBsl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sTnCL_d_cell__time = var_cell__d_sTnCL_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sTnCHc_d_cell__time = var_cell__d_sTnCHc_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sTnCHm_d_cell__time = var_cell__d_sTnCHm_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCaM_d_cell__time = var_cell__d_sCaM_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sMyoc_d_cell__time = var_cell__d_sMyoc_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sMyom_d_cell__time = var_cell__d_sMyom_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sSRB_d_cell__time = var_cell__d_sSRB_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sSLLj_d_cell__time = var_cell__d_sSLLj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sSLLsl_d_cell__time = var_cell__d_sSLLsl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sSLHj_d_cell__time = var_cell__d_sSLHj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sSLHsl_d_cell__time = var_cell__d_sSLHsl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCsqnb_d_cell__time = var_cell__d_sCsqnb_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCa_sr_d_cell__time = var_cell__d_sCa_sr_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sNaj_d_cell__time = var_cell__d_sNaj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sNasl_d_cell__time = var_cell__d_sNasl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sNai_d_cell__time = var_cell__d_sNai_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCaj_d_cell__time = var_cell__d_sCaj_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCasl_d_cell__time = var_cell__d_sCasl_d_cell__time; // ___units_3
        const double var_chaste_interface__cell__d_sCai_d_cell__time = var_cell__d_sCai_d_cell__time; // ___units_3
        const double d_dt_chaste_interface__cell__sm = var_chaste_interface__cell__d_sm_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sh = var_chaste_interface__cell__d_sh_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sj = var_chaste_interface__cell__d_sj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sd = var_chaste_interface__cell__d_sd_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sf = var_chaste_interface__cell__d_sf_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sfcaBj = var_chaste_interface__cell__d_sfcaBj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sfcaBsl = var_chaste_interface__cell__d_sfcaBsl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sxtos = var_chaste_interface__cell__d_sxtos_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sytos = var_chaste_interface__cell__d_sytos_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sxtof = var_chaste_interface__cell__d_sxtof_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sytof = var_chaste_interface__cell__d_sytof_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sxkr = var_chaste_interface__cell__d_sxkr_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sxks = var_chaste_interface__cell__d_sxks_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sRyRr = var_chaste_interface__cell__d_sRyRr_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sRyRo = var_chaste_interface__cell__d_sRyRo_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sRyRi = var_chaste_interface__cell__d_sRyRi_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sNaBj = var_chaste_interface__cell__d_sNaBj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sNaBsl = var_chaste_interface__cell__d_sNaBsl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sTnCL = var_chaste_interface__cell__d_sTnCL_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sTnCHc = var_chaste_interface__cell__d_sTnCHc_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sTnCHm = var_chaste_interface__cell__d_sTnCHm_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCaM = var_chaste_interface__cell__d_sCaM_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sMyoc = var_chaste_interface__cell__d_sMyoc_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sMyom = var_chaste_interface__cell__d_sMyom_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sSRB = var_chaste_interface__cell__d_sSRB_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sSLLj = var_chaste_interface__cell__d_sSLLj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sSLLsl = var_chaste_interface__cell__d_sSLLsl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sSLHj = var_chaste_interface__cell__d_sSLHj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sSLHsl = var_chaste_interface__cell__d_sSLHsl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCsqnb = var_chaste_interface__cell__d_sCsqnb_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCa_sr = var_chaste_interface__cell__d_sCa_sr_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sNaj = var_chaste_interface__cell__d_sNaj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sNasl = var_chaste_interface__cell__d_sNasl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sNai = var_chaste_interface__cell__d_sNai_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCaj = var_chaste_interface__cell__d_sCaj_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCasl = var_chaste_interface__cell__d_sCasl_d_cell__time; // 'per millisecond'
        const double d_dt_chaste_interface__cell__sCai = var_chaste_interface__cell__d_sCai_d_cell__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__sVm = 0.0;
        }
        else
        {
            const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__cell__time);
            const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
            const double var_cell__sKi = 120.0; // dimensionless
            const double var_cell__Cli = 15.0; // dimensionless
            const double var_cell__Clo = 150.0; // dimensionless
            const double var_cell__ek = (1.0 / var_cell__FoRT) * log(var_cell__Ko / var_cell__sKi); // dimensionless
            const double var_cell__ecl = (1.0 / var_cell__FoRT) * log(var_cell__Cli / var_cell__Clo); // dimensionless
            const double var_cell__pNaK = 0.018329999999999999; // dimensionless
            const double var_cell__gkp = 2.0 * 0.001; // dimensionless
            const double var_cell__GClCa = 0.5 * 0.109625; // dimensionless
            const double var_cell__GClB = 1.0 * 0.0089999999999999993; // dimensionless
            const double var_cell__KdClCa = 0.10000000000000001; // dimensionless
            const double var_cell__pK = var_cell__G_CaL_mult * 0.5 * 2.7000000000000001e-07; // dimensionless
            const double var_cell__I_nak = var_cell__I_nak_junc + var_cell__I_nak_sl; // dimensionless
            const double var_cell__gkr_mult = 1.0; // dimensionless
            const double var_cell__gkr = var_cell__gkr_mult * 0.035000000000000003 * sqrt(var_cell__Ko / 5.4000000000000004); // dimensionless
            const double var_cell__rkr = 1.0 / (1.0 + exp((var_cell__sVm + 74.0) / 24.0)); // dimensionless
            const double var_cell__I_kr = var_cell__gkr * var_cell__sxkr * var_cell__rkr * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__eks = (1.0 / var_cell__FoRT) * log((var_cell__Ko + (var_cell__pNaK * var_cell__Nao)) / (var_cell__sKi + (var_cell__pNaK * var_cell__sNai))); // dimensionless
            const double var_cell__gks_junc = 1.0 * 0.0035000000000000001; // dimensionless
            const double var_cell__gks_sl = 1.0 * 0.0035000000000000001; // dimensionless
            const double var_cell__I_ks_junc = var_cell__Fjunc * var_cell__gks_junc * pow(var_cell__sxks, 2.0) * (var_cell__sVm - var_cell__eks); // dimensionless
            const double var_cell__I_ks_sl = var_cell__Fsl * var_cell__gks_sl * pow(var_cell__sxks, 2.0) * (var_cell__sVm - var_cell__eks); // dimensionless
            const double var_cell__I_ks = var_cell__I_ks_junc + var_cell__I_ks_sl; // dimensionless
            const double var_cell__kp_kp = 1.0 / (1.0 + exp(7.4880000000000004 - (var_cell__sVm / 5.9800000000000004))); // dimensionless
            const double var_cell__I_kp_junc = var_cell__Fjunc * var_cell__gkp * var_cell__kp_kp * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__I_kp_sl = var_cell__Fsl * var_cell__gkp * var_cell__kp_kp * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__I_kp = var_cell__I_kp_junc + var_cell__I_kp_sl; // dimensionless
            const double var_cell__GtoSlow = 1.0 * 0.13 * 0.12; // dimensionless
            const double var_cell__GtoFast = 1.0 * 0.13 * 0.88; // dimensionless
            const double var_cell__I_tos = var_cell__GtoSlow * var_cell__sxtos * var_cell__sytos * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__I_tof = var_cell__GtoFast * var_cell__sxtof * var_cell__sytof * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__I_to = var_cell__I_tos + var_cell__I_tof; // dimensionless
            const double var_cell__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_cell__sVm - var_cell__ek) - 59.215000000000003))); // dimensionless
            const double var_cell__bki = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_cell__sVm + 5.476) - var_cell__ek))) + exp(0.061749999999999999 * ((var_cell__sVm - var_cell__ek) - 594.30999999999995))) / (1.0 + exp((-0.51429999999999998) * ((var_cell__sVm - var_cell__ek) + 4.7530000000000001))); // dimensionless
            const double var_cell__kiss = var_cell__aki / (var_cell__aki + var_cell__bki); // dimensionless
            const double var_cell__I_ki = 1.0 * 0.34999999999999998 * sqrt(var_cell__Ko / 5.4000000000000004) * var_cell__kiss * (var_cell__sVm - var_cell__ek); // dimensionless
            const double var_cell__I_ClCa_junc = ((var_cell__Fjunc * var_cell__GClCa) / (1.0 + (var_cell__KdClCa / var_cell__sCaj))) * (var_cell__sVm - var_cell__ecl); // dimensionless
            const double var_cell__I_ClCa_sl = ((var_cell__Fsl * var_cell__GClCa) / (1.0 + (var_cell__KdClCa / var_cell__sCasl))) * (var_cell__sVm - var_cell__ecl); // dimensionless
            const double var_cell__I_ClCa = var_cell__I_ClCa_junc + var_cell__I_ClCa_sl; // dimensionless
            const double var_cell__I_Clbk = var_cell__GClB * (var_cell__sVm - var_cell__ecl); // dimensionless
            const double var_cell__ibark = (var_cell__pK * var_cell__sVm * var_cell__Frdy * var_cell__FoRT * ((0.75 * var_cell__sKi * exp(var_cell__sVm * var_cell__FoRT)) - (0.75 * var_cell__Ko))) / (exp(var_cell__sVm * var_cell__FoRT) - 1.0); // dimensionless
            const double var_cell__I_CaK = var_cell__ibark * var_cell__sd * var_cell__sf * ((var_cell__Fjunc_CaL * (var_cell__fcaCaj + (1.0 - var_cell__sfcaBj))) + (var_cell__Fsl_CaL * (var_cell__fcaCaMSL + (1.0 - var_cell__sfcaBsl)))) * pow(var_cell__Q10CaL, var_cell__Qpow) * 0.45000000000000001 * 1.0; // dimensionless
            const double var_cell__I_K_tot = ((var_cell__I_to + var_cell__I_kr + var_cell__I_ks + var_cell__I_ki) - (2.0 * var_cell__I_nak)) + var_cell__I_CaK + var_cell__I_kp; // dimensionless
            const double var_cell__I_Na_tot = var_cell__I_Na_tot_junc + var_cell__I_Na_tot_sl; // dimensionless
            const double var_cell__I_Cl_tot = var_cell__I_ClCa + var_cell__I_Clbk; // dimensionless
            const double var_cell__I_Ca_tot = var_cell__I_Ca_tot_junc + var_cell__I_Ca_tot_sl; // dimensionless
            const double var_cell__I_tot = var_cell__I_Na_tot + var_cell__I_Cl_tot + var_cell__I_Ca_tot + var_cell__I_K_tot; // uA_per_uF
            const double var_cell__d_sVm_d_cell__time = -(var_cell__I_tot + var_cell__i_Stim); // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_sVm_d_cell__time = var_cell__d_sVm_d_cell__time; // ___units_4
            d_dt_chaste_interface__cell__sVm = var_chaste_interface__cell__d_sVm_d_cell__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__sVm;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__cell__sm;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__cell__sh;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__cell__sj;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__cell__sd;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__cell__sf;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__cell__sfcaBj;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__cell__sfcaBsl;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__cell__sxtos;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__cell__sytos;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__cell__sxtof;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__cell__sytof;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__cell__sxkr;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__cell__sxks;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__cell__sRyRr;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__cell__sRyRo;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__cell__sRyRi;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__cell__sNaBj;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__cell__sNaBsl;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__cell__sTnCL;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__cell__sTnCHc;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__cell__sTnCHm;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__cell__sCaM;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__cell__sMyoc;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__cell__sMyom;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__cell__sSRB;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__cell__sSLLj;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__cell__sSLLsl;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__cell__sSLHj;
        NV_Ith_S(rDY, 29) = d_dt_chaste_interface__cell__sSLHsl;
        NV_Ith_S(rDY, 30) = d_dt_chaste_interface__cell__sCsqnb;
        NV_Ith_S(rDY, 31) = d_dt_chaste_interface__cell__sCa_sr;
        NV_Ith_S(rDY, 32) = d_dt_chaste_interface__cell__sNaj;
        NV_Ith_S(rDY, 33) = d_dt_chaste_interface__cell__sNasl;
        NV_Ith_S(rDY, 34) = d_dt_chaste_interface__cell__sNai;
        NV_Ith_S(rDY, 35) = d_dt_chaste_interface__cell__sCaj;
        NV_Ith_S(rDY, 36) = d_dt_chaste_interface__cell__sCasl;
        NV_Ith_S(rDY, 37) = d_dt_chaste_interface__cell__sCai;
    }
    
    void Dynamicgrandi2010ssFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__cell__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__sVm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -81.3842590704928
        double var_chaste_interface__cell__sm = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.00384941567866232
        double var_chaste_interface__cell__sh = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.623723834301669
        double var_chaste_interface__cell__sj = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.622080736932815
        double var_chaste_interface__cell__sd = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 2.95884913218079e-6
        double var_chaste_interface__cell__sf = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.995094078386247
        double var_chaste_interface__cell__sfcaBj = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0246274349529557
        double var_chaste_interface__cell__sfcaBsl = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.0150911724206476
        double var_chaste_interface__cell__sxtos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000442853722673121
        double var_chaste_interface__cell__sytos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.789013894749951
        double var_chaste_interface__cell__sxtof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000442846429332686
        double var_chaste_interface__cell__sytof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.999995784674368
        double var_chaste_interface__cell__sxkr = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.020160578118589
        double var_chaste_interface__cell__sxks = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.00430143235332308
        double var_chaste_interface__cell__sRyRr = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.893326456705696
        double var_chaste_interface__cell__sRyRo = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 7.56436968249499e-7
        double var_chaste_interface__cell__sRyRi = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 9.03266331737064e-8
        double var_chaste_interface__cell__sNaBj = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 3.41097946062695
        double var_chaste_interface__cell__sNaBsl = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.744248540671373
        double var_chaste_interface__cell__sTnCL = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.00904644567707666
        double var_chaste_interface__cell__sTnCHc = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.1183943202639
        double var_chaste_interface__cell__sTnCHm = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0.0101423649465603
        double var_chaste_interface__cell__sCaM = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.000299824763475116
        double var_chaste_interface__cell__sMyoc = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 0.00201443980536826
        double var_chaste_interface__cell__sMyom = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.137467597337588
        double var_chaste_interface__cell__sSRB = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0.00220110816535249
        double var_chaste_interface__cell__sSLLj = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0.00739549938515031
        double var_chaste_interface__cell__sSLLsl = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.00979616077807075
        double var_chaste_interface__cell__sSLHj = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.0735225248399363
        double var_chaste_interface__cell__sSLHsl = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.113642236788144
        double var_chaste_interface__cell__sCsqnb = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 1.20762712858574
        double var_chaste_interface__cell__sCa_sr = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.563755421404699
        double var_chaste_interface__cell__sNaj = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 8.21411036389602
        double var_chaste_interface__cell__sNasl = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 8.21322794157889
        double var_chaste_interface__cell__sNai = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 8.21340895351653
        double var_chaste_interface__cell__sCaj = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.000175648385857736
        double var_chaste_interface__cell__sCasl = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.000105614570409386
        double var_chaste_interface__cell__sCai = NV_Ith_S(rY, 37);
        // Units: dimensionless; Initial value: 8.85230799863012e-5
        
        const double var_cell__sm = var_chaste_interface__cell__sm; // dimensionless
        const double var_cell__sh = var_chaste_interface__cell__sh; // dimensionless
        const double var_cell__sj = var_chaste_interface__cell__sj; // dimensionless
        const double var_cell__sd = var_chaste_interface__cell__sd; // dimensionless
        const double var_cell__sf = var_chaste_interface__cell__sf; // dimensionless
        const double var_cell__sfcaBj = var_chaste_interface__cell__sfcaBj; // dimensionless
        const double var_cell__sfcaBsl = var_chaste_interface__cell__sfcaBsl; // dimensionless
        const double var_cell__sxtos = var_chaste_interface__cell__sxtos; // dimensionless
        const double var_cell__sytos = var_chaste_interface__cell__sytos; // dimensionless
        const double var_cell__sxtof = var_chaste_interface__cell__sxtof; // dimensionless
        const double var_cell__sytof = var_chaste_interface__cell__sytof; // dimensionless
        const double var_cell__sxkr = var_chaste_interface__cell__sxkr; // dimensionless
        const double var_cell__sxks = var_chaste_interface__cell__sxks; // dimensionless
        const double var_cell__sRyRr = var_chaste_interface__cell__sRyRr; // dimensionless
        const double var_cell__sRyRo = var_chaste_interface__cell__sRyRo; // dimensionless
        const double var_cell__sRyRi = var_chaste_interface__cell__sRyRi; // dimensionless
        const double var_cell__sNaBj = var_chaste_interface__cell__sNaBj; // dimensionless
        const double var_cell__sNaBsl = var_chaste_interface__cell__sNaBsl; // dimensionless
        const double var_cell__sTnCL = var_chaste_interface__cell__sTnCL; // dimensionless
        const double var_cell__sTnCHc = var_chaste_interface__cell__sTnCHc; // dimensionless
        const double var_cell__sTnCHm = var_chaste_interface__cell__sTnCHm; // dimensionless
        const double var_cell__sCaM = var_chaste_interface__cell__sCaM; // dimensionless
        const double var_cell__sMyoc = var_chaste_interface__cell__sMyoc; // dimensionless
        const double var_cell__sMyom = var_chaste_interface__cell__sMyom; // dimensionless
        const double var_cell__sSRB = var_chaste_interface__cell__sSRB; // dimensionless
        const double var_cell__sSLLj = var_chaste_interface__cell__sSLLj; // dimensionless
        const double var_cell__sSLLsl = var_chaste_interface__cell__sSLLsl; // dimensionless
        const double var_cell__sSLHj = var_chaste_interface__cell__sSLHj; // dimensionless
        const double var_cell__sSLHsl = var_chaste_interface__cell__sSLHsl; // dimensionless
        const double var_cell__sCsqnb = var_chaste_interface__cell__sCsqnb; // dimensionless
        const double var_cell__sCa_sr = var_chaste_interface__cell__sCa_sr; // dimensionless
        const double var_cell__sNaj = var_chaste_interface__cell__sNaj; // dimensionless
        const double var_cell__sNasl = var_chaste_interface__cell__sNasl; // dimensionless
        const double var_cell__sNai = var_chaste_interface__cell__sNai; // dimensionless
        const double var_cell__sKi = 120.0; // dimensionless
        const double var_cell__sCaj = var_chaste_interface__cell__sCaj; // dimensionless
        const double var_cell__sCasl = var_chaste_interface__cell__sCasl; // dimensionless
        const double var_cell__sCai = var_chaste_interface__cell__sCai; // dimensionless
        const double var_cell__sVm = var_chaste_interface__cell__sVm; // millivolt
        const double var_cell__R = 8314.0; // dimensionless
        const double var_cell__Frdy = 96485.0; // dimensionless
        const double var_cell__Temp = 310.0; // dimensionless
        const double var_cell__Cmem = 1.3809999999999999e-10; // dimensionless
        const double var_cell__cellLength = 100.0; // dimensionless
        const double var_cell__cellRadius = 10.25; // dimensionless
        const double var_cell__G_CaL_mult = 1.0; // dimensionless
        const double var_cell__Fjunc = 0.11; // dimensionless
        const double var_cell__Fjunc_CaL = 0.90000000000000002; // dimensionless
        const double var_cell__Cli = 15.0; // dimensionless
        const double var_cell__Clo = 150.0; // dimensionless
        const double var_cell__Ko = 5.4000000000000004; // dimensionless
        const double var_cell__Nao = 140.0; // dimensionless
        const double var_cell__Cao = 1.8; // dimensionless
        const double var_cell__Mgi = 1.0; // dimensionless
        const double var_cell__GNa = 23.0; // dimensionless
        const double var_cell__GNaB = 0.00059699999999999998; // dimensionless
        const double var_cell__KmNaip = 11.0; // dimensionless
        const double var_cell__KmKo = 1.5; // dimensionless
        const double var_cell__pNaK = 0.018329999999999999; // dimensionless
        const double var_cell__KdClCa = 0.10000000000000001; // dimensionless
        const double var_cell__Q10CaL = 1.8; // dimensionless
        const double var_cell__KmCai = 0.0035899999999999999; // dimensionless
        const double var_cell__KmCao = 1.3; // dimensionless
        const double var_cell__KmNai = 12.289999999999999; // dimensionless
        const double var_cell__KmNao = 87.5; // dimensionless
        const double var_cell__ksat = 0.32000000000000001; // dimensionless
        const double var_cell__nu = 0.27000000000000002; // dimensionless
        const double var_cell__Kdact = 0.00014999999999999999; // dimensionless
        const double var_cell__Q10NCX = 1.5700000000000001; // dimensionless
        const double var_cell__IbarSLCaP = 0.067299999999999999; // dimensionless
        const double var_cell__KmPCa = 0.00050000000000000001; // dimensionless
        const double var_cell__GCaB = 0.00055130000000000001; // dimensionless
        const double var_cell__Q10SLCaP = 2.3500000000000001; // dimensionless
        const double var_cell__Q10SRCaP = 2.6000000000000001; // dimensionless
        const double var_cell__Kmf = 0.00024600000000000002; // dimensionless
        const double var_cell__Kmr = 1.7; // dimensionless
        const double var_cell__hillSRCaP = 1.7869999999999999; // dimensionless
        const double var_cell__ks = 25.0; // dimensionless
        const double var_cell__koCa = 10.0; // dimensionless
        const double var_cell__kom = 0.059999999999999998; // dimensionless
        const double var_cell__kiCa = 0.5; // dimensionless
        const double var_cell__kim = 0.0050000000000000001; // dimensionless
        const double var_cell__ec50SR = 0.45000000000000001; // dimensionless
        const double var_cell__Bmax_Naj = 7.5609999999999999; // dimensionless
        const double var_cell__Bmax_Nasl = 1.6499999999999999; // dimensionless
        const double var_cell__koff_na = 0.001; // dimensionless
        const double var_cell__kon_na = 0.0001; // dimensionless
        const double var_cell__Bmax_TnClow = 0.070000000000000007; // dimensionless
        const double var_cell__koff_tncl = 0.019599999999999999; // dimensionless
        const double var_cell__kon_tncl = 32.700000000000003; // dimensionless
        const double var_cell__Bmax_TnChigh = 0.14000000000000001; // dimensionless
        const double var_cell__koff_tnchca = 3.1999999999999999e-05; // dimensionless
        const double var_cell__kon_tnchca = 2.3700000000000001; // dimensionless
        const double var_cell__koff_tnchmg = 0.0033300000000000001; // dimensionless
        const double var_cell__kon_tnchmg = 0.0030000000000000001; // dimensionless
        const double var_cell__Bmax_CaM = 0.024; // dimensionless
        const double var_cell__koff_cam = 0.23799999999999999; // dimensionless
        const double var_cell__kon_cam = 34.0; // dimensionless
        const double var_cell__Bmax_myosin = 0.14000000000000001; // dimensionless
        const double var_cell__koff_myoca = 0.00046000000000000001; // dimensionless
        const double var_cell__kon_myoca = 13.800000000000001; // dimensionless
        const double var_cell__koff_myomg = 5.7000000000000003e-05; // dimensionless
        const double var_cell__kon_myomg = 0.015699999999999999; // dimensionless
        const double var_cell__koff_sr = 0.059999999999999998; // dimensionless
        const double var_cell__kon_sr = 100.0; // dimensionless
        const double var_cell__koff_sll = 1.3; // dimensionless
        const double var_cell__kon_sll = 100.0; // dimensionless
        const double var_cell__koff_slh = 0.029999999999999999; // dimensionless
        const double var_cell__kon_slh = 100.0; // dimensionless
        const double var_cell__koff_csqn = 65.0; // dimensionless
        const double var_cell__kon_csqn = 100.0; // dimensionless
        const double var_cell__gkr_mult = 1.0; // dimensionless
        const double var_cell__fcaCaMSL = 0.0; // dimensionless
        const double var_cell__fcaCaj = 0.0; // dimensionless
        const double var_cell__MaxSR = 15.0; // dimensionless
        const double var_cell__MinSR = 1.0; // dimensionless
        const double var_chaste_interface__cell__fake_dt = 1.0; // ms
        const double var_t3 = pow((0.06435006435 * var_cell__sVm) + 2.946589447, 2.0); // dimensionless
        const double var_t4 = exp(-var_t3); // dimensionless
        const double var_t8 = pow((0.01956181534 * var_cell__sVm) - 0.094346635380000002, 2.0); // dimensionless
        const double var_t9 = exp(-var_t8); // dimensionless
        const double var_t11 = (0.12920000000000001 * var_t4) + (0.064869999999999997 * var_t9); // dimensionless
        const double var_t12 = 1.0 / var_t11; // dimensionless
        const double var_t15 = exp((-6.2967884820000002) - (0.1107419712 * var_cell__sVm)); // dimensionless
        const double var_t16 = 1.0 + var_t15; // dimensionless
        const double var_t17 = pow(var_t16, 2.0); // dimensionless
        const double var_t25 = pow(var_t11, 2.0); // dimensionless
        const double var_t39 = (-40.0) <= var_cell__sVm; // dimensionless
        const double var_t42 = exp(((-0.14705882349999999) * var_cell__sVm) - 11.764705879999999); // dimensionless
        const double var_t44 = var_t39 ? 0.0 : (0.057000000000000002 * var_t42); // dimensionless
        const double var_t47 = exp(((-0.090090090090000005) * var_cell__sVm) - 0.96036036039999995); // dimensionless
        const double var_t53 = exp(0.079000000000000001 * var_cell__sVm); // dimensionless
        const double var_t56 = exp(0.34849999999999998 * var_cell__sVm); // dimensionless
        const double var_t59 = var_t39 ? (0.77000000000000002 / (0.13 + (0.13 * var_t47))) : ((2.7000000000000002 * var_t53) + (310000.0 * var_t56)); // dimensionless
        const double var_t60 = (-var_t44) - var_t59; // dimensionless
        const double var_t63 = exp((0.134589502 * var_cell__sVm) + 9.6298788680000005); // dimensionless
        const double var_t64 = 1.0 + var_t63; // dimensionless
        const double var_t65 = pow(var_t64, 2.0); // dimensionless
        const double var_t68 = ((1.0 / var_t65) / var_t64) * var_t63; // dimensionless
        const double var_t71 = 1.0 / var_t65; // dimensionless
        const double var_t73 = var_cell__sVm < (-40.0); // dimensionless
        const double var_t76 = (-40.0) < var_cell__sVm; // dimensionless
        const double var_t77 = var_t73 ? ((-0.0083823529409999993) * var_t42) : ((-40.0) <= var_cell__sVm) ? 0.0 : NAN; // dimensionless
        const double var_t79 = exp(0.079000000000000001 * var_cell__sVm); // dimensionless
        const double var_t82 = exp(0.34849999999999998 * var_cell__sVm); // dimensionless
        const double var_t87 = pow(0.13 + (0.13 * var_t47), 2.0); // dimensionless
        const double var_t91 = (var_cell__sVm <= (-40.0)) ? ((0.21329999999999999 * var_t79) + (108035.0 * var_t82)) : var_t76 ? ((0.009018018018 / var_t87) * var_t47) : NAN; // dimensionless
        const double var_t96 = exp(0.24440000000000001 * var_cell__sVm); // dimensionless
        const double var_t99 = exp((-0.043909999999999998) * var_cell__sVm); // dimensionless
        const double var_t106 = exp((0.311 * var_cell__sVm) + 24.640529999999998); // dimensionless
        const double var_t110 = var_t39 ? 0.0 : (((((-25428.0) * var_t96) - (6.9480000000000002e-06 * var_t99)) * (var_cell__sVm + 37.780000000000001)) / (1.0 + var_t106)); // dimensionless
        const double var_t112 = exp(0.057000000000000002 * var_cell__sVm); // dimensionless
        const double var_t115 = exp(((-0.10000000000000001) * var_cell__sVm) - 3.2000000000000002); // dimensionless
        const double var_t121 = exp((-0.01052) * var_cell__sVm); // dimensionless
        const double var_t124 = exp(((-0.13780000000000001) * var_cell__sVm) - 5.5312919999999997); // dimensionless
        const double var_t129 = var_t39 ? ((0.59999999999999998 * var_t112) / (1.0 + var_t115)) : ((0.024240000000000001 * var_t121) / (1.0 + var_t124)); // dimensionless
        const double var_t130 = (-var_t110) - var_t129; // dimensionless
        const double var_t135 = exp(0.24440000000000001 * var_cell__sVm); // dimensionless
        const double var_t138 = exp((-0.043909999999999998) * var_cell__sVm); // dimensionless
        const double var_t141 = var_cell__sVm + 37.780000000000001; // dimensionless
        const double var_t145 = exp((0.311 * var_cell__sVm) + 24.640530009999999); // dimensionless
        const double var_t146 = 1.0 + var_t145; // dimensionless
        const double var_t147 = 1.0 / var_t146; // dimensionless
        const double var_t151 = ((-25428.0) * var_t135) - (6.9480000000000002e-06 * var_t138); // dimensionless
        const double var_t154 = pow(var_t146, 2.0); // dimensionless
        const double var_t160 = var_t73 ? (((((((-6214.6031999999996) * var_t135) + (3.0508668000000001e-07 * var_t138)) * var_t141) * var_t147) + (var_t151 * var_t147)) - ((((0.311 * var_t151) * var_t141) / var_t154) * var_t145)) : ((-40.0) <= var_cell__sVm) ? 0.0 : NAN; // dimensionless
        const double var_t162 = exp((-0.01052) * var_cell__sVm); // dimensionless
        const double var_t165 = exp(((-0.13780000000000001) * var_cell__sVm) - 5.5312919950000001); // dimensionless
        const double var_t166 = 1.0 + var_t165; // dimensionless
        const double var_t170 = pow(var_t166, 2.0); // dimensionless
        const double var_t177 = exp(0.057000000000000002 * var_cell__sVm); // dimensionless
        const double var_t180 = exp(((-0.10000000000000001) * var_cell__sVm) - 3.2000000000000002); // dimensionless
        const double var_t181 = 1.0 + var_t180; // dimensionless
        const double var_t185 = pow(var_t181, 2.0); // dimensionless
        const double var_t191 = (var_cell__sVm <= (-40.0)) ? ((((-0.00025500479999999997) * var_t162) / var_t166) + (((0.003340272 * var_t162) / var_t170) * var_t165)) : var_t76 ? (((0.034200000000000001 * var_t177) / var_t181) + (((0.059999999999999998 * var_t177) / var_t185) * var_t180)) : NAN; // dimensionless
        const double var_t197 = exp((((-1.0) / 6.0) * var_cell__sVm) - (5.0 / 6.0)); // dimensionless
        const double var_t198 = 1.0 + var_t197; // dimensionless
        const double var_t199 = 1.0 - var_t197; // dimensionless
        const double var_t200 = 1.0 / var_t199; // dimensionless
        const double var_t203 = (0.035000000000000003 * var_cell__sVm) + 0.17499999999999999; // dimensionless
        const double var_t205 = 1.0 / var_t198; // dimensionless
        const double var_t207 = var_t200 * var_t203; // dimensionless
        const double var_t210 = var_t205 - var_cell__sd; // dimensionless
        const double var_t214 = var_t210 * var_t198; // dimensionless
        const double var_t215 = pow(var_t199, 2.0); // dimensionless
        const double var_t226 = pow((0.033700000000000001 * var_cell__sVm) + 0.48864999999999997, 2.0); // dimensionless
        const double var_t227 = exp(-var_t226); // dimensionless
        const double var_t229 = ((-0.019699999999999999) * var_t227) - 0.02; // dimensionless
        const double var_t230 = (1.0 / 9.0) * var_cell__sVm; // dimensionless
        const double var_t232 = exp(var_t230 + (35.0 / 9.0)); // dimensionless
        const double var_t233 = 1.0 + var_t232; // dimensionless
        const double var_t234 = pow(var_t233, 2.0); // dimensionless
        const double var_t238 = (1.0 / 20.0) * var_cell__sVm; // dimensionless
        const double var_t240 = exp((5.0 / 2.0) - var_t238); // dimensionless
        const double var_t241 = 1.0 + var_t240; // dimensionless
        const double var_t242 = pow(var_t241, 2.0); // dimensionless
        const double var_t268 = exp(((1.0 / 15.0) * var_cell__sVm) + (1.0 / 5.0)); // dimensionless
        const double var_t269 = 1.0 + var_t268; // dimensionless
        const double var_t272 = (9.0 / var_t269) + 0.5; // dimensionless
        const double var_t273 = 1.0 / var_t272; // dimensionless
        const double var_t276 = exp((((-1.0) / 13.0) * var_cell__sVm) + (19.0 / 13.0)); // dimensionless
        const double var_t277 = 1.0 + var_t276; // dimensionless
        const double var_t278 = pow(var_t277, 2.0); // dimensionless
        const double var_t280 = (1.0 / var_t278) * var_t276; // dimensionless
        const double var_t283 = 1.0 / var_t277; // dimensionless
        const double var_t285 = pow(var_t272, 2.0); // dimensionless
        const double var_t288 = pow(var_t269, 2.0); // dimensionless
        const double var_t296 = exp(((1.0 / 10.0) * var_cell__sVm) + 6.0); // dimensionless
        const double var_t297 = 1.0 + var_t296; // dimensionless
        const double var_t300 = (800.0 / var_t297) + 30.0; // dimensionless
        const double var_t301 = 1.0 / var_t300; // dimensionless
        const double var_t302 = (1.0 / 5.0) * var_cell__sVm; // dimensionless
        const double var_t304 = exp(var_t302 + 3.8999999999999999); // dimensionless
        const double var_t305 = 1.0 + var_t304; // dimensionless
        const double var_t306 = pow(var_t305, 2.0); // dimensionless
        const double var_t308 = (1.0 / var_t306) * var_t304; // dimensionless
        const double var_t311 = 1.0 / var_t305; // dimensionless
        const double var_t313 = pow(var_t300, 2.0); // dimensionless
        const double var_t316 = pow(var_t297, 2.0); // dimensionless
        const double var_t324 = pow(((1.0 / 50.0) * var_cell__sVm) + (9.0 / 10.0), 2.0); // dimensionless
        const double var_t325 = exp(-var_t324); // dimensionless
        const double var_t327 = (8.5 * var_t325) + 0.5; // dimensionless
        const double var_t328 = 1.0 / var_t327; // dimensionless
        const double var_t332 = pow(var_t327, 2.0); // dimensionless
        const double var_t342 = pow(var_cell__sVm + 40.0, 2.0); // dimensionless
        const double var_t344 = exp(((-1.0) / 220.0) * var_t342); // dimensionless
        const double var_t346 = (85.0 * var_t344) + 7.0; // dimensionless
        const double var_t347 = 1.0 / var_t346; // dimensionless
        const double var_t351 = pow(var_t346, 2.0); // dimensionless
        const double var_t361 = exp(((-22.0) / 9.0) - var_t230); // dimensionless
        const double var_t362 = 1.0 + var_t361; // dimensionless
        const double var_t363 = 1.0 / var_t362; // dimensionless
        const double var_t365 = exp(var_t230 + (11.0 / 9.0)); // dimensionless
        const double var_t366 = 1.0 + var_t365; // dimensionless
        const double var_t367 = 1.0 / var_t366; // dimensionless
        const double var_t371 = exp(var_t238 + 2.0); // dimensionless
        const double var_t372 = 1.0 + var_t371; // dimensionless
        const double var_t375 = ((3300.0 * var_t363) * var_t367) + (230.0 / var_t372); // dimensionless
        const double var_t376 = 1.0 / var_t375; // dimensionless
        const double var_t378 = exp((-var_t302) - 2.0); // dimensionless
        const double var_t379 = 1.0 + var_t378; // dimensionless
        const double var_t380 = pow(var_t379, 2.0); // dimensionless
        const double var_t387 = pow(var_t375, 2.0); // dimensionless
        const double var_t390 = pow(var_t362, 2.0); // dimensionless
        const double var_t395 = pow(var_t366, 2.0); // dimensionless
        const double var_t400 = pow(var_t372, 2.0); // dimensionless
        const double var_t409 = exp(((-0.07082152974) * var_cell__sVm) - 0.17252124639999999); // dimensionless
        const double var_t414 = exp(((-0.070175438600000001) * var_cell__sVm) - 0.2666666667); // dimensionless
        const double var_t415 = 1.0 + var_t414; // dimensionless
        const double var_t416 = pow(var_t415, 2.0); // dimensionless
        const double var_t427 = var_cell__MaxSR - var_cell__MinSR; // dimensionless
        const double var_t428 = 1.0 / var_cell__sCa_sr; // dimensionless
        const double var_t429 = var_cell__ec50SR * var_t428; // dimensionless
        const double var_t430 = pow(var_t429, 2.5); // dimensionless
        const double var_t431 = 1.0 + var_t430; // dimensionless
        const double var_t434 = var_cell__MaxSR - (var_t427 / var_t431); // dimensionless
        const double var_t435 = var_cell__kiCa * var_t434; // dimensionless
        const double var_t436 = var_t435 * var_cell__sCaj; // dimensionless
        const double var_t438 = var_cell__koCa / var_t434; // dimensionless
        const double var_t439 = pow(var_cell__sCaj, 2.0); // dimensionless
        const double var_t440 = var_t438 * var_t439; // dimensionless
        const double var_t444 = pow(var_t431, 2.0); // dimensionless
        const double var_t445 = 1.0 / var_t444; // dimensionless
        const double var_t446 = pow(var_t429, 1.5); // dimensionless
        const double var_t448 = ((var_cell__kiCa * var_t427) * var_t445) * var_t446; // dimensionless
        const double var_t449 = pow(var_cell__sCa_sr, 2.0); // dimensionless
        const double var_t450 = 1.0 / var_t449; // dimensionless
        const double var_t451 = var_cell__ec50SR * var_t450; // dimensionless
        const double var_t452 = var_cell__sCaj * var_cell__sRyRr; // dimensionless
        const double var_t456 = pow(var_t434, 2.0); // dimensionless
        const double var_t458 = var_cell__koCa / var_t456; // dimensionless
        const double var_t464 = (((var_t427 * var_t445) * var_t446) * var_cell__ec50SR) * var_t450; // dimensionless
        const double var_t466 = (((2.5 * var_t458) * var_t439) * var_cell__sRyRr) * var_t464; // dimensionless
        const double var_t470 = (2.0 * var_t438) * var_t452; // dimensionless
        const double var_t476 = (((2.5 * var_t448) * var_t451) * var_cell__sCaj) * var_cell__sRyRo; // dimensionless
        const double var_t478 = var_t435 * var_cell__sRyRo; // dimensionless
        const double var_t482 = ((1.0 - var_cell__sRyRr) - var_cell__sRyRo) - var_cell__sRyRi; // dimensionless
        const double var_t493 = ((-var_cell__kon_na) * var_cell__sNaj) - var_cell__koff_na; // dimensionless
        const double var_t495 = var_cell__kon_na * (var_cell__Bmax_Naj - var_cell__sNaBj); // dimensionless
        const double var_t497 = ((-var_cell__kon_na) * var_cell__sNasl) - var_cell__koff_na; // dimensionless
        const double var_t499 = var_cell__kon_na * (var_cell__Bmax_Nasl - var_cell__sNaBsl); // dimensionless
        const double var_t501 = ((-var_cell__kon_tncl) * var_cell__sCai) - var_cell__koff_tncl; // dimensionless
        const double var_t503 = var_cell__kon_tncl * (var_cell__Bmax_TnClow - var_cell__sTnCL); // dimensionless
        const double var_t504 = var_cell__kon_tnchca * var_cell__sCai; // dimensionless
        const double var_t507 = var_cell__kon_tnchca * ((var_cell__Bmax_TnChigh - var_cell__sTnCHc) - var_cell__sTnCHm); // dimensionless
        const double var_t508 = var_cell__kon_tnchmg * var_cell__Mgi; // dimensionless
        const double var_t511 = ((-var_cell__kon_cam) * var_cell__sCai) - var_cell__koff_cam; // dimensionless
        const double var_t513 = var_cell__kon_cam * (var_cell__Bmax_CaM - var_cell__sCaM); // dimensionless
        const double var_t514 = var_cell__kon_myoca * var_cell__sCai; // dimensionless
        const double var_t517 = var_cell__kon_myoca * ((var_cell__Bmax_myosin - var_cell__sMyoc) - var_cell__sMyom); // dimensionless
        const double var_t518 = var_cell__kon_myomg * var_cell__Mgi; // dimensionless
        const double var_t521 = ((-var_cell__kon_sr) * var_cell__sCai) - var_cell__koff_sr; // dimensionless
        const double var_t523 = var_cell__kon_sr * (0.017100000000000001 - var_cell__sSRB); // dimensionless
        const double var_t525 = ((-var_cell__kon_sll) * var_cell__sCaj) - var_cell__koff_sll; // dimensionless
        const double var_t527 = var_cell__kon_sll * (0.55473098320000003 - var_cell__sSLLj); // dimensionless
        const double var_t529 = ((-var_cell__kon_sll) * var_cell__sCasl) - var_cell__koff_sll; // dimensionless
        const double var_t531 = var_cell__kon_sll * (1.2155 - var_cell__sSLLsl); // dimensionless
        const double var_t533 = ((-var_cell__kon_slh) * var_cell__sCaj) - var_cell__koff_slh; // dimensionless
        const double var_t535 = var_cell__kon_slh * (0.19897959179999999 - var_cell__sSLHj); // dimensionless
        const double var_t537 = ((-var_cell__kon_slh) * var_cell__sCasl) - var_cell__koff_slh; // dimensionless
        const double var_t539 = var_cell__kon_slh * (0.4355 - var_cell__sSLHsl); // dimensionless
        const double var_t541 = ((-var_cell__kon_csqn) * var_cell__sCa_sr) - var_cell__koff_csqn; // dimensionless
        const double var_t543 = var_cell__kon_csqn * (2.6000000000000001 - var_cell__sCsqnb); // dimensionless
        const double var_t545 = var_cell__ks * (var_cell__sCa_sr - var_cell__sCaj); // dimensionless
        const double var_t547 = ((1.0 / 10.0) * var_cell__Temp) - 31.0; // dimensionless
        const double var_t548 = pow(var_cell__Q10SRCaP, var_t547); // dimensionless
        const double var_t551 = pow(var_cell__sCa_sr / var_cell__Kmr, var_cell__hillSRCaP); // dimensionless
        const double var_t556 = pow(var_cell__sCai / var_cell__Kmf, var_cell__hillSRCaP); // dimensionless
        const double var_t557 = (1.0 + var_t556) + var_t551; // dimensionless
        const double var_t558 = 1.0 / var_t557; // dimensionless
        const double var_t560 = (((var_t548 * var_t551) * var_cell__hillSRCaP) * var_t428) * var_t558; // dimensionless
        const double var_t564 = pow(var_t557, 2.0); // dimensionless
        const double var_t566 = (var_t548 * (var_t556 - var_t551)) / var_t564; // dimensionless
        const double var_t569 = ((var_t566 * var_t551) * var_cell__hillSRCaP) * var_t428; // dimensionless
        const double var_t571 = var_cell__ks * var_cell__sRyRo; // dimensionless
        const double var_t575 = 1.0 / var_cell__sCai; // dimensionless
        const double var_t578 = (((var_t548 * var_t556) * var_cell__hillSRCaP) * var_t575) * var_t558; // dimensionless
        const double var_t582 = ((var_t566 * var_t556) * var_cell__hillSRCaP) * var_t575; // dimensionless
        const double var_t585 = var_cell__Fjunc * var_cell__GNa; // dimensionless
        const double var_t586 = pow(var_cell__sm, 2.0); // dimensionless
        const double var_t588 = (var_t586 * var_cell__sh) * var_cell__sj; // dimensionless
        const double var_t590 = 1.0 / var_cell__Frdy; // dimensionless
        const double var_t591 = var_t590 * var_cell__R; // dimensionless
        const double var_t592 = 1.0 / var_cell__sNaj; // dimensionless
        const double var_t594 = log(var_cell__Nao * var_t592); // dimensionless
        const double var_t597 = var_cell__sVm - ((var_t591 * var_cell__Temp) * var_t594); // dimensionless
        const double var_t599 = 1.0 / M_PI; // dimensionless
        const double var_t601 = pow(var_cell__cellRadius, 2.0); // dimensionless
        const double var_t602 = 1.0 / var_t601; // dimensionless
        const double var_t603 = 1.0 / var_cell__cellLength; // dimensionless
        const double var_t604 = var_t602 * var_t603; // dimensionless
        const double var_t605 = var_t604 * var_t590; // dimensionless
        const double var_t609 = var_t586 * var_cell__sm; // dimensionless
        const double var_t610 = var_t609 * var_cell__sj; // dimensionless
        const double var_t612 = (var_t585 * var_t610) * var_t597; // dimensionless
        const double var_t613 = var_cell__Cmem * var_t599; // dimensionless
        const double var_t614 = var_t613 * var_t605; // dimensionless
        const double var_t617 = var_t609 * var_cell__sh; // dimensionless
        const double var_t619 = (var_t585 * var_t617) * var_t597; // dimensionless
        const double var_t622 = var_cell__Fjunc_CaL * var_cell__G_CaL_mult; // dimensionless
        const double var_t623 = var_t622 * var_cell__sVm; // dimensionless
        const double var_t624 = 1.0 / var_cell__R; // dimensionless
        const double var_t625 = var_cell__Frdy * var_t624; // dimensionless
        const double var_t626 = 1.0 / var_cell__Temp; // dimensionless
        const double var_t628 = var_t624 * var_t626; // dimensionless
        const double var_t629 = (var_cell__sVm * var_cell__Frdy) * var_t628; // dimensionless
        const double var_t630 = exp(var_t629); // dimensionless
        const double var_t631 = var_cell__sNaj * var_t630; // dimensionless
        const double var_t633 = 0.75 * var_cell__Nao; // dimensionless
        const double var_t634 = (0.75 * var_t631) - var_t633; // dimensionless
        const double var_t635 = var_t626 * var_t634; // dimensionless
        const double var_t637 = (var_t623 * var_t625) * var_t635; // dimensionless
        const double var_t638 = var_t630 - 1.0; // dimensionless
        const double var_t639 = 1.0 / var_t638; // dimensionless
        const double var_t640 = var_t639 * var_cell__sf; // dimensionless
        const double var_t641 = (1.0 - var_cell__sfcaBj) + var_cell__fcaCaj; // dimensionless
        const double var_t642 = pow(var_cell__Q10CaL, var_t547); // dimensionless
        const double var_t643 = var_t641 * var_t642; // dimensionless
        const double var_t645 = var_t613 * var_t604; // dimensionless
        const double var_t649 = var_t639 * var_cell__sd; // dimensionless
        const double var_t654 = var_cell__sf * var_t642; // dimensionless
        const double var_t656 = (var_t649 * var_t654) * var_t645; // dimensionless
        const double var_t660 = var_cell__sj * var_t590; // dimensionless
        const double var_t661 = var_cell__R * var_cell__Temp; // dimensionless
        const double var_t662 = var_t661 * var_t592; // dimensionless
        const double var_t664 = ((var_t585 * var_t617) * var_t660) * var_t662; // dimensionless
        const double var_t665 = var_cell__Fjunc * var_cell__GNaB; // dimensionless
        const double var_t667 = (var_t665 * var_t590) * var_t662; // dimensionless
        const double var_t668 = pow(var_cell__Q10NCX, var_t547); // dimensionless
        const double var_t669 = var_cell__Fjunc * var_t668; // dimensionless
        const double var_t670 = pow(var_cell__Kdact, 2.0); // dimensionless
        const double var_t671 = 1.0 / var_t439; // dimensionless
        const double var_t673 = 1.0 + (var_t670 * var_t671); // dimensionless
        const double var_t674 = 1.0 / var_t673; // dimensionless
        const double var_t676 = var_t625 * var_t626; // dimensionless
        const double var_t678 = exp((var_cell__nu * var_cell__sVm) * var_t676); // dimensionless
        const double var_t681 = pow(var_cell__sNaj, 2.0); // dimensionless
        const double var_t682 = var_t681 * var_cell__Cao; // dimensionless
        const double var_t683 = pow(var_cell__Nao, 2.0); // dimensionless
        const double var_t684 = var_t683 * var_cell__Nao; // dimensionless
        const double var_t685 = var_cell__KmCai * var_t684; // dimensionless
        const double var_t686 = var_t681 * var_cell__sNaj; // dimensionless
        const double var_t687 = pow(var_cell__KmNai, 2.0); // dimensionless
        const double var_t689 = (1.0 / var_t687) / var_cell__KmNai; // dimensionless
        const double var_t693 = pow(var_cell__KmNao, 2.0); // dimensionless
        const double var_t694 = var_t693 * var_cell__KmNao; // dimensionless
        const double var_t695 = var_t694 * var_cell__sCaj; // dimensionless
        const double var_t696 = 1.0 / var_cell__KmCai; // dimensionless
        const double var_t698 = 1.0 + (var_cell__sCaj * var_t696); // dimensionless
        const double var_t701 = var_t686 * var_cell__Cao; // dimensionless
        const double var_t702 = var_t684 * var_cell__sCaj; // dimensionless
        const double var_t703 = ((((var_t685 * (1.0 + (var_t686 * var_t689))) + (var_t695 * var_t698)) + (var_cell__KmCao * var_t686)) + var_t701) + var_t702; // dimensionless
        const double var_t704 = 1.0 / var_t703; // dimensionless
        const double var_t705 = var_cell__nu - 1.0; // dimensionless
        const double var_t708 = exp((var_t705 * var_cell__sVm) * var_t676); // dimensionless
        const double var_t710 = 1.0 + (var_cell__ksat * var_t708); // dimensionless
        const double var_t711 = 1.0 / var_t710; // dimensionless
        const double var_t712 = var_t704 * var_t711; // dimensionless
        const double var_t714 = (((var_t669 * var_t674) * var_t678) * var_t682) * var_t712; // dimensionless
        const double var_t716 = var_t669 * var_t674; // dimensionless
        const double var_t719 = var_t708 * var_t684; // dimensionless
        const double var_t721 = ((var_t678 * var_t686) * var_cell__Cao) - (var_t719 * var_cell__sCaj); // dimensionless
        const double var_t722 = pow(var_t703, 2.0); // dimensionless
        const double var_t724 = var_t721 / var_t722; // dimensionless
        const double var_t731 = (((3.0 * var_t716) * var_t724) * var_t711) * ((((var_t685 * var_t681) * var_t689) + (var_cell__KmCao * var_t681)) + var_t682); // dimensionless
        const double var_t734 = exp((-0.10000000000000001) * var_t629); // dimensionless
        const double var_t737 = exp(0.01485884101 * var_cell__Nao); // dimensionless
        const double var_t738 = var_t737 - 1.0; // dimensionless
        const double var_t739 = exp(-var_t629); // dimensionless
        const double var_t742 = (1.0 + (0.1245 * var_t734)) + ((0.0052142857139999997 * var_t738) * var_t739); // dimensionless
        const double var_t743 = 1.0 / var_t742; // dimensionless
        const double var_t746 = pow(var_cell__KmNaip, 2.0); // dimensionless
        const double var_t747 = pow(var_t746, 2.0); // dimensionless
        const double var_t748 = pow(var_t681, 2.0); // dimensionless
        const double var_t751 = 1.0 + (var_t747 / var_t748); // dimensionless
        const double var_t752 = pow(var_t751, 2.0); // dimensionless
        const double var_t755 = 1.0 / (var_cell__Ko + var_cell__KmKo); // dimensionless
        const double var_t761 = ((((((var_cell__Fjunc * var_t743) * var_cell__Ko) / var_t752) * var_t755) * var_t747) / var_t748) / var_cell__sNaj; // dimensionless
        const double var_t763 = pow(var_cell__Frdy, 2.0); // dimensionless
        const double var_t765 = (var_t763 * var_t624) * var_t626; // dimensionless
        const double var_t766 = var_t623 * var_t765; // dimensionless
        const double var_t768 = (var_t630 * var_t639) * var_cell__sd; // dimensionless
        const double var_t769 = var_cell__sf * var_t641; // dimensionless
        const double var_t770 = var_t769 * var_t642; // dimensionless
        const double var_t773 = ((2.5312499999999999e-09 * var_t766) * var_t768) * var_t770; // dimensionless
        const double var_t780 = (var_t599 * var_t602) * var_t603; // dimensionless
        const double var_t781 = 33975.477400000003 * var_t780; // dimensionless
        const double var_t783 = pow(var_t673, 2.0); // dimensionless
        const double var_t791 = (((((var_t669 / var_t783) * var_t721) * var_t712) * var_t670) / var_t439) / var_cell__sCaj; // dimensionless
        const double var_t794 = (var_t716 * var_t719) * var_t712; // dimensionless
        const double var_t801 = ((var_t716 * var_t724) * var_t711) * (((var_t694 * var_t698) + (var_t695 * var_t696)) + var_t684); // dimensionless
        const double var_t808 = var_t617 * var_cell__sj; // dimensionless
        const double var_t809 = var_t585 * var_t808; // dimensionless
        const double var_t811 = (var_cell__nu * var_cell__Frdy) * var_t624; // dimensionless
        const double var_t812 = var_t626 * var_t678; // dimensionless
        const double var_t816 = (var_t705 * var_cell__Frdy) * var_t624; // dimensionless
        const double var_t817 = var_t626 * var_t708; // dimensionless
        const double var_t823 = ((var_t716 * (((var_t811 * var_t812) * var_t701) - ((var_t816 * var_t817) * var_t702))) * var_t704) * var_t711; // dimensionless
        const double var_t826 = pow(var_t710, 2.0); // dimensionless
        const double var_t827 = 1.0 / var_t826; // dimensionless
        const double var_t833 = (((var_cell__ksat * var_t705) * var_cell__Frdy) * var_t628) * var_t708; // dimensionless
        const double var_t834 = (((var_t716 * var_t721) * var_t704) * var_t827) * var_t833; // dimensionless
        const double var_t836 = pow(var_t742, 2.0); // dimensionless
        const double var_t837 = 1.0 / var_t836; // dimensionless
        const double var_t849 = ((((-0.012449999999999999) * var_t625) * var_t626) * var_t734) - ((((0.0052142857139999997 * var_t738) * var_cell__Frdy) * var_t628) * var_t739); // dimensionless
        const double var_t851 = ((((var_cell__Fjunc * var_t837) * var_cell__Ko) / var_t751) * var_t755) * var_t849; // dimensionless
        const double var_t853 = var_t622 * var_t765; // dimensionless
        const double var_t858 = ((((3.375e-09 * var_t853) * var_t634) * var_t639) * var_cell__sd) * var_t770; // dimensionless
        const double var_t859 = var_t763 * var_cell__Frdy; // dimensionless
        const double var_t860 = pow(var_cell__R, 2.0); // dimensionless
        const double var_t861 = 1.0 / var_t860; // dimensionless
        const double var_t863 = pow(var_cell__Temp, 2.0); // dimensionless
        const double var_t864 = 1.0 / var_t863; // dimensionless
        const double var_t865 = (var_t859 * var_t861) * var_t864; // dimensionless
        const double var_t866 = var_t623 * var_t865; // dimensionless
        const double var_t868 = var_cell__sd * var_cell__sf; // dimensionless
        const double var_t869 = var_t868 * var_t643; // dimensionless
        const double var_t872 = (((2.5312499999999999e-09 * var_t866) * var_t631) * var_t639) * var_t869; // dimensionless
        const double var_t873 = pow(var_t638, 2.0); // dimensionless
        const double var_t874 = 1.0 / var_t873; // dimensionless
        const double var_t877 = var_t642 * var_t630; // dimensionless
        const double var_t881 = (((((3.375e-09 * var_t866) * var_t634) * var_t874) * var_cell__sd) * var_t769) * var_t877; // dimensionless
        const double var_t887 = 1.0 - var_cell__Fjunc; // dimensionless
        const double var_t888 = var_t887 * var_cell__GNa; // dimensionless
        const double var_t890 = 1.0 / var_cell__sNasl; // dimensionless
        const double var_t892 = log(var_cell__Nao * var_t890); // dimensionless
        const double var_t895 = var_cell__sVm - ((var_t591 * var_cell__Temp) * var_t892); // dimensionless
        const double var_t902 = (var_t888 * var_t610) * var_t895; // dimensionless
        const double var_t906 = (var_t888 * var_t617) * var_t895; // dimensionless
        const double var_t909 = 1.0 - var_cell__Fjunc_CaL; // dimensionless
        const double var_t910 = var_t909 * var_cell__G_CaL_mult; // dimensionless
        const double var_t911 = var_t910 * var_cell__sVm; // dimensionless
        const double var_t912 = var_cell__sNasl * var_t630; // dimensionless
        const double var_t914 = (0.75 * var_t912) - var_t633; // dimensionless
        const double var_t915 = var_t626 * var_t914; // dimensionless
        const double var_t917 = (var_t911 * var_t625) * var_t915; // dimensionless
        const double var_t918 = (1.0 - var_cell__sfcaBsl) + var_cell__fcaCaMSL; // dimensionless
        const double var_t919 = var_t918 * var_t642; // dimensionless
        const double var_t932 = var_t661 * var_t890; // dimensionless
        const double var_t934 = ((var_t888 * var_t617) * var_t660) * var_t932; // dimensionless
        const double var_t935 = var_t887 * var_cell__GNaB; // dimensionless
        const double var_t937 = (var_t935 * var_t590) * var_t932; // dimensionless
        const double var_t938 = var_t887 * var_t668; // dimensionless
        const double var_t939 = pow(var_cell__sCasl, 2.0); // dimensionless
        const double var_t940 = 1.0 / var_t939; // dimensionless
        const double var_t942 = 1.0 + (var_t670 * var_t940); // dimensionless
        const double var_t943 = 1.0 / var_t942; // dimensionless
        const double var_t946 = pow(var_cell__sNasl, 2.0); // dimensionless
        const double var_t947 = var_t946 * var_cell__Cao; // dimensionless
        const double var_t948 = var_t946 * var_cell__sNasl; // dimensionless
        const double var_t952 = var_t694 * var_cell__sCasl; // dimensionless
        const double var_t954 = 1.0 + (var_cell__sCasl * var_t696); // dimensionless
        const double var_t957 = var_t948 * var_cell__Cao; // dimensionless
        const double var_t958 = var_t684 * var_cell__sCasl; // dimensionless
        const double var_t959 = ((((var_t685 * (1.0 + (var_t948 * var_t689))) + (var_t952 * var_t954)) + (var_cell__KmCao * var_t948)) + var_t957) + var_t958; // dimensionless
        const double var_t960 = 1.0 / var_t959; // dimensionless
        const double var_t961 = var_t960 * var_t711; // dimensionless
        const double var_t963 = (((var_t938 * var_t943) * var_t678) * var_t947) * var_t961; // dimensionless
        const double var_t965 = var_t938 * var_t943; // dimensionless
        const double var_t969 = ((var_t678 * var_t948) * var_cell__Cao) - (var_t719 * var_cell__sCasl); // dimensionless
        const double var_t970 = pow(var_t959, 2.0); // dimensionless
        const double var_t972 = var_t969 / var_t970; // dimensionless
        const double var_t979 = (((3.0 * var_t965) * var_t972) * var_t711) * ((((var_t685 * var_t946) * var_t689) + (var_cell__KmCao * var_t946)) + var_t947); // dimensionless
        const double var_t983 = pow(var_t946, 2.0); // dimensionless
        const double var_t986 = 1.0 + (var_t747 / var_t983); // dimensionless
        const double var_t987 = pow(var_t986, 2.0); // dimensionless
        const double var_t994 = ((((((var_t887 * var_t743) * var_cell__Ko) / var_t987) * var_t755) * var_t747) / var_t983) / var_cell__sNasl; // dimensionless
        const double var_t996 = var_t911 * var_t765; // dimensionless
        const double var_t997 = var_cell__sf * var_t918; // dimensionless
        const double var_t998 = var_t997 * var_t642; // dimensionless
        const double var_t1001 = ((2.5312499999999999e-09 * var_t996) * var_t768) * var_t998; // dimensionless
        const double var_t1010 = pow(var_t942, 2.0); // dimensionless
        const double var_t1018 = (((((var_t938 / var_t1010) * var_t969) * var_t961) * var_t670) / var_t939) / var_cell__sCasl; // dimensionless
        const double var_t1021 = (var_t965 * var_t719) * var_t961; // dimensionless
        const double var_t1028 = ((var_t965 * var_t972) * var_t711) * (((var_t694 * var_t954) + (var_t952 * var_t696)) + var_t684); // dimensionless
        const double var_t1035 = var_t888 * var_t808; // dimensionless
        const double var_t1043 = ((var_t965 * (((var_t811 * var_t812) * var_t957) - ((var_t816 * var_t817) * var_t958))) * var_t960) * var_t711; // dimensionless
        const double var_t1048 = (((var_t965 * var_t969) * var_t960) * var_t827) * var_t833; // dimensionless
        const double var_t1055 = ((((var_t887 * var_t837) * var_cell__Ko) / var_t986) * var_t755) * var_t849; // dimensionless
        const double var_t1057 = var_t910 * var_t765; // dimensionless
        const double var_t1062 = ((((3.375e-09 * var_t1057) * var_t914) * var_t639) * var_cell__sd) * var_t998; // dimensionless
        const double var_t1063 = var_t911 * var_t865; // dimensionless
        const double var_t1065 = var_t868 * var_t919; // dimensionless
        const double var_t1068 = (((2.5312499999999999e-09 * var_t1063) * var_t912) * var_t639) * var_t1065; // dimensionless
        const double var_t1074 = (((((3.375e-09 * var_t1063) * var_t914) * var_t874) * var_cell__sd) * var_t997) * var_t877; // dimensionless
        const double var_t1080 = 2520.966034 * var_t780; // dimensionless
        const double var_t1082 = exp(2.0 * var_t629); // dimensionless
        const double var_t1083 = var_cell__sCaj * var_t1082; // dimensionless
        const double var_t1085 = 0.34100000000000003 * var_cell__Cao; // dimensionless
        const double var_t1086 = (0.34100000000000003 * var_t1083) - var_t1085; // dimensionless
        const double var_t1087 = var_t626 * var_t1086; // dimensionless
        const double var_t1089 = (var_t623 * var_t625) * var_t1087; // dimensionless
        const double var_t1090 = var_t1082 - 1.0; // dimensionless
        const double var_t1091 = 1.0 / var_t1090; // dimensionless
        const double var_t1092 = var_t1091 * var_cell__sf; // dimensionless
        const double var_t1097 = var_t1091 * var_cell__sd; // dimensionless
        const double var_t1103 = (var_t1097 * var_t654) * var_t645; // dimensionless
        const double var_t1107 = 64.935064940000004 * var_t571; // dimensionless
        const double var_t1117 = (var_t1082 * var_t1091) * var_cell__sd; // dimensionless
        const double var_t1120 = ((0.00016572599999999999 * var_t766) * var_t1117) * var_t770; // dimensionless
        const double var_t1121 = var_cell__Fjunc * var_cell__GCaB; // dimensionless
        const double var_t1123 = 1.0 / var_cell__sCaj; // dimensionless
        const double var_t1126 = ((((1.0 / 2.0) * var_t1121) * var_t590) * var_t661) * var_t1123; // dimensionless
        const double var_t1127 = pow(var_cell__Q10SLCaP, var_t547); // dimensionless
        const double var_t1128 = var_cell__Fjunc * var_t1127; // dimensionless
        const double var_t1129 = pow(var_cell__sCaj, 0.59999999999999998); // dimensionless
        const double var_t1131 = pow(var_cell__KmPCa, 1.6000000000000001); // dimensionless
        const double var_t1132 = pow(var_cell__sCaj, 1.6000000000000001); // dimensionless
        const double var_t1133 = var_t1131 + var_t1132; // dimensionless
        const double var_t1137 = (((1.6000000000000001 * var_t1128) * var_cell__IbarSLCaP) * var_t1129) / var_t1133; // dimensionless
        const double var_t1138 = pow(var_cell__sCaj, 2.2000000000000002); // dimensionless
        const double var_t1140 = pow(var_t1133, 2.0); // dimensionless
        const double var_t1144 = (((1.6000000000000001 * var_t1128) * var_cell__IbarSLCaP) * var_t1138) / var_t1140; // dimensionless
        const double var_t1153 = 1528999.1510000001 * var_t780; // dimensionless
        const double var_t1159 = ((((0.000486 * var_t853) * var_t1086) * var_t1091) * var_cell__sd) * var_t770; // dimensionless
        const double var_t1163 = (((0.00033145199999999998 * var_t866) * var_t1083) * var_t1091) * var_t869; // dimensionless
        const double var_t1164 = pow(var_t1090, 2.0); // dimensionless
        const double var_t1165 = 1.0 / var_t1164; // dimensionless
        const double var_t1168 = var_t642 * var_t1082; // dimensionless
        const double var_t1172 = (((((0.00097199999999999999 * var_t866) * var_t1086) * var_t1165) * var_cell__sd) * var_t769) * var_t1168; // dimensionless
        const double var_t1180 = var_cell__sCasl * var_t1082; // dimensionless
        const double var_t1182 = (0.34100000000000003 * var_t1180) - var_t1085; // dimensionless
        const double var_t1183 = var_t626 * var_t1182; // dimensionless
        const double var_t1185 = (var_t911 * var_t625) * var_t1183; // dimensionless
        const double var_t1206 = ((0.00016572599999999999 * var_t996) * var_t1117) * var_t998; // dimensionless
        const double var_t1207 = var_t887 * var_cell__GCaB; // dimensionless
        const double var_t1209 = 1.0 / var_cell__sCasl; // dimensionless
        const double var_t1212 = ((((1.0 / 2.0) * var_t1207) * var_t590) * var_t661) * var_t1209; // dimensionless
        const double var_t1213 = var_t887 * var_t1127; // dimensionless
        const double var_t1214 = pow(var_cell__sCasl, 0.59999999999999998); // dimensionless
        const double var_t1216 = pow(var_cell__sCasl, 1.6000000000000001); // dimensionless
        const double var_t1217 = var_t1131 + var_t1216; // dimensionless
        const double var_t1221 = (((1.6000000000000001 * var_t1213) * var_cell__IbarSLCaP) * var_t1214) / var_t1217; // dimensionless
        const double var_t1222 = pow(var_cell__sCasl, 2.2000000000000002); // dimensionless
        const double var_t1224 = pow(var_t1217, 2.0); // dimensionless
        const double var_t1228 = (((1.6000000000000001 * var_t1213) * var_cell__IbarSLCaP) * var_t1222) / var_t1224; // dimensionless
        const double var_t1244 = ((((0.000486 * var_t1057) * var_t1182) * var_t1091) * var_cell__sd) * var_t998; // dimensionless
        const double var_t1248 = (((0.00033145199999999998 * var_t1063) * var_t1180) * var_t1091) * var_t1065; // dimensionless
        const double var_t1254 = (((((0.00097199999999999999 * var_t1063) * var_t1182) * var_t1165) * var_cell__sd) * var_t997) * var_t1168; // dimensionless
        const double var_t1269 = 5729.6247380000004 * var_t780; // dimensionless
        const double var_t1274 = var_cell__sh * var_cell__sj; // dimensionless
        const double var_t1284 = (var_cell__sVm * var_t763) * var_t624; // dimensionless
        const double var_t1285 = var_t622 * var_t1284; // dimensionless
        const double var_t1286 = var_t1087 * var_t1091; // dimensionless
        const double var_t1290 = var_t910 * var_t1284; // dimensionless
        const double var_t1291 = var_t1183 * var_t1091; // dimensionless
        const double var_t1295 = var_cell__G_CaL_mult * var_cell__sVm; // dimensionless
        const double var_t1296 = var_t1295 * var_t765; // dimensionless
        const double var_t1300 = ((0.75 * var_cell__sKi) * var_t630) - (0.75 * var_cell__Ko); // dimensionless
        const double var_t1301 = var_t1300 * var_t639; // dimensionless
        const double var_t1304 = (var_cell__Fjunc_CaL * var_t641) + (var_t909 * var_t918); // dimensionless
        const double var_t1306 = (var_cell__sf * var_t1304) * var_t642; // dimensionless
        const double var_t1310 = var_t635 * var_t639; // dimensionless
        const double var_t1314 = var_t915 * var_t639; // dimensionless
        const double var_t1320 = (var_cell__sd * var_t641) * var_t642; // dimensionless
        const double var_t1325 = (var_cell__sd * var_t918) * var_t642; // dimensionless
        const double var_t1341 = var_t868 * var_t642; // dimensionless
        const double var_t1345 = var_t1301 * var_cell__sd; // dimensionless
        const double var_t1369 = log(var_cell__Ko / var_cell__sKi); // dimensionless
        const double var_t1371 = (var_t591 * var_cell__Temp) * var_t1369; // dimensionless
        const double var_t1372 = var_cell__sVm - var_t1371; // dimensionless
        const double var_t1381 = pow(var_cell__Ko, 1.0 / 2.0); // dimensionless
        const double var_t1382 = var_cell__gkr_mult * var_t1381; // dimensionless
        const double var_t1385 = exp(((1.0 / 24.0) * var_cell__sVm) + (37.0 / 12.0)); // dimensionless
        const double var_t1386 = 1.0 + var_t1385; // dimensionless
        const double var_t1387 = 1.0 / var_t1386; // dimensionless
        const double var_t1396 = 1.0 / (var_cell__sKi + (var_cell__pNaK * var_cell__sNai)); // dimensionless
        const double var_t1398 = log((var_cell__Ko + (var_cell__pNaK * var_cell__Nao)) * var_t1396); // dimensionless
        const double var_t1401 = var_cell__sVm - ((var_t591 * var_cell__Temp) * var_t1398); // dimensionless
        const double var_t1416 = pow(var_cell__sxks, 2.0); // dimensionless
        const double var_t1417 = var_t887 * var_t1416; // dimensionless
        const double var_t1420 = (var_t661 * var_t1396) * var_cell__pNaK; // dimensionless
        const double var_t1423 = var_cell__Fjunc * var_t1416; // dimensionless
        const double var_t1432 = 1.0 + (var_cell__KdClCa * var_t1123); // dimensionless
        const double var_t1433 = pow(var_t1432, 2.0); // dimensionless
        const double var_t1438 = log(var_cell__Cli / var_cell__Clo); // dimensionless
        const double var_t1442 = (var_cell__sVm - ((var_t591 * var_cell__Temp) * var_t1438)) * var_cell__KdClCa; // dimensionless
        const double var_t1451 = 1.0 + (var_cell__KdClCa * var_t1209); // dimensionless
        const double var_t1452 = pow(var_t1451, 2.0); // dimensionless
        const double var_t1464 = pow(var_t1386, 2.0); // dimensionless
        const double var_t1475 = exp(7.4880000000000004 - (0.16722408029999999 * var_cell__sVm)); // dimensionless
        const double var_t1476 = 1.0 + var_t1475; // dimensionless
        const double var_t1477 = pow(var_t1476, 2.0); // dimensionless
        const double var_t1478 = 1.0 / var_t1477; // dimensionless
        const double var_t1480 = var_t1372 * var_t1475; // dimensionless
        const double var_t1486 = 1.0 / var_t1476; // dimensionless
        const double var_t1496 = exp(((0.23849999999999999 * var_cell__sVm) - (0.23849999999999999 * var_t1371)) - 14.1227775); // dimensionless
        const double var_t1497 = 1.0 + var_t1496; // dimensionless
        const double var_t1498 = 1.0 / var_t1497; // dimensionless
        const double var_t1499 = var_t1381 * var_t1498; // dimensionless
        const double var_t1504 = exp(((0.080320000000000003 * var_cell__sVm) + 0.43983232) - (0.080320000000000003 * var_t1371)); // dimensionless
        const double var_t1509 = exp(((0.061749999999999999 * var_cell__sVm) - (0.061749999999999999 * var_t1371)) - 36.698642499999998); // dimensionless
        const double var_t1510 = (0.49124000000000001 * var_t1504) + var_t1509; // dimensionless
        const double var_t1514 = exp((((-0.51429999999999998) * var_cell__sVm) + (0.51429999999999998 * var_t1371)) - 2.4444678999999998); // dimensionless
        const double var_t1515 = 1.0 + var_t1514; // dimensionless
        const double var_t1516 = 1.0 / var_t1515; // dimensionless
        const double var_t1518 = (1.02 * var_t1498) + (var_t1510 * var_t1516); // dimensionless
        const double var_t1519 = 1.0 / var_t1518; // dimensionless
        const double var_t1522 = pow(var_t1497, 2.0); // dimensionless
        const double var_t1523 = 1.0 / var_t1522; // dimensionless
        const double var_t1529 = pow(var_t1518, 2.0); // dimensionless
        const double var_t1538 = pow(var_t1515, 2.0); // dimensionless
        const double var_t1547 = ((((((((((((-0.015599999999999999) * var_cell__sxtos) * var_cell__sytos) - (0.0035000000000000001 * var_t1417)) - ((0.15362833940000001 * var_t1499) * var_t1519)) - var_t665) - var_t935) - var_t1121) - var_t1207) - var_t1035) + (((((0.03664035895 * var_t1381) * var_t1523) * var_t1519) * var_t1372) * var_t1496)) + ((((0.15362833940000001 * var_t1499) / var_t1529) * var_t1372) * (((((-0.24326999999999999) * var_t1523) * var_t1496) + (((0.039456396800000001 * var_t1504) + (0.061749999999999999 * var_t1509)) * var_t1516)) + (((0.51429999999999998 * var_t1510) / var_t1538) * var_t1514)))) - var_t809; // dimensionless
        const double var_t1549 = var_t1295 * var_t859; // dimensionless
        const double var_t1550 = var_t861 * var_t864; // dimensionless
        const double var_t1567 = ((((((((((-var_t1159) - (((((4.5562500000000002e-08 * var_t1549) * var_t1550) * var_cell__sKi) * var_t768) * var_t1306)) + (4.5 * var_t834)) + (((((((((6.0749999999999998e-08 * var_t1549) * var_t1550) * var_t1300) * var_t874) * var_cell__sd) * var_cell__sf) * var_t1304) * var_t642) * var_t630)) - var_t858) - var_t872) + var_t881) + (4.5 * var_t1048)) - var_t1062) - var_t1068) + var_t1074; // dimensionless
        const double var_t1585 = ((((((((((-var_t1163) + var_t1172) - var_t1244) - var_t1248) + var_t1254) - (0.0035000000000000001 * var_t1423)) - ((0.002 * var_cell__Fjunc) * var_t1486)) - ((0.1144 * var_cell__sxtof) * var_cell__sytof)) - ((0.0548125 * var_cell__Fjunc) / var_t1432)) - ((0.0548125 * var_t887) / var_t1451)) - ((((((6.0749999999999998e-08 * var_cell__G_CaL_mult) * var_t763) * var_t628) * var_t1300) * var_t649) * var_t1306); // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((((((((-0.0089999999999999993) - (4.5 * var_t823)) + (1.8 * var_t851)) - (4.5 * var_t1043)) + (1.8 * var_t1055)) + (((((0.00062756674579999997 * var_t1382) * var_cell__sxkr) / var_t1464) * var_t1372) * var_t1385)) - (((0.015061601900000001 * var_t1382) * var_cell__sxkr) * var_t1387)) - (((0.00033444816059999998 * var_t887) * var_t1478) * var_t1480)) - (((0.00033444816059999998 * var_cell__Fjunc) * var_t1478) * var_t1480)) - ((0.002 * var_t887) * var_t1486)) + var_t1547) + var_t1567) + var_t1585));
        IJth(rJacobian, 1, 0) = var_chaste_interface__cell__fake_dt * (((((0.22148394239999999 / var_t17) / var_t16) * var_t15) * var_t12) - ((((1.0 / var_t17) - var_cell__sm) / var_t25) * (((0.12920000000000001 * (((-0.0082818615639999992) * var_cell__sVm) - 0.37922644100000003)) * var_t4) + ((0.064869999999999997 * (((-0.00076532923879999999) * var_cell__sVm) + 0.0036911829180000001)) * var_t9))));
        IJth(rJacobian, 2, 0) = var_chaste_interface__cell__fake_dt * (((0.269179004 * var_t68) * var_t60) + ((var_t71 - var_cell__sh) * (var_t77 + var_t91)));
        IJth(rJacobian, 3, 0) = var_chaste_interface__cell__fake_dt * (((0.269179004 * var_t68) * var_t130) + ((var_t71 - var_cell__sj) * (var_t160 + var_t191)));
        IJth(rJacobian, 4, 0) = var_chaste_interface__cell__fake_dt * (((((((1.0 / 6.0) * var_t205) * var_t197) * var_t207) - ((((1.0 / 6.0) * var_t210) * var_t197) * var_t207)) - (((((1.0 / 6.0) * var_t214) / var_t215) * var_t203) * var_t197)) + ((0.035000000000000003 * var_t214) * var_t200));
        IJth(rJacobian, 5, 0) = var_chaste_interface__cell__fake_dt * (((-(((((-1.0) / 9.0) / var_t234) * var_t232) + ((0.029999999999999999 / var_t242) * var_t240))) * var_t229) + (((0.019699999999999999 * (((1.0 / var_t233) + (0.59999999999999998 / var_t241)) - var_cell__sf)) * (((-0.0022713799999999999) * var_cell__sVm) - 0.032935010000000001)) * var_t227));
        IJth(rJacobian, 8, 0) = var_chaste_interface__cell__fake_dt * ((((1.0 / 13.0) * var_t280) * var_t273) + (((((3.0 / 5.0) * (var_t283 - var_cell__sxtos)) / var_t285) / var_t288) * var_t268));
        IJth(rJacobian, 9, 0) = var_chaste_interface__cell__fake_dt * (((((-1.0) / 5.0) * var_t308) * var_t301) + ((((80.0 * (var_t311 - var_cell__sytos)) / var_t313) / var_t316) * var_t296));
        IJth(rJacobian, 10, 0) = var_chaste_interface__cell__fake_dt * ((((1.0 / 13.0) * var_t280) * var_t328) - ((((8.5 * (var_t283 - var_cell__sxtof)) / var_t332) * ((((-1.0) / 1250.0) * var_cell__sVm) - (9.0 / 250.0))) * var_t325));
        IJth(rJacobian, 11, 0) = var_chaste_interface__cell__fake_dt * (((((-1.0) / 5.0) * var_t308) * var_t347) - ((((85.0 * (var_t311 - var_cell__sytof)) / var_t351) * ((((-1.0) / 110.0) * var_cell__sVm) - (4.0 / 11.0))) * var_t344));
        IJth(rJacobian, 12, 0) = var_chaste_interface__cell__fake_dt * (((((1.0 / 5.0) / var_t380) * var_t378) * var_t376) - ((((1.0 / var_t379) - var_cell__sxkr) / var_t387) * ((((((1100.0 / 3.0) / var_t390) * var_t367) * var_t361) - ((((1100.0 / 3.0) * var_t363) / var_t395) * var_t365)) - (((23.0 / 2.0) / var_t400) * var_t371))));
        IJth(rJacobian, 13, 0) = var_chaste_interface__cell__fake_dt * ((((7.0877122110000001e-05 / var_t416) * var_t414) * (1.0 + var_t409)) - ((7.1529673509999994e-05 * ((1.0 / var_t415) - var_cell__sxks)) * var_t409));
        IJth(rJacobian, 32, 0) = var_chaste_interface__cell__fake_dt * (((((-1.85528757e+18) * (((((((var_t809 + var_t665) + (13.5 * var_t823)) - (13.5 * var_t834)) - (5.4000000000000004 * var_t851)) + var_t858) + var_t872) - var_t881)) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 33, 0) = var_chaste_interface__cell__fake_dt * (((((-50000000000000000.0) * (((((((var_t1035 + var_t935) + (13.5 * var_t1043)) - (13.5 * var_t1048)) - (5.4000000000000004 * var_t1055)) + var_t1062) + var_t1068) - var_t1074)) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 35, 0) = var_chaste_interface__cell__fake_dt * (((((-9.27643785e+17) * (((((var_t1159 + var_t1163) - var_t1172) + var_t1121) - (9.0 * var_t823)) + (9.0 * var_t834))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 36, 0) = var_chaste_interface__cell__fake_dt * (((((-25000000000000000.0) * (((((var_t1244 + var_t1248) - var_t1254) + var_t1207) - (9.0 * var_t1043)) + (9.0 * var_t1048))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 0, 1) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-3.0) * var_t585) * var_t586) * var_t1274) * var_t597) - ((((3.0 * var_t888) * var_t586) * var_t1274) * var_t895)));
        IJth(rJacobian, 1, 1) = var_chaste_interface__cell__fake_dt * (-var_t12);
        IJth(rJacobian, 32, 1) = var_chaste_interface__cell__fake_dt * (((((((-5.56586271e+18) * var_t585) * var_t588) * var_t597) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 33, 1) = var_chaste_interface__cell__fake_dt * (((((((-1.5e+17) * var_t888) * var_t588) * var_t895) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 0, 2) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t612) - var_t902));
        IJth(rJacobian, 2, 2) = var_chaste_interface__cell__fake_dt * (var_t60);
        IJth(rJacobian, 32, 2) = var_chaste_interface__cell__fake_dt * (((-1.85528757e+18) * var_t612) * var_t614);
        IJth(rJacobian, 33, 2) = var_chaste_interface__cell__fake_dt * (((-50000000000000000.0) * var_t902) * var_t614);
        IJth(rJacobian, 0, 3) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t619) - var_t906));
        IJth(rJacobian, 3, 3) = var_chaste_interface__cell__fake_dt * (var_t130);
        IJth(rJacobian, 32, 3) = var_chaste_interface__cell__fake_dt * (((-1.85528757e+18) * var_t619) * var_t614);
        IJth(rJacobian, 33, 3) = var_chaste_interface__cell__fake_dt * (((-50000000000000000.0) * var_t906) * var_t614);
        IJth(rJacobian, 0, 4) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-0.000486) * var_t1285) * var_t1286) * var_t770) - (((0.000486 * var_t1290) * var_t1291) * var_t998)) - (((6.0749999999999998e-08 * var_t1296) * var_t1301) * var_t1306)) - (((3.375e-09 * var_t1285) * var_t1310) * var_t770)) - (((3.375e-09 * var_t1290) * var_t1314) * var_t998)));
        IJth(rJacobian, 4, 4) = var_chaste_interface__cell__fake_dt * (((-var_t198) * var_t200) * var_t203);
        IJth(rJacobian, 32, 4) = var_chaste_interface__cell__fake_dt * (((((-6261595549.0) * var_t637) * var_t640) * var_t643) * var_t645);
        IJth(rJacobian, 33, 4) = var_chaste_interface__cell__fake_dt * (((((-168750000.0) * var_t917) * var_t640) * var_t919) * var_t645);
        IJth(rJacobian, 35, 4) = var_chaste_interface__cell__fake_dt * (((((-450834879500000.0) * var_t1089) * var_t1092) * var_t643) * var_t645);
        IJth(rJacobian, 36, 4) = var_chaste_interface__cell__fake_dt * (((((-12150000000000.0) * var_t1185) * var_t1092) * var_t919) * var_t645);
        IJth(rJacobian, 0, 5) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-0.000486) * var_t1285) * var_t1286) * var_t1320) - (((0.000486 * var_t1290) * var_t1291) * var_t1325)) - (((((6.0749999999999998e-08 * var_t1296) * var_t1301) * var_cell__sd) * var_t1304) * var_t642)) - (((3.375e-09 * var_t1285) * var_t1310) * var_t1320)) - (((3.375e-09 * var_t1290) * var_t1314) * var_t1325)));
        IJth(rJacobian, 5, 5) = var_chaste_interface__cell__fake_dt * (var_t229);
        IJth(rJacobian, 32, 5) = var_chaste_interface__cell__fake_dt * (((((-6261595549.0) * var_t637) * var_t649) * var_t643) * var_t645);
        IJth(rJacobian, 33, 5) = var_chaste_interface__cell__fake_dt * (((((-168750000.0) * var_t917) * var_t649) * var_t919) * var_t645);
        IJth(rJacobian, 35, 5) = var_chaste_interface__cell__fake_dt * (((((-450834879500000.0) * var_t1089) * var_t1097) * var_t643) * var_t645);
        IJth(rJacobian, 36, 5) = var_chaste_interface__cell__fake_dt * (((((-12150000000000.0) * var_t1185) * var_t1097) * var_t919) * var_t645);
        IJth(rJacobian, 0, 6) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((0.000486 * var_t1285) * var_t1286) * var_t1341) + (((((6.0749999999999998e-08 * var_t1296) * var_t1345) * var_cell__sf) * var_cell__Fjunc_CaL) * var_t642)) + (((3.375e-09 * var_t1285) * var_t1310) * var_t1341)));
        IJth(rJacobian, 6, 6) = var_chaste_interface__cell__fake_dt * (((-1.7) * var_cell__sCaj) - 0.011900000000000001);
        IJth(rJacobian, 32, 6) = var_chaste_interface__cell__fake_dt * ((6261595549.0 * var_t637) * var_t656);
        IJth(rJacobian, 35, 6) = var_chaste_interface__cell__fake_dt * ((450834879500000.0 * var_t1089) * var_t1103);
        IJth(rJacobian, 0, 7) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((0.000486 * var_t1290) * var_t1291) * var_t1341) + (((((6.0749999999999998e-08 * var_t1296) * var_t1345) * var_cell__sf) * var_t909) * var_t642)) + (((3.375e-09 * var_t1290) * var_t1314) * var_t1341)));
        IJth(rJacobian, 7, 7) = var_chaste_interface__cell__fake_dt * (((-1.7) * var_cell__sCasl) - 0.011900000000000001);
        IJth(rJacobian, 33, 7) = var_chaste_interface__cell__fake_dt * ((168750000.0 * var_t917) * var_t656);
        IJth(rJacobian, 36, 7) = var_chaste_interface__cell__fake_dt * ((12150000000000.0 * var_t1185) * var_t1103);
        IJth(rJacobian, 0, 8) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.015599999999999999) * var_cell__sytos) * var_t1372));
        IJth(rJacobian, 8, 8) = var_chaste_interface__cell__fake_dt * (-var_t273);
        IJth(rJacobian, 0, 9) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.015599999999999999) * var_cell__sxtos) * var_t1372));
        IJth(rJacobian, 9, 9) = var_chaste_interface__cell__fake_dt * (-var_t301);
        IJth(rJacobian, 0, 10) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.1144) * var_cell__sytof) * var_t1372));
        IJth(rJacobian, 10, 10) = var_chaste_interface__cell__fake_dt * (-var_t328);
        IJth(rJacobian, 0, 11) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-0.1144) * var_cell__sxtof) * var_t1372));
        IJth(rJacobian, 11, 11) = var_chaste_interface__cell__fake_dt * (-var_t347);
        IJth(rJacobian, 0, 12) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.015061601900000001) * var_t1382) * var_t1387) * var_t1372));
        IJth(rJacobian, 12, 12) = var_chaste_interface__cell__fake_dt * (-var_t376);
        IJth(rJacobian, 0, 13) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-0.0070000000000000001) * var_t887) * var_cell__sxks) * var_t1401) - (((0.0070000000000000001 * var_cell__Fjunc) * var_cell__sxks) * var_t1401)));
        IJth(rJacobian, 13, 13) = var_chaste_interface__cell__fake_dt * ((-0.00100999899) - (0.00100999899 * var_t409));
        IJth(rJacobian, 14, 14) = var_chaste_interface__cell__fake_dt * (((-var_cell__kim) - var_t436) - var_t440);
        IJth(rJacobian, 15, 14) = var_chaste_interface__cell__fake_dt * (var_t440);
        IJth(rJacobian, 16, 14) = var_chaste_interface__cell__fake_dt * (-var_t440);
        IJth(rJacobian, 14, 15) = var_chaste_interface__cell__fake_dt * ((-var_cell__kim) + var_cell__kom);
        IJth(rJacobian, 15, 15) = var_chaste_interface__cell__fake_dt * ((-var_cell__kom) - var_t436);
        IJth(rJacobian, 16, 15) = var_chaste_interface__cell__fake_dt * (var_t436 - var_t440);
        IJth(rJacobian, 31, 15) = var_chaste_interface__cell__fake_dt * (-var_t545);
        IJth(rJacobian, 35, 15) = var_chaste_interface__cell__fake_dt * (64.935064940000004 * var_t545);
        IJth(rJacobian, 14, 16) = var_chaste_interface__cell__fake_dt * (-var_cell__kim);
        IJth(rJacobian, 15, 16) = var_chaste_interface__cell__fake_dt * (var_cell__kim);
        IJth(rJacobian, 16, 16) = var_chaste_interface__cell__fake_dt * (((-var_cell__kim) - var_cell__kom) - var_t440);
        IJth(rJacobian, 17, 17) = var_chaste_interface__cell__fake_dt * (var_t493);
        IJth(rJacobian, 32, 17) = var_chaste_interface__cell__fake_dt * (-var_t493);
        IJth(rJacobian, 18, 18) = var_chaste_interface__cell__fake_dt * (var_t497);
        IJth(rJacobian, 33, 18) = var_chaste_interface__cell__fake_dt * (-var_t497);
        IJth(rJacobian, 19, 19) = var_chaste_interface__cell__fake_dt * (var_t501);
        IJth(rJacobian, 37, 19) = var_chaste_interface__cell__fake_dt * (-var_t501);
        IJth(rJacobian, 20, 20) = var_chaste_interface__cell__fake_dt * ((-var_t504) - var_cell__koff_tnchca);
        IJth(rJacobian, 21, 20) = var_chaste_interface__cell__fake_dt * (-var_t508);
        IJth(rJacobian, 37, 20) = var_chaste_interface__cell__fake_dt * ((var_t504 + var_cell__koff_tnchca) + var_t508);
        IJth(rJacobian, 20, 21) = var_chaste_interface__cell__fake_dt * (-var_t504);
        IJth(rJacobian, 21, 21) = var_chaste_interface__cell__fake_dt * ((-var_t508) - var_cell__koff_tnchmg);
        IJth(rJacobian, 37, 21) = var_chaste_interface__cell__fake_dt * ((var_t504 + var_t508) + var_cell__koff_tnchmg);
        IJth(rJacobian, 22, 22) = var_chaste_interface__cell__fake_dt * (var_t511);
        IJth(rJacobian, 37, 22) = var_chaste_interface__cell__fake_dt * (-var_t511);
        IJth(rJacobian, 23, 23) = var_chaste_interface__cell__fake_dt * ((-var_t514) - var_cell__koff_myoca);
        IJth(rJacobian, 24, 23) = var_chaste_interface__cell__fake_dt * (-var_t518);
        IJth(rJacobian, 37, 23) = var_chaste_interface__cell__fake_dt * ((var_t514 + var_cell__koff_myoca) + var_t518);
        IJth(rJacobian, 23, 24) = var_chaste_interface__cell__fake_dt * (-var_t514);
        IJth(rJacobian, 24, 24) = var_chaste_interface__cell__fake_dt * ((-var_t518) - var_cell__koff_myomg);
        IJth(rJacobian, 37, 24) = var_chaste_interface__cell__fake_dt * ((var_t514 + var_t518) + var_cell__koff_myomg);
        IJth(rJacobian, 25, 25) = var_chaste_interface__cell__fake_dt * (var_t521);
        IJth(rJacobian, 37, 25) = var_chaste_interface__cell__fake_dt * (-var_t521);
        IJth(rJacobian, 26, 26) = var_chaste_interface__cell__fake_dt * (var_t525);
        IJth(rJacobian, 35, 26) = var_chaste_interface__cell__fake_dt * (-var_t525);
        IJth(rJacobian, 27, 27) = var_chaste_interface__cell__fake_dt * (var_t529);
        IJth(rJacobian, 36, 27) = var_chaste_interface__cell__fake_dt * (-var_t529);
        IJth(rJacobian, 28, 28) = var_chaste_interface__cell__fake_dt * (var_t533);
        IJth(rJacobian, 35, 28) = var_chaste_interface__cell__fake_dt * (-var_t533);
        IJth(rJacobian, 29, 29) = var_chaste_interface__cell__fake_dt * (var_t537);
        IJth(rJacobian, 36, 29) = var_chaste_interface__cell__fake_dt * (-var_t537);
        IJth(rJacobian, 30, 30) = var_chaste_interface__cell__fake_dt * (var_t541);
        IJth(rJacobian, 31, 30) = var_chaste_interface__cell__fake_dt * (-var_t541);
        IJth(rJacobian, 14, 31) = var_chaste_interface__cell__fake_dt * ((((2.5 * var_t448) * var_t451) * var_t452) - var_t466);
        IJth(rJacobian, 15, 31) = var_chaste_interface__cell__fake_dt * (var_t466 + var_t476);
        IJth(rJacobian, 16, 31) = var_chaste_interface__cell__fake_dt * ((-var_t476) + ((((2.5 * var_t458) * var_t439) * var_t482) * var_t464));
        IJth(rJacobian, 30, 31) = var_chaste_interface__cell__fake_dt * (var_t543);
        IJth(rJacobian, 31, 31) = var_chaste_interface__cell__fake_dt * ((((((-0.0053114) * var_t560) - (0.0053114 * var_t569)) - 9.9319999990000001e-05) - var_t571) - var_t543);
        IJth(rJacobian, 35, 31) = var_chaste_interface__cell__fake_dt * (var_t1107 + 0.0064493506480000004);
        IJth(rJacobian, 37, 31) = var_chaste_interface__cell__fake_dt * ((0.00028599846149999998 * var_t560) + (0.00028599846149999998 * var_t569));
        IJth(rJacobian, 0, 32) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-7.2000000000000002) * var_t761) - var_t664) - (13.5 * var_t714)) + (4.5 * var_t731)) - var_t667) - var_t773));
        IJth(rJacobian, 17, 32) = var_chaste_interface__cell__fake_dt * (var_t495);
        IJth(rJacobian, 32, 32) = var_chaste_interface__cell__fake_dt * (((((((-1.85528757e+18) * (((((var_t664 + var_t667) + (40.5 * var_t714)) - (13.5 * var_t731)) + (21.600000000000001 * var_t761)) + var_t773)) * var_cell__Cmem) * var_t599) * var_t605) - var_t781) - var_t495);
        IJth(rJacobian, 33, 32) = var_chaste_interface__cell__fake_dt * (915.63911599999994 * var_t780);
        IJth(rJacobian, 35, 32) = var_chaste_interface__cell__fake_dt * (((((-9.27643785e+17) * (((-27.0) * var_t714) + (9.0 * var_t731))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 0, 33) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-7.2000000000000002) * var_t994) - var_t934) - (13.5 * var_t963)) + (4.5 * var_t979)) - var_t937) - var_t1001));
        IJth(rJacobian, 18, 33) = var_chaste_interface__cell__fake_dt * (var_t499);
        IJth(rJacobian, 32, 33) = var_chaste_interface__cell__fake_dt * (var_t781);
        IJth(rJacobian, 33, 33) = var_chaste_interface__cell__fake_dt * (((((((-50000000000000000.0) * (((((var_t934 + var_t937) + (40.5 * var_t963)) - (13.5 * var_t979)) + (21.600000000000001 * var_t994)) + var_t1001)) * var_cell__Cmem) * var_t599) * var_t605) - (82847.035220000005 * var_t780)) - var_t499);
        IJth(rJacobian, 34, 33) = var_chaste_interface__cell__fake_dt * (var_t1080);
        IJth(rJacobian, 36, 33) = var_chaste_interface__cell__fake_dt * (((((-25000000000000000.0) * (((-27.0) * var_t963) + (9.0 * var_t979))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 0, 34) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-0.0035000000000000001) * var_t1417) * var_t590) * var_t1420) - (((0.0035000000000000001 * var_t1423) * var_t590) * var_t1420)));
        IJth(rJacobian, 33, 34) = var_chaste_interface__cell__fake_dt * (81931.396099999998 * var_t780);
        IJth(rJacobian, 34, 34) = var_chaste_interface__cell__fake_dt * (-var_t1080);
        IJth(rJacobian, 0, 35) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t1137) + var_t1144) - (9.0 * var_t791)) + (4.5 * var_t794)) + (4.5 * var_t801)) - ((((0.0548125 * var_cell__Fjunc) / var_t1433) * var_t1442) * var_t671)) - var_t1126) - var_t1120));
        IJth(rJacobian, 6, 35) = var_chaste_interface__cell__fake_dt * (1.7 - (1.7 * var_cell__sfcaBj));
        IJth(rJacobian, 14, 35) = var_chaste_interface__cell__fake_dt * (((-var_t435) * var_cell__sRyRr) - var_t470);
        IJth(rJacobian, 15, 35) = var_chaste_interface__cell__fake_dt * (var_t470 - var_t478);
        IJth(rJacobian, 16, 35) = var_chaste_interface__cell__fake_dt * (var_t478 + (((2.0 * var_t438) * var_cell__sCaj) * var_t482));
        IJth(rJacobian, 26, 35) = var_chaste_interface__cell__fake_dt * (var_t527);
        IJth(rJacobian, 28, 35) = var_chaste_interface__cell__fake_dt * (var_t535);
        IJth(rJacobian, 31, 35) = var_chaste_interface__cell__fake_dt * (9.9319999990000001e-05 + var_t571);
        IJth(rJacobian, 32, 35) = var_chaste_interface__cell__fake_dt * (((((-1.85528757e+18) * (((27.0 * var_t791) - (13.5 * var_t794)) - (13.5 * var_t801))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 35, 35) = var_chaste_interface__cell__fake_dt * ((((((((((-9.27643785e+17) * ((((((var_t1120 + var_t1126) + var_t1137) - var_t1144) - (18.0 * var_t791)) + (9.0 * var_t794)) + (9.0 * var_t801))) * var_cell__Cmem) * var_t599) * var_t605) - var_t1153) - var_t527) - var_t535) - var_t1107) - 0.0064493506480000004);
        IJth(rJacobian, 36, 35) = var_chaste_interface__cell__fake_dt * (41206.527119999999 * var_t780);
        IJth(rJacobian, 0, 36) = var_chaste_interface__cell__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t1221) + var_t1228) - (9.0 * var_t1018)) + (4.5 * var_t1021)) + (4.5 * var_t1028)) - ((((0.0548125 * var_t887) / var_t1452) * var_t1442) * var_t940)) - var_t1212) - var_t1206));
        IJth(rJacobian, 7, 36) = var_chaste_interface__cell__fake_dt * (1.7 - (1.7 * var_cell__sfcaBsl));
        IJth(rJacobian, 27, 36) = var_chaste_interface__cell__fake_dt * (var_t531);
        IJth(rJacobian, 29, 36) = var_chaste_interface__cell__fake_dt * (var_t539);
        IJth(rJacobian, 33, 36) = var_chaste_interface__cell__fake_dt * (((((-50000000000000000.0) * (((27.0 * var_t1018) - (13.5 * var_t1021)) - (13.5 * var_t1028))) * var_cell__Cmem) * var_t599) * var_t605);
        IJth(rJacobian, 35, 36) = var_chaste_interface__cell__fake_dt * (var_t1153);
        IJth(rJacobian, 36, 36) = var_chaste_interface__cell__fake_dt * ((((((((-25000000000000000.0) * ((((((var_t1206 + var_t1212) + var_t1221) - var_t1228) - (18.0 * var_t1018)) + (9.0 * var_t1021)) + (9.0 * var_t1028))) * var_cell__Cmem) * var_t599) * var_t605) - (227419.33110000001 * var_t780)) - var_t531) - var_t539);
        IJth(rJacobian, 37, 36) = var_chaste_interface__cell__fake_dt * (var_t1269);
        IJth(rJacobian, 19, 37) = var_chaste_interface__cell__fake_dt * (var_t503);
        IJth(rJacobian, 20, 37) = var_chaste_interface__cell__fake_dt * (var_t507);
        IJth(rJacobian, 22, 37) = var_chaste_interface__cell__fake_dt * (var_t513);
        IJth(rJacobian, 23, 37) = var_chaste_interface__cell__fake_dt * (var_t517);
        IJth(rJacobian, 25, 37) = var_chaste_interface__cell__fake_dt * (var_t523);
        IJth(rJacobian, 31, 37) = var_chaste_interface__cell__fake_dt * ((0.0053114 * var_t578) - (0.0053114 * var_t582));
        IJth(rJacobian, 36, 37) = var_chaste_interface__cell__fake_dt * (186212.804 * var_t780);
        IJth(rJacobian, 37, 37) = var_chaste_interface__cell__fake_dt * (((((((((-0.00028599846149999998) * var_t578) + (0.00028599846149999998 * var_t582)) - var_t503) - var_t507) - var_t513) - var_t517) - var_t523) - var_t1269);
    }
    
template<>
void OdeSystemInformation<Dynamicgrandi2010ssFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "grandi2010";
    this->mFreeVariableName = "cell__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-81.3842590704928);

    // rY[1]:
    this->mVariableNames.push_back("cell__sm");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00384941567866232);

    // rY[2]:
    this->mVariableNames.push_back("cell__sh");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.623723834301669);

    // rY[3]:
    this->mVariableNames.push_back("cell__sj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.622080736932815);

    // rY[4]:
    this->mVariableNames.push_back("cell__sd");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.95884913218079e-6);

    // rY[5]:
    this->mVariableNames.push_back("cell__sf");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995094078386247);

    // rY[6]:
    this->mVariableNames.push_back("cell__sfcaBj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0246274349529557);

    // rY[7]:
    this->mVariableNames.push_back("cell__sfcaBsl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0150911724206476);

    // rY[8]:
    this->mVariableNames.push_back("cell__sxtos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000442853722673121);

    // rY[9]:
    this->mVariableNames.push_back("cell__sytos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.789013894749951);

    // rY[10]:
    this->mVariableNames.push_back("cell__sxtof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000442846429332686);

    // rY[11]:
    this->mVariableNames.push_back("cell__sytof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999995784674368);

    // rY[12]:
    this->mVariableNames.push_back("cell__sxkr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.020160578118589);

    // rY[13]:
    this->mVariableNames.push_back("cell__sxks");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00430143235332308);

    // rY[14]:
    this->mVariableNames.push_back("cell__sRyRr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.893326456705696);

    // rY[15]:
    this->mVariableNames.push_back("cell__sRyRo");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.56436968249499e-7);

    // rY[16]:
    this->mVariableNames.push_back("cell__sRyRi");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.03266331737064e-8);

    // rY[17]:
    this->mVariableNames.push_back("cell__sNaBj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.41097946062695);

    // rY[18]:
    this->mVariableNames.push_back("cell__sNaBsl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.744248540671373);

    // rY[19]:
    this->mVariableNames.push_back("cell__sTnCL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00904644567707666);

    // rY[20]:
    this->mVariableNames.push_back("cell__sTnCHc");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1183943202639);

    // rY[21]:
    this->mVariableNames.push_back("cell__sTnCHm");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0101423649465603);

    // rY[22]:
    this->mVariableNames.push_back("cell__sCaM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000299824763475116);

    // rY[23]:
    this->mVariableNames.push_back("cell__sMyoc");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00201443980536826);

    // rY[24]:
    this->mVariableNames.push_back("cell__sMyom");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.137467597337588);

    // rY[25]:
    this->mVariableNames.push_back("cell__sSRB");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00220110816535249);

    // rY[26]:
    this->mVariableNames.push_back("cell__sSLLj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00739549938515031);

    // rY[27]:
    this->mVariableNames.push_back("cell__sSLLsl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00979616077807075);

    // rY[28]:
    this->mVariableNames.push_back("cell__sSLHj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0735225248399363);

    // rY[29]:
    this->mVariableNames.push_back("cell__sSLHsl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.113642236788144);

    // rY[30]:
    this->mVariableNames.push_back("cell__sCsqnb");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.20762712858574);

    // rY[31]:
    this->mVariableNames.push_back("cell__sCa_sr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.563755421404699);

    // rY[32]:
    this->mVariableNames.push_back("cell__sNaj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.21411036389602);

    // rY[33]:
    this->mVariableNames.push_back("cell__sNasl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.21322794157889);

    // rY[34]:
    this->mVariableNames.push_back("cell__sNai");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.21340895351653);

    // rY[35]:
    this->mVariableNames.push_back("cell__sCaj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000175648385857736);

    // rY[36]:
    this->mVariableNames.push_back("cell__sCasl");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000105614570409386);

    // rY[37]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.85230799863012e-5);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicgrandi2010ssFromCellMLCvode)


#endif // CHASTE_CVODE
