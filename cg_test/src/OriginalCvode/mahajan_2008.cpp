#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: mahajan_shiferaw_model_2008
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:12:33 2020
//! 
//! <autogenerated>

#include "mahajan_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicmahajan_2008FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 400.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_amplitude =  -15.0; // nA_per_nF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // nA_per_nF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicmahajan_2008FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicmahajan_2008FromCellMLCvode::Dynamicmahajan_2008FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                26,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicmahajan_2008FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        NV_Ith_S(this->mParameters, 0) = 1.0; // (IKr,ScaleFactorGkr) [dimensionless]
        NV_Ith_S(this->mParameters, 1) = 1.0; // (IKs,ScaleFactorGks) [dimensionless]
        NV_Ith_S(this->mParameters, 2) = 1.0; // (Ito,ScaleFactorIto) [dimensionless]
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicmahajan_2008FromCellMLCvode::~Dynamicmahajan_2008FromCellMLCvode()
    {
    }
    
    double Dynamicmahajan_2008FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        
        const double var_Environment__R = 8.3144720000000003; // J_per_moleK
        const double var_Environment__T = 308.0; // kelvin
        const double var_Environment__F = 96.485341500000004; // coulomb_per_mmole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 136.0; // mM
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__T); // per_mV
        const double var_reversal_potentials__K_i = 140.0; // mM
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
        const double var_reversal_potentials__ek = (1.0 / var_reversal_potentials__FonRT) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // mV
        const double var_IK1__ek = var_reversal_potentials__ek; // mV
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__ek) - 59.215000000000003))); // per_ms
        const double var_IK1__bki = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__ek) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__ek) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__ek) + 4.7530000000000001))); // per_ms
        const double var_IK1__xkin = var_IK1__aki / (var_IK1__aki + var_IK1__bki); // dimensionless
        const double var_IK1__K_o = var_Environment__K_o; // mM
        const double var_IK1__gkix = 0.29999999999999999; // uS_per_nF
        const double var_IK1__xik1 = var_IK1__gkix * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__xkin * (var_IK1__V - var_IK1__ek); // nA_per_nF
        const double var_cell__xik1 = var_IK1__xik1; // nA_per_nF
        const double var_Ito__ytos = var_chaste_interface__Ito__ytos; // dimensionless
        const double var_Ito__ek = var_reversal_potentials__ek; // mV
        const double var_Ito__gtos = 0.11; // uS_per_nF
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__rt2 = (var_Ito__V + 33.5) / 10.0; // dimensionless
        const double var_Ito__rs_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
        const double var_Ito__xtos = var_chaste_interface__Ito__xtos; // dimensionless
        const double var_Ito__xitos = NV_Ith_S(mParameters, 2) * var_Ito__gtos * var_Ito__xtos * (var_Ito__ytos + (0.5 * var_Ito__rs_inf)) * (var_Ito__V - var_Ito__ek); // nA_per_nF
        const double var_Ito__xtof = var_chaste_interface__Ito__xtof; // dimensionless
        const double var_Ito__gtof = 0.040000000000000001; // uS_per_nF
        const double var_Ito__ytof = var_chaste_interface__Ito__ytof; // dimensionless
        const double var_Ito__xitof = var_Ito__gtof * var_Ito__xtof * var_Ito__ytof * (var_Ito__V - var_Ito__ek); // nA_per_nF
        const double var_Ito__xito = var_Ito__xitos + var_Ito__xitof; // nA_per_nF
        const double var_cell__xito = var_Ito__xito; // nA_per_nF
        const double var_INaK__xkmko = 1.5; // mM
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fNaK = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__xkmnai = 12.0; // mM
        const double var_INaK__gNaK = 1.5; // nA_per_nF
        const double var_INaK__xiNaK = (((var_INaK__gNaK * var_INaK__fNaK * var_INaK__Na_i) / (var_INaK__Na_i + var_INaK__xkmnai)) * var_INaK__K_o) / (var_INaK__K_o + var_INaK__xkmko); // nA_per_nF
        const double var_cell__xiNaK = var_INaK__xiNaK; // nA_per_nF
        const double var_cell__wca = 8.0; // mV_per_uM
        const double var_INaCa__gNaCa = 0.83999999999999997; // uM_per_ms
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__zw4 = 1.0 + (0.20000000000000001 * exp(var_INaCa__V * (0.34999999999999998 - 1.0) * var_INaCa__FonRT)); // dimensionless
        const double var_INaCa__xkdna = 0.29999999999999999; // uM
        const double var_INaCa__Ca_submem = var_chaste_interface__Ca__Ca_submem; // uM
        const double var_INaCa__aloss = 1.0 / (1.0 + pow(var_INaCa__xkdna / var_INaCa__Ca_submem, 3.0)); // dimensionless
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_Ca__Ca_submem = var_chaste_interface__Ca__Ca_submem; // uM
        const double var_Ca__csm = var_Ca__Ca_submem / 1000.0; // mM
        const double var_INaCa__csm = var_Ca__csm; // mM
        const double var_INaCa__yz4 = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__csm); // mM4
        const double var_INaCa__xmcao = 1.3; // mM
        const double var_INaCa__xmnao = 87.5; // mM
        const double var_INaCa__yz1 = (var_INaCa__xmcao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__xmnao, 3.0) * var_INaCa__csm); // mM4
        const double var_INaCa__xmcai = 0.0035999999999999999; // mM
        const double var_INaCa__xmnai = 12.300000000000001; // mM
        const double var_INaCa__yz3 = var_INaCa__xmcai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__xmnai, 3.0)); // mM4
        const double var_INaCa__yz2 = pow(var_INaCa__xmnai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__csm / var_INaCa__xmcai)); // mM4
        const double var_INaCa__zw8 = var_INaCa__yz1 + var_INaCa__yz2 + var_INaCa__yz3 + var_INaCa__yz4; // mM4
        const double var_INaCa__zw3 = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp(var_INaCa__V * 0.34999999999999998 * var_INaCa__FonRT)) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__csm * exp(var_INaCa__V * (0.34999999999999998 - 1.0) * var_INaCa__FonRT)); // mM4
        const double var_INaCa__jNaCa = (var_INaCa__gNaCa * var_INaCa__aloss * var_INaCa__zw3) / (var_INaCa__zw4 * var_INaCa__zw8); // uM_per_ms
        const double var_INaCa__wca = var_cell__wca; // mV_per_uM
        const double var_INaCa__xiNaCa = var_INaCa__wca * var_INaCa__jNaCa; // nA_per_nF
        const double var_cell__xiNaCa = var_INaCa__xiNaCa; // nA_per_nF
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__pca = 0.00054000000000000001; // cm_per_s
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICaL__F = var_Environment__F; // coulomb_per_mmole
        const double var_ICaL__za = var_ICaL__V * 2.0 * var_ICaL__FonRT; // dimensionless
        const double var_ICaL__csm = var_Ca__csm; // mM
        const double var_ICaL__rxa = (fabs(var_ICaL__za) < 0.001) ? ((4.0 * var_ICaL__pca * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__csm * exp(var_ICaL__za)) - (0.34100000000000003 * var_ICaL__Ca_o))) / (2.0 * var_ICaL__FonRT)) : ((4.0 * var_ICaL__pca * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__csm * exp(var_ICaL__za)) - (0.34100000000000003 * var_ICaL__Ca_o))) / (exp(var_ICaL__za) - 1.0)); // mA_per_cm2
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__xi1ba = var_chaste_interface__ICaL__xi1ba; // dimensionless
        const double var_ICaL__xi1ca = var_chaste_interface__ICaL__xi1ca; // dimensionless
        const double var_ICaL__c1 = var_chaste_interface__ICaL__c1; // dimensionless
        const double var_ICaL__c2 = var_chaste_interface__ICaL__c2; // dimensionless
        const double var_ICaL__xi2ca = var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_ICaL__xi2ba = var_chaste_interface__ICaL__xi2ba; // dimensionless
        const double var_ICaL__po = (((((1.0 - var_ICaL__xi1ca) - var_ICaL__xi2ca) - var_ICaL__xi1ba) - var_ICaL__xi2ba) - var_ICaL__c1) - var_ICaL__c2; // dimensionless
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_ICaL__wca = var_cell__wca; // mV_per_uM
        const double var_ICaL__xica = 2.0 * var_ICaL__wca * var_ICaL__jca; // nA_per_nF
        const double var_cell__xica = var_ICaL__xica; // nA_per_nF
        const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
        const double var_IKr__K_o = var_Environment__K_o; // mM
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKr__ek = var_reversal_potentials__ek; // mV
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__rg = 1.0 / (1.0 + exp((var_IKr__V + 33.0) / 22.399999999999999)); // dimensionless
        const double var_IKr__xikr = NV_Ith_S(mParameters, 0) * var_IKr__gkr * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__xr * var_IKr__rg * (var_IKr__V - var_IKr__ek); // nA_per_nF
        const double var_cell__xikr = var_IKr__xikr; // nA_per_nF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_IKs__Ca_i_converter = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_IKs__Ca_i = 1000.0 * var_IKs__Ca_i_converter; // uM
        const double var_IKs__gksx = 1.0 + (0.80000000000000004 / (1.0 + pow(0.5 / var_IKs__Ca_i, 3.0))); // dimensionless
        const double var_IKs__gks = 0.1386; // uS_per_nF
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_reversal_potentials__prNaK = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__eks = (1.0 / var_reversal_potentials__FonRT) * log((var_reversal_potentials__K_o + (var_reversal_potentials__prNaK * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prNaK * var_reversal_potentials__Na_i))); // mV
        const double var_IKs__eks = var_reversal_potentials__eks; // mV
        const double var_IKs__xiks = NV_Ith_S(mParameters, 1) * var_IKs__gks * var_IKs__gksx * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__eks); // nA_per_nF
        const double var_cell__xiks = var_IKs__xiks; // nA_per_nF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // nA_per_nF
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__xm = var_chaste_interface__INa__xm; // dimensionless
        const double var_INa__xj = var_chaste_interface__INa__xj; // dimensionless
        const double var_INa__xh = var_chaste_interface__INa__xh; // dimensionless
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_reversal_potentials__ena = (1.0 / var_reversal_potentials__FonRT) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // mV
        const double var_INa__ena = var_reversal_potentials__ena; // mV
        const double var_INa__xina = var_INa__gna * var_INa__xh * var_INa__xj * var_INa__xm * var_INa__xm * var_INa__xm * (var_INa__V - var_INa__ena); // nA_per_nF
        const double var_cell__xina = var_INa__xina; // nA_per_nF
        const double var_cell__Itotal = -(var_cell__xina + var_cell__xik1 + var_cell__xikr + var_cell__xiks + var_cell__xito + var_cell__xiNaCa + var_cell__xica + var_cell__xiNaK + var_cell__i_Stim); // nA_per_nF
        const double var_chaste_interface__cell__Itotal = var_cell__Itotal; // nA_per_nF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__Itotal) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = -(var_chaste_interface__i_ionic);
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicmahajan_2008FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 18);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 19);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_Environment__R = 8.3144720000000003; // J_per_moleK
        const double var_Environment__T = 308.0; // kelvin
        const double var_Environment__F = 96.485341500000004; // coulomb_per_mmole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 136.0; // mM
        const double var_Environment__FonRT = var_Environment__F / (var_Environment__R * var_Environment__T); // per_mV
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_Ito__ytos = var_chaste_interface__Ito__ytos; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__rt2 = (var_Ito__V + 33.5) / 10.0; // dimensionless
        const double var_Ito__xtos = var_chaste_interface__Ito__xtos; // dimensionless
        const double var_Ito__xtof = var_chaste_interface__Ito__xtof; // dimensionless
        const double var_Ito__ytof = var_chaste_interface__Ito__ytof; // dimensionless
        const double var_INaK__xkmko = 1.5; // mM
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fNaK = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__xkmnai = 12.0; // mM
        const double var_INaK__gNaK = 1.5; // nA_per_nF
        const double var_INaK__xiNaK = (((var_INaK__gNaK * var_INaK__fNaK * var_INaK__Na_i) / (var_INaK__Na_i + var_INaK__xkmnai)) * var_INaK__K_o) / (var_INaK__K_o + var_INaK__xkmko); // nA_per_nF
        const double var_cell__wca = 8.0; // mV_per_uM
        const double var_INaCa__gNaCa = 0.83999999999999997; // uM_per_ms
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__zw4 = 1.0 + (0.20000000000000001 * exp(var_INaCa__V * (0.34999999999999998 - 1.0) * var_INaCa__FonRT)); // dimensionless
        const double var_INaCa__xkdna = 0.29999999999999999; // uM
        const double var_INaCa__Ca_submem = var_chaste_interface__Ca__Ca_submem; // uM
        const double var_INaCa__aloss = 1.0 / (1.0 + pow(var_INaCa__xkdna / var_INaCa__Ca_submem, 3.0)); // dimensionless
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_Ca__Ca_submem = var_chaste_interface__Ca__Ca_submem; // uM
        const double var_Ca__csm = var_Ca__Ca_submem / 1000.0; // mM
        const double var_INaCa__csm = var_Ca__csm; // mM
        const double var_INaCa__yz4 = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__csm); // mM4
        const double var_INaCa__xmcao = 1.3; // mM
        const double var_INaCa__xmnao = 87.5; // mM
        const double var_INaCa__yz1 = (var_INaCa__xmcao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__xmnao, 3.0) * var_INaCa__csm); // mM4
        const double var_INaCa__xmcai = 0.0035999999999999999; // mM
        const double var_INaCa__xmnai = 12.300000000000001; // mM
        const double var_INaCa__yz3 = var_INaCa__xmcai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__xmnai, 3.0)); // mM4
        const double var_INaCa__yz2 = pow(var_INaCa__xmnai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__csm / var_INaCa__xmcai)); // mM4
        const double var_INaCa__zw8 = var_INaCa__yz1 + var_INaCa__yz2 + var_INaCa__yz3 + var_INaCa__yz4; // mM4
        const double var_INaCa__zw3 = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp(var_INaCa__V * 0.34999999999999998 * var_INaCa__FonRT)) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__csm * exp(var_INaCa__V * (0.34999999999999998 - 1.0) * var_INaCa__FonRT)); // mM4
        const double var_INaCa__jNaCa = (var_INaCa__gNaCa * var_INaCa__aloss * var_INaCa__zw3) / (var_INaCa__zw4 * var_INaCa__zw8); // uM_per_ms
        const double var_INaCa__wca = var_cell__wca; // mV_per_uM
        const double var_INaCa__xiNaCa = var_INaCa__wca * var_INaCa__jNaCa; // nA_per_nF
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__pca = 0.00054000000000000001; // cm_per_s
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICaL__F = var_Environment__F; // coulomb_per_mmole
        const double var_ICaL__za = var_ICaL__V * 2.0 * var_ICaL__FonRT; // dimensionless
        const double var_ICaL__csm = var_Ca__csm; // mM
        const double var_ICaL__rxa = (fabs(var_ICaL__za) < 0.001) ? ((4.0 * var_ICaL__pca * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__csm * exp(var_ICaL__za)) - (0.34100000000000003 * var_ICaL__Ca_o))) / (2.0 * var_ICaL__FonRT)) : ((4.0 * var_ICaL__pca * var_ICaL__V * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__csm * exp(var_ICaL__za)) - (0.34100000000000003 * var_ICaL__Ca_o))) / (exp(var_ICaL__za) - 1.0)); // mA_per_cm2
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__xi1ba = var_chaste_interface__ICaL__xi1ba; // dimensionless
        const double var_ICaL__xi1ca = var_chaste_interface__ICaL__xi1ca; // dimensionless
        const double var_ICaL__c1 = var_chaste_interface__ICaL__c1; // dimensionless
        const double var_ICaL__c2 = var_chaste_interface__ICaL__c2; // dimensionless
        const double var_ICaL__xi2ca = var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_ICaL__xi2ba = var_chaste_interface__ICaL__xi2ba; // dimensionless
        const double var_ICaL__po = (((((1.0 - var_ICaL__xi1ca) - var_ICaL__xi2ca) - var_ICaL__xi1ba) - var_ICaL__xi2ba) - var_ICaL__c1) - var_ICaL__c2; // dimensionless
        const double var_ICaL__jca = var_ICaL__gca * var_ICaL__po * var_ICaL__rxa; // uM_per_ms
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__xm = var_chaste_interface__INa__xm; // dimensionless
        const double var_INa__xj = var_chaste_interface__INa__xj; // dimensionless
        const double var_INa__xh = var_chaste_interface__INa__xh; // dimensionless
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_reversal_potentials__ena = (1.0 / var_reversal_potentials__FonRT) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // mV
        const double var_INa__ena = var_reversal_potentials__ena; // mV
        const double var_INa__xina = var_INa__gna * var_INa__xh * var_INa__xj * var_INa__xm * var_INa__xm * var_INa__xm * (var_INa__V - var_INa__ena); // nA_per_nF
        const double var_INa__am = (fabs(var_INa__V + 47.130000000000003) > 0.001) ? ((0.32000000000000001 * 1.0 * (var_INa__V + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INa__V + 47.130000000000003)))) : 3.2000000000000002; // per_ms
        const double var_INa__bm = 0.080000000000000002 * exp((-var_INa__V) / 11.0); // per_ms
        const double var_INa__ah = (var_INa__V < (-40.0)) ? (0.13500000000000001 * exp((80.0 + var_INa__V) / (-6.7999999999999998))) : 0.0; // per_ms
        const double var_INa__bh = (var_INa__V < (-40.0)) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_INa__V)) + (310000.0 * exp(0.34999999999999998 * var_INa__V))) : (1.0 / (0.13 * (1.0 + exp((var_INa__V + 10.66) / (-11.1))))); // per_ms
        const double var_INa__aj = (var_INa__V < (-40.0)) ? (((((-127140.0) * exp(0.24440000000000001 * var_INa__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa__V))) * 1.0 * (var_INa__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_INa__V + 79.230000000000004)))) : 0.0; // per_ms
        const double var_INa__bj = (var_INa__V < (-40.0)) ? ((0.1212 * exp((-0.01052) * var_INa__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa__V + 40.140000000000001)))) : ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa__V + 32.0)))); // per_ms
        const double var_INa__d_xm_d_Environment__time = (var_INa__am * (1.0 - var_INa__xm)) - (var_INa__bm * var_INa__xm); // 'per millisecond'
        const double var_INa__d_xh_d_Environment__time = (var_INa__ah * (1.0 - var_INa__xh)) - (var_INa__bh * var_INa__xh); // 'per millisecond'
        const double var_INa__d_xj_d_Environment__time = (var_INa__aj * (1.0 - var_INa__xj)) - (var_INa__bj * var_INa__xj); // 'per millisecond'
        const double var_ICaL__Ca_dyad = var_chaste_interface__Ca__Ca_dyad; // uM
        const double var_ICaL__vth = 0.0; // mV
        const double var_ICaL__s6 = 8.0; // mV
        const double var_ICaL__poinf = 1.0 / (1.0 + exp((-(var_ICaL__V - var_ICaL__vth)) / var_ICaL__s6)); // dimensionless
        const double var_ICaL__cat = 3.0; // uM
        const double var_ICaL__fca = 1.0 / (1.0 + pow(var_ICaL__cat / var_ICaL__Ca_dyad, 3.0)); // dimensionless
        const double var_ICaL__vx =  -40.0; // mV
        const double var_ICaL__sx = 3.0; // mV
        const double var_ICaL__vy =  -40.0; // mV
        const double var_ICaL__sy = 4.0; // mV
        const double var_ICaL__vyr =  -40.0; // mV
        const double var_ICaL__syr = 11.32; // mV
        const double var_ICaL__cpt = 6.0936500000000002; // uM
        const double var_ICaL__taupo = 1.0; // ms
        const double var_ICaL__alpha = var_ICaL__poinf / var_ICaL__taupo; // per_ms
        const double var_ICaL__beta = (1.0 - var_ICaL__poinf) / var_ICaL__taupo; // per_ms
        const double var_ICaL__k1 = 0.024167999999999999 * var_ICaL__fca; // per_ms
        const double var_ICaL__k2 = 0.000103615; // per_ms
        const double var_ICaL__k1t = 0.00413; // per_ms
        const double var_ICaL__k2t = 0.0022399999999999998; // per_ms
        const double var_ICaL__poi = 1.0 / (1.0 + exp((-(var_ICaL__V - var_ICaL__vx)) / var_ICaL__sx)); // dimensionless
        const double var_ICaL__tau3 = 3.0; // ms
        const double var_ICaL__k3 = (1.0 - var_ICaL__poi) / var_ICaL__tau3; // per_ms
        const double var_ICaL__k3t = var_ICaL__k3; // per_ms
        const double var_ICaL__Ps = 1.0 / (1.0 + exp((-(var_ICaL__V - var_ICaL__vyr)) / var_ICaL__syr)); // dimensionless
        const double var_ICaL__tca = 78.032899999999998; // ms
        const double var_ICaL__tau_ca = (var_ICaL__tca / (1.0 + pow(var_ICaL__Ca_dyad / var_ICaL__cpt, 4.0))) + 0.10000000000000001; // ms
        const double var_ICaL__recov = 10.0 + (4954.0 * exp(var_ICaL__V / 15.6)); // ms
        const double var_ICaL__Pr = 1.0 - (1.0 / (1.0 + exp((-(var_ICaL__V - var_ICaL__vy)) / var_ICaL__sy))); // dimensionless
        const double var_ICaL__tauca = ((var_ICaL__recov - var_ICaL__tau_ca) * var_ICaL__Pr) + var_ICaL__tau_ca; // ms
        const double var_ICaL__k6 = (var_ICaL__fca * var_ICaL__Ps) / var_ICaL__tauca; // per_ms
        const double var_ICaL__k5 = (1.0 - var_ICaL__Ps) / var_ICaL__tauca; // per_ms
        const double var_ICaL__tauba = ((var_ICaL__recov - 450.0) * var_ICaL__Pr) + 450.0; // ms
        const double var_ICaL__k6t = var_ICaL__Ps / var_ICaL__tauba; // per_ms
        const double var_ICaL__k5t = (1.0 - var_ICaL__Ps) / var_ICaL__tauba; // per_ms
        const double var_ICaL__k4 = (((((var_ICaL__k3 * var_ICaL__alpha) / var_ICaL__beta) * var_ICaL__k1) / var_ICaL__k2) * var_ICaL__k5) / var_ICaL__k6; // per_ms
        const double var_ICaL__k4t = (((((var_ICaL__k3t * var_ICaL__alpha) / var_ICaL__beta) * var_ICaL__k1t) / var_ICaL__k2t) * var_ICaL__k5t) / var_ICaL__k6t; // per_ms
        const double var_ICaL__r1 = 0.29999999999999999; // per_ms
        const double var_ICaL__r2 = 3.0; // per_ms
        const double var_ICaL__s1 = 0.018268800000000002 * var_ICaL__fca; // per_ms
        const double var_ICaL__s1t = 0.0019499999999999999; // per_ms
        const double var_ICaL__s2 = (((var_ICaL__s1 * var_ICaL__r1) / var_ICaL__r2) * var_ICaL__k2) / var_ICaL__k1; // per_ms
        const double var_ICaL__s2t = (((var_ICaL__s1t * var_ICaL__r1) / var_ICaL__r2) * var_ICaL__k2t) / var_ICaL__k1t; // per_ms
        const double var_ICaL__d_c1_d_Environment__time = ((var_ICaL__alpha * var_ICaL__c2) + (var_ICaL__k2 * var_ICaL__xi1ca) + (var_ICaL__k2t * var_ICaL__xi1ba) + (var_ICaL__r2 * var_ICaL__po)) - ((var_ICaL__beta + var_ICaL__r1 + var_ICaL__k1t + var_ICaL__k1) * var_ICaL__c1); // 'per millisecond'
        const double var_ICaL__d_c2_d_Environment__time = ((var_ICaL__beta * var_ICaL__c1) + (var_ICaL__k5 * var_ICaL__xi2ca) + (var_ICaL__k5t * var_ICaL__xi2ba)) - ((var_ICaL__k6 + var_ICaL__k6t + var_ICaL__alpha) * var_ICaL__c2); // 'per millisecond'
        const double var_ICaL__d_xi1ca_d_Environment__time = ((var_ICaL__k1 * var_ICaL__c1) + (var_ICaL__k4 * var_ICaL__xi2ca) + (var_ICaL__s1 * var_ICaL__po)) - ((var_ICaL__k3 + var_ICaL__k2 + var_ICaL__s2) * var_ICaL__xi1ca); // 'per millisecond'
        const double var_ICaL__d_xi1ba_d_Environment__time = ((var_ICaL__k1t * var_ICaL__c1) + (var_ICaL__k4t * var_ICaL__xi2ba) + (var_ICaL__s1t * var_ICaL__po)) - ((var_ICaL__k3t + var_ICaL__k2t + var_ICaL__s2t) * var_ICaL__xi1ba); // 'per millisecond'
        const double var_ICaL__d_xi2ca_d_Environment__time = ((var_ICaL__k3 * var_ICaL__xi1ca) + (var_ICaL__k6 * var_ICaL__c2)) - ((var_ICaL__k5 + var_ICaL__k4) * var_ICaL__xi2ca); // 'per millisecond'
        const double var_ICaL__d_xi2ba_d_Environment__time = ((var_ICaL__k3t * var_ICaL__xi1ba) + (var_ICaL__k6t * var_ICaL__c2)) - ((var_ICaL__k5t + var_ICaL__k4t) * var_ICaL__xi2ba); // 'per millisecond'
        const double var_IKr__xkrv1 = (fabs(var_IKr__V + 7.0) > 0.001) ? ((0.0013799999999999999 * 1.0 * (var_IKr__V + 7.0)) / (1.0 - exp((-0.123) * (var_IKr__V + 7.0)))) : (0.0013799999999999999 / 0.123); // per_ms
        const double var_IKr__xkrv2 = (fabs(var_IKr__V + 10.0) > 0.001) ? ((0.00060999999999999997 * 1.0 * (var_IKr__V + 10.0)) / (exp(0.14499999999999999 * (var_IKr__V + 10.0)) - 1.0)) : (0.00060999999999999997 / 0.14499999999999999); // per_ms
        const double var_IKr__taukr = 1.0 / (var_IKr__xkrv1 + var_IKr__xkrv2); // ms
        const double var_IKr__xkrinf = 1.0 / (1.0 + exp((-(var_IKr__V + 50.0)) / 7.5)); // dimensionless
        const double var_IKr__d_xr_d_Environment__time = (var_IKr__xkrinf - var_IKr__xr) / var_IKr__taukr; // 'per millisecond'
        const double var_IKs__xs1ss = 1.0 / (1.0 + exp((-(var_IKs__V - 1.5)) / 16.699999999999999)); // dimensionless
        const double var_IKs__xs2ss = var_IKs__xs1ss; // dimensionless
        const double var_IKs__tauxs1 = (fabs(var_IKs__V + 30.0) < (0.001 / 0.068699999999999997)) ? (1.0 / ((7.1899999999999999e-05 / 0.14799999999999999) + (0.00013100000000000001 / 0.068699999999999997))) : (1.0 / (((7.1899999999999999e-05 * (var_IKs__V + 30.0)) / (1.0 - exp((-0.14799999999999999) * (var_IKs__V + 30.0)))) + ((0.00013100000000000001 * (var_IKs__V + 30.0)) / (exp(0.068699999999999997 * (var_IKs__V + 30.0)) - 1.0)))); // ms
        const double var_IKs__tauxs2 = 4.0 * var_IKs__tauxs1; // ms
        const double var_IKs__d_xs1_d_Environment__time = (var_IKs__xs1ss - var_IKs__xs1) / var_IKs__tauxs1; // 'per millisecond'
        const double var_IKs__d_xs2_d_Environment__time = (var_IKs__xs2ss - var_IKs__xs2) / var_IKs__tauxs2; // 'per millisecond'
        const double var_Ito__rt1 = (-(var_Ito__V + 3.0)) / 15.0; // dimensionless
        const double var_Ito__rt3 = (var_Ito__V + 60.0) / 10.0; // dimensionless
        const double var_Ito__rt4 = (((-var_Ito__V) / 30.0) * var_Ito__V) / 30.0; // dimensionless
        const double var_Ito__rt5 = (var_Ito__V + 33.5) / 10.0; // dimensionless
        const double var_Ito__xtos_inf = 1.0 / (1.0 + exp(var_Ito__rt1)); // dimensionless
        const double var_Ito__ytos_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
        const double var_Ito__xtof_inf = var_Ito__xtos_inf; // dimensionless
        const double var_Ito__ytof_inf = var_Ito__ytos_inf; // dimensionless
        const double var_Ito__txs = (9.0 / (1.0 + exp(-var_Ito__rt1))) + 0.5; // ms
        const double var_Ito__tys = (3000.0 / (1.0 + exp(var_Ito__rt3))) + 30.0; // ms
        const double var_Ito__txf = (3.5 * exp(var_Ito__rt4)) + 1.5; // ms
        const double var_Ito__tyf = (20.0 / (1.0 + exp(var_Ito__rt5))) + 20.0; // ms
        const double var_Ito__d_xtos_d_Environment__time = (var_Ito__xtos_inf - var_Ito__xtos) / var_Ito__txs; // 'per millisecond'
        const double var_Ito__d_ytos_d_Environment__time = (var_Ito__ytos_inf - var_Ito__ytos) / var_Ito__tys; // 'per millisecond'
        const double var_Ito__d_xtof_d_Environment__time = (var_Ito__xtof_inf - var_Ito__xtof) / var_Ito__txf; // 'per millisecond'
        const double var_Ito__d_ytof_d_Environment__time = (var_Ito__ytof_inf - var_Ito__ytof) / var_Ito__tyf; // 'per millisecond'
        const double var_Irel__V = var_chaste_interface__cell__V; // mV
        const double var_Irel__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // uM
        const double var_Ileak_Iup_Ixfer__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // uM
        const double var_Ileak_Iup_Ixfer__gleak = 2.069e-05; // per_ms
        const double var_Ileak_Iup_Ixfer__kj = 50.0; // uM
        const double var_Ileak_Iup_Ixfer__Ca_i_converter = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_Ileak_Iup_Ixfer__Ca_i = 1000.0 * var_Ileak_Iup_Ixfer__Ca_i_converter; // uM
        const double var_Ileak_Iup_Ixfer__jleak = ((var_Ileak_Iup_Ixfer__gleak * var_Ileak_Iup_Ixfer__Ca_NSR * var_Ileak_Iup_Ixfer__Ca_NSR) / ((var_Ileak_Iup_Ixfer__Ca_NSR * var_Ileak_Iup_Ixfer__Ca_NSR) + (var_Ileak_Iup_Ixfer__kj * var_Ileak_Iup_Ixfer__kj))) * ((var_Ileak_Iup_Ixfer__Ca_NSR * 16.667000000000002) - var_Ileak_Iup_Ixfer__Ca_i); // uM_per_ms
        const double var_Ca__jleak = var_Ileak_Iup_Ixfer__jleak; // uM_per_ms
        const double var_Ileak_Iup_Ixfer__cup = 0.5; // uM
        const double var_Ileak_Iup_Ixfer__vup = 0.40000000000000002; // uM_per_ms
        const double var_Ileak_Iup_Ixfer__jup = (var_Ileak_Iup_Ixfer__vup * var_Ileak_Iup_Ixfer__Ca_i * var_Ileak_Iup_Ixfer__Ca_i) / ((var_Ileak_Iup_Ixfer__Ca_i * var_Ileak_Iup_Ixfer__Ca_i) + (var_Ileak_Iup_Ixfer__cup * var_Ileak_Iup_Ixfer__cup)); // uM_per_ms
        const double var_Ca__jup = var_Ileak_Iup_Ixfer__jup; // uM_per_ms
        const double var_Ca__xir = var_chaste_interface__Irel__xir; // uM_per_ms
        const double var_Ca__dCa_JSR = ((-var_Ca__xir) + var_Ca__jup) - var_Ca__jleak; // uM_per_ms
        const double var_Irel__dCa_JSR = var_Ca__dCa_JSR; // uM_per_ms
        const double var_Irel__po = var_ICaL__po; // dimensionless
        const double var_Irel__rxa = var_ICaL__rxa; // mA_per_cm2
        const double var_Irel__cstar = 90.0; // uM
        const double var_Irel__Ca_JSR = var_chaste_interface__Irel__Ca_JSR; // uM
        const double var_Irel__gryr = 2.5807899999999999; // per_ms
        const double var_Irel__gbarsr = 26841.799999999999; // dimensionless
        const double var_Irel__gdyad = 9000.0; // mmole_per_coulomb_cm
        const double var_Irel__ax = 0.35759999999999997; // per_mV
        const double var_Irel__ay = 0.050000000000000003; // per_mV
        const double var_Irel__av = 11.300000000000001; // per_ms
        const double var_Irel__bv = ((1.0 - var_Irel__av) * var_Irel__cstar) - 50.0; // uM_per_ms
        const double var_Irel__Qr0 = ((var_Irel__Ca_JSR > 50.0) && (var_Irel__Ca_JSR < var_Irel__cstar)) ? ((var_Irel__Ca_JSR - 50.0) / 1.0) : (var_Irel__Ca_JSR >= var_Irel__cstar) ? ((var_Irel__av * var_Irel__Ca_JSR) + var_Irel__bv) : 0.0; // uM_per_ms
        const double var_Irel__Qr = (var_Irel__Ca_NSR * var_Irel__Qr0) / var_Irel__cstar; // uM_per_ms
        const double var_Irel__sparkV = exp((-var_Irel__ay) * (var_Irel__V + 30.0)) / (1.0 + exp((-var_Irel__ay) * (var_Irel__V + 30.0))); // dimensionless
        const double var_Irel__spark_rate = (var_Irel__gryr / 1.0) * var_Irel__po * fabs(var_Irel__rxa) * var_Irel__sparkV; // per_ms
        const double var_Irel__taua = 100.0; // ms
        const double var_Irel__taur = 30.0; // ms
        const double var_Irel__xirp = (((var_Irel__po * var_Irel__Qr * fabs(var_Irel__rxa) * var_Irel__gbarsr) / 1.0) * exp((-var_Irel__ax) * (var_Irel__V + 30.0))) / (1.0 + exp((-var_Irel__ax) * (var_Irel__V + 30.0))); // uM_per_ms
        const double var_Irel__xicap = var_Irel__po * var_Irel__gdyad * fabs(var_Irel__rxa); // uM_per_ms
        const double var_Irel__xiryr = var_Irel__xirp + var_Irel__xicap; // uM_per_ms
        const double var_Irel__xir = var_chaste_interface__Irel__xir; // uM_per_ms
        const double var_Irel__d_Ca_JSR_d_Environment__time = (var_Irel__Ca_NSR - var_Irel__Ca_JSR) / var_Irel__taua; // 'micromolar per millisecond'
        const double var_Irel__d_xir_d_Environment__time = (var_Irel__spark_rate * var_Irel__Qr) - ((var_Irel__xir * (1.0 - ((var_Irel__taur * var_Irel__dCa_JSR) / var_Irel__Ca_NSR))) / var_Irel__taur); // 'micromolar per_ms per millisecond'
        const double var_Na__wca = var_cell__wca; // mV_per_uM
        const double var_Na__xina = var_INa__xina; // nA_per_nF
        const double var_Na__xiNaK = var_INaK__xiNaK; // nA_per_nF
        const double var_Na__xiNaCa = var_INaCa__xiNaCa; // nA_per_nF
        const double var_Na__d_Na_i_d_Environment__time = (-(var_Na__xina + (3.0 * var_Na__xiNaK) + (3.0 * var_Na__xiNaCa))) / (var_Na__wca * 1000.0); // 'millimolar per millisecond'
        const double var_Ca__xiryr = var_Irel__xiryr; // uM_per_ms
        const double var_Ca__Ca_dyad = var_chaste_interface__Ca__Ca_dyad; // uM
        const double var_Ca__Ca_i_converter = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_Ca__Ca_i = 1000.0 * var_Ca__Ca_i_converter; // uM
        const double var_Ca__bcal = 24.0; // uM
        const double var_Ca__xkcal = 7.0; // uM
        const double var_Ca__srmax = 47.0; // uM
        const double var_Ca__srkd = 0.59999999999999998; // uM
        const double var_Ca__bmem = 15.0; // uM
        const double var_Ca__kmem = 0.29999999999999999; // uM
        const double var_Ca__bsar = 42.0; // uM
        const double var_Ca__ksar = 13.0; // uM
        const double var_Ca__bpxs = (var_Ca__bcal * var_Ca__xkcal) / ((var_Ca__xkcal + var_Ca__Ca_submem) * (var_Ca__xkcal + var_Ca__Ca_submem)); // dimensionless
        const double var_Ca__spxs = (var_Ca__srmax * var_Ca__srkd) / ((var_Ca__srkd + var_Ca__Ca_submem) * (var_Ca__srkd + var_Ca__Ca_submem)); // dimensionless
        const double var_Ca__mempxs = (var_Ca__bmem * var_Ca__kmem) / ((var_Ca__kmem + var_Ca__Ca_submem) * (var_Ca__kmem + var_Ca__Ca_submem)); // dimensionless
        const double var_Ca__sarpxs = (var_Ca__bsar * var_Ca__ksar) / ((var_Ca__ksar + var_Ca__Ca_submem) * (var_Ca__ksar + var_Ca__Ca_submem)); // dimensionless
        const double var_Ca__dcsib = 1.0 / (1.0 + var_Ca__bpxs + var_Ca__spxs + var_Ca__mempxs + var_Ca__sarpxs); // dimensionless
        const double var_Ca__bpxi = (var_Ca__bcal * var_Ca__xkcal) / ((var_Ca__xkcal + var_Ca__Ca_i) * (var_Ca__xkcal + var_Ca__Ca_i)); // dimensionless
        const double var_Ca__spxi = (var_Ca__srmax * var_Ca__srkd) / ((var_Ca__srkd + var_Ca__Ca_i) * (var_Ca__srkd + var_Ca__Ca_i)); // dimensionless
        const double var_Ca__mempxi = (var_Ca__bmem * var_Ca__kmem) / ((var_Ca__kmem + var_Ca__Ca_i) * (var_Ca__kmem + var_Ca__Ca_i)); // dimensionless
        const double var_Ca__sarpxi = (var_Ca__bsar * var_Ca__ksar) / ((var_Ca__ksar + var_Ca__Ca_i) * (var_Ca__ksar + var_Ca__Ca_i)); // dimensionless
        const double var_Ca__dciib = 1.0 / (1.0 + var_Ca__bpxi + var_Ca__spxi + var_Ca__mempxi + var_Ca__sarpxi); // dimensionless
        const double var_Ca__xkon = 0.0327; // per_uM_per_ms
        const double var_Ca__xkoff = 0.019599999999999999; // per_ms
        const double var_Ca__btrop = 70.0; // uM
        const double var_Ca__tropi = var_chaste_interface__Ca__tropi; // uM
        const double var_Ca__xbi = (var_Ca__xkon * var_Ca__Ca_i * (var_Ca__btrop - var_Ca__tropi)) - (var_Ca__xkoff * var_Ca__tropi); // uM_per_ms
        const double var_Ca__trops = var_chaste_interface__Ca__trops; // uM
        const double var_Ca__xbs = (var_Ca__xkon * var_Ca__Ca_submem * (var_Ca__btrop - var_Ca__trops)) - (var_Ca__xkoff * var_Ca__trops); // uM_per_ms
        const double var_Ca__taud = 4.0; // ms
        const double var_Ca__taups = 0.5; // ms
        const double var_Ca__jd = (var_Ca__Ca_submem - var_Ca__Ca_i) / var_Ca__taud; // uM_per_ms
        const double var_Ca__jNaCa = var_INaCa__jNaCa; // uM_per_ms
        const double var_Ca__jca = var_ICaL__jca; // uM_per_ms
        const double var_Ca__d_Ca_i_d_Environment__time = var_Ca__dciib * (((var_Ca__jd - var_Ca__jup) + var_Ca__jleak) - var_Ca__xbi); // 'micromolar per millisecond'
        const double var_Ca__d_Ca_dyad_d_Environment__time = var_Ca__xiryr - ((var_Ca__Ca_dyad - var_Ca__Ca_submem) / var_Ca__taups); // 'micromolar per millisecond'
        const double var_Ca__d_Ca_submem_d_Environment__time = var_Ca__dcsib * ((50.0 * (((var_Ca__xir - var_Ca__jd) - var_Ca__jca) + var_Ca__jNaCa)) - var_Ca__xbs); // 'micromolar per millisecond'
        const double var_Ca__d_Ca_NSR_d_Environment__time = var_Ca__dCa_JSR; // 'micromolar per millisecond'
        const double var_Ca__d_tropi_d_Environment__time = var_Ca__xbi; // 'micromolar per millisecond'
        const double var_Ca__d_trops_d_Environment__time = var_Ca__xbs; // 'micromolar per millisecond'
        const double var_chaste_interface__Ca__d_Ca_i_d_Environment__time_converter = var_Ca__d_Ca_i_d_Environment__time; // ___units_45
        const double var_chaste_interface__Ca__d_Ca_i_d_Environment__time = 0.001 * var_chaste_interface__Ca__d_Ca_i_d_Environment__time_converter; // 'millimolar per millisecond'
        const double var_chaste_interface__INa__d_xm_d_Environment__time = var_INa__d_xm_d_Environment__time; // ___units_13
        const double var_chaste_interface__INa__d_xh_d_Environment__time = var_INa__d_xh_d_Environment__time; // ___units_13
        const double var_chaste_interface__INa__d_xj_d_Environment__time = var_INa__d_xj_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_c1_d_Environment__time = var_ICaL__d_c1_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_c2_d_Environment__time = var_ICaL__d_c2_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_xi1ca_d_Environment__time = var_ICaL__d_xi1ca_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_xi1ba_d_Environment__time = var_ICaL__d_xi1ba_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_xi2ca_d_Environment__time = var_ICaL__d_xi2ca_d_Environment__time; // ___units_13
        const double var_chaste_interface__ICaL__d_xi2ba_d_Environment__time = var_ICaL__d_xi2ba_d_Environment__time; // ___units_13
        const double var_chaste_interface__IKr__d_xr_d_Environment__time = var_IKr__d_xr_d_Environment__time; // ___units_13
        const double var_chaste_interface__IKs__d_xs1_d_Environment__time = var_IKs__d_xs1_d_Environment__time; // ___units_13
        const double var_chaste_interface__IKs__d_xs2_d_Environment__time = var_IKs__d_xs2_d_Environment__time; // ___units_13
        const double var_chaste_interface__Ito__d_xtos_d_Environment__time = var_Ito__d_xtos_d_Environment__time; // ___units_13
        const double var_chaste_interface__Ito__d_ytos_d_Environment__time = var_Ito__d_ytos_d_Environment__time; // ___units_13
        const double var_chaste_interface__Ito__d_xtof_d_Environment__time = var_Ito__d_xtof_d_Environment__time; // ___units_13
        const double var_chaste_interface__Ito__d_ytof_d_Environment__time = var_Ito__d_ytof_d_Environment__time; // ___units_13
        const double var_chaste_interface__Irel__d_Ca_JSR_d_Environment__time = var_Irel__d_Ca_JSR_d_Environment__time; // ___units_82
        const double var_chaste_interface__Irel__d_xir_d_Environment__time = var_Irel__d_xir_d_Environment__time; // ___units_83
        const double var_chaste_interface__Na__d_Na_i_d_Environment__time = var_Na__d_Na_i_d_Environment__time; // ___units_84
        const double var_chaste_interface__Ca__d_Ca_dyad_d_Environment__time = var_Ca__d_Ca_dyad_d_Environment__time; // ___units_82
        const double var_chaste_interface__Ca__d_Ca_submem_d_Environment__time = var_Ca__d_Ca_submem_d_Environment__time; // ___units_82
        const double var_chaste_interface__Ca__d_Ca_NSR_d_Environment__time = var_Ca__d_Ca_NSR_d_Environment__time; // ___units_82
        const double var_chaste_interface__Ca__d_tropi_d_Environment__time = var_Ca__d_tropi_d_Environment__time; // ___units_82
        const double var_chaste_interface__Ca__d_trops_d_Environment__time = var_Ca__d_trops_d_Environment__time; // ___units_82
        const double d_dt_chaste_interface__Ca__Ca_i = var_chaste_interface__Ca__d_Ca_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa__xm = var_chaste_interface__INa__d_xm_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__xh = var_chaste_interface__INa__d_xh_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__xj = var_chaste_interface__INa__d_xj_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__c1 = var_chaste_interface__ICaL__d_c1_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__c2 = var_chaste_interface__ICaL__d_c2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi1ca = var_chaste_interface__ICaL__d_xi1ca_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi1ba = var_chaste_interface__ICaL__d_xi1ba_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi2ca = var_chaste_interface__ICaL__d_xi2ca_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__xi2ba = var_chaste_interface__ICaL__d_xi2ba_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKr__xr = var_chaste_interface__IKr__d_xr_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs1 = var_chaste_interface__IKs__d_xs1_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs2 = var_chaste_interface__IKs__d_xs2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__xtos = var_chaste_interface__Ito__d_xtos_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ytos = var_chaste_interface__Ito__d_ytos_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__xtof = var_chaste_interface__Ito__d_xtof_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ytof = var_chaste_interface__Ito__d_ytof_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Ca_JSR = var_chaste_interface__Irel__d_Ca_JSR_d_Environment__time; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Irel__xir = var_chaste_interface__Irel__d_xir_d_Environment__time; // 'micromolar per_ms per millisecond'
        const double d_dt_chaste_interface__Na__Na_i = var_chaste_interface__Na__d_Na_i_d_Environment__time; // 'millimolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_dyad = var_chaste_interface__Ca__d_Ca_dyad_d_Environment__time; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_submem = var_chaste_interface__Ca__d_Ca_submem_d_Environment__time; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_NSR = var_chaste_interface__Ca__d_Ca_NSR_d_Environment__time; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__tropi = var_chaste_interface__Ca__d_tropi_d_Environment__time; // 'micromolar per millisecond'
        const double d_dt_chaste_interface__Ca__trops = var_chaste_interface__Ca__d_trops_d_Environment__time; // 'micromolar per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_reversal_potentials__K_i = 140.0; // mM
            const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
            const double var_reversal_potentials__ek = (1.0 / var_reversal_potentials__FonRT) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // mV
            const double var_IK1__ek = var_reversal_potentials__ek; // mV
            const double var_IK1__V = var_chaste_interface__cell__V; // mV
            const double var_IK1__aki = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__ek) - 59.215000000000003))); // per_ms
            const double var_IK1__bki = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__ek) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__ek) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__ek) + 4.7530000000000001))); // per_ms
            const double var_IK1__xkin = var_IK1__aki / (var_IK1__aki + var_IK1__bki); // dimensionless
            const double var_IK1__K_o = var_Environment__K_o; // mM
            const double var_IK1__gkix = 0.29999999999999999; // uS_per_nF
            const double var_IK1__xik1 = var_IK1__gkix * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__xkin * (var_IK1__V - var_IK1__ek); // nA_per_nF
            const double var_cell__xik1 = var_IK1__xik1; // nA_per_nF
            const double var_Ito__ek = var_reversal_potentials__ek; // mV
            const double var_Ito__gtos = 0.11; // uS_per_nF
            const double var_Ito__rs_inf = 1.0 / (1.0 + exp(var_Ito__rt2)); // dimensionless
            const double var_Ito__xitos = NV_Ith_S(mParameters, 2) * var_Ito__gtos * var_Ito__xtos * (var_Ito__ytos + (0.5 * var_Ito__rs_inf)) * (var_Ito__V - var_Ito__ek); // nA_per_nF
            const double var_Ito__gtof = 0.040000000000000001; // uS_per_nF
            const double var_Ito__xitof = var_Ito__gtof * var_Ito__xtof * var_Ito__ytof * (var_Ito__V - var_Ito__ek); // nA_per_nF
            const double var_Ito__xito = var_Ito__xitos + var_Ito__xitof; // nA_per_nF
            const double var_cell__xito = var_Ito__xito; // nA_per_nF
            const double var_cell__xiNaK = var_INaK__xiNaK; // nA_per_nF
            const double var_cell__xiNaCa = var_INaCa__xiNaCa; // nA_per_nF
            const double var_ICaL__wca = var_cell__wca; // mV_per_uM
            const double var_ICaL__xica = 2.0 * var_ICaL__wca * var_ICaL__jca; // nA_per_nF
            const double var_cell__xica = var_ICaL__xica; // nA_per_nF
            const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
            const double var_IKr__K_o = var_Environment__K_o; // mM
            const double var_IKr__ek = var_reversal_potentials__ek; // mV
            const double var_IKr__rg = 1.0 / (1.0 + exp((var_IKr__V + 33.0) / 22.399999999999999)); // dimensionless
            const double var_IKr__xikr = NV_Ith_S(mParameters, 0) * var_IKr__gkr * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__xr * var_IKr__rg * (var_IKr__V - var_IKr__ek); // nA_per_nF
            const double var_cell__xikr = var_IKr__xikr; // nA_per_nF
            const double var_IKs__Ca_i_converter = var_chaste_interface__Ca__Ca_i; // millimolar
            const double var_IKs__Ca_i = 1000.0 * var_IKs__Ca_i_converter; // uM
            const double var_IKs__gksx = 1.0 + (0.80000000000000004 / (1.0 + pow(0.5 / var_IKs__Ca_i, 3.0))); // dimensionless
            const double var_IKs__gks = 0.1386; // uS_per_nF
            const double var_reversal_potentials__prNaK = 0.018329999999999999; // dimensionless
            const double var_reversal_potentials__eks = (1.0 / var_reversal_potentials__FonRT) * log((var_reversal_potentials__K_o + (var_reversal_potentials__prNaK * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prNaK * var_reversal_potentials__Na_i))); // mV
            const double var_IKs__eks = var_reversal_potentials__eks; // mV
            const double var_IKs__xiks = NV_Ith_S(mParameters, 1) * var_IKs__gks * var_IKs__gksx * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__eks); // nA_per_nF
            const double var_cell__xiks = var_IKs__xiks; // nA_per_nF
            const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
            const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // nA_per_nF
            const double var_cell__xina = var_INa__xina; // nA_per_nF
            const double var_cell__Itotal = -(var_cell__xina + var_cell__xik1 + var_cell__xikr + var_cell__xiks + var_cell__xito + var_cell__xiNaCa + var_cell__xica + var_cell__xiNaK + var_cell__i_Stim); // nA_per_nF
            const double var_cell__d_V_d_Environment__time = var_cell__Itotal; // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_Environment__time = var_cell__d_V_d_Environment__time; // ___units_6
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_Environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__Ca__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa__xm;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa__xh;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__INa__xj;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__ICaL__c1;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__ICaL__c2;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__ICaL__xi1ca;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__ICaL__xi1ba;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__ICaL__xi2ca;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__ICaL__xi2ba;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__IKr__xr;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__IKs__xs1;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__IKs__xs2;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__Ito__xtos;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Ito__ytos;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Ito__xtof;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Ito__ytof;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Irel__Ca_JSR;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Irel__xir;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Ca__Ca_dyad;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Ca__Ca_submem;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Ca__Ca_NSR;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__Ca__tropi;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Ca__trops;
    }
    
    void Dynamicmahajan_2008FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.169816169406
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.000256752008084
        double var_chaste_interface__INa__xm = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.001075453357
        double var_chaste_interface__INa__xh = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.990691306716
        double var_chaste_interface__INa__xj = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.993888937283
        double var_chaste_interface__ICaL__c1 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.000018211252
        double var_chaste_interface__ICaL__c2 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.979322592773
        double var_chaste_interface__ICaL__xi1ca = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.001208153482
        double var_chaste_interface__ICaL__xi1ba = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.000033616596
        double var_chaste_interface__ICaL__xi2ca = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.004173008466
        double var_chaste_interface__ICaL__xi2ba = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.015242594688
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.007074239331
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.048267587131
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.105468807033
        double var_chaste_interface__Ito__xtos = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00364776906
        double var_chaste_interface__Ito__ytos = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.174403618112
        double var_chaste_interface__Ito__xtof = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.003643592594
        double var_chaste_interface__Ito__ytof = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.993331326442
        double var_chaste_interface__Irel__Ca_JSR = NV_Ith_S(rY, 18);
        // Units: uM; Initial value: 97.505463697266
        double var_chaste_interface__Irel__xir = NV_Ith_S(rY, 19);
        // Units: uM_per_ms; Initial value: 0.006679257264
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 11.441712311614
        double var_chaste_interface__Ca__Ca_dyad = NV_Ith_S(rY, 21);
        // Units: uM; Initial value: 1.716573130685
        double var_chaste_interface__Ca__Ca_submem = NV_Ith_S(rY, 22);
        // Units: uM; Initial value: 0.226941113355
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 23);
        // Units: uM; Initial value: 104.450004990523
        double var_chaste_interface__Ca__tropi = NV_Ith_S(rY, 24);
        // Units: uM; Initial value: 22.171689894953
        double var_chaste_interface__Ca__trops = NV_Ith_S(rY, 25);
        // Units: uM; Initial value: 19.864701949854
        
        const double var_Environment__R = 8.3144720000000003; // J_per_moleK
        const double var_Environment__T = 308.0; // kelvin
        const double var_Environment__F = 96.485341500000004; // coulomb_per_mmole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 136.0; // mM
        const double var_chaste_interface__Environment__fake_dt = 1.0; // ms
        const double var_cell__V = var_chaste_interface__cell__V; // mV
        const double var_reversal_potentials__K_i = 140.0; // mM
        const double var_IK1__gkix = 0.29999999999999999; // uS_per_nF
        const double var_Ito__ytos = var_chaste_interface__Ito__ytos; // dimensionless
        const double var_Ito__gtos = 0.11; // uS_per_nF
        const double var_Ito__xtos = var_chaste_interface__Ito__xtos; // dimensionless
        const double var_Ito__xtof = var_chaste_interface__Ito__xtof; // dimensionless
        const double var_Ito__gtof = 0.040000000000000001; // uS_per_nF
        const double var_Ito__ytof = var_chaste_interface__Ito__ytof; // dimensionless
        const double var_INaK__xkmko = 1.5; // mM
        const double var_INaK__xkmnai = 12.0; // mM
        const double var_INaK__gNaK = 1.5; // nA_per_nF
        const double var_cell__wca = 8.0; // mV_per_uM
        const double var_INaCa__gNaCa = 0.83999999999999997; // uM_per_ms
        const double var_INaCa__xkdna = 0.29999999999999999; // uM
        const double var_Ca__Ca_submem = var_chaste_interface__Ca__Ca_submem; // uM
        const double var_INaCa__xmcao = 1.3; // mM
        const double var_INaCa__xmnao = 87.5; // mM
        const double var_INaCa__xmcai = 0.0035999999999999999; // mM
        const double var_INaCa__xmnai = 12.300000000000001; // mM
        const double var_ICaL__pca = 0.00054000000000000001; // cm_per_s
        const double var_ICaL__gca = 182.0; // mmole_per_coulomb_cm
        const double var_ICaL__xi1ba = var_chaste_interface__ICaL__xi1ba; // dimensionless
        const double var_ICaL__xi1ca = var_chaste_interface__ICaL__xi1ca; // dimensionless
        const double var_ICaL__c1 = var_chaste_interface__ICaL__c1; // dimensionless
        const double var_ICaL__c2 = var_chaste_interface__ICaL__c2; // dimensionless
        const double var_ICaL__xi2ca = var_chaste_interface__ICaL__xi2ca; // dimensionless
        const double var_ICaL__xi2ba = var_chaste_interface__ICaL__xi2ba; // dimensionless
        const double var_IKr__gkr = 0.012500000000000001; // uS_per_nF
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_IKs__gks = 0.1386; // uS_per_nF
        const double var_reversal_potentials__prNaK = 0.018329999999999999; // dimensionless
        const double var_INa__xm = var_chaste_interface__INa__xm; // dimensionless
        const double var_INa__xj = var_chaste_interface__INa__xj; // dimensionless
        const double var_INa__xh = var_chaste_interface__INa__xh; // dimensionless
        const double var_INa__gna = 12.0; // uS_per_nF
        const double var_ICaL__vth = 0.0; // mV
        const double var_ICaL__s6 = 8.0; // mV
        const double var_ICaL__cat = 3.0; // uM
        const double var_ICaL__vx =  -40.0; // mV
        const double var_ICaL__sx = 3.0; // mV
        const double var_ICaL__vy =  -40.0; // mV
        const double var_ICaL__sy = 4.0; // mV
        const double var_ICaL__vyr =  -40.0; // mV
        const double var_ICaL__syr = 11.32; // mV
        const double var_ICaL__cpt = 6.0936500000000002; // uM
        const double var_ICaL__taupo = 1.0; // ms
        const double var_ICaL__k2 = 0.000103615; // per_ms
        const double var_ICaL__k1t = 0.00413; // per_ms
        const double var_ICaL__k2t = 0.0022399999999999998; // per_ms
        const double var_ICaL__tau3 = 3.0; // ms
        const double var_ICaL__tca = 78.032899999999998; // ms
        const double var_ICaL__r1 = 0.29999999999999999; // per_ms
        const double var_ICaL__r2 = 3.0; // per_ms
        const double var_ICaL__s1t = 0.0019499999999999999; // per_ms
        const double var_Ileak_Iup_Ixfer__gleak = 2.069e-05; // per_ms
        const double var_Ileak_Iup_Ixfer__kj = 50.0; // uM
        const double var_Ileak_Iup_Ixfer__cup = 0.5; // uM
        const double var_Ileak_Iup_Ixfer__vup = 0.40000000000000002; // uM_per_ms
        const double var_Irel__cstar = 90.0; // uM
        const double var_Irel__Ca_JSR = var_chaste_interface__Irel__Ca_JSR; // uM
        const double var_Irel__gryr = 2.5807899999999999; // per_ms
        const double var_Irel__gbarsr = 26841.799999999999; // dimensionless
        const double var_Irel__gdyad = 9000.0; // mmole_per_coulomb_cm
        const double var_Irel__ax = 0.35759999999999997; // per_mV
        const double var_Irel__ay = 0.050000000000000003; // per_mV
        const double var_Irel__av = 11.300000000000001; // per_ms
        const double var_Irel__taua = 100.0; // ms
        const double var_Irel__taur = 30.0; // ms
        const double var_Irel__xir = var_chaste_interface__Irel__xir; // uM_per_ms
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_Ca__Ca_dyad = var_chaste_interface__Ca__Ca_dyad; // uM
        const double var_Ca__Ca_i_converter = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_Ca__Ca_i = 1000.0 * var_Ca__Ca_i_converter; // uM
        const double var_Ca__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // uM
        const double var_Ca__bcal = 24.0; // uM
        const double var_Ca__xkcal = 7.0; // uM
        const double var_Ca__srmax = 47.0; // uM
        const double var_Ca__srkd = 0.59999999999999998; // uM
        const double var_Ca__bmem = 15.0; // uM
        const double var_Ca__kmem = 0.29999999999999999; // uM
        const double var_Ca__bsar = 42.0; // uM
        const double var_Ca__ksar = 13.0; // uM
        const double var_Ca__xkon = 0.0327; // per_uM_per_ms
        const double var_Ca__xkoff = 0.019599999999999999; // per_ms
        const double var_Ca__btrop = 70.0; // uM
        const double var_Ca__tropi = var_chaste_interface__Ca__tropi; // uM
        const double var_Ca__trops = var_chaste_interface__Ca__trops; // uM
        const double var_Ca__taud = 4.0; // ms
        const double var_Ca__taups = 0.5; // ms
        const double var_t1 = var_INa__gna * var_INa__xh; // dimensionless
        const double var_t2 = pow(var_INa__xm, 2.0); // dimensionless
        const double var_t3 = var_t2 * var_INa__xm; // dimensionless
        const double var_t5 = (var_t1 * var_INa__xj) * var_t3; // dimensionless
        const double var_t6 = pow(var_Environment__K_o, 1.0 / 2.0); // dimensionless
        const double var_t7 = var_IK1__gkix * var_t6; // dimensionless
        const double var_t10 = (1.0 / var_Environment__F) * var_Environment__R; // dimensionless
        const double var_t13 = log(var_Environment__K_o / var_reversal_potentials__K_i); // dimensionless
        const double var_t15 = (var_t10 * var_Environment__T) * var_t13; // dimensionless
        const double var_t18 = exp(((0.23849999999999999 * var_cell__V) - (0.23849999999999999 * var_t15)) - 14.1227775); // dimensionless
        const double var_t19 = 1.0 + var_t18; // dimensionless
        const double var_t20 = pow(var_t19, 2.0); // dimensionless
        const double var_t21 = 1.0 / var_t20; // dimensionless
        const double var_t23 = 1.0 / var_t19; // dimensionless
        const double var_t28 = exp(((0.080320000000000003 * var_cell__V) - (0.080320000000000003 * var_t15)) + 0.43983232); // dimensionless
        const double var_t33 = exp(((0.061749999999999999 * var_cell__V) - (0.061749999999999999 * var_t15)) - 36.698642499999998); // dimensionless
        const double var_t34 = (0.49124000000000001 * var_t28) + var_t33; // dimensionless
        const double var_t38 = exp((((-0.51429999999999998) * var_cell__V) + (0.51429999999999998 * var_t15)) - 2.4444678999999998); // dimensionless
        const double var_t39 = 1.0 + var_t38; // dimensionless
        const double var_t40 = 1.0 / var_t39; // dimensionless
        const double var_t42 = (1.02 * var_t23) + (var_t34 * var_t40); // dimensionless
        const double var_t43 = 1.0 / var_t42; // dimensionless
        const double var_t44 = var_cell__V - var_t15; // dimensionless
        const double var_t50 = pow(var_t42, 2.0); // dimensionless
        const double var_t59 = pow(var_t39, 2.0); // dimensionless
        const double var_t71 = NV_Ith_S(mParameters, 0) * var_IKr__gkr; // dimensionless
        const double var_t75 = exp((0.044642857139999999 * var_cell__V) + 1.4732142859999999); // dimensionless
        const double var_t76 = 1.0 + var_t75; // dimensionless
        const double var_t77 = pow(var_t76, 2.0); // dimensionless
        const double var_t85 = 1.0 / var_t76; // dimensionless
        const double var_t89 = NV_Ith_S(mParameters, 1) * var_IKs__gks; // dimensionless
        const double var_t90 = pow(var_Ca__Ca_i, 2.0); // dimensionless
        const double var_t91 = var_t90 * var_Ca__Ca_i; // dimensionless
        const double var_t94 = 1.0 + (0.125 / var_t91); // dimensionless
        const double var_t97 = 1.0 + (0.80000000000000004 / var_t94); // dimensionless
        const double var_t98 = var_t97 * var_IKs__xs1; // dimensionless
        const double var_t100 = (var_t89 * var_t98) * var_IKs__xs2; // dimensionless
        const double var_t101 = NV_Ith_S(mParameters, 2) * var_Ito__gtos; // dimensionless
        const double var_t103 = (1.0 / 10.0) * var_cell__V; // dimensionless
        const double var_t105 = exp(var_t103 + 3.3500000000000001); // dimensionless
        const double var_t106 = 1.0 + var_t105; // dimensionless
        const double var_t107 = pow(var_t106, 2.0); // dimensionless
        const double var_t109 = (1.0 / var_t107) * var_t105; // dimensionless
        const double var_t113 = 1.0 / var_t106; // dimensionless
        const double var_t115 = var_Ito__ytos + (0.5 * var_t113); // dimensionless
        const double var_t118 = var_Ito__gtof * var_Ito__xtof; // dimensionless
        const double var_t120 = var_cell__wca * var_INaCa__gNaCa; // dimensionless
        const double var_t121 = pow(var_INaCa__xkdna, 2.0); // dimensionless
        const double var_t122 = var_t121 * var_INaCa__xkdna; // dimensionless
        const double var_t123 = pow(var_Ca__Ca_submem, 2.0); // dimensionless
        const double var_t127 = 1.0 + ((var_t122 / var_t123) / var_Ca__Ca_submem); // dimensionless
        const double var_t128 = 1.0 / var_t127; // dimensionless
        const double var_t129 = var_t120 * var_t128; // dimensionless
        const double var_t130 = pow(var_Na__Na_i, 2.0); // dimensionless
        const double var_t131 = var_t130 * var_Na__Na_i; // dimensionless
        const double var_t132 = var_t131 * var_Environment__Ca_o; // dimensionless
        const double var_t134 = 1.0 / var_Environment__R; // dimensionless
        const double var_t135 = 1.0 / var_Environment__T; // dimensionless
        const double var_t136 = var_t134 * var_t135; // dimensionless
        const double var_t138 = (var_cell__V * var_Environment__F) * var_t136; // dimensionless
        const double var_t140 = exp(0.34999999999999998 * var_t138); // dimensionless
        const double var_t144 = pow(var_Environment__Na_o, 2.0); // dimensionless
        const double var_t145 = var_t144 * var_Environment__Na_o; // dimensionless
        const double var_t146 = var_t145 * var_Ca__Ca_submem; // dimensionless
        const double var_t149 = exp((-0.65000000000000002) * var_t138); // dimensionless
        const double var_t150 = var_t136 * var_t149; // dimensionless
        const double var_t155 = 1.0 + (0.20000000000000001 * var_t149); // dimensionless
        const double var_t156 = 1.0 / var_t155; // dimensionless
        const double var_t159 = pow(var_INaCa__xmnao, 2.0); // dimensionless
        const double var_t160 = var_t159 * var_INaCa__xmnao; // dimensionless
        const double var_t163 = pow(var_INaCa__xmnai, 2.0); // dimensionless
        const double var_t164 = var_t163 * var_INaCa__xmnai; // dimensionless
        const double var_t165 = var_t164 * var_Environment__Ca_o; // dimensionless
        const double var_t166 = 1.0 / var_INaCa__xmcai; // dimensionless
        const double var_t171 = var_INaCa__xmcai * var_t145; // dimensionless
        const double var_t172 = 1.0 / var_t164; // dimensionless
        const double var_t177 = (((((var_INaCa__xmcao * var_t131) + (((1.0 / 1000.0) * var_t160) * var_Ca__Ca_submem)) + (var_t165 * (1.0 + (((1.0 / 1000.0) * var_Ca__Ca_submem) * var_t166)))) + (var_t171 * (1.0 + (var_t131 * var_t172)))) + var_t132) + ((1.0 / 1000.0) * var_t146); // dimensionless
        const double var_t178 = 1.0 / var_t177; // dimensionless
        const double var_t179 = ((((((0.34999999999999998 * var_t132) * var_Environment__F) * var_t136) * var_t140) + (((0.00064999999999999997 * var_t146) * var_Environment__F) * var_t150)) * var_t156) * var_t178; // dimensionless
        const double var_t180 = var_t129 * var_t179; // dimensionless
        const double var_t184 = (var_t132 * var_t140) - (((1.0 / 1000.0) * var_t146) * var_t149); // dimensionless
        const double var_t186 = pow(var_t155, 2.0); // dimensionless
        const double var_t187 = 1.0 / var_t186; // dimensionless
        const double var_t191 = (var_t178 * var_Environment__F) * var_t150; // dimensionless
        const double var_t192 = (((var_t120 * var_t128) * var_t184) * var_t187) * var_t191; // dimensionless
        const double var_t194 = var_cell__wca * var_ICaL__gca; // dimensionless
        const double var_t195 = (((((1.0 - var_ICaL__xi1ca) - var_ICaL__xi2ca) - var_ICaL__xi1ba) - var_ICaL__xi2ba) - var_ICaL__c1) - var_ICaL__c2; // dimensionless
        const double var_t196 = fabs(var_t138); // dimensionless
        const double var_t198 = (2.0 * var_t196) < 0.001; // dimensionless
        const double var_t199 = pow(var_Environment__F, 2.0); // dimensionless
        const double var_t200 = var_ICaL__pca * var_t199; // dimensionless
        const double var_t203 = exp(2.0 * var_t138); // dimensionless
        const double var_t211 = (((1.0 / 1000.0) * var_Ca__Ca_submem) * var_t203) - (0.34100000000000003 * var_Environment__Ca_o); // dimensionless
        const double var_t213 = var_t203 - 1.0; // dimensionless
        const double var_t214 = 1.0 / var_t213; // dimensionless
        const double var_t216 = (((var_t200 * var_t134) * var_t135) * var_t211) * var_t214; // dimensionless
        const double var_t218 = var_ICaL__pca * var_cell__V; // dimensionless
        const double var_t220 = pow(var_Environment__R, 2.0); // dimensionless
        const double var_t223 = ((var_t218 * var_t199) * var_Environment__F) / var_t220; // dimensionless
        const double var_t224 = pow(var_Environment__T, 2.0); // dimensionless
        const double var_t225 = 1.0 / var_t224; // dimensionless
        const double var_t227 = var_t203 * var_t214; // dimensionless
        const double var_t229 = ((var_t223 * var_t225) * var_Ca__Ca_submem) * var_t227; // dimensionless
        const double var_t232 = pow(var_t213, 2.0); // dimensionless
        const double var_t236 = (((var_t223 * var_t225) * var_t211) / var_t232) * var_t203; // dimensionless
        const double var_t239 = var_t198 ? (((((1.0 / 250.0) * var_t200) * var_Ca__Ca_submem) * var_t136) * var_t203) : (((4.0 * var_t216) + ((1.0 / 125.0) * var_t229)) - (8.0 * var_t236)); // dimensionless
        const double var_t244 = exp((-0.10000000000000001) * var_t138); // dimensionless
        const double var_t247 = exp(0.01485884101 * var_Environment__Na_o); // dimensionless
        const double var_t248 = var_t247 - 1.0; // dimensionless
        const double var_t249 = exp(-var_t138); // dimensionless
        const double var_t252 = (1.0 + (0.1245 * var_t244)) + ((0.0052142857139999997 * var_t248) * var_t249); // dimensionless
        const double var_t253 = pow(var_t252, 2.0); // dimensionless
        const double var_t257 = var_Na__Na_i + var_INaK__xkmnai; // dimensionless
        const double var_t259 = (1.0 / var_t257) * var_Environment__K_o; // dimensionless
        const double var_t261 = 1.0 / (var_Environment__K_o + var_INaK__xkmko); // dimensionless
        const double var_t273 = ((((var_INaK__gNaK / var_t253) * var_Na__Na_i) * var_t259) * var_t261) * ((((((-0.012449999999999999) * var_Environment__F) * var_t134) * var_t135) * var_t244) - ((((0.0052142857139999997 * var_t248) * var_Environment__F) * var_t136) * var_t249)); // dimensionless
        const double var_t274 = (((((((((((((-var_t5) + (((((0.10468673990000001 * var_t7) * var_t21) * var_t43) * var_t44) * var_t18)) + (((((0.43893811259999999 * var_t7) * var_t23) / var_t50) * var_t44) * (((((-0.24326999999999999) * var_t21) * var_t18) + (((0.039456396800000001 * var_t28) + (0.061749999999999999 * var_t33)) * var_t40)) + (((0.51429999999999998 * var_t34) / var_t59) * var_t38)))) - (((0.43893811259999999 * var_t7) * var_t23) * var_t43)) + ((((((0.01921122691 * var_t71) * var_t6) * var_IKr__xr) / var_t77) * var_t44) * var_t75)) - ((((0.43033148290000001 * var_t71) * var_t6) * var_IKr__xr) * var_t85)) - var_t100) + ((((0.050000000000000003 * var_t101) * var_Ito__xtos) * var_t109) * var_t44)) - ((var_t101 * var_Ito__xtos) * var_t115)) - (var_t118 * var_Ito__ytof)) - var_t180) - (0.13 * var_t192)) - (((2.0 * var_t194) * var_t195) * var_t239)) + var_t273; // dimensionless
        const double var_t276 = 1.0 / var_Na__Na_i; // dimensionless
        const double var_t278 = log(var_Environment__Na_o * var_t276); // dimensionless
        const double var_t281 = var_cell__V - ((var_t10 * var_Environment__T) * var_t278); // dimensionless
        const double var_t285 = var_INa__gna * var_INa__xj; // dimensionless
        const double var_t286 = var_t3 * var_t281; // dimensionless
        const double var_t289 = var_ICaL__pca * var_Environment__F; // dimensionless
        const double var_t290 = var_t289 * var_t211; // dimensionless
        const double var_t292 = var_t218 * var_t199; // dimensionless
        const double var_t295 = ((var_t292 * var_t136) * var_t211) * var_t214; // dimensionless
        const double var_t297 = var_t198 ? (2.0 * var_t290) : (4.0 * var_t295); // dimensionless
        const double var_t299 = (2.0 * var_t194) * var_t297; // dimensionless
        const double var_t309 = 1.0 / (var_reversal_potentials__K_i + (var_reversal_potentials__prNaK * var_Na__Na_i)); // dimensionless
        const double var_t311 = log((var_Environment__K_o + (var_reversal_potentials__prNaK * var_Environment__Na_o)) * var_t309); // dimensionless
        const double var_t314 = var_cell__V - ((var_t10 * var_Environment__T) * var_t311); // dimensionless
        const double var_t328 = ((var_t5 * var_t10) * var_Environment__T) * var_t276; // dimensionless
        const double var_t336 = var_t156 * var_t178; // dimensionless
        const double var_t337 = (var_Environment__Ca_o * var_t140) * var_t336; // dimensionless
        const double var_t338 = ((var_t120 * var_t128) * var_t130) * var_t337; // dimensionless
        const double var_t340 = var_t184 * var_t156; // dimensionless
        const double var_t341 = pow(var_t177, 2.0); // dimensionless
        const double var_t342 = 1.0 / var_t341; // dimensionless
        const double var_t347 = ((var_INaCa__xmcao * var_t130) + ((var_t171 * var_t130) * var_t172)) + (var_t130 * var_Environment__Ca_o); // dimensionless
        const double var_t350 = (((3.0 * var_t129) * var_t340) * var_t342) * var_t347; // dimensionless
        const double var_t352 = var_INaK__gNaK / var_t252; // dimensionless
        const double var_t354 = (var_t352 * var_t259) * var_t261; // dimensionless
        const double var_t356 = pow(var_t257, 2.0); // dimensionless
        const double var_t360 = (((var_t352 * var_Na__Na_i) / var_t356) * var_Environment__K_o) * var_t261; // dimensionless
        const double var_t362 = pow(var_t127, 2.0); // dimensionless
        const double var_t363 = 1.0 / var_t362; // dimensionless
        const double var_t366 = pow(var_t123, 2.0); // dimensionless
        const double var_t369 = (var_t336 * var_t122) / var_t366; // dimensionless
        const double var_t370 = ((var_t120 * var_t363) * var_t184) * var_t369; // dimensionless
        const double var_t374 = ((var_t129 * var_t145) * var_t149) * var_t336; // dimensionless
        const double var_t377 = (var_t160 + (var_t165 * var_t166)) + var_t145; // dimensionless
        const double var_t380 = ((((1.0 / 1000.0) * var_t129) * var_t340) * var_t342) * var_t377; // dimensionless
        const double var_t383 = var_t136 * var_t227; // dimensionless
        const double var_t386 = var_t198 ? (((1.0 / 500.0) * var_t289) * var_t203) : (((1.0 / 250.0) * var_t292) * var_t383); // dimensionless
        const double var_t391 = pow(var_t94, 2.0); // dimensionless
        const double var_t394 = pow(var_t90, 2.0); // dimensionless
        const double var_t402 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t404 = exp((-var_t402) - 4.7130000000000001); // dimensionless
        const double var_t406 = 1.0 - (1.0 * var_t404); // dimensionless
        const double var_t410 = pow(var_t406, 2.0); // dimensionless
        const double var_t415 = (0.32000000000000001 / var_t406) - (((0.032000000000000001 * (var_cell__V + 47.130000000000003)) / var_t410) * var_t404); // dimensionless
        const double var_t420 = (var_cell__V <= (-47.131)) ? var_t415 : (var_cell__V <= (-47.128999999999998)) ? 0.0 : ((-47.128999999999998) < var_cell__V) ? var_t415 : NAN; // dimensionless
        const double var_t424 = exp(((-1.0) / 11.0) * var_cell__V); // dimensionless
        const double var_t428 = var_cell__V + 47.130000000000003; // dimensionless
        const double var_t429 = fabs(var_t428); // dimensionless
        const double var_t431 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t433 = exp((-var_t431) - 4.7130000000000001); // dimensionless
        const double var_t438 = (0.001 < var_t429) ? ((0.32000000000000001 * var_t428) / (1.0 - var_t433)) : 3.2000000000000002; // dimensionless
        const double var_t441 = var_cell__V < (-40.0); // dimensionless
        const double var_t444 = exp((-11.764705879999999) - (0.14705882349999999 * var_cell__V)); // dimensionless
        const double var_t447 = (-40.0) < var_cell__V; // dimensionless
        const double var_t448 = var_t441 ? ((-0.01985294118) * var_t444) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t452 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t455 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t460 = exp(((-0.090090090090000005) * var_cell__V) - 0.96036036039999995); // dimensionless
        const double var_t463 = pow(0.13 + (0.13 * var_t460), 2.0); // dimensionless
        const double var_t467 = (var_cell__V <= (-40.0)) ? ((0.28123999999999999 * var_t452) + (108500.0 * var_t455)) : var_t447 ? ((0.011711711709999999 / var_t463) * var_t460) : NAN; // dimensionless
        const double var_t470 = var_cell__V < (-40.0); // dimensionless
        const double var_t472 = var_t470 ? (0.13500000000000001 * var_t444) : 0.0; // dimensionless
        const double var_t474 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t477 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t483 = var_t470 ? ((3.5600000000000001 * var_t474) + (310000.0 * var_t477)) : (1.0 / (0.13 + (0.13 * var_t460))); // dimensionless
        const double var_t486 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t489 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t492 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t496 = exp((0.311 * var_cell__V) + 24.640530009999999); // dimensionless
        const double var_t497 = 1.0 + var_t496; // dimensionless
        const double var_t498 = 1.0 / var_t497; // dimensionless
        const double var_t502 = ((-127140.0) * var_t486) - (3.4740000000000003e-05 * var_t489); // dimensionless
        const double var_t505 = pow(var_t497, 2.0); // dimensionless
        const double var_t511 = var_t441 ? (((((((-31073.016) * var_t486) + (1.5254334000000001e-06 * var_t489)) * var_t492) * var_t498) + (var_t502 * var_t498)) - ((((0.311 * var_t502) * var_t492) / var_t505) * var_t496)) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t515 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t518 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919950000001); // dimensionless
        const double var_t519 = 1.0 + var_t518; // dimensionless
        const double var_t523 = pow(var_t519, 2.0); // dimensionless
        const double var_t530 = exp((-2.5349999990000002e-07) * var_cell__V); // dimensionless
        const double var_t532 = exp((-var_t402) - 3.2000000000000002); // dimensionless
        const double var_t533 = 1.0 + var_t532; // dimensionless
        const double var_t537 = pow(var_t533, 2.0); // dimensionless
        const double var_t543 = (var_cell__V <= (-40.0)) ? ((((-0.001275024) * var_t515) / var_t519) + (((0.016701359999999998 * var_t515) / var_t523) * var_t518)) : var_t447 ? ((((-7.604999998e-08) * var_t530) / var_t533) + (((0.029999999999999999 * var_t530) / var_t537) * var_t532)) : NAN; // dimensionless
        const double var_t547 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t550 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t557 = exp((0.311 * var_cell__V) + 24.640529999999998); // dimensionless
        const double var_t561 = var_t470 ? (((((-127140.0) * var_t547) - (3.4740000000000003e-05 * var_t550)) * (var_cell__V + 37.780000000000001)) / (1.0 + var_t557)) : 0.0; // dimensionless
        const double var_t563 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t566 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919999999997); // dimensionless
        const double var_t572 = exp((-2.5349999999999999e-07) * var_cell__V); // dimensionless
        const double var_t574 = exp((-var_t431) - 3.2000000000000002); // dimensionless
        const double var_t579 = var_t470 ? ((0.1212 * var_t563) / (1.0 + var_t566)) : ((0.29999999999999999 * var_t572) / (1.0 + var_t574)); // dimensionless
        const double var_t582 = 1.0 / var_ICaL__s6; // dimensionless
        const double var_t584 = exp(((-var_cell__V) + var_ICaL__vth) * var_t582); // dimensionless
        const double var_t585 = 1.0 + var_t584; // dimensionless
        const double var_t586 = pow(var_t585, 2.0); // dimensionless
        const double var_t587 = 1.0 / var_t586; // dimensionless
        const double var_t588 = 1.0 / var_ICaL__taupo; // dimensionless
        const double var_t593 = var_t587 * var_t582; // dimensionless
        const double var_t594 = var_t584 * var_t588; // dimensionless
        const double var_t596 = (var_t593 * var_t594) * var_ICaL__c1; // dimensionless
        const double var_t598 = 1.0 / var_t585; // dimensionless
        const double var_t599 = 1.0 - var_t598; // dimensionless
        const double var_t600 = var_t599 * var_t588; // dimensionless
        const double var_t601 = pow(var_ICaL__cat, 2.0); // dimensionless
        const double var_t602 = var_t601 * var_ICaL__cat; // dimensionless
        const double var_t603 = pow(var_Ca__Ca_dyad, 2.0); // dimensionless
        const double var_t604 = var_t603 * var_Ca__Ca_dyad; // dimensionless
        const double var_t607 = 1.0 + (var_t602 / var_t604); // dimensionless
        const double var_t608 = 1.0 / var_t607; // dimensionless
        const double var_t611 = var_t598 * var_t588; // dimensionless
        const double var_t615 = pow(var_t607, 2.0); // dimensionless
        const double var_t616 = 1.0 / var_t615; // dimensionless
        const double var_t618 = pow(var_t603, 2.0); // dimensionless
        const double var_t619 = 1.0 / var_t618; // dimensionless
        const double var_t622 = (((0.072503999999999999 * var_t616) * var_t602) * var_t619) * var_ICaL__c1; // dimensionless
        const double var_t624 = 1.0 / var_ICaL__syr; // dimensionless
        const double var_t626 = exp(((-var_cell__V) + var_ICaL__vyr) * var_t624); // dimensionless
        const double var_t627 = 1.0 + var_t626; // dimensionless
        const double var_t628 = pow(var_t627, 2.0); // dimensionless
        const double var_t629 = 1.0 / var_t628; // dimensionless
        const double var_t630 = var_t629 * var_t624; // dimensionless
        const double var_t632 = exp(0.064102564099999995 * var_cell__V); // dimensionless
        const double var_t633 = 4954.0 * var_t632; // dimensionless
        const double var_t634 = pow(var_ICaL__cpt, 2.0); // dimensionless
        const double var_t635 = pow(var_t634, 2.0); // dimensionless
        const double var_t636 = 1.0 / var_t635; // dimensionless
        const double var_t638 = 1.0 + (var_t618 * var_t636); // dimensionless
        const double var_t640 = var_ICaL__tca / var_t638; // dimensionless
        const double var_t641 = (9.9000000000000004 + var_t633) - var_t640; // dimensionless
        const double var_t643 = 1.0 / var_ICaL__sy; // dimensionless
        const double var_t645 = exp(((-var_cell__V) + var_ICaL__vy) * var_t643); // dimensionless
        const double var_t646 = 1.0 + var_t645; // dimensionless
        const double var_t648 = 1.0 - (1.0 / var_t646); // dimensionless
        const double var_t650 = ((var_t641 * var_t648) + var_t640) + 0.10000000000000001; // dimensionless
        const double var_t651 = 1.0 / var_t650; // dimensionless
        const double var_t652 = var_t626 * var_t651; // dimensionless
        const double var_t655 = 1.0 / var_t627; // dimensionless
        const double var_t656 = 1.0 - var_t655; // dimensionless
        const double var_t657 = pow(var_t650, 2.0); // dimensionless
        const double var_t658 = 1.0 / var_t657; // dimensionless
        const double var_t659 = var_t656 * var_t658; // dimensionless
        const double var_t661 = (317.56410260000001 * var_t632) * var_t648; // dimensionless
        const double var_t662 = pow(var_t646, 2.0); // dimensionless
        const double var_t663 = 1.0 / var_t662; // dimensionless
        const double var_t665 = var_t643 * var_t645; // dimensionless
        const double var_t667 = var_t661 - ((var_t641 * var_t663) * var_t665); // dimensionless
        const double var_t670 = (-440.0) + var_t633; // dimensionless
        const double var_t672 = (var_t670 * var_t648) + 450.0; // dimensionless
        const double var_t673 = 1.0 / var_t672; // dimensionless
        const double var_t677 = pow(var_t672, 2.0); // dimensionless
        const double var_t678 = 1.0 / var_t677; // dimensionless
        const double var_t679 = var_t656 * var_t678; // dimensionless
        const double var_t682 = var_t661 - ((var_t670 * var_t663) * var_t665); // dimensionless
        const double var_t685 = var_t608 * var_t629; // dimensionless
        const double var_t689 = var_t608 * var_t655; // dimensionless
        const double var_t692 = var_t629 * var_t673; // dimensionless
        const double var_t693 = var_t624 * var_t626; // dimensionless
        const double var_t694 = var_t692 * var_t693; // dimensionless
        const double var_t695 = var_t655 * var_t678; // dimensionless
        const double var_t701 = var_t689 * var_t651; // dimensionless
        const double var_t702 = var_t655 * var_t673; // dimensionless
        const double var_t704 = var_t656 * var_t651; // dimensionless
        const double var_t705 = var_t656 * var_t673; // dimensionless
        const double var_t706 = pow(var_t638, 2.0); // dimensionless
        const double var_t708 = var_ICaL__tca / var_t706; // dimensionless
        const double var_t709 = var_t604 * var_t636; // dimensionless
        const double var_t713 = ((var_t708 * var_t709) * var_t648) - (var_t708 * var_t709); // dimensionless
        const double var_t715 = ((4.0 * var_t659) * var_ICaL__xi2ca) * var_t713; // dimensionless
        const double var_t716 = var_t616 * var_t655; // dimensionless
        const double var_t727 = 1.0 / var_ICaL__sx; // dimensionless
        const double var_t729 = exp(((-var_cell__V) + var_ICaL__vx) * var_t727); // dimensionless
        const double var_t730 = 1.0 + var_t729; // dimensionless
        const double var_t731 = pow(var_t730, 2.0); // dimensionless
        const double var_t733 = (1.0 / var_t731) * var_t727; // dimensionless
        const double var_t734 = 1.0 / var_ICaL__tau3; // dimensionless
        const double var_t735 = var_t729 * var_t734; // dimensionless
        const double var_t737 = (var_t733 * var_t735) * var_t598; // dimensionless
        const double var_t738 = 1.0 / var_t599; // dimensionless
        const double var_t739 = 1.0 / var_ICaL__k2; // dimensionless
        const double var_t740 = var_t738 * var_t739; // dimensionless
        const double var_t741 = var_t656 * var_t627; // dimensionless
        const double var_t748 = (1.0 - (1.0 / var_t730)) * var_t734; // dimensionless
        const double var_t749 = var_t587 * var_t738; // dimensionless
        const double var_t754 = ((var_t741 * var_ICaL__xi2ca) * var_t582) * var_t584; // dimensionless
        const double var_t759 = pow(var_t599, 2.0); // dimensionless
        const double var_t761 = ((1.0 / var_t586) / var_t585) / var_t759; // dimensionless
        const double var_t766 = var_t598 * var_t738; // dimensionless
        const double var_t767 = var_t748 * var_t766; // dimensionless
        const double var_t768 = var_t739 * var_t655; // dimensionless
        const double var_t769 = var_t693 * var_ICaL__xi2ca; // dimensionless
        const double var_t773 = var_t739 * var_t656; // dimensionless
        const double var_t778 = (var_t733 * var_t735) * var_ICaL__xi1ca; // dimensionless
        const double var_t781 = 0.018268800000000002 * var_t608; // dimensionless
        const double var_t782 = 1.0 / var_ICaL__r2; // dimensionless
        const double var_t790 = (((0.024167999999999999 * var_t748) * var_t598) * var_t740) * var_t741; // dimensionless
        const double var_t797 = var_t738 * var_ICaL__k1t; // dimensionless
        const double var_t798 = 1.0 / var_ICaL__k2t; // dimensionless
        const double var_t804 = (var_t748 * var_t749) * var_ICaL__k1t; // dimensionless
        const double var_t805 = var_t798 * var_t656; // dimensionless
        const double var_t806 = var_t805 * var_t627; // dimensionless
        const double var_t809 = ((var_t806 * var_ICaL__xi2ba) * var_t582) * var_t584; // dimensionless
        const double var_t812 = (var_t748 * var_t761) * var_ICaL__k1t; // dimensionless
        const double var_t815 = (var_t748 * var_t766) * var_ICaL__k1t; // dimensionless
        const double var_t817 = var_t693 * var_ICaL__xi2ba; // dimensionless
        const double var_t823 = (var_t733 * var_t735) * var_ICaL__xi1ba; // dimensionless
        const double var_t832 = var_ICaL__k1t * var_t798; // dimensionless
        const double var_t834 = (var_t767 * var_t832) * var_t741; // dimensionless
        const double var_t838 = (var_ICaL__c2 * var_t624) * var_t626; // dimensionless
        const double var_t840 = var_t658 * var_ICaL__c2; // dimensionless
        const double var_t852 = (var_t627 * var_t582) * var_t584; // dimensionless
        const double var_t853 = var_t773 * var_t852; // dimensionless
        const double var_t883 = var_t805 * var_t852; // dimensionless
        const double var_t900 = exp(((-0.1333333333) * var_cell__V) - 6.6666666650000002); // dimensionless
        const double var_t901 = 1.0 + var_t900; // dimensionless
        const double var_t902 = pow(var_t901, 2.0); // dimensionless
        const double var_t905 = var_cell__V + 7.0; // dimensionless
        const double var_t906 = fabs(var_t905); // dimensionless
        const double var_t910 = exp(((-0.123) * var_cell__V) - 0.86099999999999999); // dimensionless
        const double var_t915 = (0.001 < var_t906) ? ((0.0013799999999999999 * var_t905) / (1.0 - var_t910)) : 0.0112195122; // dimensionless
        const double var_t916 = var_cell__V + 10.0; // dimensionless
        const double var_t917 = fabs(var_t916); // dimensionless
        const double var_t921 = exp((0.14499999999999999 * var_cell__V) + 1.45); // dimensionless
        const double var_t926 = (0.001 < var_t917) ? ((0.00060999999999999997 * var_t916) / (var_t921 - 1.0)) : 0.0042068965520000003; // dimensionless
        const double var_t927 = var_t915 + var_t926; // dimensionless
        const double var_t935 = exp(((-0.123) * var_cell__V) - 0.86099999999999999); // dimensionless
        const double var_t937 = 1.0 - (1.0 * var_t935); // dimensionless
        const double var_t941 = pow(var_t937, 2.0); // dimensionless
        const double var_t946 = (0.0013799999999999999 / var_t937) - (((0.00016974000000000001 * (var_cell__V + 7.0)) / var_t941) * var_t935); // dimensionless
        const double var_t951 = (var_cell__V <= (-7.0010000000000003)) ? var_t946 : (var_cell__V <= (-6.9989999999999997)) ? 0.0 : ((-6.9989999999999997) < var_cell__V) ? var_t946 : NAN; // dimensionless
        const double var_t955 = exp((0.14499999999999999 * var_cell__V) + 1.45); // dimensionless
        const double var_t956 = var_t955 - 1.0; // dimensionless
        const double var_t960 = pow(var_t956, 2.0); // dimensionless
        const double var_t965 = (0.00060999999999999997 / var_t956) - (((8.8449999999999995e-05 * (var_cell__V + 10.0)) / var_t960) * var_t955); // dimensionless
        const double var_t970 = (var_cell__V <= (-10.000999999999999)) ? var_t965 : (var_cell__V <= (-9.9990000000000006)) ? 0.0 : ((-9.9990000000000006) < var_cell__V) ? var_t965 : NAN; // dimensionless
        const double var_t976 = exp(((-0.059880239520000003) * var_cell__V) + 0.089820359279999998); // dimensionless
        const double var_t977 = 1.0 + var_t976; // dimensionless
        const double var_t978 = pow(var_t977, 2.0); // dimensionless
        const double var_t981 = var_cell__V + 30.0; // dimensionless
        const double var_t982 = fabs(var_t981); // dimensionless
        const double var_t986 = exp(((-0.14799999999999999) * var_cell__V) - 4.4400000000000004); // dimensionless
        const double var_t993 = exp((0.068699999999999997 * var_cell__V) + 2.0609999999999999); // dimensionless
        const double var_t1000 = (var_t982 < 0.01455604076) ? 417.9462527 : (1.0 / (((7.1899999999999999e-05 * var_t981) / (1.0 - var_t986)) + ((0.00013100000000000001 * var_t981) / (var_t993 - 1.0)))); // dimensionless
        const double var_t1001 = 1.0 / var_t1000; // dimensionless
        const double var_t1002 = ((1.0 / var_t978) * var_t976) * var_t1001; // dimensionless
        const double var_t1004 = 1.0 / var_t977; // dimensionless
        const double var_t1006 = pow(var_t1000, 2.0); // dimensionless
        const double var_t1007 = 1.0 / var_t1006; // dimensionless
        const double var_t1010 = var_cell__V + 30.0; // dimensionless
        const double var_t1013 = exp(((-0.14799999999999999) * var_cell__V) - 4.4400000000000004); // dimensionless
        const double var_t1015 = 1.0 - (1.0 * var_t1013); // dimensionless
        const double var_t1016 = 1.0 / var_t1015; // dimensionless
        const double var_t1021 = exp((0.068699999999999997 * var_cell__V) + 2.0609999999999999); // dimensionless
        const double var_t1022 = var_t1021 - 1.0; // dimensionless
        const double var_t1023 = 1.0 / var_t1022; // dimensionless
        const double var_t1027 = pow(((7.1899999999999999e-05 * var_t1010) * var_t1016) + ((0.00013100000000000001 * var_t1010) * var_t1023), 2.0); // dimensionless
        const double var_t1030 = pow(var_t1015, 2.0); // dimensionless
        const double var_t1036 = pow(var_t1022, 2.0); // dimensionless
        const double var_t1043 = (1.0 / var_t1027) * ((((7.1899999999999999e-05 * var_t1016) - (((1.0641200000000001e-05 * var_t1010) / var_t1030) * var_t1013)) + (0.00013100000000000001 * var_t1023)) - (((8.9996999999999996e-06 * var_t1010) / var_t1036) * var_t1021)); // dimensionless
        const double var_t1048 = (var_cell__V < (-30.014556039999999)) ? (-var_t1043) : (var_cell__V <= (-29.985443960000001)) ? 0.0 : ((-29.985443960000001) < var_cell__V) ? (-var_t1043) : NAN; // dimensionless
        const double var_t1059 = (((-1.0) / 15.0) * var_cell__V) - (1.0 / 5.0); // dimensionless
        const double var_t1060 = exp(var_t1059); // dimensionless
        const double var_t1061 = 1.0 + var_t1060; // dimensionless
        const double var_t1062 = pow(var_t1061, 2.0); // dimensionless
        const double var_t1064 = (1.0 / var_t1062) * var_t1060; // dimensionless
        const double var_t1065 = exp(-var_t1059); // dimensionless
        const double var_t1066 = 1.0 + var_t1065; // dimensionless
        const double var_t1069 = (9.0 / var_t1066) + 0.5; // dimensionless
        const double var_t1070 = 1.0 / var_t1069; // dimensionless
        const double var_t1073 = 1.0 / var_t1061; // dimensionless
        const double var_t1075 = pow(var_t1069, 2.0); // dimensionless
        const double var_t1078 = pow(var_t1066, 2.0); // dimensionless
        const double var_t1085 = exp(var_t103 + 6.0); // dimensionless
        const double var_t1086 = 1.0 + var_t1085; // dimensionless
        const double var_t1089 = (3000.0 / var_t1086) + 30.0; // dimensionless
        const double var_t1090 = 1.0 / var_t1089; // dimensionless
        const double var_t1094 = pow(var_t1089, 2.0); // dimensionless
        const double var_t1097 = pow(var_t1086, 2.0); // dimensionless
        const double var_t1103 = pow(var_cell__V, 2.0); // dimensionless
        const double var_t1105 = exp(((-1.0) / 900.0) * var_t1103); // dimensionless
        const double var_t1107 = (3.5 * var_t1105) + 1.5; // dimensionless
        const double var_t1108 = 1.0 / var_t1107; // dimensionless
        const double var_t1112 = pow(var_t1107, 2.0); // dimensionless
        const double var_t1119 = var_t113 + 1.0; // dimensionless
        const double var_t1120 = (1.0 / 20.0) / var_t1119; // dimensionless
        const double var_t1130 = 1.0 / var_Irel__taua; // dimensionless
        const double var_t1131 = var_Irel__gryr * var_t195; // dimensionless
        const double var_t1132 = Signum(var_t290); // dimensionless
        const double var_t1133 = var_t1132 * var_ICaL__pca; // dimensionless
        const double var_t1140 = Signum(var_t295); // dimensionless
        const double var_t1146 = var_t198 ? (((((((1.0 / 250.0) * var_t1133) * var_t199) * var_Ca__Ca_submem) * var_t134) * var_t135) * var_t203) : ((4.0 * var_t1140) * ((var_t216 + ((1.0 / 500.0) * var_t229)) - (2.0 * var_t236))); // dimensionless
        const double var_t1148 = exp((-var_Irel__ay) * var_t981); // dimensionless
        const double var_t1151 = 1.0 + var_t1148; // dimensionless
        const double var_t1152 = 1.0 / var_t1151; // dimensionless
        const double var_t1153 = var_t1152 * var_Ca__Ca_NSR; // dimensionless
        const double var_t1156 = (50.0 < var_Irel__Ca_JSR) && (var_Irel__Ca_JSR < var_Irel__cstar); // dimensionless
        const double var_t1158 = var_Irel__cstar <= var_Irel__Ca_JSR; // dimensionless
        const double var_t1163 = var_t1156 ? (var_Irel__Ca_JSR - 50.0) : var_t1158 ? (((var_Irel__av * var_Irel__Ca_JSR) + ((1.0 - var_Irel__av) * var_Irel__cstar)) - 50.0) : 0.0; // dimensionless
        const double var_t1164 = 1.0 / var_Irel__cstar; // dimensionless
        const double var_t1165 = var_t1163 * var_t1164; // dimensionless
        const double var_t1166 = var_t1153 * var_t1165; // dimensionless
        const double var_t1168 = fabs(var_t290); // dimensionless
        const double var_t1170 = fabs(var_t295); // dimensionless
        const double var_t1172 = var_t198 ? (2.0 * var_t1168) : (4.0 * var_t1170); // dimensionless
        const double var_t1175 = var_t1148 * var_t1152; // dimensionless
        const double var_t1177 = (var_Ca__Ca_NSR * var_t1163) * var_t1164; // dimensionless
        const double var_t1180 = pow(var_t1148, 2.0); // dimensionless
        const double var_t1183 = pow(var_t1151, 2.0); // dimensionless
        const double var_t1192 = ((var_Irel__gryr * var_t1172) * var_t1148) * var_t1166; // dimensionless
        const double var_t1195 = var_t1156 ? 1.0 : var_t1158 ? var_Irel__av : 0.0; // dimensionless
        const double var_t1196 = var_t1195 * var_t1164; // dimensionless
        const double var_t1200 = pow(var_Ileak_Iup_Ixfer__cup, 2.0); // dimensionless
        const double var_t1201 = var_t90 + var_t1200; // dimensionless
        const double var_t1202 = 1.0 / var_t1201; // dimensionless
        const double var_t1203 = (var_Ileak_Iup_Ixfer__vup * var_t90) * var_t1202; // dimensionless
        const double var_t1204 = pow(var_Ca__Ca_NSR, 2.0); // dimensionless
        const double var_t1205 = var_Ileak_Iup_Ixfer__gleak * var_t1204; // dimensionless
        const double var_t1206 = pow(var_Ileak_Iup_Ixfer__kj, 2.0); // dimensionless
        const double var_t1207 = var_t1204 + var_t1206; // dimensionless
        const double var_t1208 = 1.0 / var_t1207; // dimensionless
        const double var_t1210 = (16.667000000000002 * var_Ca__Ca_NSR) - var_Ca__Ca_i; // dimensionless
        const double var_t1211 = var_t1208 * var_t1210; // dimensionless
        const double var_t1212 = var_t1205 * var_t1211; // dimensionless
        const double var_t1214 = var_Irel__taur * (((-var_Irel__xir) + var_t1203) - var_t1212); // dimensionless
        const double var_t1215 = 1.0 / var_Ca__Ca_NSR; // dimensionless
        const double var_t1218 = 1.0 / var_Irel__taur; // dimensionless
        const double var_t1230 = var_t198 ? ((((1.0 / 500.0) * var_t1133) * var_Environment__F) * var_t203) : ((((((1.0 / 250.0) * var_t1140) * var_ICaL__pca) * var_cell__V) * var_t199) * var_t383); // dimensionless
        const double var_t1236 = ((2.0 * var_Ileak_Iup_Ixfer__vup) * var_Ca__Ca_i) * var_t1202; // dimensionless
        const double var_t1238 = pow(var_t1201, 2.0); // dimensionless
        const double var_t1241 = ((2.0 * var_Ileak_Iup_Ixfer__vup) * var_t91) / var_t1238; // dimensionless
        const double var_t1242 = var_t1205 * var_t1208; // dimensionless
        const double var_t1243 = (var_t1236 - var_t1241) + var_t1242; // dimensionless
        const double var_t1254 = pow(var_t1207, 2.0); // dimensionless
        const double var_t1260 = (((((-2.0) * var_Ileak_Iup_Ixfer__gleak) * var_Ca__Ca_NSR) * var_t1211) + (((((2.0 * var_Ileak_Iup_Ixfer__gleak) * var_t1204) * var_Ca__Ca_NSR) / var_t1254) * var_t1210)) - (16.667000000000002 * var_t1242); // dimensionless
        const double var_t1273 = 1.0 / var_cell__wca; // dimensionless
        const double var_t1281 = var_t286 * var_t1273; // dimensionless
        const double var_t1299 = var_t195 * var_Ca__Ca_NSR; // dimensionless
        const double var_t1300 = var_t1299 * var_t1165; // dimensionless
        const double var_t1303 = exp((-var_Irel__ax) * var_t981); // dimensionless
        const double var_t1304 = 1.0 + var_t1303; // dimensionless
        const double var_t1305 = 1.0 / var_t1304; // dimensionless
        const double var_t1306 = var_t1303 * var_t1305; // dimensionless
        const double var_t1309 = var_t1172 * var_Irel__gbarsr; // dimensionless
        const double var_t1314 = pow(var_t1303, 2.0); // dimensionless
        const double var_t1315 = pow(var_t1304, 2.0); // dimensionless
        const double var_t1321 = var_t195 * var_Irel__gdyad; // dimensionless
        const double var_t1324 = var_t1309 * var_t1306; // dimensionless
        const double var_t1327 = ((-var_t1177) * var_t1324) - (var_Irel__gdyad * var_t1172); // dimensionless
        const double var_t1330 = 1.0 / var_Ca__taups; // dimensionless
        const double var_t1339 = var_Ca__bcal * var_Ca__xkcal; // dimensionless
        const double var_t1340 = var_Ca__xkcal + var_Ca__Ca_submem; // dimensionless
        const double var_t1341 = pow(var_t1340, 2.0); // dimensionless
        const double var_t1344 = var_Ca__srmax * var_Ca__srkd; // dimensionless
        const double var_t1345 = var_Ca__srkd + var_Ca__Ca_submem; // dimensionless
        const double var_t1346 = pow(var_t1345, 2.0); // dimensionless
        const double var_t1349 = var_Ca__bmem * var_Ca__kmem; // dimensionless
        const double var_t1350 = var_Ca__kmem + var_Ca__Ca_submem; // dimensionless
        const double var_t1351 = pow(var_t1350, 2.0); // dimensionless
        const double var_t1354 = var_Ca__bsar * var_Ca__ksar; // dimensionless
        const double var_t1355 = var_Ca__ksar + var_Ca__Ca_submem; // dimensionless
        const double var_t1356 = pow(var_t1355, 2.0); // dimensionless
        const double var_t1359 = (((1.0 + (var_t1339 / var_t1341)) + (var_t1344 / var_t1346)) + (var_t1349 / var_t1351)) + (var_t1354 / var_t1356); // dimensionless
        const double var_t1360 = 1.0 / var_t1359; // dimensionless
        const double var_t1361 = var_ICaL__gca * var_t195; // dimensionless
        const double var_t1364 = var_INaCa__gNaCa * var_t128; // dimensionless
        const double var_t1375 = ((50.0 * var_t1360) * var_ICaL__gca) * var_t297; // dimensionless
        const double var_t1380 = var_t1364 * var_t184; // dimensionless
        const double var_t1381 = var_t156 * var_t342; // dimensionless
        const double var_t1387 = pow(var_t1359, 2.0); // dimensionless
        const double var_t1391 = 1.0 / var_Ca__taud; // dimensionless
        const double var_t1392 = (var_Ca__Ca_submem - var_Ca__Ca_i) * var_t1391; // dimensionless
        const double var_t1399 = var_Ca__xkon * var_Ca__Ca_submem; // dimensionless
        const double var_t1400 = var_Ca__btrop - var_Ca__trops; // dimensionless
        const double var_t1434 = var_Ca__xkon * var_t1400; // dimensionless
        const double var_t1440 = var_t1399 + var_Ca__xkoff; // dimensionless
        const double var_t1442 = var_Ca__xkcal + var_Ca__Ca_i; // dimensionless
        const double var_t1443 = pow(var_t1442, 2.0); // dimensionless
        const double var_t1446 = var_Ca__srkd + var_Ca__Ca_i; // dimensionless
        const double var_t1447 = pow(var_t1446, 2.0); // dimensionless
        const double var_t1450 = var_Ca__kmem + var_Ca__Ca_i; // dimensionless
        const double var_t1451 = pow(var_t1450, 2.0); // dimensionless
        const double var_t1454 = var_Ca__ksar + var_Ca__Ca_i; // dimensionless
        const double var_t1455 = pow(var_t1454, 2.0); // dimensionless
        const double var_t1458 = (((1.0 + (var_t1339 / var_t1443)) + (var_t1344 / var_t1447)) + (var_t1349 / var_t1451)) + (var_t1354 / var_t1455); // dimensionless
        const double var_t1459 = 1.0 / var_t1458; // dimensionless
        const double var_t1461 = pow(var_t1458, 2.0); // dimensionless
        const double var_t1463 = var_Ca__xkon * var_Ca__Ca_i; // dimensionless
        const double var_t1464 = var_Ca__btrop - var_Ca__tropi; // dimensionless
        const double var_t1483 = var_Ca__xkon * var_t1464; // dimensionless
        const double var_t1488 = var_t1463 + var_Ca__xkoff; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t274);
        IJth(rJacobian, 1, 0) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 2, 0) = var_chaste_interface__Environment__fake_dt * ((var_t420 * (1.0 - var_INa__xm)) + ((0.0072727272729999999 * var_t424) * var_INa__xm));
        IJth(rJacobian, 3, 0) = var_chaste_interface__Environment__fake_dt * ((var_t448 * (1.0 - var_INa__xh)) - (var_t467 * var_INa__xh));
        IJth(rJacobian, 4, 0) = var_chaste_interface__Environment__fake_dt * ((var_t511 * (1.0 - var_INa__xj)) - (var_t543 * var_INa__xj));
        IJth(rJacobian, 5, 0) = var_chaste_interface__Environment__fake_dt * (((((var_t587 * var_t588) * var_ICaL__c2) * var_t582) * var_t584) + var_t596);
        IJth(rJacobian, 6, 0) = var_chaste_interface__Environment__fake_dt * ((((((-var_t596) - ((var_t630 * var_t652) * var_ICaL__xi2ca)) - ((var_t659 * var_ICaL__xi2ca) * var_t667)) - (((var_t630 * var_t626) * var_t673) * var_ICaL__xi2ba)) - ((var_t679 * var_ICaL__xi2ba) * var_t682)) - ((((((((var_t685 * var_t651) * var_t624) * var_t626) - ((var_t689 * var_t658) * var_t667)) + var_t694) - (var_t695 * var_t682)) + (var_t593 * var_t594)) * var_ICaL__c2));
        IJth(rJacobian, 7, 0) = var_chaste_interface__Environment__fake_dt * ((((((((((-0.024167999999999999) * var_t737) * var_t740) * var_t741) * var_ICaL__xi2ca) + ((((0.024167999999999999 * var_t748) * var_t749) * var_t739) * var_t754)) + ((((0.024167999999999999 * var_t748) * var_t761) * var_t739) * var_t754)) - (((0.024167999999999999 * var_t767) * var_t768) * var_t769)) - (((0.024167999999999999 * var_t767) * var_t773) * var_t769)) + var_t778);
        IJth(rJacobian, 8, 0) = var_chaste_interface__Environment__fake_dt * ((((((((((-var_t737) * var_t797) * var_t798) * var_t741) * var_ICaL__xi2ba) + (var_t804 * var_t809)) + (var_t812 * var_t809)) - (((var_t815 * var_t798) * var_t655) * var_t817)) - ((var_t815 * var_t805) * var_t817)) + var_t823);
        IJth(rJacobian, 9, 0) = var_chaste_interface__Environment__fake_dt * ((((-var_t778) + ((var_t685 * var_t651) * var_t838)) - ((var_t689 * var_t840) * var_t667)) - (((((((((-var_t630) * var_t652) - (var_t659 * var_t667)) - (((((0.024167999999999999 * var_t733) * var_t735) * var_t766) * var_t773) * var_t627)) + (((0.024167999999999999 * var_t748) * var_t749) * var_t853)) + (((0.024167999999999999 * var_t748) * var_t761) * var_t853)) - (((0.024167999999999999 * var_t767) * var_t768) * var_t693)) - (((0.024167999999999999 * var_t767) * var_t773) * var_t693)) * var_ICaL__xi2ca));
        IJth(rJacobian, 10, 0) = var_chaste_interface__Environment__fake_dt * ((((-var_t823) + (var_t692 * var_t838)) - ((var_t695 * var_ICaL__c2) * var_t682)) - ((((((((-var_t694) - (var_t679 * var_t682)) - ((var_t737 * var_t797) * var_t806)) + (var_t804 * var_t883)) + (var_t812 * var_t883)) - ((((var_t767 * var_t832) * var_t655) * var_t624) * var_t626)) - ((((var_t767 * var_t832) * var_t656) * var_t624) * var_t626)) * var_ICaL__xi2ba));
        IJth(rJacobian, 11, 0) = var_chaste_interface__Environment__fake_dt * ((((0.1333333333 / var_t902) * var_t900) * var_t927) + (((1.0 / var_t901) - var_IKr__xr) * (var_t951 + var_t970)));
        IJth(rJacobian, 12, 0) = var_chaste_interface__Environment__fake_dt * ((0.059880239520000003 * var_t1002) - (((var_t1004 - var_IKs__xs1) * var_t1007) * var_t1048));
        IJth(rJacobian, 13, 0) = var_chaste_interface__Environment__fake_dt * ((0.014970059880000001 * var_t1002) - ((((1.0 / 4.0) * (var_t1004 - var_IKs__xs2)) * var_t1007) * var_t1048));
        IJth(rJacobian, 14, 0) = var_chaste_interface__Environment__fake_dt * ((((1.0 / 15.0) * var_t1064) * var_t1070) + (((((3.0 / 5.0) * (var_t1073 - var_Ito__xtos)) / var_t1075) / var_t1078) * var_t1065));
        IJth(rJacobian, 15, 0) = var_chaste_interface__Environment__fake_dt * (((((-1.0) / 10.0) * var_t109) * var_t1090) + ((((300.0 * (var_t113 - var_Ito__ytos)) / var_t1094) / var_t1097) * var_t1085));
        IJth(rJacobian, 16, 0) = var_chaste_interface__Environment__fake_dt * ((((1.0 / 15.0) * var_t1064) * var_t1108) + ((((0.007777777778 * (var_t1073 - var_Ito__xtof)) / var_t1112) * var_cell__V) * var_t1105));
        IJth(rJacobian, 17, 0) = var_chaste_interface__Environment__fake_dt * (((((-1.0) / 10.0) * var_t109) * var_t1120) + ((((1.0 / 200.0) * (var_t113 - var_Ito__ytof)) / pow(var_t1119, 2.0)) * var_t109));
        IJth(rJacobian, 19, 0) = var_chaste_interface__Environment__fake_dt * (((((var_t1131 * var_t1146) * var_t1148) * var_t1166) - ((((var_t1131 * var_t1172) * var_Irel__ay) * var_t1175) * var_t1177)) + ((((((var_t1131 * var_t1172) * var_t1180) / var_t1183) * var_Ca__Ca_NSR) * var_t1165) * var_Irel__ay));
        IJth(rJacobian, 20, 0) = var_chaste_interface__Environment__fake_dt * (((1.0 / 1000.0) * ((((-var_t5) + (3.0 * var_t273)) - (3.0 * var_t180)) - (0.39000000000000001 * var_t192))) * var_t1273);
        IJth(rJacobian, 21, 0) = var_chaste_interface__Environment__fake_dt * ((((((var_t1300 * var_t1146) * var_Irel__gbarsr) * var_t1306) - ((((var_t1300 * var_t1309) * var_Irel__ax) * var_t1303) * var_t1305)) + ((((var_t1300 * var_t1309) * var_t1314) / var_t1315) * var_Irel__ax)) + (var_t1321 * var_t1146));
        IJth(rJacobian, 22, 0) = var_chaste_interface__Environment__fake_dt * (var_t1360 * (((((-50.0) * var_t1361) * var_t239) + ((50.0 * var_t1364) * var_t179)) + ((((6.5 * var_t1364) * var_t184) * var_t187) * var_t191)));
        IJth(rJacobian, 0, 1) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (1000.0 * (((((((-0.29999999999999999) * var_t89) / var_t391) / var_t394) * var_IKs__xs1) * var_IKs__xs2) * var_t314)));
        IJth(rJacobian, 1, 1) = var_chaste_interface__Environment__fake_dt * (((((-2.0) / var_t1461) * ((((var_t1392 - var_t1203) + var_t1212) - (var_t1463 * var_t1464)) + (var_Ca__xkoff * var_Ca__tropi))) * ((((((-var_t1339) / var_t1443) / var_t1442) - ((var_t1344 / var_t1447) / var_t1446)) - ((var_t1349 / var_t1451) / var_t1450)) - ((var_t1354 / var_t1455) / var_t1454))) + (var_t1459 * (((((-var_t1391) - var_t1236) + var_t1241) - var_t1242) - var_t1483)));
        IJth(rJacobian, 2, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 3, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 4, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 5, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 6, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 7, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 8, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 9, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 10, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 11, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 12, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 13, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 14, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 15, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 16, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 17, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 18, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 19, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * ((var_Irel__xir * var_t1243) * var_t1215));
        IJth(rJacobian, 20, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 21, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 22, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * ((50.0 * var_t1360) * var_t1391));
        IJth(rJacobian, 23, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * var_t1243);
        IJth(rJacobian, 24, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * var_t1483);
        IJth(rJacobian, 25, 1) = var_chaste_interface__Environment__fake_dt * (1000.0 * 0.0);
        IJth(rJacobian, 0, 2) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-3.0) * var_t1) * var_INa__xj) * var_t2) * var_t281));
        IJth(rJacobian, 1, 2) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 2, 2) = var_chaste_interface__Environment__fake_dt * ((-var_t438) - (0.080000000000000002 * var_t424));
        IJth(rJacobian, 20, 2) = var_chaste_interface__Environment__fake_dt * (((((((-3.0) / 1000.0) * var_t1) * var_INa__xj) * var_t2) * var_t281) * var_t1273);
        IJth(rJacobian, 0, 3) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t285) * var_t286));
        IJth(rJacobian, 1, 3) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 3, 3) = var_chaste_interface__Environment__fake_dt * ((-var_t472) - var_t483);
        IJth(rJacobian, 20, 3) = var_chaste_interface__Environment__fake_dt * ((((-1.0) / 1000.0) * var_t285) * var_t1281);
        IJth(rJacobian, 0, 4) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t1) * var_t286));
        IJth(rJacobian, 1, 4) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 4, 4) = var_chaste_interface__Environment__fake_dt * ((-var_t561) - var_t579);
        IJth(rJacobian, 20, 4) = var_chaste_interface__Environment__fake_dt * ((((-1.0) / 1000.0) * var_t1) * var_t1281);
        IJth(rJacobian, 0, 5) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 5) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 5) = var_chaste_interface__Environment__fake_dt * (((((-var_ICaL__r2) - var_t600) - var_ICaL__r1) - var_ICaL__k1t) - (0.024167999999999999 * var_t608));
        IJth(rJacobian, 6, 5) = var_chaste_interface__Environment__fake_dt * (var_t600);
        IJth(rJacobian, 7, 5) = var_chaste_interface__Environment__fake_dt * (0.0058992000000000003 * var_t608);
        IJth(rJacobian, 8, 5) = var_chaste_interface__Environment__fake_dt * (var_ICaL__k1t - var_ICaL__s1t);
        IJth(rJacobian, 19, 5) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 5) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 5) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 6) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 6) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 6) = var_chaste_interface__Environment__fake_dt * (var_t611 - var_ICaL__r2);
        IJth(rJacobian, 6, 6) = var_chaste_interface__Environment__fake_dt * (((-var_t701) - var_t702) - var_t611);
        IJth(rJacobian, 7, 6) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        IJth(rJacobian, 8, 6) = var_chaste_interface__Environment__fake_dt * (-var_ICaL__s1t);
        IJth(rJacobian, 9, 6) = var_chaste_interface__Environment__fake_dt * (var_t701);
        IJth(rJacobian, 10, 6) = var_chaste_interface__Environment__fake_dt * (var_t702);
        IJth(rJacobian, 19, 6) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 6) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 6) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 7) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 7) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 7) = var_chaste_interface__Environment__fake_dt * (var_ICaL__k2 - var_ICaL__r2);
        IJth(rJacobian, 7, 7) = var_chaste_interface__Environment__fake_dt * ((((-var_t781) - var_t748) - var_ICaL__k2) - (((0.75590863949999998 * var_ICaL__r1) * var_t782) * var_ICaL__k2));
        IJth(rJacobian, 8, 7) = var_chaste_interface__Environment__fake_dt * (-var_ICaL__s1t);
        IJth(rJacobian, 9, 7) = var_chaste_interface__Environment__fake_dt * (var_t748);
        IJth(rJacobian, 19, 7) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 7) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 7) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 8) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 8) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 8) = var_chaste_interface__Environment__fake_dt * (var_ICaL__k2t - var_ICaL__r2);
        IJth(rJacobian, 7, 8) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        IJth(rJacobian, 8, 8) = var_chaste_interface__Environment__fake_dt * ((((-var_ICaL__s1t) - var_t748) - var_ICaL__k2t) - ((((var_ICaL__s1t * var_ICaL__r1) * var_t782) * var_ICaL__k2t) / var_ICaL__k1t));
        IJth(rJacobian, 10, 8) = var_chaste_interface__Environment__fake_dt * (var_t748);
        IJth(rJacobian, 19, 8) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 8) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 8) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 9) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 9) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 9) = var_chaste_interface__Environment__fake_dt * (-var_ICaL__r2);
        IJth(rJacobian, 6, 9) = var_chaste_interface__Environment__fake_dt * (var_t704);
        IJth(rJacobian, 7, 9) = var_chaste_interface__Environment__fake_dt * (var_t790 - var_t781);
        IJth(rJacobian, 8, 9) = var_chaste_interface__Environment__fake_dt * (-var_ICaL__s1t);
        IJth(rJacobian, 9, 9) = var_chaste_interface__Environment__fake_dt * ((-var_t704) - var_t790);
        IJth(rJacobian, 19, 9) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 9) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 9) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 10) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t299);
        IJth(rJacobian, 1, 10) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 10) = var_chaste_interface__Environment__fake_dt * (-var_ICaL__r2);
        IJth(rJacobian, 6, 10) = var_chaste_interface__Environment__fake_dt * (var_t705);
        IJth(rJacobian, 7, 10) = var_chaste_interface__Environment__fake_dt * (-var_t781);
        IJth(rJacobian, 8, 10) = var_chaste_interface__Environment__fake_dt * (var_t834 - var_ICaL__s1t);
        IJth(rJacobian, 10, 10) = var_chaste_interface__Environment__fake_dt * ((-var_t705) - var_t834);
        IJth(rJacobian, 19, 10) = var_chaste_interface__Environment__fake_dt * (-var_t1192);
        IJth(rJacobian, 21, 10) = var_chaste_interface__Environment__fake_dt * (var_t1327);
        IJth(rJacobian, 22, 10) = var_chaste_interface__Environment__fake_dt * (var_t1375);
        IJth(rJacobian, 0, 11) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-0.43033148290000001) * var_t71) * var_t6) * var_t85) * var_t44));
        IJth(rJacobian, 1, 11) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 11, 11) = var_chaste_interface__Environment__fake_dt * (-var_t927);
        IJth(rJacobian, 0, 12) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t89) * var_t97) * var_IKs__xs2) * var_t314));
        IJth(rJacobian, 1, 12) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 12, 12) = var_chaste_interface__Environment__fake_dt * (-var_t1001);
        IJth(rJacobian, 0, 13) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t89) * var_t98) * var_t314));
        IJth(rJacobian, 1, 13) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 13, 13) = var_chaste_interface__Environment__fake_dt * (((-1.0) / 4.0) * var_t1001);
        IJth(rJacobian, 0, 14) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t101) * var_t115) * var_t44));
        IJth(rJacobian, 1, 14) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 14, 14) = var_chaste_interface__Environment__fake_dt * (-var_t1070);
        IJth(rJacobian, 0, 15) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t101) * var_Ito__xtos) * var_t44));
        IJth(rJacobian, 1, 15) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 15, 15) = var_chaste_interface__Environment__fake_dt * (-var_t1090);
        IJth(rJacobian, 0, 16) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_Ito__gtof) * var_Ito__ytof) * var_t44));
        IJth(rJacobian, 1, 16) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 16, 16) = var_chaste_interface__Environment__fake_dt * (-var_t1108);
        IJth(rJacobian, 0, 17) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t118) * var_t44));
        IJth(rJacobian, 1, 17) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 17, 17) = var_chaste_interface__Environment__fake_dt * (-var_t1120);
        IJth(rJacobian, 1, 18) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 18, 18) = var_chaste_interface__Environment__fake_dt * (-var_t1130);
        IJth(rJacobian, 19, 18) = var_chaste_interface__Environment__fake_dt * ((((var_t1131 * var_t1172) * var_t1148) * var_t1153) * var_t1196);
        IJth(rJacobian, 21, 18) = var_chaste_interface__Environment__fake_dt * ((var_t1299 * var_t1196) * var_t1324);
        IJth(rJacobian, 1, 19) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 19, 19) = var_chaste_interface__Environment__fake_dt * (((-(1.0 - (var_t1214 * var_t1215))) * var_t1218) - (var_Irel__xir * var_t1215));
        IJth(rJacobian, 22, 19) = var_chaste_interface__Environment__fake_dt * (50.0 * var_t1360);
        IJth(rJacobian, 23, 19) = var_chaste_interface__Environment__fake_dt * (-1.0);
        IJth(rJacobian, 0, 20) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t328) - ((((var_t100 * var_t10) * var_Environment__T) * var_t309) * var_reversal_potentials__prNaK)) - (3.0 * var_t338)) + var_t350) - var_t354) + var_t360));
        IJth(rJacobian, 1, 20) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 20, 20) = var_chaste_interface__Environment__fake_dt * (((1.0 / 1000.0) * (((((-var_t328) - (3.0 * var_t354)) + (3.0 * var_t360)) - (9.0 * var_t338)) + (3.0 * var_t350))) * var_t1273);
        IJth(rJacobian, 22, 20) = var_chaste_interface__Environment__fake_dt * (var_t1360 * ((((150.0 * var_t1364) * var_t130) * var_t337) - (((150.0 * var_t1380) * var_t1381) * var_t347)));
        IJth(rJacobian, 1, 21) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 5, 21) = var_chaste_interface__Environment__fake_dt * (-var_t622);
        IJth(rJacobian, 6, 21) = var_chaste_interface__Environment__fake_dt * ((-var_t715) - ((((((3.0 * var_t716) * var_t651) * var_t602) * var_t619) - (((4.0 * var_t689) * var_t658) * var_t713)) * var_ICaL__c2));
        IJth(rJacobian, 7, 21) = var_chaste_interface__Environment__fake_dt * (var_t622 + ((((0.054806399999999998 * var_t616) * var_t195) * var_t602) * var_t619));
        IJth(rJacobian, 9, 21) = var_chaste_interface__Environment__fake_dt * (((((((3.0 * var_t716) * var_t651) * var_ICaL__c2) * var_t602) * var_t619) - (((4.0 * var_t689) * var_t840) * var_t713)) + var_t715);
        IJth(rJacobian, 21, 21) = var_chaste_interface__Environment__fake_dt * (-var_t1330);
        IJth(rJacobian, 0, 22) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-3.0) * var_t370) + ((1.0 / 1000.0) * var_t374)) + var_t380) - (((2.0 * var_t194) * var_t195) * var_t386)));
        IJth(rJacobian, 1, 22) = var_chaste_interface__Environment__fake_dt * (0.001 * (var_t1459 * var_t1391));
        IJth(rJacobian, 19, 22) = var_chaste_interface__Environment__fake_dt * (((var_t1131 * var_t1230) * var_t1148) * var_t1166);
        IJth(rJacobian, 20, 22) = var_chaste_interface__Environment__fake_dt * (((1.0 / 1000.0) * ((((-9.0) * var_t370) + ((3.0 / 1000.0) * var_t374)) + (3.0 * var_t380))) * var_t1273);
        IJth(rJacobian, 21, 22) = var_chaste_interface__Environment__fake_dt * (((((var_t1300 * var_t1230) * var_Irel__gbarsr) * var_t1306) + (var_t1321 * var_t1230)) + var_t1330);
        IJth(rJacobian, 22, 22) = var_chaste_interface__Environment__fake_dt * (((((-2.0) / var_t1387) * ((((((50.0 * var_Irel__xir) - (50.0 * var_t1392)) - ((50.0 * var_t1361) * var_t297)) + (((50.0 * var_t1364) * var_t340) * var_t178)) - (var_t1399 * var_t1400)) + (var_Ca__xkoff * var_Ca__trops))) * ((((((-var_t1339) / var_t1341) / var_t1340) - ((var_t1344 / var_t1346) / var_t1345)) - ((var_t1349 / var_t1351) / var_t1350)) - ((var_t1354 / var_t1356) / var_t1355))) + (var_t1360 * (((((((-50.0) * var_t1391) - ((50.0 * var_t1361) * var_t386)) + ((((150.0 * var_INaCa__gNaCa) * var_t363) * var_t184) * var_t369)) - ((((((1.0 / 20.0) * var_t1364) * var_t145) * var_t149) * var_t156) * var_t178)) - ((((1.0 / 20.0) * var_t1380) * var_t1381) * var_t377)) - var_t1434)));
        IJth(rJacobian, 25, 22) = var_chaste_interface__Environment__fake_dt * (var_t1434);
        IJth(rJacobian, 1, 23) = var_chaste_interface__Environment__fake_dt * (0.001 * ((-var_t1459) * var_t1260));
        IJth(rJacobian, 18, 23) = var_chaste_interface__Environment__fake_dt * (var_t1130);
        IJth(rJacobian, 19, 23) = var_chaste_interface__Environment__fake_dt * ((((var_t1131 * var_t1172) * var_t1175) * var_t1165) - ((var_Irel__xir * ((((-var_Irel__taur) * var_t1260) * var_t1215) + (var_t1214 / var_t1204))) * var_t1218));
        IJth(rJacobian, 21, 23) = var_chaste_interface__Environment__fake_dt * (((var_t195 * var_t1163) * var_t1164) * var_t1324);
        IJth(rJacobian, 23, 23) = var_chaste_interface__Environment__fake_dt * (var_t1260);
        IJth(rJacobian, 1, 24) = var_chaste_interface__Environment__fake_dt * (0.001 * (var_t1459 * var_t1488));
        IJth(rJacobian, 24, 24) = var_chaste_interface__Environment__fake_dt * (-var_t1488);
        IJth(rJacobian, 1, 25) = var_chaste_interface__Environment__fake_dt * (0.001 * 0.0);
        IJth(rJacobian, 22, 25) = var_chaste_interface__Environment__fake_dt * (var_t1360 * var_t1440);
        IJth(rJacobian, 25, 25) = var_chaste_interface__Environment__fake_dt * (-var_t1440);
    }
    
template<>
void OdeSystemInformation<Dynamicmahajan_2008FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "mahajan_shiferaw_model_2008";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87.169816169406);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000256752008084);

    // rY[2]:
    this->mVariableNames.push_back("INa__xm");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001075453357);

    // rY[3]:
    this->mVariableNames.push_back("INa__xh");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.990691306716);

    // rY[4]:
    this->mVariableNames.push_back("INa__xj");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993888937283);

    // rY[5]:
    this->mVariableNames.push_back("ICaL__c1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000018211252);

    // rY[6]:
    this->mVariableNames.push_back("ICaL__c2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.979322592773);

    // rY[7]:
    this->mVariableNames.push_back("ICaL__xi1ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001208153482);

    // rY[8]:
    this->mVariableNames.push_back("ICaL__xi1ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000033616596);

    // rY[9]:
    this->mVariableNames.push_back("ICaL__xi2ca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004173008466);

    // rY[10]:
    this->mVariableNames.push_back("ICaL__xi2ba");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015242594688);

    // rY[11]:
    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007074239331);

    // rY[12]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.048267587131);

    // rY[13]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.105468807033);

    // rY[14]:
    this->mVariableNames.push_back("Ito__xtos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00364776906);

    // rY[15]:
    this->mVariableNames.push_back("Ito__ytos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.174403618112);

    // rY[16]:
    this->mVariableNames.push_back("Ito__xtof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003643592594);

    // rY[17]:
    this->mVariableNames.push_back("Ito__ytof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.993331326442);

    // rY[18]:
    this->mVariableNames.push_back("Irel__Ca_JSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(97.505463697266);

    // rY[19]:
    this->mVariableNames.push_back("Irel__xir");
    this->mVariableUnits.push_back("uM_per_ms");
    this->mInitialConditions.push_back(0.006679257264);

    // rY[20]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(11.441712311614);

    // rY[21]:
    this->mVariableNames.push_back("Ca__Ca_dyad");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(1.716573130685);

    // rY[22]:
    this->mVariableNames.push_back("Ca__Ca_submem");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(0.226941113355);

    // rY[23]:
    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(104.450004990523);

    // rY[24]:
    this->mVariableNames.push_back("Ca__tropi");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(22.171689894953);

    // rY[25]:
    this->mVariableNames.push_back("Ca__trops");
    this->mVariableUnits.push_back("uM");
    this->mInitialConditions.push_back(19.864701949854);

    // mParameters[0]:
    this->mParameterNames.push_back("ScaleFactorGkr");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[1]:
    this->mParameterNames.push_back("ScaleFactorGks");
    this->mParameterUnits.push_back("dimensionless");
    
    // mParameters[2]:
    this->mParameterNames.push_back("ScaleFactorIto");
    this->mParameterUnits.push_back("dimensionless");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicmahajan_2008FromCellMLCvode)

#endif // CHASTE_CVODE
