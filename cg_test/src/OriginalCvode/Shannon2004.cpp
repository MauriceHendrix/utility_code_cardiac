#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: shannon_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:14:35 2020
//! 
//! <autogenerated>

#include "Shannon2004.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> DynamicShannon2004FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_start = 100.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 5.0; // millisecond
        const double var_cell__stim_amplitude = 9.5; // microA_per_microF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // microA_per_microF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double DynamicShannon2004FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    DynamicShannon2004FromCellMLCvode::DynamicShannon2004FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                39,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<DynamicShannon2004FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    DynamicShannon2004FromCellMLCvode::~DynamicShannon2004FromCellMLCvode()
    {
    }
    
    double DynamicShannon2004FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.737475e-4
        
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__Nao = var_model_parameters__Nao; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_reversal_potentials__F = var_model_parameters__F; // coulomb_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__E_Na_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_jct); // millivolt
        const double var_INa__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__openProb = pow(var_INa__m, 3.0) * var_INa__h * var_INa__j; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INa__i_Na_jct = var_INa__Fx_Na_jct * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_reversal_potentials__E_Na_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_SL); // millivolt
        const double var_INa__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__i_Na_SL = var_INa__Fx_Na_SL * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_SL); // microA_per_microF
        const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_Nab_jct = var_INab__Fx_NaBk_jct * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_jct); // microA_per_microF
        const double var_INab__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__i_Nab_SL = var_INab__Fx_NaBk_SL * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_SL); // microA_per_microF
        const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaK__sigma = (exp(var_INaK__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.036499999999999998 * var_INaK__sigma * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__Ko = var_model_parameters__Ko; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaK__I_NaK_max = 1.9071899999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_SL, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaK__i_NaK_jct = (((var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_jct, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKr_Rr_gate__V = var_IKr__V; // millivolt
        const double var_IKr_Rr_gate__Rr = 1.0 / (1.0 + exp((33.0 + var_IKr_Rr_gate__V) / 22.399999999999999)); // dimensionless
        const double var_IKr__Rr = var_IKr_Rr_gate__Rr; // dimensionless
        const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
        const double var_IKr__Ko = var_model_parameters__Ko; // millimolar
        const double var_IKr__G_IKr = var_IKr__G_IKr_const * sqrt(var_IKr__Ko / 5.4000000000000004); // milliS_per_microF
        const double var_model_parameters__Ki = 135.0; // millimolar
        const double var_reversal_potentials__Ki = var_model_parameters__Ki; // millimolar
        const double var_reversal_potentials__Ko = var_model_parameters__Ko; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ko / var_reversal_potentials__Ki); // millivolt
        const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKr__i_Kr = var_IKr__G_IKr * var_IKr__Xr * var_IKr__Rr * (var_IKr__V - var_IKr__E_K); // microA_per_microF
        const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_IKs__pCa_jct = (-log10(var_IKs__Ca_jct / 1.0)) + 3.0; // dimensionless
        const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
        const double var_IKs__G_Ks_jct = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_jct) / 0.59999999999999998)))); // milliS_per_microF
        const double var_IKs__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_IKs__T = var_model_parameters__T; // kelvin
        const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
        const double var_IKs__F = var_model_parameters__F; // coulomb_per_mole
        const double var_IKs__Nao = var_model_parameters__Nao; // millimolar
        const double var_IKs__Ki = var_model_parameters__Ki; // millimolar
        const double var_IKs__Ko = var_model_parameters__Ko; // millimolar
        const double var_IKs__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_IKs__E_Ks = ((var_IKs__R * var_IKs__T) / var_IKs__F) * log((var_IKs__Ko + (var_IKs__pKNa * var_IKs__Nao)) / (var_IKs__Ki + (var_IKs__pKNa * var_IKs__Nai))); // millivolt
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__i_Ks_jct = var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
        const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
        const double var_IKs__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_IKs__pCa_SL = (-log10(var_IKs__Ca_SL / 1.0)) + 3.0; // dimensionless
        const double var_IKs__G_Ks_SL = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_SL) / 0.59999999999999998)))); // milliS_per_microF
        const double var_IKs__i_Ks_SL = var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
        const double var_IKs__i_Ks = var_IKs__i_Ks_jct + var_IKs__i_Ks_SL; // microA_per_microF
        const double var_IKp__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKp__g_Kp = 0.001; // milliS_per_microF
        const double var_IKp__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKp__i_Kp = (var_IKp__g_Kp * (var_IKp__V - var_IKp__E_K)) / (1.0 + exp(7.4880000000000004 - (var_IKp__V / 5.9800000000000004))); // microA_per_microF
        const double var_Itos__Y_tos = var_chaste_interface__Itos_Y_gate__Y_tos; // dimensionless
        const double var_Itos__X_tos = var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_Itos__R_tos = var_chaste_interface__Itos_R_gate__R_tos; // dimensionless
        const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
        const double var_Itos__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Itos__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itos__i_tos = var_Itos__G_tos * var_Itos__X_tos * (var_Itos__Y_tos + (0.5 * var_Itos__R_tos)) * (var_Itos__V - var_Itos__E_K); // microA_per_microF
        const double var_Itof__G_tof = 0.02; // milliS_per_microF
        const double var_Itof__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Itof__X_tof = var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_Itof__Y_tof = var_chaste_interface__Itof_Y_gate__Y_tof; // dimensionless
        const double var_Itof__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itof__i_tof = var_Itof__G_tof * var_Itof__X_tof * var_Itof__Y_tof * (var_Itof__V - var_Itof__E_K); // microA_per_microF
        const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
        const double var_IK1_K1_gate__V = var_IK1__V; // millivolt
        const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IK1_K1_gate__E_K = var_IK1__E_K; // millivolt
        const double var_IK1_K1_gate__beta_K1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 594.30999999999995))))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 4.7530000000000001))); // per_millisecond
        const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 59.215000000000003)))); // per_millisecond
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
        const double var_IK1__Ko = var_model_parameters__Ko; // millimolar
        const double var_IK1__G_K1 = 0.90000000000000002 * sqrt(var_IK1__Ko / 5.4000000000000004); // milliS_per_microF
        const double var_IK1__i_K1 = var_IK1__G_K1 * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K); // microA_per_microF
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__Cao = var_model_parameters__Cao; // millimolar
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaCa__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_INaCa__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaCa__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__temp_jct = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_jct = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_jct, 3.0)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (var_INaCa__T - 310.0) / 10.0); // dimensionless
        const double var_INaCa__i_NaCa_jct = (var_INaCa__Fx_NCX_jct * var_INaCa__V_max * var_INaCa__Ka_jct * var_INaCa__Q_NCX * var_INaCa__temp_jct) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_jct / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_jct * (1.0 + (var_INaCa__Ca_jct / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_jct, var_INaCa__HNa)) + (pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)); // microA_per_microF
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaCa__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_INaCa__temp_SL = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__Ka_SL = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_SL, 3.0)); // dimensionless
        const double var_INaCa__i_NaCa_SL = (var_INaCa__Fx_NCX_SL * var_INaCa__V_max * var_INaCa__Ka_SL * var_INaCa__Q_NCX * var_INaCa__temp_SL) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_SL / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_SL * (1.0 + (var_INaCa__Ca_SL / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_SL, var_INaCa__HNa)) + (pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)); // microA_per_microF
        const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_ICl_Ca__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
        const double var_ICl_Ca__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
        const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
        const double var_model_parameters__Cli = 15.0; // millimolar
        const double var_reversal_potentials__Cli = var_model_parameters__Cli; // millimolar
        const double var_model_parameters__Clo = 150.0; // millimolar
        const double var_reversal_potentials__Clo = var_model_parameters__Clo; // millimolar
        const double var_reversal_potentials__E_Cl = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cli / var_reversal_potentials__Clo); // millivolt
        const double var_ICl_Ca__E_Cl = var_reversal_potentials__E_Cl; // millivolt
        const double var_ICl_Ca__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
        const double var_ICl_Ca__i_Cl_Ca = var_ICl_Ca__G_Cl * (var_ICl_Ca__V - var_ICl_Ca__E_Cl) * ((var_ICl_Ca__Fx_Cl_jct / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_jct))) + (var_ICl_Ca__Fx_Cl_SL / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_SL)))); // microA_per_microF
        const double var_IClb__V = var_chaste_interface__cell__V; // millivolt
        const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
        const double var_IClb__E_Cl = var_reversal_potentials__E_Cl; // millivolt
        const double var_IClb__i_Clb = var_IClb__G_ClBk * (var_IClb__V - var_IClb__E_Cl); // microA_per_microF
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__Nao = var_model_parameters__Nao; // millimolar
        const double var_ICaL__Fx_ICaL_SL = 0.10000000000000001; // dimensionless
        const double var_ICaL__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_ICaL__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ICaL__d = var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_ICaL__f = var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_ICaL__Q10_CaL = 1.8; // dimensionless
        const double var_ICaL__Q_CaL = pow(var_ICaL__Q10_CaL, (var_ICaL__T - 310.0) / 10.0); // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // coulomb_per_mole
        const double var_ICaL__temp = (0.45000000000000001 * var_ICaL__d * var_ICaL__f * var_ICaL__Q_CaL * var_ICaL__V * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T); // coulomb_per_mole
        const double var_ICaL__gamma_Nao = 0.75; // dimensionless
        const double var_ICaL__gamma_Nai = 0.75; // dimensionless
        const double var_ICaL__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_SL = var_ICaL__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__fCa_SL = var_ICaL_fCa_gate__fCa_SL; // dimensionless
        const double var_ICaL__PNa = 1.4999999999999999e-08; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_SL * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 0.34100000000000003; // dimensionless
        const double var_ICaL__Cao = var_model_parameters__Cao; // millimolar
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_SL * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICaL__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_jct = var_ICaL__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__fCa_jct = var_ICaL_fCa_gate__fCa_jct; // dimensionless
        const double var_ICaL__Fx_ICaL_jct = 0.90000000000000002; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_jct * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_jct * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ki = var_model_parameters__Ki; // millimolar
        const double var_ICaL__PK = 2.7000000000000001e-07; // litre_per_farad_millisecond
        const double var_ICaL__Ko = var_model_parameters__Ko; // millimolar
        const double var_ICaL__gamma_Ko = 0.75; // dimensionless
        const double var_ICaL__gamma_Ki = 0.75; // dimensionless
        const double var_ICaL__i_CaL_K = (var_ICaL__temp * ((var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL) + (var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct)) * var_ICaL__PK * ((var_ICaL__gamma_Ki * var_ICaL__Ki * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Ko * var_ICaL__Ko))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + var_ICaL__i_CaL_K; // microA_per_microF
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_reversal_potentials__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_reversal_potentials__Cao = var_model_parameters__Cao; // millimolar
        const double var_reversal_potentials__E_Ca_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_SL); // millivolt
        const double var_ICab__E_Ca_SL = var_reversal_potentials__E_Ca_SL; // millivolt
        const double var_ICab__i_Cab_SL = var_ICab__G_CaBk * var_ICab__Fx_CaBk_SL * (var_ICab__V - var_ICab__E_Ca_SL); // microA_per_microF
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_reversal_potentials__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_reversal_potentials__E_Ca_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_jct); // millivolt
        const double var_ICab__E_Ca_jct = var_reversal_potentials__E_Ca_jct; // millivolt
        const double var_ICab__i_Cab_jct = var_ICab__G_CaBk * var_ICab__Fx_CaBk_jct * (var_ICab__V - var_ICab__E_Ca_jct); // microA_per_microF
        const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__T = var_model_parameters__T; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (var_ICap__T - 310.0) / 10.0); // dimensionless
        const double var_ICap__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICap__i_Cap_SL = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_SL) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_SL, var_ICap__H)); // microA_per_microF
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICap__i_Cap_jct = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_jct) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_jct, var_ICap__H)); // microA_per_microF
        const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
        const double var_chaste_interface__ICab__i_Cab = var_ICab__i_Cab; // microA_per_microF
        const double var_chaste_interface__IKp__i_Kp = var_IKp__i_Kp; // microA_per_microF
        const double var_chaste_interface__INab__i_Nab = var_INab__i_Nab; // microA_per_microF
        const double var_chaste_interface__Itos__i_tos = var_Itos__i_tos; // microA_per_microF
        const double var_chaste_interface__ICap__i_Cap = var_ICap__i_Cap; // microA_per_microF
        const double var_chaste_interface__INa__i_Na = var_INa__i_Na; // microA_per_microF
        const double var_chaste_interface__ICaL__i_CaL = var_ICaL__i_CaL; // microA_per_microF
        const double var_chaste_interface__IClb__i_Clb = var_IClb__i_Clb; // microA_per_microF
        const double var_chaste_interface__INaK__i_NaK = var_INaK__i_NaK; // microA_per_microF
        const double var_chaste_interface__IKr__i_Kr = var_IKr__i_Kr; // microA_per_microF
        const double var_chaste_interface__IK1__i_K1 = var_IK1__i_K1; // microA_per_microF
        const double var_chaste_interface__IKs__i_Ks = var_IKs__i_Ks; // microA_per_microF
        const double var_chaste_interface__INaCa__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
        const double var_chaste_interface__ICl_Ca__i_Cl_Ca = var_ICl_Ca__i_Cl_Ca; // microA_per_microF
        const double var_chaste_interface__Itof__i_tof = var_Itof__i_tof; // microA_per_microF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__INa__i_Na + var_chaste_interface__INab__i_Nab + var_chaste_interface__INaK__i_NaK + var_chaste_interface__IKr__i_Kr + var_chaste_interface__IKs__i_Ks + var_chaste_interface__Itos__i_tos + var_chaste_interface__Itof__i_tof + var_chaste_interface__IK1__i_K1 + var_chaste_interface__INaCa__i_NaCa + var_chaste_interface__ICl_Ca__i_Cl_Ca + var_chaste_interface__IClb__i_Clb + var_chaste_interface__ICaL__i_CaL + var_chaste_interface__ICab__i_Cab + var_chaste_interface__ICap__i_Cap + var_chaste_interface__IKp__i_Kp) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void DynamicShannon2004FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__Ca_buffer__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 2.143165e-3
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_reversal_potentials__Nao = var_model_parameters__Nao; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_reversal_potentials__F = var_model_parameters__F; // coulomb_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__E_Na_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_jct); // millivolt
        const double var_INa__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__openProb = pow(var_INa__m, 3.0) * var_INa__h * var_INa__j; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INa__i_Na_jct = var_INa__Fx_Na_jct * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_jct); // microA_per_microF
        const double var_reversal_potentials__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_reversal_potentials__E_Na_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Nao / var_reversal_potentials__Na_SL); // millivolt
        const double var_INa__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INa__i_Na_SL = var_INa__Fx_Na_SL * var_INa__G_INa * var_INa__openProb * (var_INa__V - var_INa__E_Na_SL); // microA_per_microF
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__E_Na_jct = var_reversal_potentials__E_Na_jct; // millivolt
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_Nab_jct = var_INab__Fx_NaBk_jct * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_jct); // microA_per_microF
        const double var_INab__E_Na_SL = var_reversal_potentials__E_Na_SL; // millivolt
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INab__i_Nab_SL = var_INab__Fx_NaBk_SL * var_INab__G_NaBk * (var_INab__V - var_INab__E_Na_SL); // microA_per_microF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaK__sigma = (exp(var_INaK__Nao / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.036499999999999998 * var_INaK__sigma * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__Ko = var_model_parameters__Ko; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaK__I_NaK_max = 1.9071899999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__i_NaK_SL = (((var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_SL, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_INaK__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaK__i_NaK_jct = (((var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max * var_INaK__f_NaK) / (1.0 + pow(var_INaK__Km_Nai / var_INaK__Na_jct, var_INaK__H_NaK))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__Km_Ko); // microA_per_microF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itos__Y_tos = var_chaste_interface__Itos_Y_gate__Y_tos; // dimensionless
        const double var_Itos__X_tos = var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_Itos__R_tos = var_chaste_interface__Itos_R_gate__R_tos; // dimensionless
        const double var_Itos__V = var_chaste_interface__cell__V; // millivolt
        const double var_Itof__X_tof = var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_Itof__Y_tof = var_chaste_interface__Itof_Y_gate__Y_tof; // dimensionless
        const double var_Itof__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__Cao = var_model_parameters__Cao; // millimolar
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_INaCa__Nao = var_model_parameters__Nao; // millimolar
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_INaCa__F = var_model_parameters__F; // coulomb_per_mole
        const double var_INaCa__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__temp_jct = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Ka_jct = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_jct, 3.0)); // dimensionless
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__Q_NCX = pow(var_INaCa__Q10_NCX, (var_INaCa__T - 310.0) / 10.0); // dimensionless
        const double var_INaCa__i_NaCa_jct = (var_INaCa__Fx_NCX_jct * var_INaCa__V_max * var_INaCa__Ka_jct * var_INaCa__Q_NCX * var_INaCa__temp_jct) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_jct / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_jct * (1.0 + (var_INaCa__Ca_jct / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_jct, var_INaCa__HNa)) + (pow(var_INaCa__Na_jct, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_jct)); // microA_per_microF
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_INaCa__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_INaCa__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_INaCa__temp_SL = ((exp((var_INaCa__eta * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) - (exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)) / (1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // millimolar4
        const double var_INaCa__Ka_SL = 1.0 / (1.0 + pow(var_INaCa__Kd_act / var_INaCa__Ca_SL, 3.0)); // dimensionless
        const double var_INaCa__i_NaCa_SL = (var_INaCa__Fx_NCX_SL * var_INaCa__V_max * var_INaCa__Ka_SL * var_INaCa__Q_NCX * var_INaCa__temp_SL) / ((var_INaCa__K_mCai * pow(var_INaCa__Nao, var_INaCa__HNa) * (1.0 + pow(var_INaCa__Na_SL / var_INaCa__K_mNai, var_INaCa__HNa))) + (pow(var_INaCa__K_mNao, var_INaCa__HNa) * var_INaCa__Ca_SL * (1.0 + (var_INaCa__Ca_SL / var_INaCa__K_mCai))) + (var_INaCa__K_mCao * pow(var_INaCa__Na_SL, var_INaCa__HNa)) + (pow(var_INaCa__Na_SL, var_INaCa__HNa) * var_INaCa__Cao) + (pow(var_INaCa__Nao, var_INaCa__HNa) * var_INaCa__Ca_SL)); // microA_per_microF
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__Nao = var_model_parameters__Nao; // millimolar
        const double var_ICaL__Fx_ICaL_SL = 0.10000000000000001; // dimensionless
        const double var_ICaL__R = var_model_parameters__R; // joule_per_kilomole_kelvin
        const double var_ICaL__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ICaL__d = var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_ICaL__f = var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_ICaL__Q10_CaL = 1.8; // dimensionless
        const double var_ICaL__Q_CaL = pow(var_ICaL__Q10_CaL, (var_ICaL__T - 310.0) / 10.0); // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // coulomb_per_mole
        const double var_ICaL__temp = (0.45000000000000001 * var_ICaL__d * var_ICaL__f * var_ICaL__Q_CaL * var_ICaL__V * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T); // coulomb_per_mole
        const double var_ICaL__gamma_Nao = 0.75; // dimensionless
        const double var_ICaL__gamma_Nai = 0.75; // dimensionless
        const double var_ICaL__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_SL = var_ICaL__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCa_SL = 1.0 - var_ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL__fCa_SL = var_ICaL_fCa_gate__fCa_SL; // dimensionless
        const double var_ICaL__PNa = 1.4999999999999999e-08; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Na_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_SL * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 0.34100000000000003; // dimensionless
        const double var_ICaL__Cao = var_model_parameters__Cao; // millimolar
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__i_CaL_Ca_SL = (var_ICaL__temp * var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_SL * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICaL__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_jct = var_ICaL__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCa_jct = 1.0 - var_ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL__fCa_jct = var_ICaL_fCa_gate__fCa_jct; // dimensionless
        const double var_ICaL__Fx_ICaL_jct = 0.90000000000000002; // dimensionless
        const double var_ICaL__i_CaL_Ca_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PCa * 4.0 * ((var_ICaL__gamma_Cai * var_ICaL__Ca_jct * exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Cao))) / (exp((2.0 * var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICaL__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ICaL__i_CaL_Na_jct = (var_ICaL__temp * var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct * var_ICaL__PNa * ((var_ICaL__gamma_Nai * var_ICaL__Na_jct * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Nao * var_ICaL__Nao))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_reversal_potentials__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_reversal_potentials__Cao = var_model_parameters__Cao; // millimolar
        const double var_reversal_potentials__E_Ca_SL = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_SL); // millivolt
        const double var_ICab__E_Ca_SL = var_reversal_potentials__E_Ca_SL; // millivolt
        const double var_ICab__i_Cab_SL = var_ICab__G_CaBk * var_ICab__Fx_CaBk_SL * (var_ICab__V - var_ICab__E_Ca_SL); // microA_per_microF
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_reversal_potentials__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_reversal_potentials__E_Ca_jct = ((var_reversal_potentials__R * var_reversal_potentials__T) / (2.0 * var_reversal_potentials__F)) * log(var_reversal_potentials__Cao / var_reversal_potentials__Ca_jct); // millivolt
        const double var_ICab__E_Ca_jct = var_reversal_potentials__E_Ca_jct; // millivolt
        const double var_ICab__i_Cab_jct = var_ICab__G_CaBk * var_ICab__Fx_CaBk_jct * (var_ICab__V - var_ICab__E_Ca_jct); // microA_per_microF
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__T = var_model_parameters__T; // kelvin
        const double var_ICap__Q_SLCaP = pow(var_ICap__Q10_SLCaP, (var_ICap__T - 310.0) / 10.0); // dimensionless
        const double var_ICap__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ICap__i_Cap_SL = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_SL) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_SL, var_ICap__H)); // microA_per_microF
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_ICap__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ICap__i_Cap_jct = (var_ICap__Q_SLCaP * var_ICap__V_maxAF * var_ICap__Fx_SLCaP_jct) / (1.0 + pow(var_ICap__Km / var_ICap__Ca_jct, var_ICap__H)); // microA_per_microF
        const double var_model_parameters__Mgi = 1.0; // millimolar
        const double var_model_parameters__Cm = 1.3809999999999999e-10; // farad
        const double var_model_parameters__cell_length = 100.0; // micrometre
        const double var_model_parameters__cell_radius = 10.25; // micrometre
        const double var_model_parameters__Vol_Cell = (3.1415926540000001 * pow(var_model_parameters__cell_radius / 1000.0, 2.0) * var_model_parameters__cell_length) / pow(1000.0, 3.0); // litre
        const double var_model_parameters__Vol_SR = 0.035000000000000003 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_SL = 0.02 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_jct = 0.053900000000000003 * 0.01 * var_model_parameters__Vol_Cell; // litre
        const double var_model_parameters__Vol_myo = 0.65000000000000002 * var_model_parameters__Vol_Cell; // litre
        const double var_INa_h_gate__V = var_INa__V; // millivolt
        const double var_INa_h_gate__alpha_h = (var_INa_h_gate__V < (-40.0)) ? (0.13500000000000001 * exp((80.0 + var_INa_h_gate__V) / (-6.7999999999999998))) : 0.0; // per_millisecond
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_h_gate__beta_h = (var_INa_h_gate__V < (-40.0)) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_INa_h_gate__V)) + (310000.0 * exp(0.34999999999999998 * var_INa_h_gate__V))) : (1.0 / (0.13 * (1.0 + exp((var_INa_h_gate__V + 10.66) / (-11.1))))); // per_millisecond
        const double var_INa_h_gate__d_h_d_environment__time = (var_INa_h_gate__alpha_h * (1.0 - var_INa_h_gate__h)) - (var_INa_h_gate__beta_h * var_INa_h_gate__h); // per_millisecond
        const double var_INa__INa_h_gate__d_h_d_environment__time = var_INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_INa_j_gate__V = var_INa__V; // millivolt
        const double var_INa_j_gate__beta_j = (var_INa_j_gate__V < (-40.0)) ? ((0.1212 * exp((-0.01052) * var_INa_j_gate__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa_j_gate__V + 40.140000000000001)))) : ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa_j_gate__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa_j_gate__V + 32.0)))); // per_millisecond
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INa_j_gate__alpha_j = (var_INa_j_gate__V < (-40.0)) ? ((((((-127140.0) * exp(0.24440000000000001 * var_INa_j_gate__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa_j_gate__V))) * (var_INa_j_gate__V + 37.780000000000001)) / 1.0) / (1.0 + exp(0.311 * (var_INa_j_gate__V + 79.230000000000004)))) : 0.0; // per_millisecond
        const double var_INa_j_gate__d_j_d_environment__time = (var_INa_j_gate__alpha_j * (1.0 - var_INa_j_gate__j)) - (var_INa_j_gate__beta_j * var_INa_j_gate__j); // per_millisecond
        const double var_INa__INa_j_gate__d_j_d_environment__time = var_INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_INa_m_gate__V = var_INa__V; // millivolt
        const double var_INa_m_gate__alpha_m = ((0.32000000000000001 * (var_INa_m_gate__V + 47.130000000000003)) / 1.0) / (1.0 - exp((-0.10000000000000001) * (var_INa_m_gate__V + 47.130000000000003))); // per_millisecond
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_m_gate__beta_m = 0.080000000000000002 * exp((-var_INa_m_gate__V) / 11.0); // per_millisecond
        const double var_INa_m_gate__d_m_d_environment__time = (var_INa_m_gate__alpha_m * (1.0 - var_INa_m_gate__m)) - (var_INa_m_gate__beta_m * var_INa_m_gate__m); // per_millisecond
        const double var_INa__INa_m_gate__d_m_d_environment__time = var_INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_IKr_Xr_gate__Xr = var_IKr__Xr; // dimensionless
        const double var_IKr_Xr_gate__V = var_IKr__V; // millivolt
        const double var_IKr_Xr_gate__tau_Xr = 1.0 / (((0.0013799999999999999 * (var_IKr_Xr_gate__V + 7.0)) / (1.0 - exp((-0.123) * (var_IKr_Xr_gate__V + 7.0)))) + ((0.00060999999999999997 * (var_IKr_Xr_gate__V + 10.0)) / (exp(0.14499999999999999 * (var_IKr_Xr_gate__V + 10.0)) - 1.0))); // millisecond
        const double var_IKr_Xr_gate__Xr_infinity = 1.0 / (1.0 + exp((-(50.0 + var_IKr_Xr_gate__V)) / 7.5)); // dimensionless
        const double var_IKr_Xr_gate__d_Xr_d_environment__time = (var_IKr_Xr_gate__Xr_infinity - var_IKr_Xr_gate__Xr) / var_IKr_Xr_gate__tau_Xr; // per_millisecond
        const double var_IKr__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double var_IKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_IKs_Xs_gate__V = var_IKs__V; // millivolt
        const double var_IKs_Xs_gate__tau_Xs = 1.0 / (((7.1899999999999999e-05 * (var_IKs_Xs_gate__V + 30.0)) / (1.0 - exp((-0.14799999999999999) * (var_IKs_Xs_gate__V + 30.0)))) + ((0.00013100000000000001 * (var_IKs_Xs_gate__V + 30.0)) / ((-1.0) + exp(0.068699999999999997 * (var_IKs_Xs_gate__V + 30.0))))); // millisecond
        const double var_IKs_Xs_gate__Xs_infinity = 1.0 / (1.0 + exp((-(var_IKs_Xs_gate__V - 1.5)) / 16.699999999999999)); // dimensionless
        const double var_IKs_Xs_gate__d_Xs_d_environment__time = (var_IKs_Xs_gate__Xs_infinity - var_IKs_Xs_gate__Xs) / var_IKs_Xs_gate__tau_Xs; // per_millisecond
        const double var_IKs__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_Itos_X_gate__V = var_Itos__V; // millivolt
        const double var_Itos_X_gate__X_tos_infinity = 1.0 / (1.0 + exp((-(var_Itos_X_gate__V + 3.0)) / 15.0)); // dimensionless
        const double var_Itos_X_gate__tau_X_tos = (9.0 / (1.0 + exp((var_Itos_X_gate__V + 3.0) / 15.0))) + 0.5; // millisecond
        const double var_Itos_X_gate__X_tos = var_Itos__X_tos; // dimensionless
        const double var_Itos_X_gate__d_X_tos_d_environment__time = (var_Itos_X_gate__X_tos_infinity - var_Itos_X_gate__X_tos) / var_Itos_X_gate__tau_X_tos; // per_millisecond
        const double var_Itos__Itos_X_gate__d_X_tos_d_environment__time = var_Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double var_Itos_Y_gate__V = var_Itos__V; // millivolt
        const double var_Itos_Y_gate__Y_tos_infinity = 1.0 / (1.0 + exp((var_Itos_Y_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itos_Y_gate__Y_tos = var_Itos__Y_tos; // dimensionless
        const double var_Itos_Y_gate__tau_Y_tos = (3000.0 / (1.0 + exp((var_Itos_Y_gate__V + 60.0) / 10.0))) + 30.0; // millisecond
        const double var_Itos_Y_gate__d_Y_tos_d_environment__time = (var_Itos_Y_gate__Y_tos_infinity - var_Itos_Y_gate__Y_tos) / var_Itos_Y_gate__tau_Y_tos; // per_millisecond
        const double var_Itos__Itos_Y_gate__d_Y_tos_d_environment__time = var_Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double var_Itos_R_gate__V = var_Itos__V; // millivolt
        const double var_Itos_R_gate__R_tos_infinity = 1.0 / (1.0 + exp((var_Itos_R_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itos_R_gate__tau_R_tos = (2800.0 / (1.0 + exp((var_Itos_R_gate__V + 60.0) / 10.0))) + 220.0; // millisecond
        const double var_Itos_R_gate__R_tos = var_Itos__R_tos; // dimensionless
        const double var_Itos_R_gate__d_R_tos_d_environment__time = (var_Itos_R_gate__R_tos_infinity - var_Itos_R_gate__R_tos) / var_Itos_R_gate__tau_R_tos; // per_millisecond
        const double var_Itos__Itos_R_gate__d_R_tos_d_environment__time = var_Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double var_Itof_X_gate__V = var_Itof__V; // millivolt
        const double var_Itof_X_gate__X_tof_infinity = 1.0 / (1.0 + exp((-(var_Itof_X_gate__V + 3.0)) / 15.0)); // dimensionless
        const double var_Itof_X_gate__X_tof = var_Itof__X_tof; // dimensionless
        const double var_Itof_X_gate__tau_X_tof = (3.5 * exp(-pow(var_Itof_X_gate__V / 30.0, 2.0))) + 1.5; // millisecond
        const double var_Itof_X_gate__d_X_tof_d_environment__time = (var_Itof_X_gate__X_tof_infinity - var_Itof_X_gate__X_tof) / var_Itof_X_gate__tau_X_tof; // per_millisecond
        const double var_Itof__Itof_X_gate__d_X_tof_d_environment__time = var_Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double var_Itof_Y_gate__V = var_Itof__V; // millivolt
        const double var_Itof_Y_gate__Y_tof_infinity = 1.0 / (1.0 + exp((var_Itof_Y_gate__V + 33.5) / 10.0)); // dimensionless
        const double var_Itof_Y_gate__tau_Y_tof = (20.0 / (1.0 + exp((var_Itof_Y_gate__V + 33.5) / 10.0))) + 20.0; // millisecond
        const double var_Itof_Y_gate__Y_tof = var_Itof__Y_tof; // dimensionless
        const double var_Itof_Y_gate__d_Y_tof_d_environment__time = (var_Itof_Y_gate__Y_tof_infinity - var_Itof_Y_gate__Y_tof) / var_Itof_Y_gate__tau_Y_tof; // per_millisecond
        const double var_Itof__Itof_Y_gate__d_Y_tof_d_environment__time = var_Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double var_ICaL_d_gate__d = var_ICaL__d; // dimensionless
        const double var_ICaL_d_gate__V = var_ICaL__V; // millivolt
        const double var_ICaL_d_gate__d_infinity = 1.0 / (1.0 + exp((-(var_ICaL_d_gate__V + 14.5)) / 6.0)); // dimensionless
        const double var_ICaL_d_gate__tau_d = (1.0 * var_ICaL_d_gate__d_infinity * (1.0 - exp((-(var_ICaL_d_gate__V + 14.5)) / 6.0))) / (0.035000000000000003 * (var_ICaL_d_gate__V + 14.5)); // millisecond
        const double var_ICaL_d_gate__d_d_d_environment__time = (var_ICaL_d_gate__d_infinity - var_ICaL_d_gate__d) / var_ICaL_d_gate__tau_d; // per_millisecond
        const double var_ICaL__ICaL_d_gate__d_d_d_environment__time = var_ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_ICaL_f_gate__f = var_ICaL__f; // dimensionless
        const double var_ICaL_f_gate__V = var_ICaL__V; // millivolt
        const double var_ICaL_f_gate__f_infinity = (1.0 / (1.0 + exp((var_ICaL_f_gate__V + 35.060000000000002) / 3.6000000000000001))) + (0.59999999999999998 / (1.0 + exp((50.0 - var_ICaL_f_gate__V) / 20.0))); // dimensionless
        const double var_ICaL_f_gate__tau_f = 1.0 / ((0.019699999999999999 * exp(-pow(0.033700000000000001 * (var_ICaL_f_gate__V + 14.5), 2.0))) + 0.02); // millisecond
        const double var_ICaL_f_gate__d_f_d_environment__time = (var_ICaL_f_gate__f_infinity - var_ICaL_f_gate__f) / var_ICaL_f_gate__tau_f; // per_millisecond
        const double var_ICaL__ICaL_f_gate__d_f_d_environment__time = var_ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_ICaL_fCa_gate__Ca_SL = var_ICaL__Ca_SL; // millimolar
        const double var_ICaL_fCa_gate__d_fCaB_SL_d_environment__time = (1.7 * var_ICaL_fCa_gate__Ca_SL * (1.0 - var_ICaL_fCa_gate__fCaB_SL)) - (0.011900000000000001 * var_ICaL_fCa_gate__fCaB_SL); // per_millisecond
        const double var_ICaL__ICaL_fCa_gate__d_fCaB_SL_d_environment__time = var_ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double var_ICaL_fCa_gate__Ca_jct = var_ICaL__Ca_jct; // millimolar
        const double var_ICaL_fCa_gate__d_fCaB_jct_d_environment__time = (1.7 * var_ICaL_fCa_gate__Ca_jct * (1.0 - var_ICaL_fCa_gate__fCaB_jct)) - (0.011900000000000001 * var_ICaL_fCa_gate__fCaB_jct); // per_millisecond
        const double var_ICaL__ICaL_fCa_gate__d_fCaB_jct_d_environment__time = var_ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double var_Jrel_SR__O = var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_Jrel_SR__ks = 25.0; // per_millisecond
        const double var_Jrel_SR__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Jrel_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jrel_SR__j_rel_SR = var_Jrel_SR__ks * var_Jrel_SR__O * (var_Jrel_SR__Ca_SR - var_Jrel_SR__Ca_jct); // millimolar_per_millisecond
        const double var_Jrel_SR__Max_SR = 15.0; // dimensionless
        const double var_Jrel_SR__Min_SR = 1.0; // dimensionless
        const double var_Jrel_SR__EC50_SR = 0.45000000000000001; // millimolar
        const double var_Jrel_SR__R = var_chaste_interface__Jrel_SR__R; // dimensionless
        const double var_Jrel_SR__I = var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__RI = ((1.0 - var_Jrel_SR__R) - var_Jrel_SR__O) - var_Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__koCa = 10.0; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kom = 0.059999999999999998; // per_millisecond
        const double var_Jrel_SR__kiCa = 0.5; // per_millimolar_per_millisecond
        const double var_Jrel_SR__kim = 0.0050000000000000001; // per_millisecond
        const double var_Jrel_SR__HSR = 2.5; // dimensionless
        const double var_Jrel_SR__kCaSR = var_Jrel_SR__Max_SR - ((var_Jrel_SR__Max_SR - var_Jrel_SR__Min_SR) / (1.0 + pow(var_Jrel_SR__EC50_SR / var_Jrel_SR__Ca_SR, var_Jrel_SR__HSR))); // dimensionless
        const double var_Jrel_SR__koSRCa = var_Jrel_SR__koCa / var_Jrel_SR__kCaSR; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kiSRCa = var_Jrel_SR__kiCa * var_Jrel_SR__kCaSR; // per_millimolar_per_millisecond
        const double var_Jrel_SR__d_R_d_environment__time = ((var_Jrel_SR__kim * var_Jrel_SR__RI) - (var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__R)) - ((var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__R) - (var_Jrel_SR__kom * var_Jrel_SR__O)); // per_millisecond
        const double var_Jrel_SR__d_I_d_environment__time = ((var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__O) - (var_Jrel_SR__kim * var_Jrel_SR__I)) - ((var_Jrel_SR__kom * var_Jrel_SR__I) - (var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__RI)); // per_millisecond
        const double var_Jrel_SR__d_O_d_environment__time = ((var_Jrel_SR__koSRCa * pow(var_Jrel_SR__Ca_jct, 2.0) * var_Jrel_SR__R) - (var_Jrel_SR__kom * var_Jrel_SR__O)) - ((var_Jrel_SR__kiSRCa * var_Jrel_SR__Ca_jct * var_Jrel_SR__O) - (var_Jrel_SR__kim * var_Jrel_SR__I)); // per_millisecond
        const double var_Jleak_SR__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Jleak_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jleak_SR__KSRleak = 5.3480000000000003e-06; // per_millisecond
        const double var_Jleak_SR__j_leak_SR = var_Jleak_SR__KSRleak * (var_Jleak_SR__Ca_SR - var_Jleak_SR__Ca_jct); // millimolar_per_millisecond
        const double var_Jpump_SR__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Jpump_SR__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_Jpump_SR__T = var_model_parameters__T; // kelvin
        const double var_Jpump_SR__Q10_SRCaP = 2.6000000000000001; // dimensionless
        const double var_Jpump_SR__Q_SRCaP = pow(var_Jpump_SR__Q10_SRCaP, (var_Jpump_SR__T - 310.0) / 10.0); // dimensionless
        const double var_Jpump_SR__Kmr = 1.7; // millimolar
        const double var_Jpump_SR__V_max = 0.0053114; // millimolar_per_millisecond
        const double var_Jpump_SR__Kmf = 0.00024600000000000002; // millimolar
        const double var_Jpump_SR__H = 1.7869999999999999; // dimensionless
        const double var_Jpump_SR__j_pump_SR = (var_Jpump_SR__Q_SRCaP * var_Jpump_SR__V_max * (pow(var_Jpump_SR__Cai / var_Jpump_SR__Kmf, var_Jpump_SR__H) - pow(var_Jpump_SR__Ca_SR / var_Jpump_SR__Kmr, var_Jpump_SR__H))) / (1.0 + pow(var_Jpump_SR__Cai / var_Jpump_SR__Kmf, var_Jpump_SR__H) + pow(var_Jpump_SR__Ca_SR / var_Jpump_SR__Kmr, var_Jpump_SR__H)); // millimolar_per_millisecond
        const double var_ion_diffusion__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_ion_diffusion__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_ion_diffusion__J_Na_jct_SL = (var_ion_diffusion__Na_jct - var_ion_diffusion__Na_SL) * 1.8312999999999999e-14; // millimole_per_millisecond
        const double var_ion_diffusion__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_ion_diffusion__J_Na_SL_myo = (var_ion_diffusion__Na_SL - var_ion_diffusion__Nai) * 1.6385999999999999e-12; // millimole_per_millisecond
        const double var_ion_diffusion__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_ion_diffusion__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_ion_diffusion__J_Ca_jct_SL = (var_ion_diffusion__Ca_jct - var_ion_diffusion__Ca_SL) * 8.2413000000000004e-13; // millimole_per_millisecond
        const double var_ion_diffusion__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_ion_diffusion__J_Ca_SL_myo = (var_ion_diffusion__Ca_SL - var_ion_diffusion__Cai) * 3.7243000000000002e-12; // millimole_per_millisecond
        const double var_Na_buffer__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_Na_buffer__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_Na_buffer__Na_SL_buf = var_chaste_interface__Na_buffer__Na_SL_buf; // millimolar
        const double var_Na_buffer__Na_jct_buf = var_chaste_interface__Na_buffer__Na_jct_buf; // millimolar
        const double var_Na_buffer__Bmax_SL = 1.6499999999999999; // millimolar
        const double var_Na_buffer__Bmax_jct = 7.5609999999999999; // millimolar
        const double var_Na_buffer__kon = 0.0001; // per_millimolar_per_millisecond
        const double var_Na_buffer__koff = 0.001; // per_millisecond
        const double var_Na_buffer__J_Na_jct_SL = var_ion_diffusion__J_Na_jct_SL; // millimole_per_millisecond
        const double var_Na_buffer__J_Na_SL_myo = var_ion_diffusion__J_Na_SL_myo; // millimole_per_millisecond
        const double var_Na_buffer__i_Na_jct = var_INa__i_Na_jct; // microA_per_microF
        const double var_Na_buffer__i_NaCa_jct = var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_Na_buffer__i_Nab_jct = var_INab__i_Nab_jct; // microA_per_microF
        const double var_Na_buffer__i_NaK_jct = var_INaK__i_NaK_jct; // microA_per_microF
        const double var_Na_buffer__i_CaL_Na_jct = var_ICaL__i_CaL_Na_jct; // microA_per_microF
        const double var_Na_buffer__i_Na_SL = var_INa__i_Na_SL; // microA_per_microF
        const double var_Na_buffer__i_NaCa_SL = var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_Na_buffer__i_Nab_SL = var_INab__i_Nab_SL; // microA_per_microF
        const double var_Na_buffer__i_NaK_SL = var_INaK__i_NaK_SL; // microA_per_microF
        const double var_Na_buffer__i_CaL_Na_SL = var_ICaL__i_CaL_Na_SL; // microA_per_microF
        const double var_Na_buffer__Vol_SL = var_model_parameters__Vol_SL; // litre
        const double var_Na_buffer__Vol_jct = var_model_parameters__Vol_jct; // litre
        const double var_Na_buffer__Vol_myo = var_model_parameters__Vol_myo; // litre
        const double var_Na_buffer__F = var_model_parameters__F; // coulomb_per_mole
        const double var_Na_buffer__Cm = var_model_parameters__Cm; // farad
        const double var_Na_buffer__dNa_jct_buf = (var_Na_buffer__kon * var_Na_buffer__Na_jct * (var_Na_buffer__Bmax_jct - var_Na_buffer__Na_jct_buf)) - (var_Na_buffer__koff * var_Na_buffer__Na_jct_buf); // millimolar_per_millisecond
        const double var_Na_buffer__dNa_SL_buf = (var_Na_buffer__kon * var_Na_buffer__Na_SL * (var_Na_buffer__Bmax_SL - var_Na_buffer__Na_SL_buf)) - (var_Na_buffer__koff * var_Na_buffer__Na_SL_buf); // millimolar_per_millisecond
        const double var_Na_buffer__d_Na_SL_d_environment__time = ((((-var_Na_buffer__Cm) * (var_Na_buffer__i_Na_SL + (3.0 * var_Na_buffer__i_NaCa_SL) + var_Na_buffer__i_Nab_SL + (3.0 * var_Na_buffer__i_NaK_SL) + var_Na_buffer__i_CaL_Na_SL)) / (var_Na_buffer__Vol_SL * var_Na_buffer__F)) + ((var_Na_buffer__J_Na_jct_SL - var_Na_buffer__J_Na_SL_myo) / var_Na_buffer__Vol_SL)) - var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_jct_d_environment__time = ((((-var_Na_buffer__Cm) * (var_Na_buffer__i_Na_jct + (3.0 * var_Na_buffer__i_NaCa_jct) + var_Na_buffer__i_Nab_jct + (3.0 * var_Na_buffer__i_NaK_jct) + var_Na_buffer__i_CaL_Na_jct)) / (var_Na_buffer__Vol_jct * var_Na_buffer__F)) - (var_Na_buffer__J_Na_jct_SL / var_Na_buffer__Vol_jct)) - var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_SL_buf_d_environment__time = var_Na_buffer__dNa_SL_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Na_jct_buf_d_environment__time = var_Na_buffer__dNa_jct_buf; // 'millimole per litre per millisecond'
        const double var_Na_buffer__d_Nai_d_environment__time = var_Na_buffer__J_Na_SL_myo / var_Na_buffer__Vol_myo; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Ca_buffer__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_Ca_buffer__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Ca_buffer__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_Ca_buffer__Mgi = var_model_parameters__Mgi; // millimolar
        const double var_Ca_buffer__Ca_SLB_SL = var_chaste_interface__Ca_buffer__Ca_SLB_SL; // millimolar
        const double var_Ca_buffer__Ca_SLB_jct = var_chaste_interface__Ca_buffer__Ca_SLB_jct; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_SL = var_chaste_interface__Ca_buffer__Ca_SLHigh_SL; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_jct = var_chaste_interface__Ca_buffer__Ca_SLHigh_jct; // millimolar
        const double var_Ca_buffer__Ca_Calsequestrin = var_chaste_interface__Ca_buffer__Ca_Calsequestrin; // millimolar
        const double var_Ca_buffer__Bmax_SLB_SL = 0.037400000000000003; // millimolar
        const double var_Ca_buffer__Bmax_SLB_jct = 0.0045999999999999999; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_SL = 0.0134; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_jct = 0.00165; // millimolar
        const double var_Ca_buffer__Bmax_Calsequestrin = 0.14000000000000001; // millimolar
        const double var_Ca_buffer__kon_SL = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__kon_Calsequestrin = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__koff_SLB = 1.3; // per_millisecond
        const double var_Ca_buffer__koff_SLHigh = 0.029999999999999999; // per_millisecond
        const double var_Ca_buffer__koff_Calsequestrin = 65.0; // per_millisecond
        const double var_Ca_buffer__i_CaL_Ca_jct = var_ICaL__i_CaL_Ca_jct; // microA_per_microF
        const double var_Ca_buffer__i_NaCa_jct = var_INaCa__i_NaCa_jct; // microA_per_microF
        const double var_Ca_buffer__i_Cab_jct = var_ICab__i_Cab_jct; // microA_per_microF
        const double var_Ca_buffer__i_Cap_jct = var_ICap__i_Cap_jct; // microA_per_microF
        const double var_Ca_buffer__i_CaL_Ca_SL = var_ICaL__i_CaL_Ca_SL; // microA_per_microF
        const double var_Ca_buffer__i_NaCa_SL = var_INaCa__i_NaCa_SL; // microA_per_microF
        const double var_Ca_buffer__i_Cab_SL = var_ICab__i_Cab_SL; // microA_per_microF
        const double var_Ca_buffer__i_Cap_SL = var_ICap__i_Cap_SL; // microA_per_microF
        const double var_Ca_buffer__j_pump_SR = var_Jpump_SR__j_pump_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__j_rel_SR = var_Jrel_SR__j_rel_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__j_leak_SR = var_Jleak_SR__j_leak_SR; // millimolar_per_millisecond
        const double var_Ca_buffer__J_Ca_jct_SL = var_ion_diffusion__J_Ca_jct_SL; // millimole_per_millisecond
        const double var_Ca_buffer__J_Ca_SL_myo = var_ion_diffusion__J_Ca_SL_myo; // millimole_per_millisecond
        const double var_Ca_buffer__Vol_SR = var_model_parameters__Vol_SR; // litre
        const double var_Ca_buffer__Vol_SL = var_model_parameters__Vol_SL; // litre
        const double var_Ca_buffer__Vol_jct = var_model_parameters__Vol_jct; // litre
        const double var_Ca_buffer__Vol_myo = var_model_parameters__Vol_myo; // litre
        const double var_Ca_buffer__F = var_model_parameters__F; // coulomb_per_mole
        const double var_Ca_buffer__Cm = var_model_parameters__Cm; // farad
        const double var_Ca_buffer__dCalsequestrin = (var_Ca_buffer__kon_Calsequestrin * var_Ca_buffer__Ca_SR * (((var_Ca_buffer__Bmax_Calsequestrin * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SR) - var_Ca_buffer__Ca_Calsequestrin)) - (var_Ca_buffer__koff_Calsequestrin * var_Ca_buffer__Ca_Calsequestrin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Myosin_Mg = 5.7000000000000003e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__Mgi = var_Ca_buffer__Mgi; // millimolar
        const double var_cytosolic_Ca_buffer__kon_Myosin_Mg = 0.015699999999999999; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Myosin = var_Ca_buffer__Ca_Myosin; // millimolar
        const double var_Ca_buffer__Mg_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_Myosin = var_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__dMg_Myosin = (var_cytosolic_Ca_buffer__kon_Myosin_Mg * var_cytosolic_Ca_buffer__Mgi * (var_cytosolic_Ca_buffer__Bmax_Myosin_Mg - (var_cytosolic_Ca_buffer__Ca_Myosin + var_cytosolic_Ca_buffer__Mg_Myosin))) - (var_cytosolic_Ca_buffer__koff_Myosin_Mg * var_cytosolic_Ca_buffer__Mg_Myosin); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg = 0.0030000000000000001; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_Ca_buffer__Mg_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg = 0.0033300000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg = (var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg * var_cytosolic_Ca_buffer__Mgi * (var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Mg - (var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg * var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Cai = var_Ca_buffer__Cai; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca = 2.3700000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca = 3.1999999999999999e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg = (var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca - (var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg))) - (var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca * var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Myosin_Ca = 13.800000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Myosin_Ca = 0.00046000000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_Myosin = (var_cytosolic_Ca_buffer__kon_Myosin_Ca * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_Myosin_Ca - (var_cytosolic_Ca_buffer__Ca_Myosin + var_cytosolic_Ca_buffer__Mg_Myosin))) - (var_cytosolic_Ca_buffer__koff_Myosin_Ca * var_cytosolic_Ca_buffer__Ca_Myosin); // millimolar_per_millisecond
        const double var_Ca_buffer__Ca_Calmodulin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Calmodulin = var_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Calmodulin = 0.23799999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Calmodulin = 34.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Calmodulin = 0.024; // millimolar
        const double var_cytosolic_Ca_buffer__dCa_Calmodulin = (var_cytosolic_Ca_buffer__kon_Calmodulin * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_Calmodulin - var_cytosolic_Ca_buffer__Ca_Calmodulin)) - (var_cytosolic_Ca_buffer__koff_Calmodulin * var_cytosolic_Ca_buffer__Ca_Calmodulin); // millimolar_per_millisecond
        const double var_Ca_buffer__Ca_TroponinC = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC = var_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC = 0.070000000000000007; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC = 32.700000000000003; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC = 0.019599999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_TroponinC = (var_cytosolic_Ca_buffer__kon_TroponinC * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_TroponinC - var_cytosolic_Ca_buffer__Ca_TroponinC)) - (var_cytosolic_Ca_buffer__koff_TroponinC * var_cytosolic_Ca_buffer__Ca_TroponinC); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_SRB = 0.059999999999999998; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_SRB = 0.017100000000000001; // millimolar
        const double var_Ca_buffer__Ca_SRB = var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_SRB = var_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__kon_SRB = 100.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_SRB = (var_cytosolic_Ca_buffer__kon_SRB * var_cytosolic_Ca_buffer__Cai * (var_cytosolic_Ca_buffer__Bmax_SRB - var_cytosolic_Ca_buffer__Ca_SRB)) - (var_cytosolic_Ca_buffer__koff_SRB * var_cytosolic_Ca_buffer__Ca_SRB); // millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound = var_cytosolic_Ca_buffer__dCa_TroponinC + var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg + var_cytosolic_Ca_buffer__dCa_Calmodulin + var_cytosolic_Ca_buffer__dCa_Myosin + var_cytosolic_Ca_buffer__dMg_Myosin + var_cytosolic_Ca_buffer__dCa_SRB; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_cytosol_tot_bound = var_cytosolic_Ca_buffer__dCa_cytosol_tot_bound; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_SL = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_SL * (((var_Ca_buffer__Bmax_SLB_SL * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SL) - var_Ca_buffer__Ca_SLB_SL)) - (var_Ca_buffer__koff_SLB * var_Ca_buffer__Ca_SLB_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLB_jct = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_jct * (((var_Ca_buffer__Bmax_SLB_jct * 0.10000000000000001 * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct) - var_Ca_buffer__Ca_SLB_jct)) - (var_Ca_buffer__koff_SLB * var_Ca_buffer__Ca_SLB_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_SL = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_SL * (((var_Ca_buffer__Bmax_SLHigh_SL * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SL) - var_Ca_buffer__Ca_SLHigh_SL)) - (var_Ca_buffer__koff_SLHigh * var_Ca_buffer__Ca_SLHigh_SL); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SLHigh_jct = (var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_jct * (((var_Ca_buffer__Bmax_SLHigh_jct * 0.10000000000000001 * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct) - var_Ca_buffer__Ca_SLHigh_jct)) - (var_Ca_buffer__koff_SLHigh * var_Ca_buffer__Ca_SLHigh_jct); // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_jct_tot_bound = var_Ca_buffer__dCa_SLB_jct + var_Ca_buffer__dCa_SLHigh_jct; // millimolar_per_millisecond
        const double var_Ca_buffer__dCa_SL_tot_bound = var_Ca_buffer__dCa_SLB_SL + var_Ca_buffer__dCa_SLHigh_SL; // millimolar_per_millisecond
        const double var_Ca_buffer__i_Ca_jct_tot = (var_Ca_buffer__i_CaL_Ca_jct - (2.0 * var_Ca_buffer__i_NaCa_jct)) + var_Ca_buffer__i_Cab_jct + var_Ca_buffer__i_Cap_jct; // microA_per_microF
        const double var_Ca_buffer__i_Ca_SL_tot = (var_Ca_buffer__i_CaL_Ca_SL - (2.0 * var_Ca_buffer__i_NaCa_SL)) + var_Ca_buffer__i_Cab_SL + var_Ca_buffer__i_Cap_SL; // microA_per_microF
        const double var_Ca_buffer__d_Cai_d_environment__time = ((((-var_Ca_buffer__j_pump_SR) * var_Ca_buffer__Vol_SR) / var_Ca_buffer__Vol_myo) + (var_Ca_buffer__J_Ca_SL_myo / var_Ca_buffer__Vol_myo)) - (1.0 * var_Ca_buffer__dCa_cytosol_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SR_d_environment__time = (var_Ca_buffer__j_pump_SR - (((var_Ca_buffer__j_leak_SR * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_SR) + var_Ca_buffer__j_rel_SR)) - var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SL_d_environment__time = ((((-var_Ca_buffer__i_Ca_SL_tot) * var_Ca_buffer__Cm) / (var_Ca_buffer__Vol_SL * 2.0 * var_Ca_buffer__F)) + ((var_Ca_buffer__J_Ca_jct_SL - var_Ca_buffer__J_Ca_SL_myo) / var_Ca_buffer__Vol_SL)) - (1.0 * var_Ca_buffer__dCa_SL_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_jct_d_environment__time = (((((-var_Ca_buffer__i_Ca_jct_tot) * var_Ca_buffer__Cm) / (var_Ca_buffer__Vol_jct * 2.0 * var_Ca_buffer__F)) - (var_Ca_buffer__J_Ca_jct_SL / var_Ca_buffer__Vol_jct)) + ((var_Ca_buffer__j_rel_SR * var_Ca_buffer__Vol_SR) / var_Ca_buffer__Vol_jct) + ((var_Ca_buffer__j_leak_SR * var_Ca_buffer__Vol_myo) / var_Ca_buffer__Vol_jct)) - (1.0 * var_Ca_buffer__dCa_jct_tot_bound); // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLB_SL_d_environment__time = var_Ca_buffer__dCa_SLB_SL; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLB_jct_d_environment__time = var_Ca_buffer__dCa_SLB_jct; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLHigh_SL_d_environment__time = var_Ca_buffer__dCa_SLHigh_SL; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_SLHigh_jct_d_environment__time = var_Ca_buffer__dCa_SLHigh_jct; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__d_Ca_Calsequestrin_d_environment__time = var_Ca_buffer__dCalsequestrin; // 'millimole per litre per millisecond'
        const double var_cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_cytosolic_Ca_buffer__dCa_TroponinC; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__dCa_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__dMg_TroponinC_Ca_Mg; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_cytosolic_Ca_buffer__dCa_Calmodulin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_cytosolic_Ca_buffer__dCa_Myosin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_cytosolic_Ca_buffer__dMg_Myosin; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // ___units_44
        const double var_cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_cytosolic_Ca_buffer__dCa_SRB; // 'millimole per litre per millisecond'
        const double var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // ___units_44
        const double var_chaste_interface__Ca_buffer__d_Cai_d_environment__time = var_Ca_buffer__d_Cai_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__INa_h_gate__d_h_d_environment__time = var_INa__INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_chaste_interface__INa_j_gate__d_j_d_environment__time = var_INa__INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double var_chaste_interface__INa_m_gate__d_m_d_environment__time = var_INa__INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr__IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs__IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_X_gate__d_X_tos_d_environment__time = var_Itos__Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_Y_gate__d_Y_tos_d_environment__time = var_Itos__Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itos_R_gate__d_R_tos_d_environment__time = var_Itos__Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itof_X_gate__d_X_tof_d_environment__time = var_Itof__Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double var_chaste_interface__Itof_Y_gate__d_Y_tof_d_environment__time = var_Itof__Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_d_gate__d_d_d_environment__time = var_ICaL__ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_f_gate__d_f_d_environment__time = var_ICaL__ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_fCa_gate__d_fCaB_SL_d_environment__time = var_ICaL__ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double var_chaste_interface__ICaL_fCa_gate__d_fCaB_jct_d_environment__time = var_ICaL__ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_R_d_environment__time = var_Jrel_SR__d_R_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_I_d_environment__time = var_Jrel_SR__d_I_d_environment__time; // per_millisecond
        const double var_chaste_interface__Jrel_SR__d_O_d_environment__time = var_Jrel_SR__d_O_d_environment__time; // per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_SL_d_environment__time = var_Na_buffer__d_Na_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_jct_d_environment__time = var_Na_buffer__d_Na_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_SL_buf_d_environment__time = var_Na_buffer__d_Na_SL_buf_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Na_jct_buf_d_environment__time = var_Na_buffer__d_Na_jct_buf_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Na_buffer__d_Nai_d_environment__time = var_Na_buffer__d_Nai_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SR_d_environment__time = var_Ca_buffer__d_Ca_SR_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SL_d_environment__time = var_Ca_buffer__d_Ca_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_jct_d_environment__time = var_Ca_buffer__d_Ca_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLB_SL_d_environment__time = var_Ca_buffer__d_Ca_SLB_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLB_jct_d_environment__time = var_Ca_buffer__d_Ca_SLB_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLHigh_SL_d_environment__time = var_Ca_buffer__d_Ca_SLHigh_SL_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_SLHigh_jct_d_environment__time = var_Ca_buffer__d_Ca_SLHigh_jct_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca_buffer__d_Ca_Calsequestrin_d_environment__time = var_Ca_buffer__d_Ca_Calsequestrin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time = var_Ca_buffer__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__Ca_buffer__Cai = var_chaste_interface__Ca_buffer__d_Cai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa_h_gate__h = var_chaste_interface__INa_h_gate__d_h_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__INa_j_gate__j = var_chaste_interface__INa_j_gate__d_j_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__INa_m_gate__m = var_chaste_interface__INa_m_gate__d_m_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__IKr_Xr_gate__Xr = var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__IKs_Xs_gate__Xs = var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_X_gate__X_tos = var_chaste_interface__Itos_X_gate__d_X_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_Y_gate__Y_tos = var_chaste_interface__Itos_Y_gate__d_Y_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itos_R_gate__R_tos = var_chaste_interface__Itos_R_gate__d_R_tos_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itof_X_gate__X_tof = var_chaste_interface__Itof_X_gate__d_X_tof_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Itof_Y_gate__Y_tof = var_chaste_interface__Itof_Y_gate__d_Y_tof_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_d_gate__d = var_chaste_interface__ICaL_d_gate__d_d_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_f_gate__f = var_chaste_interface__ICaL_f_gate__d_f_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__d_fCaB_SL_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__d_fCaB_jct_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__R = var_chaste_interface__Jrel_SR__d_R_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__I = var_chaste_interface__Jrel_SR__d_I_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Jrel_SR__O = var_chaste_interface__Jrel_SR__d_O_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__Na_buffer__Na_SL = var_chaste_interface__Na_buffer__d_Na_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct = var_chaste_interface__Na_buffer__d_Na_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_SL_buf = var_chaste_interface__Na_buffer__d_Na_SL_buf_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Na_jct_buf = var_chaste_interface__Na_buffer__d_Na_jct_buf_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na_buffer__Nai = var_chaste_interface__Na_buffer__d_Nai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SR = var_chaste_interface__Ca_buffer__d_Ca_SR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SL = var_chaste_interface__Ca_buffer__d_Ca_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_jct = var_chaste_interface__Ca_buffer__d_Ca_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL = var_chaste_interface__Ca_buffer__d_Ca_SLB_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct = var_chaste_interface__Ca_buffer__d_Ca_SLB_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL = var_chaste_interface__Ca_buffer__d_Ca_SLHigh_SL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct = var_chaste_interface__Ca_buffer__d_Ca_SLHigh_jct_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin = var_chaste_interface__Ca_buffer__d_Ca_Calsequestrin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_TroponinC_Ca_Mg_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__d_Mg_TroponinC_Ca_Mg_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Calmodulin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_Myosin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = var_chaste_interface__cytosolic_Ca_buffer__d_Mg_Myosin_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = var_chaste_interface__cytosolic_Ca_buffer__d_Ca_SRB_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_INa__i_Na = var_INa__i_Na_jct + var_INa__i_Na_SL; // microA_per_microF
            const double var_cell__i_Na = var_INa__i_Na; // microA_per_microF
            const double var_INab__i_Nab = var_INab__i_Nab_jct + var_INab__i_Nab_SL; // microA_per_microF
            const double var_cell__i_Nab = var_INab__i_Nab; // microA_per_microF
            const double var_INaK__i_NaK = var_INaK__i_NaK_jct + var_INaK__i_NaK_SL; // microA_per_microF
            const double var_cell__i_NaK = var_INaK__i_NaK; // microA_per_microF
            const double var_IKr_Rr_gate__V = var_IKr__V; // millivolt
            const double var_IKr_Rr_gate__Rr = 1.0 / (1.0 + exp((33.0 + var_IKr_Rr_gate__V) / 22.399999999999999)); // dimensionless
            const double var_IKr__Rr = var_IKr_Rr_gate__Rr; // dimensionless
            const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
            const double var_IKr__Ko = var_model_parameters__Ko; // millimolar
            const double var_IKr__G_IKr = var_IKr__G_IKr_const * sqrt(var_IKr__Ko / 5.4000000000000004); // milliS_per_microF
            const double var_model_parameters__Ki = 135.0; // millimolar
            const double var_reversal_potentials__Ki = var_model_parameters__Ki; // millimolar
            const double var_reversal_potentials__Ko = var_model_parameters__Ko; // millimolar
            const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ko / var_reversal_potentials__Ki); // millivolt
            const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IKr__i_Kr = var_IKr__G_IKr * var_IKr__Xr * var_IKr__Rr * (var_IKr__V - var_IKr__E_K); // microA_per_microF
            const double var_cell__i_Kr = var_IKr__i_Kr; // microA_per_microF
            const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
            const double var_IKs__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
            const double var_IKs__pCa_jct = (-log10(var_IKs__Ca_jct / 1.0)) + 3.0; // dimensionless
            const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
            const double var_IKs__G_Ks_jct = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_jct) / 0.59999999999999998)))); // milliS_per_microF
            const double var_IKs__R = var_model_parameters__R; // joule_per_kilomole_kelvin
            const double var_IKs__T = var_model_parameters__T; // kelvin
            const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
            const double var_IKs__F = var_model_parameters__F; // coulomb_per_mole
            const double var_IKs__Nao = var_model_parameters__Nao; // millimolar
            const double var_IKs__Ki = var_model_parameters__Ki; // millimolar
            const double var_IKs__Ko = var_model_parameters__Ko; // millimolar
            const double var_IKs__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
            const double var_IKs__E_Ks = ((var_IKs__R * var_IKs__T) / var_IKs__F) * log((var_IKs__Ko + (var_IKs__pKNa * var_IKs__Nao)) / (var_IKs__Ki + (var_IKs__pKNa * var_IKs__Nai))); // millivolt
            const double var_IKs__i_Ks_jct = var_IKs__Fx_Ks_jct * var_IKs__G_Ks_jct * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
            const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
            const double var_IKs__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
            const double var_IKs__pCa_SL = (-log10(var_IKs__Ca_SL / 1.0)) + 3.0; // dimensionless
            const double var_IKs__G_Ks_SL = var_IKs__G_Ks_Max * (0.057000000000000002 + (0.19 / (1.0 + exp(((-7.2000000000000002) + var_IKs__pCa_SL) / 0.59999999999999998)))); // milliS_per_microF
            const double var_IKs__i_Ks_SL = var_IKs__Fx_Ks_SL * var_IKs__G_Ks_SL * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // microA_per_microF
            const double var_IKs__i_Ks = var_IKs__i_Ks_jct + var_IKs__i_Ks_SL; // microA_per_microF
            const double var_cell__i_Ks = var_IKs__i_Ks; // microA_per_microF
            const double var_IKp__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IKp__g_Kp = 0.001; // milliS_per_microF
            const double var_IKp__V = var_chaste_interface__cell__V; // millivolt
            const double var_IKp__i_Kp = (var_IKp__g_Kp * (var_IKp__V - var_IKp__E_K)) / (1.0 + exp(7.4880000000000004 - (var_IKp__V / 5.9800000000000004))); // microA_per_microF
            const double var_cell__i_Kp = var_IKp__i_Kp; // microA_per_microF
            const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
            const double var_Itos__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_Itos__i_tos = var_Itos__G_tos * var_Itos__X_tos * (var_Itos__Y_tos + (0.5 * var_Itos__R_tos)) * (var_Itos__V - var_Itos__E_K); // microA_per_microF
            const double var_cell__i_tos = var_Itos__i_tos; // microA_per_microF
            const double var_Itof__G_tof = 0.02; // milliS_per_microF
            const double var_Itof__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_Itof__i_tof = var_Itof__G_tof * var_Itof__X_tof * var_Itof__Y_tof * (var_Itof__V - var_Itof__E_K); // microA_per_microF
            const double var_cell__i_tof = var_Itof__i_tof; // microA_per_microF
            const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
            const double var_IK1_K1_gate__V = var_IK1__V; // millivolt
            const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
            const double var_IK1_K1_gate__E_K = var_IK1__E_K; // millivolt
            const double var_IK1_K1_gate__beta_K1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 5.476))) + (1.0 * exp(0.061749999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 594.30999999999995))))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__V - var_IK1_K1_gate__E_K) + 4.7530000000000001))); // per_millisecond
            const double var_IK1_K1_gate__alpha_K1 = 1.02 / (1.0 + exp(0.23849999999999999 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K + 59.215000000000003)))); // per_millisecond
            const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
            const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
            const double var_IK1__Ko = var_model_parameters__Ko; // millimolar
            const double var_IK1__G_K1 = 0.90000000000000002 * sqrt(var_IK1__Ko / 5.4000000000000004); // milliS_per_microF
            const double var_IK1__i_K1 = var_IK1__G_K1 * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K); // microA_per_microF
            const double var_cell__i_K1 = var_IK1__i_K1; // microA_per_microF
            const double var_INaCa__i_NaCa = var_INaCa__i_NaCa_jct + var_INaCa__i_NaCa_SL; // microA_per_microF
            const double var_cell__i_NaCa = var_INaCa__i_NaCa; // microA_per_microF
            const double var_ICl_Ca__V = var_chaste_interface__cell__V; // millivolt
            const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
            const double var_ICl_Ca__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
            const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
            const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
            const double var_model_parameters__Cli = 15.0; // millimolar
            const double var_reversal_potentials__Cli = var_model_parameters__Cli; // millimolar
            const double var_model_parameters__Clo = 150.0; // millimolar
            const double var_reversal_potentials__Clo = var_model_parameters__Clo; // millimolar
            const double var_reversal_potentials__E_Cl = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cli / var_reversal_potentials__Clo); // millivolt
            const double var_ICl_Ca__E_Cl = var_reversal_potentials__E_Cl; // millivolt
            const double var_ICl_Ca__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
            const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
            const double var_ICl_Ca__i_Cl_Ca = var_ICl_Ca__G_Cl * (var_ICl_Ca__V - var_ICl_Ca__E_Cl) * ((var_ICl_Ca__Fx_Cl_jct / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_jct))) + (var_ICl_Ca__Fx_Cl_SL / (1.0 + (var_ICl_Ca__Kd_ClCa / var_ICl_Ca__Ca_SL)))); // microA_per_microF
            const double var_cell__i_Cl_Ca = var_ICl_Ca__i_Cl_Ca; // microA_per_microF
            const double var_IClb__V = var_chaste_interface__cell__V; // millivolt
            const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
            const double var_IClb__E_Cl = var_reversal_potentials__E_Cl; // millivolt
            const double var_IClb__i_Clb = var_IClb__G_ClBk * (var_IClb__V - var_IClb__E_Cl); // microA_per_microF
            const double var_cell__i_Clb = var_IClb__i_Clb; // microA_per_microF
            const double var_ICaL__Ki = var_model_parameters__Ki; // millimolar
            const double var_ICaL__PK = 2.7000000000000001e-07; // litre_per_farad_millisecond
            const double var_ICaL__Ko = var_model_parameters__Ko; // millimolar
            const double var_ICaL__gamma_Ko = 0.75; // dimensionless
            const double var_ICaL__gamma_Ki = 0.75; // dimensionless
            const double var_ICaL__i_CaL_K = (var_ICaL__temp * ((var_ICaL__fCa_SL * var_ICaL__Fx_ICaL_SL) + (var_ICaL__fCa_jct * var_ICaL__Fx_ICaL_jct)) * var_ICaL__PK * ((var_ICaL__gamma_Ki * var_ICaL__Ki * exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Ko * var_ICaL__Ko))) / (exp((var_ICaL__V * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // microA_per_microF
            const double var_ICaL__i_CaL = var_ICaL__i_CaL_Ca_SL + var_ICaL__i_CaL_Ca_jct + var_ICaL__i_CaL_Na_SL + var_ICaL__i_CaL_Na_jct + var_ICaL__i_CaL_K; // microA_per_microF
            const double var_cell__i_CaL = var_ICaL__i_CaL; // microA_per_microF
            const double var_ICab__i_Cab = var_ICab__i_Cab_SL + var_ICab__i_Cab_jct; // microA_per_microF
            const double var_cell__i_Cab = var_ICab__i_Cab; // microA_per_microF
            const double var_ICap__i_Cap = var_ICap__i_Cap_jct + var_ICap__i_Cap_SL; // microA_per_microF
            const double var_cell__i_Cap = var_ICap__i_Cap; // microA_per_microF
            const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // microA_per_microF
            const double var_cell__d_V_d_environment__time = -(var_cell__i_Na + var_cell__i_Nab + var_cell__i_NaK + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_tos + var_cell__i_tof + var_cell__i_K1 + var_cell__i_NaCa + var_cell__i_Cl_Ca + var_cell__i_Clb + var_cell__i_CaL + var_cell__i_Cab + var_cell__i_Cap + var_cell__i_Kp + var_cell__i_Stim); // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_environment__time = var_cell__d_V_d_environment__time; // ___units_2
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__Ca_buffer__Cai;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa_h_gate__h;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa_j_gate__j;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__INa_m_gate__m;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__IKr_Xr_gate__Xr;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__IKs_Xs_gate__Xs;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__Itos_X_gate__X_tos;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__Itos_Y_gate__Y_tos;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__Itos_R_gate__R_tos;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__Itof_X_gate__X_tof;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__Itof_Y_gate__Y_tof;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__ICaL_d_gate__d;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__ICaL_f_gate__f;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_SL;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__ICaL_fCa_gate__fCaB_jct;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Jrel_SR__R;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Jrel_SR__I;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Jrel_SR__O;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Na_buffer__Na_SL;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Na_buffer__Na_jct;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Na_buffer__Na_SL_buf;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Na_buffer__Na_jct_buf;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Na_buffer__Nai;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__Ca_buffer__Ca_SR;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Ca_buffer__Ca_SL;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__Ca_buffer__Ca_jct;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__Ca_buffer__Ca_SLB_SL;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__Ca_buffer__Ca_SLB_jct;
        NV_Ith_S(rDY, 29) = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_SL;
        NV_Ith_S(rDY, 30) = d_dt_chaste_interface__Ca_buffer__Ca_SLHigh_jct;
        NV_Ith_S(rDY, 31) = d_dt_chaste_interface__Ca_buffer__Ca_Calsequestrin;
        NV_Ith_S(rDY, 32) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC;
        NV_Ith_S(rDY, 33) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg;
        NV_Ith_S(rDY, 34) = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg;
        NV_Ith_S(rDY, 35) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin;
        NV_Ith_S(rDY, 36) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin;
        NV_Ith_S(rDY, 37) = d_dt_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin;
        NV_Ith_S(rDY, 38) = d_dt_chaste_interface__cytosolic_Ca_buffer__Ca_SRB;
    }
    
    void DynamicShannon2004FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -8.556885e1
        double var_chaste_interface__Ca_buffer__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 8.597401e-5
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 9.867005e-1
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 9.91562e-1
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 1.405627e-3
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 8.641386e-3
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 5.412034e-3
        double var_chaste_interface__Itos_X_gate__X_tos = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itos_Y_gate__Y_tos = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__Itos_R_gate__R_tos = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.9946
        double var_chaste_interface__Itof_X_gate__X_tof = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 4.051574e-3
        double var_chaste_interface__Itof_Y_gate__Y_tof = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 9.945511e-1
        double var_chaste_interface__ICaL_d_gate__d = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 7.175662e-6
        double var_chaste_interface__ICaL_f_gate__f = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 1.000681
        double var_chaste_interface__ICaL_fCa_gate__fCaB_SL = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 1.452605e-2
        double var_chaste_interface__ICaL_fCa_gate__fCaB_jct = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 2.421991e-2
        double var_chaste_interface__Jrel_SR__R = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 8.884332e-1
        double var_chaste_interface__Jrel_SR__I = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.024274e-7
        double var_chaste_interface__Jrel_SR__O = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 8.156628e-7
        double var_chaste_interface__Na_buffer__Na_SL = NV_Ith_S(rY, 19);
        // Units: millimolar; Initial value: 8.80733
        double var_chaste_interface__Na_buffer__Na_jct = NV_Ith_S(rY, 20);
        // Units: millimolar; Initial value: 8.80329
        double var_chaste_interface__Na_buffer__Na_SL_buf = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 7.720854e-1
        double var_chaste_interface__Na_buffer__Na_jct_buf = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 3.539892
        double var_chaste_interface__Na_buffer__Nai = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 8.80853
        double var_chaste_interface__Ca_buffer__Ca_SR = NV_Ith_S(rY, 24);
        // Units: millimolar; Initial value: 5.545201e-1
        double var_chaste_interface__Ca_buffer__Ca_SL = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 1.031812e-4
        double var_chaste_interface__Ca_buffer__Ca_jct = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 1.737475e-4
        double var_chaste_interface__Ca_buffer__Ca_SLB_SL = NV_Ith_S(rY, 27);
        // Units: millimolar; Initial value: 1.110363e-1
        double var_chaste_interface__Ca_buffer__Ca_SLB_jct = NV_Ith_S(rY, 28);
        // Units: millimolar; Initial value: 9.566355e-3
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_SL = NV_Ith_S(rY, 29);
        // Units: millimolar; Initial value: 7.297378e-2
        double var_chaste_interface__Ca_buffer__Ca_SLHigh_jct = NV_Ith_S(rY, 30);
        // Units: millimolar; Initial value: 7.347888e-3
        double var_chaste_interface__Ca_buffer__Ca_Calsequestrin = NV_Ith_S(rY, 31);
        // Units: millimolar; Initial value: 1.242988
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC = NV_Ith_S(rY, 32);
        // Units: millimolar; Initial value: 8.773191e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = NV_Ith_S(rY, 33);
        // Units: millimolar; Initial value: 1.078283e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = NV_Ith_S(rY, 34);
        // Units: millimolar; Initial value: 1.524002e-2
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin = NV_Ith_S(rY, 35);
        // Units: millimolar; Initial value: 2.911916e-4
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin = NV_Ith_S(rY, 36);
        // Units: millimolar; Initial value: 1.298754e-3
        double var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin = NV_Ith_S(rY, 37);
        // Units: millimolar; Initial value: 1.381982e-1
        double var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB = NV_Ith_S(rY, 38);
        // Units: millimolar; Initial value: 2.143165e-3
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // millisecond
        const double var_cell__V = var_chaste_interface__cell__V; // millivolt
        const double var_model_parameters__R = 8314.2999999999993; // joule_per_kilomole_kelvin
        const double var_model_parameters__Nao = 140.0; // millimolar
        const double var_model_parameters__F = 96485.0; // coulomb_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_INa__G_INa = 16.0; // milliS_per_microF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__Fx_Na_jct = 0.11; // dimensionless
        const double var_INa__Fx_Na_SL = 0.89000000000000001; // dimensionless
        const double var_INab__Fx_NaBk_jct = 0.11; // dimensionless
        const double var_INab__G_NaBk = 0.00029700000000000001; // milliS_per_microF
        const double var_INab__Fx_NaBk_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__H_NaK = 4.0; // dimensionless
        const double var_model_parameters__Ko = 5.4000000000000004; // millimolar
        const double var_INaK__Km_Nai = 11.0; // millimolar
        const double var_INaK__Fx_NaK_SL = 0.89000000000000001; // dimensionless
        const double var_INaK__I_NaK_max = 1.9071899999999999; // microA_per_microF
        const double var_INaK__Km_Ko = 1.5; // millimolar
        const double var_INaK__Fx_NaK_jct = 0.11; // dimensionless
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__G_IKr_const = 0.029999999999999999; // milliS_per_microF
        const double var_model_parameters__Ki = 135.0; // millimolar
        const double var_IKs__Fx_Ks_jct = 0.11; // dimensionless
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__G_Ks_Max = 0.070000000000000007; // milliS_per_microF
        const double var_IKs__pKNa = 0.018329999999999999; // dimensionless
        const double var_IKs__Fx_Ks_SL = 0.89000000000000001; // dimensionless
        const double var_IKp__g_Kp = 0.001; // milliS_per_microF
        const double var_Itos__Y_tos = var_chaste_interface__Itos_Y_gate__Y_tos; // dimensionless
        const double var_Itos__X_tos = var_chaste_interface__Itos_X_gate__X_tos; // dimensionless
        const double var_Itos__R_tos = var_chaste_interface__Itos_R_gate__R_tos; // dimensionless
        const double var_Itos__G_tos = 0.059999999999999998; // milliS_per_microF
        const double var_Itof__G_tof = 0.02; // milliS_per_microF
        const double var_Itof__X_tof = var_chaste_interface__Itof_X_gate__X_tof; // dimensionless
        const double var_Itof__Y_tof = var_chaste_interface__Itof_Y_gate__Y_tof; // dimensionless
        const double var_INaCa__K_mNai = 12.289999999999999; // millimolar
        const double var_INaCa__HNa = 3.0; // dimensionless
        const double var_INaCa__K_mNao = 87.5; // millimolar
        const double var_model_parameters__Cao = 1.8; // millimolar
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__K_mCao = 1.3; // millimolar
        const double var_INaCa__V_max = 9.0; // microA_per_microF
        const double var_INaCa__K_mCai = 0.0035899999999999999; // millimolar
        const double var_INaCa__Fx_NCX_jct = 0.11; // dimensionless
        const double var_INaCa__Kd_act = 0.00025599999999999999; // millimolar
        const double var_INaCa__Q10_NCX = 1.5700000000000001; // dimensionless
        const double var_INaCa__Fx_NCX_SL = 0.89000000000000001; // dimensionless
        const double var_ICl_Ca__G_Cl = 0.109625; // milliS_per_microF
        const double var_ICl_Ca__Kd_ClCa = 0.10000000000000001; // millimolar
        const double var_ICl_Ca__Fx_Cl_jct = 0.11; // dimensionless
        const double var_model_parameters__Cli = 15.0; // millimolar
        const double var_model_parameters__Clo = 150.0; // millimolar
        const double var_ICl_Ca__Fx_Cl_SL = 0.89000000000000001; // dimensionless
        const double var_IClb__G_ClBk = 0.0089999999999999993; // milliS_per_microF
        const double var_ICaL__Fx_ICaL_SL = 0.10000000000000001; // dimensionless
        const double var_ICaL__d = var_chaste_interface__ICaL_d_gate__d; // dimensionless
        const double var_ICaL__f = var_chaste_interface__ICaL_f_gate__f; // dimensionless
        const double var_ICaL__Q10_CaL = 1.8; // dimensionless
        const double var_ICaL__gamma_Nao = 0.75; // dimensionless
        const double var_ICaL__gamma_Nai = 0.75; // dimensionless
        const double var_ICaL__fCaB_SL = var_chaste_interface__ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_SL = var_ICaL__fCaB_SL; // dimensionless
        const double var_ICaL__PNa = 1.4999999999999999e-08; // litre_per_farad_millisecond
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 0.34100000000000003; // dimensionless
        const double var_ICaL__PCa = 0.00054000000000000001; // litre_per_farad_millisecond
        const double var_ICaL__fCaB_jct = var_chaste_interface__ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_ICaL_fCa_gate__fCaB_jct = var_ICaL__fCaB_jct; // dimensionless
        const double var_ICaL__Fx_ICaL_jct = 0.90000000000000002; // dimensionless
        const double var_ICaL__PK = 2.7000000000000001e-07; // litre_per_farad_millisecond
        const double var_ICaL__gamma_Ko = 0.75; // dimensionless
        const double var_ICaL__gamma_Ki = 0.75; // dimensionless
        const double var_ICab__G_CaBk = 0.00025129999999999998; // milliS_per_microF
        const double var_ICab__Fx_CaBk_SL = 0.89000000000000001; // dimensionless
        const double var_ICab__Fx_CaBk_jct = 0.11; // dimensionless
        const double var_ICap__H = 1.6000000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_SL = 0.89000000000000001; // dimensionless
        const double var_ICap__Km = 0.00050000000000000001; // millimolar
        const double var_ICap__V_maxAF = 0.067299999999999999; // microA_per_microF
        const double var_ICap__Q10_SLCaP = 2.3500000000000001; // dimensionless
        const double var_ICap__Fx_SLCaP_jct = 0.11; // dimensionless
        const double var_model_parameters__Mgi = 1.0; // millimolar
        const double var_model_parameters__Cm = 1.3809999999999999e-10; // farad
        const double var_model_parameters__cell_length = 100.0; // micrometre
        const double var_model_parameters__cell_radius = 10.25; // micrometre
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_IKr_Xr_gate__Xr = var_IKr__Xr; // dimensionless
        const double var_IKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_Itos_X_gate__X_tos = var_Itos__X_tos; // dimensionless
        const double var_Itos_Y_gate__Y_tos = var_Itos__Y_tos; // dimensionless
        const double var_Itos_R_gate__R_tos = var_Itos__R_tos; // dimensionless
        const double var_Itof_X_gate__X_tof = var_Itof__X_tof; // dimensionless
        const double var_Itof_Y_gate__Y_tof = var_Itof__Y_tof; // dimensionless
        const double var_ICaL_d_gate__d = var_ICaL__d; // dimensionless
        const double var_ICaL_f_gate__f = var_ICaL__f; // dimensionless
        const double var_Jrel_SR__O = var_chaste_interface__Jrel_SR__O; // dimensionless
        const double var_Jrel_SR__ks = 25.0; // per_millisecond
        const double var_Jrel_SR__Max_SR = 15.0; // dimensionless
        const double var_Jrel_SR__Min_SR = 1.0; // dimensionless
        const double var_Jrel_SR__EC50_SR = 0.45000000000000001; // millimolar
        const double var_Jrel_SR__R = var_chaste_interface__Jrel_SR__R; // dimensionless
        const double var_Jrel_SR__I = var_chaste_interface__Jrel_SR__I; // dimensionless
        const double var_Jrel_SR__koCa = 10.0; // per_millimolar2_per_millisecond
        const double var_Jrel_SR__kom = 0.059999999999999998; // per_millisecond
        const double var_Jrel_SR__kiCa = 0.5; // per_millimolar_per_millisecond
        const double var_Jrel_SR__kim = 0.0050000000000000001; // per_millisecond
        const double var_Jrel_SR__HSR = 2.5; // dimensionless
        const double var_Jleak_SR__KSRleak = 5.3480000000000003e-06; // per_millisecond
        const double var_Jpump_SR__Q10_SRCaP = 2.6000000000000001; // dimensionless
        const double var_Jpump_SR__Kmr = 1.7; // millimolar
        const double var_Jpump_SR__V_max = 0.0053114; // millimolar_per_millisecond
        const double var_Jpump_SR__Kmf = 0.00024600000000000002; // millimolar
        const double var_Jpump_SR__H = 1.7869999999999999; // dimensionless
        const double var_Na_buffer__Na_SL = var_chaste_interface__Na_buffer__Na_SL; // millimolar
        const double var_Na_buffer__Na_jct = var_chaste_interface__Na_buffer__Na_jct; // millimolar
        const double var_Na_buffer__Na_SL_buf = var_chaste_interface__Na_buffer__Na_SL_buf; // millimolar
        const double var_Na_buffer__Na_jct_buf = var_chaste_interface__Na_buffer__Na_jct_buf; // millimolar
        const double var_Na_buffer__Nai = var_chaste_interface__Na_buffer__Nai; // millimolar
        const double var_Na_buffer__Bmax_SL = 1.6499999999999999; // millimolar
        const double var_Na_buffer__Bmax_jct = 7.5609999999999999; // millimolar
        const double var_Na_buffer__kon = 0.0001; // per_millimolar_per_millisecond
        const double var_Na_buffer__koff = 0.001; // per_millisecond
        const double var_Ca_buffer__Ca_SR = var_chaste_interface__Ca_buffer__Ca_SR; // millimolar
        const double var_Ca_buffer__Ca_SL = var_chaste_interface__Ca_buffer__Ca_SL; // millimolar
        const double var_Ca_buffer__Ca_jct = var_chaste_interface__Ca_buffer__Ca_jct; // millimolar
        const double var_Ca_buffer__Cai = var_chaste_interface__Ca_buffer__Cai; // millimolar
        const double var_Ca_buffer__Ca_SLB_SL = var_chaste_interface__Ca_buffer__Ca_SLB_SL; // millimolar
        const double var_Ca_buffer__Ca_SLB_jct = var_chaste_interface__Ca_buffer__Ca_SLB_jct; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_SL = var_chaste_interface__Ca_buffer__Ca_SLHigh_SL; // millimolar
        const double var_Ca_buffer__Ca_SLHigh_jct = var_chaste_interface__Ca_buffer__Ca_SLHigh_jct; // millimolar
        const double var_Ca_buffer__Ca_Calsequestrin = var_chaste_interface__Ca_buffer__Ca_Calsequestrin; // millimolar
        const double var_Ca_buffer__Bmax_SLB_SL = 0.037400000000000003; // millimolar
        const double var_Ca_buffer__Bmax_SLB_jct = 0.0045999999999999999; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_SL = 0.0134; // millimolar
        const double var_Ca_buffer__Bmax_SLHigh_jct = 0.00165; // millimolar
        const double var_Ca_buffer__Bmax_Calsequestrin = 0.14000000000000001; // millimolar
        const double var_Ca_buffer__kon_SL = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__kon_Calsequestrin = 100.0; // per_millimolar_per_millisecond
        const double var_Ca_buffer__koff_SLB = 1.3; // per_millisecond
        const double var_Ca_buffer__koff_SLHigh = 0.029999999999999999; // per_millisecond
        const double var_Ca_buffer__koff_Calsequestrin = 65.0; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_Myosin_Mg = 5.7000000000000003e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Myosin_Mg = 0.015699999999999999; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Myosin = var_Ca_buffer__Ca_Myosin; // millimolar
        const double var_Ca_buffer__Mg_Myosin = var_chaste_interface__cytosolic_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_Myosin = var_Ca_buffer__Mg_Myosin; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg = 0.0030000000000000001; // per_millimolar_per_millisecond
        const double var_Ca_buffer__Ca_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg = var_Ca_buffer__Ca_TroponinC_Ca_Mg; // millimolar
        const double var_Ca_buffer__Mg_TroponinC_Ca_Mg = var_chaste_interface__cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg = var_Ca_buffer__Mg_TroponinC_Ca_Mg; // millimolar
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg = 0.0033300000000000001; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca = 2.3700000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca = 3.1999999999999999e-05; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__kon_Myosin_Ca = 13.800000000000001; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Myosin_Ca = 0.14000000000000001; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Myosin_Ca = 0.00046000000000000001; // per_millisecond
        const double var_Ca_buffer__Ca_Calmodulin = var_chaste_interface__cytosolic_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_Calmodulin = var_Ca_buffer__Ca_Calmodulin; // millimolar
        const double var_cytosolic_Ca_buffer__koff_Calmodulin = 0.23799999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__kon_Calmodulin = 34.0; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_Calmodulin = 0.024; // millimolar
        const double var_Ca_buffer__Ca_TroponinC = var_chaste_interface__cytosolic_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_TroponinC = var_Ca_buffer__Ca_TroponinC; // millimolar
        const double var_cytosolic_Ca_buffer__Bmax_TroponinC = 0.070000000000000007; // millimolar
        const double var_cytosolic_Ca_buffer__kon_TroponinC = 32.700000000000003; // per_millimolar_per_millisecond
        const double var_cytosolic_Ca_buffer__koff_TroponinC = 0.019599999999999999; // per_millisecond
        const double var_cytosolic_Ca_buffer__koff_SRB = 0.059999999999999998; // per_millisecond
        const double var_cytosolic_Ca_buffer__Bmax_SRB = 0.017100000000000001; // millimolar
        const double var_Ca_buffer__Ca_SRB = var_chaste_interface__cytosolic_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__Ca_SRB = var_Ca_buffer__Ca_SRB; // millimolar
        const double var_cytosolic_Ca_buffer__kon_SRB = 100.0; // per_millimolar_per_millisecond
        const double var_t1 = pow(var_model_parameters__Ko, 1.0 / 2.0); // dimensionless
        const double var_t2 = var_IKr__G_IKr_const * var_t1; // dimensionless
        const double var_t6 = exp(1.4732142859999999 + (0.044642857139999999 * var_cell__V)); // dimensionless
        const double var_t7 = 1.0 + var_t6; // dimensionless
        const double var_t8 = pow(var_t7, 2.0); // dimensionless
        const double var_t10 = var_model_parameters__R * var_model_parameters__T; // dimensionless
        const double var_t11 = 1.0 / var_model_parameters__F; // dimensionless
        const double var_t14 = log(var_model_parameters__Ko / var_model_parameters__Ki); // dimensionless
        const double var_t16 = (var_t10 * var_t11) * var_t14; // dimensionless
        const double var_t17 = var_cell__V - var_t16; // dimensionless
        const double var_t22 = var_INaK__Fx_NaK_SL * var_INaK__I_NaK_max; // dimensionless
        const double var_t24 = 1.0 / var_model_parameters__R; // dimensionless
        const double var_t25 = 1.0 / var_model_parameters__T; // dimensionless
        const double var_t26 = var_t24 * var_t25; // dimensionless
        const double var_t27 = (var_cell__V * var_model_parameters__F) * var_t26; // dimensionless
        const double var_t29 = exp((-0.10000000000000001) * var_t27); // dimensionless
        const double var_t32 = exp(0.01485884101 * var_model_parameters__Nao); // dimensionless
        const double var_t33 = var_t32 - 1.0; // dimensionless
        const double var_t34 = exp(-var_t27); // dimensionless
        const double var_t37 = (1.0 + (0.1245 * var_t29)) + ((0.0052142857139999997 * var_t33) * var_t34); // dimensionless
        const double var_t38 = pow(var_t37, 2.0); // dimensionless
        const double var_t39 = 1.0 / var_t38; // dimensionless
        const double var_t41 = 1.0 / var_Na_buffer__Na_SL; // dimensionless
        const double var_t43 = pow(var_INaK__Km_Nai * var_t41, var_INaK__H_NaK); // dimensionless
        const double var_t44 = 1.0 + var_t43; // dimensionless
        const double var_t48 = 1.0 / (var_model_parameters__Ko + var_INaK__Km_Ko); // dimensionless
        const double var_t49 = var_model_parameters__F * var_t24; // dimensionless
        const double var_t58 = var_t48 * (((((-0.012449999999999999) * var_t49) * var_t25) * var_t29) - ((((0.0052142857139999997 * var_t33) * var_model_parameters__F) * var_t26) * var_t34)); // dimensionless
        const double var_t60 = (((var_t22 * var_t39) / var_t44) * var_model_parameters__Ko) * var_t58; // dimensionless
        const double var_t61 = var_INaK__Fx_NaK_jct * var_INaK__I_NaK_max; // dimensionless
        const double var_t63 = 1.0 / var_Na_buffer__Na_jct; // dimensionless
        const double var_t65 = pow(var_INaK__Km_Nai * var_t63, var_INaK__H_NaK); // dimensionless
        const double var_t66 = 1.0 + var_t65; // dimensionless
        const double var_t70 = (((var_t61 * var_t39) / var_t66) * var_model_parameters__Ko) * var_t58; // dimensionless
        const double var_t71 = var_INaCa__Fx_NCX_jct * var_INaCa__V_max; // dimensionless
        const double var_t72 = pow(var_INaCa__Kd_act, 2.0); // dimensionless
        const double var_t73 = var_t72 * var_INaCa__Kd_act; // dimensionless
        const double var_t74 = pow(var_Ca_buffer__Ca_jct, 2.0); // dimensionless
        const double var_t78 = 1.0 + ((var_t73 / var_t74) / var_Ca_buffer__Ca_jct); // dimensionless
        const double var_t79 = 1.0 / var_t78; // dimensionless
        const double var_t80 = var_t71 * var_t79; // dimensionless
        const double var_t82 = ((1.0 / 10.0) * var_model_parameters__T) - 31.0; // dimensionless
        const double var_t83 = pow(var_INaCa__Q10_NCX, var_t82); // dimensionless
        const double var_t85 = (var_INaCa__eta * var_model_parameters__F) * var_t24; // dimensionless
        const double var_t87 = var_t49 * var_t25; // dimensionless
        const double var_t89 = exp((var_INaCa__eta * var_cell__V) * var_t87); // dimensionless
        const double var_t90 = var_t25 * var_t89; // dimensionless
        const double var_t91 = pow(var_Na_buffer__Na_jct, var_INaCa__HNa); // dimensionless
        const double var_t92 = var_t91 * var_model_parameters__Cao; // dimensionless
        const double var_t95 = var_INaCa__eta - 1.0; // dimensionless
        const double var_t97 = (var_t95 * var_model_parameters__F) * var_t24; // dimensionless
        const double var_t100 = exp((var_t95 * var_cell__V) * var_t87); // dimensionless
        const double var_t101 = var_t25 * var_t100; // dimensionless
        const double var_t102 = pow(var_model_parameters__Nao, var_INaCa__HNa); // dimensionless
        const double var_t103 = var_t102 * var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t109 = 1.0 + (var_INaCa__ksat * var_t100); // dimensionless
        const double var_t110 = 1.0 / var_t109; // dimensionless
        const double var_t111 = var_INaCa__K_mCai * var_t102; // dimensionless
        const double var_t112 = 1.0 / var_INaCa__K_mNai; // dimensionless
        const double var_t114 = pow(var_Na_buffer__Na_jct * var_t112, var_INaCa__HNa); // dimensionless
        const double var_t117 = pow(var_INaCa__K_mNao, var_INaCa__HNa); // dimensionless
        const double var_t118 = var_t117 * var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t119 = 1.0 / var_INaCa__K_mCai; // dimensionless
        const double var_t121 = 1.0 + (var_Ca_buffer__Ca_jct * var_t119); // dimensionless
        const double var_t123 = var_INaCa__K_mCao * var_t91; // dimensionless
        const double var_t124 = ((((var_t111 * (1.0 + var_t114)) + (var_t118 * var_t121)) + var_t123) + var_t92) + var_t103; // dimensionless
        const double var_t125 = 1.0 / var_t124; // dimensionless
        const double var_t126 = var_t110 * var_t125; // dimensionless
        const double var_t128 = ((var_t80 * var_t83) * (((var_t85 * var_t90) * var_t92) - ((var_t97 * var_t101) * var_t103))) * var_t126; // dimensionless
        const double var_t129 = var_INaCa__Fx_NCX_SL * var_INaCa__V_max; // dimensionless
        const double var_t130 = pow(var_Ca_buffer__Ca_SL, 2.0); // dimensionless
        const double var_t134 = 1.0 + ((var_t73 / var_t130) / var_Ca_buffer__Ca_SL); // dimensionless
        const double var_t135 = 1.0 / var_t134; // dimensionless
        const double var_t136 = var_t129 * var_t135; // dimensionless
        const double var_t137 = pow(var_Na_buffer__Na_SL, var_INaCa__HNa); // dimensionless
        const double var_t138 = var_t137 * var_model_parameters__Cao; // dimensionless
        const double var_t141 = var_t102 * var_Ca_buffer__Ca_SL; // dimensionless
        const double var_t147 = pow(var_Na_buffer__Na_SL * var_t112, var_INaCa__HNa); // dimensionless
        const double var_t150 = var_t117 * var_Ca_buffer__Ca_SL; // dimensionless
        const double var_t152 = 1.0 + (var_Ca_buffer__Ca_SL * var_t119); // dimensionless
        const double var_t154 = var_INaCa__K_mCao * var_t137; // dimensionless
        const double var_t155 = ((((var_t111 * (1.0 + var_t147)) + (var_t150 * var_t152)) + var_t154) + var_t138) + var_t141; // dimensionless
        const double var_t156 = 1.0 / var_t155; // dimensionless
        const double var_t157 = var_t110 * var_t156; // dimensionless
        const double var_t159 = ((var_t136 * var_t83) * (((var_t85 * var_t90) * var_t138) - ((var_t97 * var_t101) * var_t141))) * var_t157; // dimensionless
        const double var_t163 = exp(7.4880000000000004 - (0.16722408029999999 * var_cell__V)); // dimensionless
        const double var_t164 = 1.0 + var_t163; // dimensionless
        const double var_t165 = pow(var_t164, 2.0); // dimensionless
        const double var_t170 = var_IKs__Fx_Ks_SL * var_IKs__G_Ks_Max; // dimensionless
        const double var_t171 = log(var_Ca_buffer__Ca_SL); // dimensionless
        const double var_t172 = log(10.0); // dimensionless
        const double var_t173 = 1.0 / var_t172; // dimensionless
        const double var_t177 = exp((-6.9999999989999999) - ((1.6666666670000001 * var_t171) * var_t173)); // dimensionless
        const double var_t178 = 1.0 + var_t177; // dimensionless
        const double var_t181 = 0.057000000000000002 + (0.19 / var_t178); // dimensionless
        const double var_t182 = pow(var_IKs_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t184 = (var_t170 * var_t181) * var_t182; // dimensionless
        const double var_t185 = 1.0 / var_t7; // dimensionless
        const double var_t189 = var_IKs__Fx_Ks_jct * var_IKs__G_Ks_Max; // dimensionless
        const double var_t190 = log(var_Ca_buffer__Ca_jct); // dimensionless
        const double var_t194 = exp((-6.9999999989999999) - ((1.6666666670000001 * var_t190) * var_t173)); // dimensionless
        const double var_t195 = 1.0 + var_t194; // dimensionless
        const double var_t198 = 0.057000000000000002 + (0.19 / var_t195); // dimensionless
        const double var_t200 = (var_t189 * var_t198) * var_t182; // dimensionless
        const double var_t201 = var_INa__Fx_Na_jct * var_INa__G_INa; // dimensionless
        const double var_t202 = pow(var_INa_m_gate__m, 2.0); // dimensionless
        const double var_t203 = var_t202 * var_INa_m_gate__m; // dimensionless
        const double var_t204 = var_t203 * var_INa_h_gate__h; // dimensionless
        const double var_t205 = var_t204 * var_INa_j_gate__j; // dimensionless
        const double var_t206 = var_t201 * var_t205; // dimensionless
        const double var_t207 = var_INa__Fx_Na_SL * var_INa__G_INa; // dimensionless
        const double var_t208 = var_t207 * var_t205; // dimensionless
        const double var_t212 = exp(((0.23849999999999999 * var_cell__V) - (0.23849999999999999 * var_t16)) - 14.1227775); // dimensionless
        const double var_t213 = 1.0 + var_t212; // dimensionless
        const double var_t214 = 1.0 / var_t213; // dimensionless
        const double var_t215 = var_t1 * var_t214; // dimensionless
        const double var_t220 = exp(((0.080320000000000003 * var_cell__V) - (0.080320000000000003 * var_t16)) + 0.43983232); // dimensionless
        const double var_t225 = exp(((0.061749999999999999 * var_cell__V) - (0.061749999999999999 * var_t16)) - 36.698642499999998); // dimensionless
        const double var_t226 = (0.49124000000000001 * var_t220) + var_t225; // dimensionless
        const double var_t230 = exp((((-0.51429999999999998) * var_cell__V) + (0.51429999999999998 * var_t16)) - 2.4444678999999998); // dimensionless
        const double var_t231 = 1.0 + var_t230; // dimensionless
        const double var_t232 = 1.0 / var_t231; // dimensionless
        const double var_t234 = (1.02 * var_t214) + (var_t226 * var_t232); // dimensionless
        const double var_t235 = pow(var_t234, 2.0); // dimensionless
        const double var_t238 = pow(var_t213, 2.0); // dimensionless
        const double var_t239 = 1.0 / var_t238; // dimensionless
        const double var_t246 = pow(var_t231, 2.0); // dimensionless
        const double var_t256 = 1.0 / var_t234; // dimensionless
        const double var_t263 = var_Itos__G_tos * var_Itos_X_gate__X_tos; // dimensionless
        const double var_t265 = var_Itos_Y_gate__Y_tos + (0.5 * var_Itos_R_gate__R_tos); // dimensionless
        const double var_t267 = var_Itof__G_tof * var_Itof_X_gate__X_tof; // dimensionless
        const double var_t271 = var_ICab__G_CaBk * var_ICab__Fx_CaBk_SL; // dimensionless
        const double var_t272 = var_INab__Fx_NaBk_SL * var_INab__G_NaBk; // dimensionless
        const double var_t273 = (((((((((((((((((((-var_IClb__G_ClBk) + (((((0.01921122691 * var_t2) * var_IKr_Xr_gate__Xr) / var_t8) * var_t17) * var_t6)) + var_t60) + var_t70) - var_t128) - var_t159) - ((((0.16722408029999999 * var_IKp__g_Kp) * var_t17) / var_t165) * var_t163)) - var_t184) - (((0.43033148290000001 * var_t2) * var_IKr_Xr_gate__Xr) * var_t185)) - var_t200) - var_t206) - var_t208) + ((((0.39504430130000001 * var_t215) / var_t235) * var_t17) * (((((-0.24326999999999999) * var_t239) * var_t212) + (((0.039456396800000001 * var_t220) + (0.061749999999999999 * var_t225)) * var_t232)) + (((0.51429999999999998 * var_t226) / var_t246) * var_t230)))) + (((((0.094218065860000005 * var_t1) * var_t239) * var_t256) * var_t17) * var_t212)) - ((0.39504430130000001 * var_t215) * var_t256)) - (var_t263 * var_t265)) - (var_t267 * var_Itof_Y_gate__Y_tof)) - (var_IKp__g_Kp / var_t164)) - var_t271) - var_t272; // dimensionless
        const double var_t274 = 1.0 / var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t276 = 1.0 + (var_ICl_Ca__Kd_ClCa * var_t274); // dimensionless
        const double var_t279 = 1.0 / var_Ca_buffer__Ca_SL; // dimensionless
        const double var_t281 = 1.0 + (var_ICl_Ca__Kd_ClCa * var_t279); // dimensionless
        const double var_t286 = var_ICab__G_CaBk * var_ICab__Fx_CaBk_jct; // dimensionless
        const double var_t287 = var_INab__Fx_NaBk_jct * var_INab__G_NaBk; // dimensionless
        const double var_t290 = var_t100 * var_t102; // dimensionless
        const double var_t292 = ((var_t89 * var_t91) * var_model_parameters__Cao) - (var_t290 * var_Ca_buffer__Ca_jct); // dimensionless
        const double var_t294 = pow(var_t109, 2.0); // dimensionless
        const double var_t295 = 1.0 / var_t294; // dimensionless
        const double var_t300 = var_t49 * var_t101; // dimensionless
        const double var_t302 = ((((((var_t80 * var_t83) * var_t292) * var_t295) * var_t125) * var_INaCa__ksat) * var_t95) * var_t300; // dimensionless
        const double var_t306 = ((var_t89 * var_t137) * var_model_parameters__Cao) - (var_t290 * var_Ca_buffer__Ca_SL); // dimensionless
        const double var_t313 = ((((((var_t136 * var_t83) * var_t306) * var_t295) * var_t156) * var_INaCa__ksat) * var_t95) * var_t300; // dimensionless
        const double var_t314 = var_ICaL_d_gate__d * var_ICaL_f_gate__f; // dimensionless
        const double var_t315 = pow(var_ICaL__Q10_CaL, var_t82); // dimensionless
        const double var_t316 = var_t314 * var_t315; // dimensionless
        const double var_t317 = pow(var_model_parameters__F, 2.0); // dimensionless
        const double var_t319 = (var_cell__V * var_t317) * var_model_parameters__F; // dimensionless
        const double var_t320 = pow(var_model_parameters__R, 2.0); // dimensionless
        const double var_t321 = 1.0 / var_t320; // dimensionless
        const double var_t322 = pow(var_model_parameters__T, 2.0); // dimensionless
        const double var_t323 = 1.0 / var_t322; // dimensionless
        const double var_t326 = ((var_t316 * var_t319) * var_t321) * var_t323; // dimensionless
        const double var_t327 = 1.0 - var_ICaL_fCa_gate__fCaB_SL; // dimensionless
        const double var_t328 = var_t327 * var_ICaL__Fx_ICaL_SL; // dimensionless
        const double var_t329 = var_t328 * var_ICaL__PNa; // dimensionless
        const double var_t330 = var_ICaL__gamma_Nai * var_Na_buffer__Na_SL; // dimensionless
        const double var_t331 = exp(var_t27); // dimensionless
        const double var_t332 = var_t331 - 1.0; // dimensionless
        const double var_t333 = 1.0 / var_t332; // dimensionless
        const double var_t334 = var_t331 * var_t333; // dimensionless
        const double var_t338 = (((0.45000000000000001 * var_t326) * var_t329) * var_t330) * var_t334; // dimensionless
        const double var_t340 = (var_t316 * var_t319) * var_t321; // dimensionless
        const double var_t342 = (var_t323 * var_t327) * var_ICaL__Fx_ICaL_SL; // dimensionless
        const double var_t344 = var_ICaL__gamma_Nao * var_model_parameters__Nao; // dimensionless
        const double var_t345 = (var_t330 * var_t331) - var_t344; // dimensionless
        const double var_t346 = var_ICaL__PNa * var_t345; // dimensionless
        const double var_t347 = pow(var_t332, 2.0); // dimensionless
        const double var_t348 = 1.0 / var_t347; // dimensionless
        const double var_t349 = var_t348 * var_t331; // dimensionless
        const double var_t353 = (((0.45000000000000001 * var_t340) * var_t342) * var_t346) * var_t349; // dimensionless
        const double var_t354 = var_ICaL__gamma_Cai * var_Ca_buffer__Ca_SL; // dimensionless
        const double var_t356 = exp(2.0 * var_t27); // dimensionless
        const double var_t358 = var_ICaL__gamma_Cao * var_model_parameters__Cao; // dimensionless
        const double var_t359 = (var_t354 * var_t356) - var_t358; // dimensionless
        const double var_t360 = var_ICaL__PCa * var_t359; // dimensionless
        const double var_t361 = var_t356 - 1.0; // dimensionless
        const double var_t362 = pow(var_t361, 2.0); // dimensionless
        const double var_t364 = (1.0 / var_t362) * var_t356; // dimensionless
        const double var_t368 = (((3.6000000000000001 * var_t340) * var_t342) * var_t360) * var_t364; // dimensionless
        const double var_t369 = 1.0 - var_ICaL_fCa_gate__fCaB_jct; // dimensionless
        const double var_t371 = (var_t323 * var_t369) * var_ICaL__Fx_ICaL_jct; // dimensionless
        const double var_t372 = var_ICaL__gamma_Cai * var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t374 = (var_t372 * var_t356) - var_t358; // dimensionless
        const double var_t375 = var_ICaL__PCa * var_t374; // dimensionless
        const double var_t379 = (((3.6000000000000001 * var_t340) * var_t371) * var_t375) * var_t364; // dimensionless
        const double var_t382 = ((var_t314 * var_t315) * var_t317) * var_t24; // dimensionless
        const double var_t383 = var_t25 * var_t369; // dimensionless
        const double var_t384 = var_t383 * var_ICaL__Fx_ICaL_jct; // dimensionless
        const double var_t385 = var_ICaL__gamma_Nai * var_Na_buffer__Na_jct; // dimensionless
        const double var_t387 = (var_t385 * var_t331) - var_t344; // dimensionless
        const double var_t388 = var_ICaL__PNa * var_t387; // dimensionless
        const double var_t389 = var_t388 * var_t333; // dimensionless
        const double var_t390 = var_t384 * var_t389; // dimensionless
        const double var_t392 = (0.45000000000000001 * var_t382) * var_t390; // dimensionless
        const double var_t393 = var_t369 * var_ICaL__Fx_ICaL_jct; // dimensionless
        const double var_t394 = var_t393 * var_ICaL__PNa; // dimensionless
        const double var_t398 = (((0.45000000000000001 * var_t326) * var_t394) * var_t385) * var_t334; // dimensionless
        const double var_t402 = (((0.45000000000000001 * var_t340) * var_t371) * var_t388) * var_t349; // dimensionless
        const double var_t403 = var_t328 + var_t393; // dimensionless
        const double var_t405 = var_ICaL__gamma_Ki * var_model_parameters__Ki; // dimensionless
        const double var_t408 = (var_t405 * var_t331) - (var_ICaL__gamma_Ko * var_model_parameters__Ko); // dimensionless
        const double var_t410 = (var_ICaL__PK * var_t408) * var_t333; // dimensionless
        const double var_t411 = (var_t25 * var_t403) * var_t410; // dimensionless
        const double var_t415 = (var_t323 * var_t403) * var_ICaL__PK; // dimensionless
        const double var_t425 = var_t25 * var_t327; // dimensionless
        const double var_t426 = var_t425 * var_ICaL__Fx_ICaL_SL; // dimensionless
        const double var_t427 = 1.0 / var_t361; // dimensionless
        const double var_t428 = var_t360 * var_t427; // dimensionless
        const double var_t429 = var_t426 * var_t428; // dimensionless
        const double var_t431 = (1.8 * var_t382) * var_t429; // dimensionless
        const double var_t432 = var_t375 * var_t427; // dimensionless
        const double var_t433 = var_t384 * var_t432; // dimensionless
        const double var_t435 = (1.8 * var_t382) * var_t433; // dimensionless
        const double var_t437 = var_t356 * var_t427; // dimensionless
        const double var_t441 = ((((3.6000000000000001 * var_t326) * var_t393) * var_ICaL__PCa) * var_t372) * var_t437; // dimensionless
        const double var_t446 = ((((3.6000000000000001 * var_t326) * var_t328) * var_ICaL__PCa) * var_t354) * var_t437; // dimensionless
        const double var_t447 = var_t346 * var_t333; // dimensionless
        const double var_t448 = var_t426 * var_t447; // dimensionless
        const double var_t450 = (0.45000000000000001 * var_t382) * var_t448; // dimensionless
        const double var_t451 = ((((((((((((((((((((-var_ICl_Ca__G_Cl) * ((var_ICl_Ca__Fx_Cl_jct / var_t276) + (var_ICl_Ca__Fx_Cl_SL / var_t281))) - var_t286) - var_t287) + var_t302) + var_t313) - var_t338) + var_t353) + var_t368) + var_t379) - var_t392) - var_t398) + var_t402) - ((0.45000000000000001 * var_t382) * var_t411)) - ((((0.45000000000000001 * var_t340) * var_t415) * var_t405) * var_t334)) + (((((0.45000000000000001 * var_t340) * var_t415) * var_t408) * var_t348) * var_t331)) - var_t431) - var_t435) - var_t441) - var_t446) - var_t450; // dimensionless
        const double var_t453 = var_t203 * var_INa_j_gate__j; // dimensionless
        const double var_t455 = log(var_model_parameters__Nao * var_t41); // dimensionless
        const double var_t458 = var_cell__V - ((var_t10 * var_t11) * var_t455); // dimensionless
        const double var_t462 = log(var_model_parameters__Nao * var_t63); // dimensionless
        const double var_t465 = var_cell__V - ((var_t10 * var_t11) * var_t462); // dimensionless
        const double var_t475 = var_INa_h_gate__h * var_INa_j_gate__j; // dimensionless
        const double var_t490 = 1.0 / (var_model_parameters__Ki + (var_IKs__pKNa * var_Na_buffer__Nai)); // dimensionless
        const double var_t492 = log((var_model_parameters__Ko + (var_IKs__pKNa * var_model_parameters__Nao)) * var_t490); // dimensionless
        const double var_t495 = var_cell__V - ((var_t10 * var_t11) * var_t492); // dimensionless
        const double var_t504 = var_t263 * var_t17; // dimensionless
        const double var_t509 = var_ICaL_f_gate__f * var_t315; // dimensionless
        const double var_t511 = (var_cell__V * var_t317) * var_t24; // dimensionless
        const double var_t512 = var_t509 * var_t511; // dimensionless
        const double var_t524 = var_ICaL_d_gate__d * var_t315; // dimensionless
        const double var_t525 = var_t524 * var_t511; // dimensionless
        const double var_t537 = var_t315 * var_cell__V; // dimensionless
        const double var_t539 = (var_t314 * var_t537) * var_t317; // dimensionless
        const double var_t540 = var_t26 * var_ICaL__Fx_ICaL_SL; // dimensionless
        const double var_t551 = var_t26 * var_ICaL__Fx_ICaL_jct; // dimensionless
        const double var_t563 = var_INa_j_gate__j * var_model_parameters__R; // dimensionless
        const double var_t564 = var_model_parameters__T * var_t11; // dimensionless
        const double var_t565 = var_t564 * var_t41; // dimensionless
        const double var_t567 = ((var_t207 * var_t204) * var_t563) * var_t565; // dimensionless
        const double var_t568 = 1.0 / var_t37; // dimensionless
        const double var_t569 = pow(var_t44, 2.0); // dimensionless
        const double var_t573 = var_model_parameters__Ko * var_t48; // dimensionless
        const double var_t577 = (((((var_t22 * var_t568) / var_t569) * var_t573) * var_t43) * var_INaK__H_NaK) * var_t41; // dimensionless
        const double var_t578 = var_t135 * var_t83; // dimensionless
        const double var_t581 = var_t137 * var_INaCa__HNa; // dimensionless
        const double var_t583 = var_model_parameters__Cao * var_t110; // dimensionless
        const double var_t586 = (((((var_t129 * var_t578) * var_t89) * var_t581) * var_t41) * var_t583) * var_t156; // dimensionless
        const double var_t587 = var_t129 * var_t578; // dimensionless
        const double var_t588 = var_t306 * var_t110; // dimensionless
        const double var_t589 = pow(var_t155, 2.0); // dimensionless
        const double var_t590 = 1.0 / var_t589; // dimensionless
        const double var_t601 = ((var_t587 * var_t588) * var_t590) * (((((var_t111 * var_t147) * var_INaCa__HNa) * var_t41) + ((var_t154 * var_INaCa__HNa) * var_t41)) + ((var_t581 * var_t41) * var_model_parameters__Cao)); // dimensionless
        const double var_t603 = (var_t272 * var_model_parameters__R) * var_t565; // dimensionless
        const double var_t604 = var_t316 * var_t511; // dimensionless
        const double var_t606 = (var_ICaL__PNa * var_ICaL__gamma_Nai) * var_t334; // dimensionless
        const double var_t609 = ((0.45000000000000001 * var_t604) * var_t426) * var_t606; // dimensionless
        const double var_t611 = pow(var_t66, 2.0); // dimensionless
        const double var_t618 = (((((var_t61 * var_t568) / var_t611) * var_t573) * var_t65) * var_INaK__H_NaK) * var_t63; // dimensionless
        const double var_t619 = var_t79 * var_t83; // dimensionless
        const double var_t622 = var_t91 * var_INaCa__HNa; // dimensionless
        const double var_t626 = (((((var_t71 * var_t619) * var_t89) * var_t622) * var_t63) * var_t583) * var_t125; // dimensionless
        const double var_t627 = var_t71 * var_t619; // dimensionless
        const double var_t628 = var_t292 * var_t110; // dimensionless
        const double var_t629 = pow(var_t124, 2.0); // dimensionless
        const double var_t630 = 1.0 / var_t629; // dimensionless
        const double var_t641 = ((var_t627 * var_t628) * var_t630) * (((((var_t111 * var_t114) * var_INaCa__HNa) * var_t63) + ((var_t123 * var_INaCa__HNa) * var_t63)) + ((var_t622 * var_t63) * var_model_parameters__Cao)); // dimensionless
        const double var_t643 = var_t564 * var_t63; // dimensionless
        const double var_t645 = ((var_t201 * var_t204) * var_t563) * var_t643; // dimensionless
        const double var_t647 = (var_t287 * var_model_parameters__R) * var_t643; // dimensionless
        const double var_t650 = ((0.45000000000000001 * var_t604) * var_t384) * var_t606; // dimensionless
        const double var_t654 = ((var_t10 * var_t11) * var_t490) * var_IKs__pKNa; // dimensionless
        const double var_t658 = pow(var_ICap__Q10_SLCaP, var_t82); // dimensionless
        const double var_t659 = var_t658 * var_ICap__V_maxAF; // dimensionless
        const double var_t662 = pow(var_ICap__Km * var_t279, var_ICap__H); // dimensionless
        const double var_t664 = pow(1.0 + var_t662, 2.0); // dimensionless
        const double var_t669 = ((((var_t659 * var_ICap__Fx_SLCaP_SL) / var_t664) * var_t662) * var_ICap__H) * var_t279; // dimensionless
        const double var_t670 = pow(var_t178, 2.0); // dimensionless
        const double var_t675 = var_t182 * var_t495; // dimensionless
        const double var_t679 = pow(var_t134, 2.0); // dimensionless
        const double var_t684 = pow(var_t130, 2.0); // dimensionless
        const double var_t688 = (((((var_t129 / var_t679) * var_t83) * var_t588) * var_t156) * var_t73) / var_t684; // dimensionless
        const double var_t691 = (var_t587 * var_t290) * var_t157; // dimensionless
        const double var_t697 = ((var_t587 * var_t588) * var_t590) * (((var_t117 * var_t152) + (var_t150 * var_t119)) + var_t102); // dimensionless
        const double var_t701 = ((((1.0 / 2.0) * var_t271) * var_model_parameters__R) * var_t564) * var_t279; // dimensionless
        const double var_t704 = log(var_model_parameters__Cli / var_model_parameters__Clo); // dimensionless
        const double var_t708 = var_ICl_Ca__G_Cl * (var_cell__V - ((var_t10 * var_t11) * var_t704)); // dimensionless
        const double var_t710 = pow(var_t281, 2.0); // dimensionless
        const double var_t717 = (var_ICaL__PCa * var_ICaL__gamma_Cai) * var_t437; // dimensionless
        const double var_t720 = ((1.8 * var_t604) * var_t426) * var_t717; // dimensionless
        const double var_t724 = pow(var_ICap__Km * var_t274, var_ICap__H); // dimensionless
        const double var_t726 = pow(1.0 + var_t724, 2.0); // dimensionless
        const double var_t731 = ((((var_t659 * var_ICap__Fx_SLCaP_jct) / var_t726) * var_t724) * var_ICap__H) * var_t274; // dimensionless
        const double var_t732 = pow(var_t195, 2.0); // dimensionless
        const double var_t740 = pow(var_t78, 2.0); // dimensionless
        const double var_t745 = pow(var_t74, 2.0); // dimensionless
        const double var_t749 = (((((var_t71 / var_t740) * var_t83) * var_t628) * var_t125) * var_t73) / var_t745; // dimensionless
        const double var_t752 = (var_t627 * var_t290) * var_t126; // dimensionless
        const double var_t758 = ((var_t627 * var_t628) * var_t630) * (((var_t117 * var_t121) + (var_t118 * var_t119)) + var_t102); // dimensionless
        const double var_t762 = ((((1.0 / 2.0) * var_t286) * var_model_parameters__R) * var_t564) * var_t274; // dimensionless
        const double var_t764 = pow(var_t276, 2.0); // dimensionless
        const double var_t772 = ((1.8 * var_t604) * var_t384) * var_t717; // dimensionless
        const double var_t774 = var_cell__V < (-40.0); // dimensionless
        const double var_t777 = exp((-11.764705879999999) - (0.14705882349999999 * var_cell__V)); // dimensionless
        const double var_t780 = (-40.0) < var_cell__V; // dimensionless
        const double var_t781 = var_t774 ? ((-0.01985294118) * var_t777) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t785 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t788 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t793 = exp(((-0.090090090090000005) * var_cell__V) - 0.96036036039999995); // dimensionless
        const double var_t796 = pow(0.13 + (0.13 * var_t793), 2.0); // dimensionless
        const double var_t800 = (var_cell__V <= (-40.0)) ? ((0.28123999999999999 * var_t785) + (108500.0 * var_t788)) : var_t780 ? ((0.011711711709999999 / var_t796) * var_t793) : NAN; // dimensionless
        const double var_t803 = var_cell__V < (-40.0); // dimensionless
        const double var_t805 = var_t803 ? (0.13500000000000001 * var_t777) : 0.0; // dimensionless
        const double var_t807 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t810 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t816 = var_t803 ? ((3.5600000000000001 * var_t807) + (310000.0 * var_t810)) : (1.0 / (0.13 + (0.13 * var_t793))); // dimensionless
        const double var_t819 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t822 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t825 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t829 = exp((0.311 * var_cell__V) + 24.640530009999999); // dimensionless
        const double var_t830 = 1.0 + var_t829; // dimensionless
        const double var_t831 = 1.0 / var_t830; // dimensionless
        const double var_t835 = ((-127140.0) * var_t819) - (3.4740000000000003e-05 * var_t822); // dimensionless
        const double var_t838 = pow(var_t830, 2.0); // dimensionless
        const double var_t844 = var_t774 ? (((((((-31073.016) * var_t819) + (1.5254334000000001e-06 * var_t822)) * var_t825) * var_t831) + (var_t835 * var_t831)) - ((((0.311 * var_t835) * var_t825) / var_t838) * var_t829)) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t848 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t851 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919950000001); // dimensionless
        const double var_t852 = 1.0 + var_t851; // dimensionless
        const double var_t856 = pow(var_t852, 2.0); // dimensionless
        const double var_t863 = exp((-2.5349999990000002e-07) * var_cell__V); // dimensionless
        const double var_t866 = exp(((-0.10000000000000001) * var_cell__V) - 3.2000000000000002); // dimensionless
        const double var_t867 = 1.0 + var_t866; // dimensionless
        const double var_t871 = pow(var_t867, 2.0); // dimensionless
        const double var_t877 = (var_cell__V <= (-40.0)) ? ((((-0.001275024) * var_t848) / var_t852) + (((0.016701359999999998 * var_t848) / var_t856) * var_t851)) : var_t780 ? ((((-7.604999998e-08) * var_t863) / var_t867) + (((0.029999999999999999 * var_t863) / var_t871) * var_t866)) : NAN; // dimensionless
        const double var_t881 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t884 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t891 = exp((0.311 * var_cell__V) + 24.640529999999998); // dimensionless
        const double var_t895 = var_t803 ? (((((-127140.0) * var_t881) - (3.4740000000000003e-05 * var_t884)) * (var_cell__V + 37.780000000000001)) / (1.0 + var_t891)) : 0.0; // dimensionless
        const double var_t897 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t900 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919999999997); // dimensionless
        const double var_t906 = exp((-2.5349999999999999e-07) * var_cell__V); // dimensionless
        const double var_t907 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t909 = exp((-var_t907) - 3.2000000000000002); // dimensionless
        const double var_t914 = var_t803 ? ((0.1212 * var_t897) / (1.0 + var_t900)) : ((0.29999999999999999 * var_t906) / (1.0 + var_t909)); // dimensionless
        const double var_t917 = exp((-var_t907) - 4.7130000000000001); // dimensionless
        const double var_t918 = 1.0 - var_t917; // dimensionless
        const double var_t919 = 1.0 / var_t918; // dimensionless
        const double var_t920 = 1.0 - var_INa_m_gate__m; // dimensionless
        const double var_t923 = var_cell__V + 47.130000000000003; // dimensionless
        const double var_t924 = pow(var_t918, 2.0); // dimensionless
        const double var_t931 = exp(((-1.0) / 11.0) * var_cell__V); // dimensionless
        const double var_t941 = exp((-6.6666666650000002) - (0.1333333333 * var_cell__V)); // dimensionless
        const double var_t942 = 1.0 + var_t941; // dimensionless
        const double var_t943 = pow(var_t942, 2.0); // dimensionless
        const double var_t946 = var_cell__V + 7.0; // dimensionless
        const double var_t949 = exp(((-0.123) * var_cell__V) - 0.86099999999999999); // dimensionless
        const double var_t950 = 1.0 - var_t949; // dimensionless
        const double var_t951 = 1.0 / var_t950; // dimensionless
        const double var_t954 = var_cell__V + 10.0; // dimensionless
        const double var_t957 = exp((0.14499999999999999 * var_cell__V) + 1.45); // dimensionless
        const double var_t958 = var_t957 - 1.0; // dimensionless
        const double var_t959 = 1.0 / var_t958; // dimensionless
        const double var_t962 = ((0.0013799999999999999 * var_t946) * var_t951) + ((0.00060999999999999997 * var_t954) * var_t959); // dimensionless
        const double var_t968 = pow(var_t950, 2.0); // dimensionless
        const double var_t974 = pow(var_t958, 2.0); // dimensionless
        const double var_t984 = exp(((-0.059880239520000003) * var_cell__V) + 0.089820359279999998); // dimensionless
        const double var_t985 = 1.0 + var_t984; // dimensionless
        const double var_t986 = pow(var_t985, 2.0); // dimensionless
        const double var_t989 = var_cell__V + 30.0; // dimensionless
        const double var_t992 = exp(((-0.14799999999999999) * var_cell__V) - 4.4400000000000004); // dimensionless
        const double var_t993 = 1.0 - var_t992; // dimensionless
        const double var_t994 = 1.0 / var_t993; // dimensionless
        const double var_t999 = exp((0.068699999999999997 * var_cell__V) + 2.0609999999999999); // dimensionless
        const double var_t1000 = (-1.0) + var_t999; // dimensionless
        const double var_t1001 = 1.0 / var_t1000; // dimensionless
        const double var_t1004 = ((7.1899999999999999e-05 * var_t989) * var_t994) + ((0.00013100000000000001 * var_t989) * var_t1001); // dimensionless
        const double var_t1010 = pow(var_t993, 2.0); // dimensionless
        const double var_t1016 = pow(var_t1000, 2.0); // dimensionless
        const double var_t1025 = (((-1.0) / 15.0) * var_cell__V) - (1.0 / 5.0); // dimensionless
        const double var_t1026 = exp(var_t1025); // dimensionless
        const double var_t1027 = 1.0 + var_t1026; // dimensionless
        const double var_t1028 = pow(var_t1027, 2.0); // dimensionless
        const double var_t1030 = (1.0 / var_t1028) * var_t1026; // dimensionless
        const double var_t1031 = exp(-var_t1025); // dimensionless
        const double var_t1032 = 1.0 + var_t1031; // dimensionless
        const double var_t1035 = (9.0 / var_t1032) + 0.5; // dimensionless
        const double var_t1036 = 1.0 / var_t1035; // dimensionless
        const double var_t1039 = 1.0 / var_t1027; // dimensionless
        const double var_t1041 = pow(var_t1035, 2.0); // dimensionless
        const double var_t1044 = pow(var_t1032, 2.0); // dimensionless
        const double var_t1050 = (1.0 / 10.0) * var_cell__V; // dimensionless
        const double var_t1052 = exp(var_t1050 + 3.3500000000000001); // dimensionless
        const double var_t1053 = 1.0 + var_t1052; // dimensionless
        const double var_t1054 = pow(var_t1053, 2.0); // dimensionless
        const double var_t1056 = (1.0 / var_t1054) * var_t1052; // dimensionless
        const double var_t1058 = exp(var_t1050 + 6.0); // dimensionless
        const double var_t1059 = 1.0 + var_t1058; // dimensionless
        const double var_t1060 = 1.0 / var_t1059; // dimensionless
        const double var_t1062 = (3000.0 * var_t1060) + 30.0; // dimensionless
        const double var_t1063 = 1.0 / var_t1062; // dimensionless
        const double var_t1066 = 1.0 / var_t1053; // dimensionless
        const double var_t1068 = pow(var_t1062, 2.0); // dimensionless
        const double var_t1071 = pow(var_t1059, 2.0); // dimensionless
        const double var_t1073 = (1.0 / var_t1071) * var_t1058; // dimensionless
        const double var_t1078 = (2800.0 * var_t1060) + 220.0; // dimensionless
        const double var_t1079 = 1.0 / var_t1078; // dimensionless
        const double var_t1083 = pow(var_t1078, 2.0); // dimensionless
        const double var_t1089 = pow(var_cell__V, 2.0); // dimensionless
        const double var_t1091 = exp(((-1.0) / 900.0) * var_t1089); // dimensionless
        const double var_t1093 = (3.5 * var_t1091) + 1.5; // dimensionless
        const double var_t1094 = 1.0 / var_t1093; // dimensionless
        const double var_t1098 = pow(var_t1093, 2.0); // dimensionless
        const double var_t1105 = var_t1066 + 1.0; // dimensionless
        const double var_t1106 = (1.0 / 20.0) / var_t1105; // dimensionless
        const double var_t1118 = exp((((-1.0) / 6.0) * var_cell__V) - 2.4166666669999999); // dimensionless
        const double var_t1119 = 1.0 + var_t1118; // dimensionless
        const double var_t1120 = 1.0 / var_t1119; // dimensionless
        const double var_t1122 = 1.0 - var_t1118; // dimensionless
        const double var_t1123 = 1.0 / var_t1122; // dimensionless
        const double var_t1125 = (0.035000000000000003 * var_cell__V) + 0.50749999999999995; // dimensionless
        const double var_t1126 = var_t1123 * var_t1125; // dimensionless
        const double var_t1129 = var_t1120 - var_ICaL_d_gate__d; // dimensionless
        const double var_t1133 = var_t1129 * var_t1119; // dimensionless
        const double var_t1134 = pow(var_t1122, 2.0); // dimensionless
        const double var_t1147 = exp((0.27777777780000001 * var_cell__V) + 9.7388888900000001); // dimensionless
        const double var_t1148 = 1.0 + var_t1147; // dimensionless
        const double var_t1149 = pow(var_t1148, 2.0); // dimensionless
        const double var_t1155 = exp((5.0 / 2.0) - ((1.0 / 20.0) * var_cell__V)); // dimensionless
        const double var_t1156 = 1.0 + var_t1155; // dimensionless
        const double var_t1157 = pow(var_t1156, 2.0); // dimensionless
        const double var_t1164 = pow((0.033700000000000001 * var_cell__V) + 0.48864999999999997, 2.0); // dimensionless
        const double var_t1165 = exp(-var_t1164); // dimensionless
        const double var_t1167 = (0.019699999999999999 * var_t1165) + 0.02; // dimensionless
        const double var_t1187 = var_Jrel_SR__Max_SR - var_Jrel_SR__Min_SR; // dimensionless
        const double var_t1188 = 1.0 / var_Ca_buffer__Ca_SR; // dimensionless
        const double var_t1190 = pow(var_Jrel_SR__EC50_SR * var_t1188, var_Jrel_SR__HSR); // dimensionless
        const double var_t1191 = 1.0 + var_t1190; // dimensionless
        const double var_t1194 = var_Jrel_SR__Max_SR - (var_t1187 / var_t1191); // dimensionless
        const double var_t1195 = var_Jrel_SR__kiCa * var_t1194; // dimensionless
        const double var_t1196 = var_t1195 * var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t1198 = var_Jrel_SR__koCa / var_t1194; // dimensionless
        const double var_t1199 = var_t1198 * var_t74; // dimensionless
        const double var_t1203 = pow(var_t1191, 2.0); // dimensionless
        const double var_t1204 = 1.0 / var_t1203; // dimensionless
        const double var_t1206 = ((var_Jrel_SR__kiCa * var_t1187) * var_t1204) * var_t1190; // dimensionless
        const double var_t1207 = var_Jrel_SR__HSR * var_t1188; // dimensionless
        const double var_t1208 = var_Ca_buffer__Ca_jct * var_Jrel_SR__R; // dimensionless
        const double var_t1211 = pow(var_t1194, 2.0); // dimensionless
        const double var_t1213 = var_Jrel_SR__koCa / var_t1211; // dimensionless
        const double var_t1219 = (((var_t1187 * var_t1204) * var_t1190) * var_Jrel_SR__HSR) * var_t1188; // dimensionless
        const double var_t1220 = ((var_t1213 * var_t74) * var_Jrel_SR__R) * var_t1219; // dimensionless
        const double var_t1224 = (2.0 * var_t1198) * var_t1208; // dimensionless
        const double var_t1230 = ((var_t1206 * var_t1207) * var_Ca_buffer__Ca_jct) * var_Jrel_SR__O; // dimensionless
        const double var_t1231 = ((1.0 - var_Jrel_SR__R) - var_Jrel_SR__O) - var_Jrel_SR__I; // dimensionless
        const double var_t1236 = var_t1195 * var_Jrel_SR__O; // dimensionless
        const double var_t1249 = pow(var_model_parameters__cell_radius, 2.0); // dimensionless
        const double var_t1252 = (1.0 / var_t1249) / var_model_parameters__cell_length; // dimensionless
        const double var_t1253 = var_t1252 * var_t11; // dimensionless
        const double var_t1256 = var_model_parameters__Cm * var_INa__Fx_Na_SL; // dimensionless
        const double var_t1257 = var_INa__G_INa * var_t203; // dimensionless
        const double var_t1258 = var_t1256 * var_t1257; // dimensionless
        const double var_t1260 = (var_INa_j_gate__j * var_t458) * var_t1253; // dimensionless
        const double var_t1268 = (var_INa__G_INa * var_t202) * var_INa_h_gate__h; // dimensionless
        const double var_t1274 = ((var_model_parameters__Cm * var_ICaL_f_gate__f) * var_t315) * var_t27; // dimensionless
        const double var_t1276 = (var_t345 * var_t333) * var_t1252; // dimensionless
        const double var_t1277 = var_t329 * var_t1276; // dimensionless
        const double var_t1280 = var_model_parameters__Cm * var_ICaL_d_gate__d; // dimensionless
        const double var_t1282 = (var_t1280 * var_t315) * var_t27; // dimensionless
        const double var_t1287 = ((var_t1280 * var_ICaL_f_gate__f) * var_t537) * var_t49; // dimensionless
        const double var_t1302 = var_Na_buffer__kon * (var_Na_buffer__Bmax_SL - var_Na_buffer__Na_SL_buf); // dimensionless
        const double var_t1306 = (var_Na_buffer__kon * var_Na_buffer__Na_SL) + var_Na_buffer__koff; // dimensionless
        const double var_t1322 = var_model_parameters__Cm * var_INa__Fx_Na_jct; // dimensionless
        const double var_t1323 = var_t1322 * var_t1257; // dimensionless
        const double var_t1325 = (var_INa_j_gate__j * var_t465) * var_t1253; // dimensionless
        const double var_t1336 = (var_t387 * var_t333) * var_t1252; // dimensionless
        const double var_t1337 = var_t394 * var_t1336; // dimensionless
        const double var_t1347 = 10814.85889 * var_t1252; // dimensionless
        const double var_t1356 = var_Na_buffer__kon * (var_Na_buffer__Bmax_jct - var_Na_buffer__Na_jct_buf); // dimensionless
        const double var_t1359 = (var_Na_buffer__kon * var_Na_buffer__Na_jct) + var_Na_buffer__koff; // dimensionless
        const double var_t1367 = 802.43473770000003 * var_t1252; // dimensionless
        const double var_t1369 = var_Jrel_SR__ks * (var_Ca_buffer__Ca_SR - var_Ca_buffer__Ca_jct); // dimensionless
        const double var_t1370 = pow(var_Jpump_SR__Q10_SRCaP, var_t82); // dimensionless
        const double var_t1371 = var_t1370 * var_Jpump_SR__V_max; // dimensionless
        const double var_t1374 = pow(var_Ca_buffer__Ca_SR / var_Jpump_SR__Kmr, var_Jpump_SR__H); // dimensionless
        const double var_t1376 = var_Jpump_SR__H * var_t1188; // dimensionless
        const double var_t1379 = pow(var_Ca_buffer__Cai / var_Jpump_SR__Kmf, var_Jpump_SR__H); // dimensionless
        const double var_t1380 = (1.0 + var_t1379) + var_t1374; // dimensionless
        const double var_t1381 = 1.0 / var_t1380; // dimensionless
        const double var_t1383 = ((var_t1371 * var_t1374) * var_t1376) * var_t1381; // dimensionless
        const double var_t1385 = var_t1371 * (var_t1379 - var_t1374); // dimensionless
        const double var_t1386 = pow(var_t1380, 2.0); // dimensionless
        const double var_t1387 = 1.0 / var_t1386; // dimensionless
        const double var_t1390 = ((var_t1385 * var_t1387) * var_t1374) * var_t1376; // dimensionless
        const double var_t1391 = 18.571428569999998 * var_Jleak_SR__KSRleak; // dimensionless
        const double var_t1392 = var_Jrel_SR__ks * var_Jrel_SR__O; // dimensionless
        const double var_t1395 = var_Ca_buffer__kon_Calsequestrin * ((18.571428569999998 * var_Ca_buffer__Bmax_Calsequestrin) - var_Ca_buffer__Ca_Calsequestrin); // dimensionless
        const double var_t1400 = var_Jpump_SR__H / var_Ca_buffer__Cai; // dimensionless
        const double var_t1402 = ((var_t1371 * var_t1379) * var_t1400) * var_t1381; // dimensionless
        const double var_t1405 = ((var_t1385 * var_t1387) * var_t1379) * var_t1400; // dimensionless
        const double var_t1408 = (var_Ca_buffer__kon_Calsequestrin * var_Ca_buffer__Ca_SR) + var_Ca_buffer__koff_Calsequestrin; // dimensionless
        const double var_t1415 = var_t509 * var_cell__V; // dimensionless
        const double var_t1416 = var_t49 * var_t425; // dimensionless
        const double var_t1421 = (var_t427 * var_model_parameters__Cm) * var_t1252; // dimensionless
        const double var_t1422 = ((var_ICaL__Fx_ICaL_SL * var_ICaL__PCa) * var_t359) * var_t1421; // dimensionless
        const double var_t1425 = var_t524 * var_cell__V; // dimensionless
        const double var_t1429 = var_t316 * var_t27; // dimensionless
        const double var_t1446 = var_Ca_buffer__kon_SL * ((32.5 * var_Ca_buffer__Bmax_SLB_SL) - var_Ca_buffer__Ca_SLB_SL); // dimensionless
        const double var_t1449 = var_Ca_buffer__kon_SL * ((32.5 * var_Ca_buffer__Bmax_SLHigh_SL) - var_Ca_buffer__Ca_SLHigh_SL); // dimensionless
        const double var_t1453 = var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_SL; // dimensionless
        const double var_t1454 = var_t1453 + var_Ca_buffer__koff_SLB; // dimensionless
        const double var_t1455 = var_t1453 + var_Ca_buffer__koff_SLHigh; // dimensionless
        const double var_t1462 = var_t49 * var_t383; // dimensionless
        const double var_t1466 = ((var_ICaL__Fx_ICaL_jct * var_ICaL__PCa) * var_t374) * var_t1421; // dimensionless
        const double var_t1479 = 64.935064920000002 * var_t1392; // dimensionless
        const double var_t1480 = 1205.9369200000001 * var_Jleak_SR__KSRleak; // dimensionless
        const double var_t1482 = 486695.22519999999 * var_t1252; // dimensionless
        const double var_t1492 = var_Ca_buffer__kon_SL * ((120.593692 * var_Ca_buffer__Bmax_SLB_jct) - var_Ca_buffer__Ca_SLB_jct); // dimensionless
        const double var_t1495 = var_Ca_buffer__kon_SL * ((120.593692 * var_Ca_buffer__Bmax_SLHigh_jct) - var_Ca_buffer__Ca_SLHigh_jct); // dimensionless
        const double var_t1497 = var_Ca_buffer__kon_SL * var_Ca_buffer__Ca_jct; // dimensionless
        const double var_t1498 = var_t1497 + var_Ca_buffer__koff_SLB; // dimensionless
        const double var_t1499 = var_t1497 + var_Ca_buffer__koff_SLHigh; // dimensionless
        const double var_t1503 = 1823.817706 * var_t1252; // dimensionless
        const double var_t1507 = var_cytosolic_Ca_buffer__kon_TroponinC * (var_cytosolic_Ca_buffer__Bmax_TroponinC - var_cytosolic_Ca_buffer__Ca_TroponinC); // dimensionless
        const double var_t1509 = var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca * ((var_cytosolic_Ca_buffer__Bmax_TroponinC_Ca_Mg_Ca - var_cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg) - var_cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg); // dimensionless
        const double var_t1511 = var_cytosolic_Ca_buffer__kon_Calmodulin * (var_cytosolic_Ca_buffer__Bmax_Calmodulin - var_cytosolic_Ca_buffer__Ca_Calmodulin); // dimensionless
        const double var_t1513 = var_cytosolic_Ca_buffer__kon_Myosin_Ca * ((var_cytosolic_Ca_buffer__Bmax_Myosin_Ca - var_cytosolic_Ca_buffer__Ca_Myosin) - var_cytosolic_Ca_buffer__Mg_Myosin); // dimensionless
        const double var_t1515 = var_cytosolic_Ca_buffer__kon_SRB * (var_cytosolic_Ca_buffer__Bmax_SRB - var_cytosolic_Ca_buffer__Ca_SRB); // dimensionless
        const double var_t1518 = (var_cytosolic_Ca_buffer__kon_TroponinC * var_Ca_buffer__Cai) + var_cytosolic_Ca_buffer__koff_TroponinC; // dimensionless
        const double var_t1519 = var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Ca * var_Ca_buffer__Cai; // dimensionless
        const double var_t1520 = var_cytosolic_Ca_buffer__kon_TroponinC_Ca_Mg_Mg * var_model_parameters__Mgi; // dimensionless
        const double var_t1524 = (var_cytosolic_Ca_buffer__kon_Calmodulin * var_Ca_buffer__Cai) + var_cytosolic_Ca_buffer__koff_Calmodulin; // dimensionless
        const double var_t1525 = var_cytosolic_Ca_buffer__kon_Myosin_Ca * var_Ca_buffer__Cai; // dimensionless
        const double var_t1526 = var_cytosolic_Ca_buffer__kon_Myosin_Mg * var_model_parameters__Mgi; // dimensionless
        const double var_t1530 = (var_cytosolic_Ca_buffer__kon_SRB * var_Ca_buffer__Cai) + var_cytosolic_Ca_buffer__koff_SRB; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t273 + var_t451));
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((var_t781 * (1.0 - var_INa_h_gate__h)) - (var_t800 * var_INa_h_gate__h));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((var_t844 * (1.0 - var_INa_j_gate__j)) - (var_t877 * var_INa_j_gate__j));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * ((((0.32000000000000001 * var_t919) * var_t920) - ((((0.032000000000000001 * var_t923) / var_t924) * var_t920) * var_t917)) + ((0.0072727272729999999 * var_t931) * var_INa_m_gate__m));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((0.1333333333 / var_t943) * var_t941) * var_t962) + (((1.0 / var_t942) - var_IKr_Xr_gate__Xr) * ((((0.0013799999999999999 * var_t951) - (((0.00016974000000000001 * var_t946) / var_t968) * var_t949)) + (0.00060999999999999997 * var_t959)) - (((8.8449999999999995e-05 * var_t954) / var_t974) * var_t957))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((0.059880239520000003 / var_t986) * var_t984) * var_t1004) + (((1.0 / var_t985) - var_IKs_Xs_gate__Xs) * ((((7.1899999999999999e-05 * var_t994) - (((1.0641200000000001e-05 * var_t989) / var_t1010) * var_t992)) + (0.00013100000000000001 * var_t1001)) - (((8.9996999999999996e-06 * var_t989) / var_t1016) * var_t999))));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((1.0 / 15.0) * var_t1030) * var_t1036) + (((((3.0 / 5.0) * (var_t1039 - var_Itos_X_gate__X_tos)) / var_t1041) / var_t1044) * var_t1031));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((-1.0) / 10.0) * var_t1056) * var_t1063) + (((300.0 * (var_t1066 - var_Itos_Y_gate__Y_tos)) / var_t1068) * var_t1073));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * (((((-1.0) / 10.0) * var_t1056) * var_t1079) + (((280.0 * (var_t1066 - var_Itos_R_gate__R_tos)) / var_t1083) * var_t1073));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((((1.0 / 15.0) * var_t1030) * var_t1094) + ((((0.007777777778 * (var_t1039 - var_Itof_X_gate__X_tof)) / var_t1098) * var_cell__V) * var_t1091));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * (((((-1.0) / 10.0) * var_t1056) * var_t1106) + ((((1.0 / 200.0) * (var_t1066 - var_Itof_Y_gate__Y_tof)) / pow(var_t1105, 2.0)) * var_t1056));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * (((((((1.0 / 6.0) * var_t1120) * var_t1118) * var_t1126) - ((((1.0 / 6.0) * var_t1129) * var_t1118) * var_t1126)) - (((((1.0 / 6.0) * var_t1133) / var_t1134) * var_t1125) * var_t1118)) + ((0.035000000000000003 * var_t1133) * var_t1123));
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * ((((((-0.27777777780000001) / var_t1149) * var_t1147) + ((0.029999999999999999 / var_t1157) * var_t1155)) * var_t1167) + (((0.019699999999999999 * (((1.0 / var_t1148) + (0.59999999999999998 / var_t1156)) - var_ICaL_f_gate__f)) * (((-0.0022713799999999999) * var_cell__V) - 0.032935010000000001)) * var_t1165));
        IJth(rJacobian, 19, 0) = var_chaste_interface__environment__fake_dt * ((((-15915494310000000.0) * var_model_parameters__Cm) * (((((((var_t208 + (3.0 * var_t159)) - (3.0 * var_t313)) + var_t272) - (3.0 * var_t60)) + var_t450) + var_t338) - var_t353)) * var_t1253);
        IJth(rJacobian, 20, 0) = var_chaste_interface__environment__fake_dt * ((((-5.905563749e+17) * var_model_parameters__Cm) * (((((((var_t206 + (3.0 * var_t128)) - (3.0 * var_t302)) + var_t287) - (3.0 * var_t70)) + var_t392) + var_t398) - var_t402)) * var_t1253);
        IJth(rJacobian, 25, 0) = var_chaste_interface__environment__fake_dt * ((((-7957747155000000.0) * (((((var_t431 + var_t446) - var_t368) - (2.0 * var_t159)) + (2.0 * var_t313)) + var_t271)) * var_model_parameters__Cm) * var_t1253);
        IJth(rJacobian, 26, 0) = var_chaste_interface__environment__fake_dt * ((((-2.952781874e+17) * (((((var_t435 + var_t441) - var_t379) - (2.0 * var_t128)) + (2.0 * var_t302)) + var_t286)) * var_model_parameters__Cm) * var_t1253);
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (((((((((-0.053846153850000002) * var_t1402) + (0.053846153850000002 * var_t1405)) - var_t1503) - var_t1507) - var_t1509) - var_t1511) - var_t1513) - var_t1515);
        IJth(rJacobian, 24, 1) = var_chaste_interface__environment__fake_dt * (var_t1402 - var_t1405);
        IJth(rJacobian, 25, 1) = var_chaste_interface__environment__fake_dt * (59274.07546 * var_t1252);
        IJth(rJacobian, 32, 1) = var_chaste_interface__environment__fake_dt * (var_t1507);
        IJth(rJacobian, 33, 1) = var_chaste_interface__environment__fake_dt * (var_t1509);
        IJth(rJacobian, 35, 1) = var_chaste_interface__environment__fake_dt * (var_t1511);
        IJth(rJacobian, 36, 1) = var_chaste_interface__environment__fake_dt * (var_t1513);
        IJth(rJacobian, 38, 1) = var_chaste_interface__environment__fake_dt * (var_t1515);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t207) * var_t453) * var_t458) - ((var_t201 * var_t453) * var_t465)));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * ((-var_t805) - var_t816);
        IJth(rJacobian, 19, 2) = var_chaste_interface__environment__fake_dt * (((-15915494310000000.0) * var_t1258) * var_t1260);
        IJth(rJacobian, 20, 2) = var_chaste_interface__environment__fake_dt * (((-5.905563749e+17) * var_t1323) * var_t1325);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t207) * var_t204) * var_t458) - ((var_t201 * var_t204) * var_t465)));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * ((-var_t895) - var_t914);
        IJth(rJacobian, 19, 3) = var_chaste_interface__environment__fake_dt * (((((-15915494310000000.0) * var_t1258) * var_INa_h_gate__h) * var_t458) * var_t1253);
        IJth(rJacobian, 20, 3) = var_chaste_interface__environment__fake_dt * (((((-5.905563749e+17) * var_t1323) * var_INa_h_gate__h) * var_t465) * var_t1253);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-3.0) * var_t207) * var_t202) * var_t475) * var_t458) - ((((3.0 * var_t201) * var_t202) * var_t475) * var_t465)));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * ((((-0.32000000000000001) * var_t923) * var_t919) - (0.080000000000000002 * var_t931));
        IJth(rJacobian, 19, 4) = var_chaste_interface__environment__fake_dt * ((((-47746482930000000.0) * var_t1256) * var_t1268) * var_t1260);
        IJth(rJacobian, 20, 4) = var_chaste_interface__environment__fake_dt * ((((-1.771669125e+18) * var_t1322) * var_t1268) * var_t1325);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t2) * var_t185) * var_t17));
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t962);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-2.0) * var_t189) * var_t198) * var_IKs_Xs_gate__Xs) * var_t495) - ((((2.0 * var_t170) * var_t181) * var_IKs_Xs_gate__Xs) * var_t495)));
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * (-var_t1004);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_Itos__G_tos) * var_t265) * var_t17));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t1036);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t504));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t1063);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.5) * var_t504));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t1079);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_Itof__G_tof) * var_Itof_Y_gate__Y_tof) * var_t17));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (-var_t1094);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t267) * var_t17));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t1106);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-0.45000000000000001) * var_t512) * var_t448) - ((1.8 * var_t512) * var_t429)) - ((1.8 * var_t512) * var_t433)) - ((0.45000000000000001 * var_t512) * var_t390)) - ((0.45000000000000001 * var_t512) * var_t411)));
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (((-var_t1119) * var_t1123) * var_t1125);
        IJth(rJacobian, 19, 12) = var_chaste_interface__environment__fake_dt * (((-7161972440000000.0) * var_t1274) * var_t1277);
        IJth(rJacobian, 20, 12) = var_chaste_interface__environment__fake_dt * (((-2.657503687e+17) * var_t1274) * var_t1337);
        IJth(rJacobian, 25, 12) = var_chaste_interface__environment__fake_dt * ((((-14323944880000000.0) * var_t1415) * var_t1416) * var_t1422);
        IJth(rJacobian, 26, 12) = var_chaste_interface__environment__fake_dt * ((((-5.315007373e+17) * var_t1415) * var_t1462) * var_t1466);
        IJth(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((-0.45000000000000001) * var_t525) * var_t448) - ((1.8 * var_t525) * var_t429)) - ((1.8 * var_t525) * var_t433)) - ((0.45000000000000001 * var_t525) * var_t390)) - ((0.45000000000000001 * var_t525) * var_t411)));
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (-var_t1167);
        IJth(rJacobian, 19, 13) = var_chaste_interface__environment__fake_dt * (((-7161972440000000.0) * var_t1282) * var_t1277);
        IJth(rJacobian, 20, 13) = var_chaste_interface__environment__fake_dt * (((-2.657503687e+17) * var_t1282) * var_t1337);
        IJth(rJacobian, 25, 13) = var_chaste_interface__environment__fake_dt * ((((-14323944880000000.0) * var_t1425) * var_t1416) * var_t1422);
        IJth(rJacobian, 26, 13) = var_chaste_interface__environment__fake_dt * ((((-5.315007373e+17) * var_t1425) * var_t1462) * var_t1466);
        IJth(rJacobian, 0, 14) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((0.45000000000000001 * var_t539) * var_t540) * var_t447) + (((1.8 * var_t539) * var_t540) * var_t428)) + (((0.45000000000000001 * var_t539) * var_t540) * var_t410)));
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * (((-1.7) * var_Ca_buffer__Ca_SL) - 0.011900000000000001);
        IJth(rJacobian, 19, 14) = var_chaste_interface__environment__fake_dt * (((((7161972440000000.0 * var_t1287) * var_t25) * var_ICaL__Fx_ICaL_SL) * var_ICaL__PNa) * var_t1276);
        IJth(rJacobian, 25, 14) = var_chaste_interface__environment__fake_dt * ((14323944880000000.0 * var_t1429) * var_t1422);
        IJth(rJacobian, 0, 15) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((1.8 * var_t539) * var_t551) * var_t432) + (((0.45000000000000001 * var_t539) * var_t551) * var_t389)) + (((0.45000000000000001 * var_t539) * var_t551) * var_t410)));
        IJth(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * (((-1.7) * var_Ca_buffer__Ca_jct) - 0.011900000000000001);
        IJth(rJacobian, 20, 15) = var_chaste_interface__environment__fake_dt * (((((2.657503687e+17 * var_t1287) * var_t25) * var_ICaL__Fx_ICaL_jct) * var_ICaL__PNa) * var_t1336);
        IJth(rJacobian, 26, 15) = var_chaste_interface__environment__fake_dt * ((5.315007373e+17 * var_t1429) * var_t1466);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * (((-var_Jrel_SR__kim) - var_t1196) - var_t1199);
        IJth(rJacobian, 17, 16) = var_chaste_interface__environment__fake_dt * (-var_t1199);
        IJth(rJacobian, 18, 16) = var_chaste_interface__environment__fake_dt * (var_t1199);
        IJth(rJacobian, 16, 17) = var_chaste_interface__environment__fake_dt * (-var_Jrel_SR__kim);
        IJth(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * (((-var_Jrel_SR__kim) - var_Jrel_SR__kom) - var_t1199);
        IJth(rJacobian, 18, 17) = var_chaste_interface__environment__fake_dt * (var_Jrel_SR__kim);
        IJth(rJacobian, 16, 18) = var_chaste_interface__environment__fake_dt * ((-var_Jrel_SR__kim) + var_Jrel_SR__kom);
        IJth(rJacobian, 17, 18) = var_chaste_interface__environment__fake_dt * (var_t1196 - var_t1199);
        IJth(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * ((-var_Jrel_SR__kom) - var_t1196);
        IJth(rJacobian, 24, 18) = var_chaste_interface__environment__fake_dt * (-var_t1369);
        IJth(rJacobian, 26, 18) = var_chaste_interface__environment__fake_dt * (64.935064920000002 * var_t1369);
        IJth(rJacobian, 0, 19) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t567) - var_t577) - var_t586) + var_t601) - var_t603) - var_t609));
        IJth(rJacobian, 19, 19) = var_chaste_interface__environment__fake_dt * ((((((-15915494310000000.0) * var_model_parameters__Cm) * (((((var_t567 + (3.0 * var_t586)) - (3.0 * var_t601)) + var_t603) + (3.0 * var_t577)) + var_t609)) * var_t1253) - (26370.58942 * var_t1252)) - var_t1302);
        IJth(rJacobian, 20, 19) = var_chaste_interface__environment__fake_dt * (var_t1347);
        IJth(rJacobian, 21, 19) = var_chaste_interface__environment__fake_dt * (var_t1302);
        IJth(rJacobian, 23, 19) = var_chaste_interface__environment__fake_dt * (var_t1367);
        IJth(rJacobian, 25, 19) = var_chaste_interface__environment__fake_dt * ((((-15915494310000000.0) * ((-var_t586) + var_t601)) * var_model_parameters__Cm) * var_t1253);
        IJth(rJacobian, 0, 20) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t618) - var_t626) + var_t641) - var_t645) - var_t647) - var_t650));
        IJth(rJacobian, 19, 20) = var_chaste_interface__environment__fake_dt * (291.4604473 * var_t1252);
        IJth(rJacobian, 20, 20) = var_chaste_interface__environment__fake_dt * ((((((-5.905563749e+17) * var_model_parameters__Cm) * (((((var_t645 + (3.0 * var_t626)) - (3.0 * var_t641)) + var_t647) + (3.0 * var_t618)) + var_t650)) * var_t1253) - var_t1347) - var_t1356);
        IJth(rJacobian, 22, 20) = var_chaste_interface__environment__fake_dt * (var_t1356);
        IJth(rJacobian, 26, 20) = var_chaste_interface__environment__fake_dt * ((((-5.905563748e+17) * ((-var_t626) + var_t641)) * var_model_parameters__Cm) * var_t1253);
        IJth(rJacobian, 19, 21) = var_chaste_interface__environment__fake_dt * (var_t1306);
        IJth(rJacobian, 21, 21) = var_chaste_interface__environment__fake_dt * (-var_t1306);
        IJth(rJacobian, 20, 22) = var_chaste_interface__environment__fake_dt * (var_t1359);
        IJth(rJacobian, 22, 22) = var_chaste_interface__environment__fake_dt * (-var_t1359);
        IJth(rJacobian, 0, 23) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t200) * var_t654) - (var_t184 * var_t654)));
        IJth(rJacobian, 19, 23) = var_chaste_interface__environment__fake_dt * (26079.128980000001 * var_t1252);
        IJth(rJacobian, 23, 23) = var_chaste_interface__environment__fake_dt * (-var_t1367);
        IJth(rJacobian, 1, 24) = var_chaste_interface__environment__fake_dt * ((0.053846153850000002 * var_t1383) + (0.053846153850000002 * var_t1390));
        IJth(rJacobian, 16, 24) = var_chaste_interface__environment__fake_dt * (((var_t1206 * var_t1207) * var_t1208) - var_t1220);
        IJth(rJacobian, 17, 24) = var_chaste_interface__environment__fake_dt * ((-var_t1230) + (((var_t1213 * var_t74) * var_t1231) * var_t1219));
        IJth(rJacobian, 18, 24) = var_chaste_interface__environment__fake_dt * (var_t1220 + var_t1230);
        IJth(rJacobian, 24, 24) = var_chaste_interface__environment__fake_dt * (((((-var_t1383) - var_t1390) - var_t1391) - var_t1392) - var_t1395);
        IJth(rJacobian, 26, 24) = var_chaste_interface__environment__fake_dt * (var_t1479 + var_t1480);
        IJth(rJacobian, 31, 24) = var_chaste_interface__environment__fake_dt * (var_t1395);
        IJth(rJacobian, 0, 25) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t669) - ((((((0.31666666669999999 * var_t170) / var_t670) * var_t279) * var_t173) * var_t177) * var_t675)) - (3.0 * var_t688)) + var_t691) + var_t697) - var_t701) - ((((var_t708 * var_ICl_Ca__Fx_Cl_SL) / var_t710) * var_ICl_Ca__Kd_ClCa) / var_t130)) - var_t720));
        IJth(rJacobian, 1, 25) = var_chaste_interface__environment__fake_dt * (var_t1503);
        IJth(rJacobian, 14, 25) = var_chaste_interface__environment__fake_dt * (1.7 - (1.7 * var_ICaL_fCa_gate__fCaB_SL));
        IJth(rJacobian, 19, 25) = var_chaste_interface__environment__fake_dt * ((((-15915494310000000.0) * var_model_parameters__Cm) * (((9.0 * var_t688) - (3.0 * var_t691)) - (3.0 * var_t697))) * var_t1253);
        IJth(rJacobian, 25, 25) = var_chaste_interface__environment__fake_dt * (((((((-7957747155000000.0) * (((((var_t720 - (6.0 * var_t688)) + (2.0 * var_t691)) + (2.0 * var_t697)) + var_t701) + var_t669)) * var_model_parameters__Cm) * var_t1253) - (72390.511780000001 * var_t1252)) - var_t1446) - var_t1449);
        IJth(rJacobian, 26, 25) = var_chaste_interface__environment__fake_dt * (var_t1482);
        IJth(rJacobian, 27, 25) = var_chaste_interface__environment__fake_dt * (var_t1446);
        IJth(rJacobian, 29, 25) = var_chaste_interface__environment__fake_dt * (var_t1449);
        IJth(rJacobian, 0, 26) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t731) - ((((((0.31666666669999999 * var_t189) / var_t732) * var_t274) * var_t173) * var_t194) * var_t675)) - (3.0 * var_t749)) + var_t752) + var_t758) - var_t762) - ((((var_t708 * var_ICl_Ca__Fx_Cl_jct) / var_t764) * var_ICl_Ca__Kd_ClCa) / var_t74)) - var_t772));
        IJth(rJacobian, 15, 26) = var_chaste_interface__environment__fake_dt * (1.7 - (1.7 * var_ICaL_fCa_gate__fCaB_jct));
        IJth(rJacobian, 16, 26) = var_chaste_interface__environment__fake_dt * (((-var_t1195) * var_Jrel_SR__R) - var_t1224);
        IJth(rJacobian, 17, 26) = var_chaste_interface__environment__fake_dt * (var_t1236 + (((2.0 * var_t1198) * var_Ca_buffer__Ca_jct) * var_t1231));
        IJth(rJacobian, 18, 26) = var_chaste_interface__environment__fake_dt * (var_t1224 - var_t1236);
        IJth(rJacobian, 20, 26) = var_chaste_interface__environment__fake_dt * ((((-5.905563749e+17) * var_model_parameters__Cm) * (((9.0 * var_t749) - (3.0 * var_t752)) - (3.0 * var_t758))) * var_t1253);
        IJth(rJacobian, 24, 26) = var_chaste_interface__environment__fake_dt * (var_t1391 + var_t1392);
        IJth(rJacobian, 25, 26) = var_chaste_interface__environment__fake_dt * (13116.43633 * var_t1252);
        IJth(rJacobian, 26, 26) = var_chaste_interface__environment__fake_dt * (((((((((-2.952781874e+17) * (((((var_t772 - (6.0 * var_t749)) + (2.0 * var_t752)) + (2.0 * var_t758)) + var_t762) + var_t731)) * var_model_parameters__Cm) * var_t1253) - var_t1482) - var_t1479) - var_t1480) - var_t1492) - var_t1495);
        IJth(rJacobian, 28, 26) = var_chaste_interface__environment__fake_dt * (var_t1492);
        IJth(rJacobian, 30, 26) = var_chaste_interface__environment__fake_dt * (var_t1495);
        IJth(rJacobian, 25, 27) = var_chaste_interface__environment__fake_dt * (var_t1454);
        IJth(rJacobian, 27, 27) = var_chaste_interface__environment__fake_dt * (-var_t1454);
        IJth(rJacobian, 26, 28) = var_chaste_interface__environment__fake_dt * (var_t1498);
        IJth(rJacobian, 28, 28) = var_chaste_interface__environment__fake_dt * (-var_t1498);
        IJth(rJacobian, 25, 29) = var_chaste_interface__environment__fake_dt * (var_t1455);
        IJth(rJacobian, 29, 29) = var_chaste_interface__environment__fake_dt * (-var_t1455);
        IJth(rJacobian, 26, 30) = var_chaste_interface__environment__fake_dt * (var_t1499);
        IJth(rJacobian, 30, 30) = var_chaste_interface__environment__fake_dt * (-var_t1499);
        IJth(rJacobian, 24, 31) = var_chaste_interface__environment__fake_dt * (var_t1408);
        IJth(rJacobian, 31, 31) = var_chaste_interface__environment__fake_dt * (-var_t1408);
        IJth(rJacobian, 1, 32) = var_chaste_interface__environment__fake_dt * (var_t1518);
        IJth(rJacobian, 32, 32) = var_chaste_interface__environment__fake_dt * (-var_t1518);
        IJth(rJacobian, 1, 33) = var_chaste_interface__environment__fake_dt * ((var_t1519 + var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca) + var_t1520);
        IJth(rJacobian, 33, 33) = var_chaste_interface__environment__fake_dt * ((-var_t1519) - var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Ca);
        IJth(rJacobian, 34, 33) = var_chaste_interface__environment__fake_dt * (-var_t1520);
        IJth(rJacobian, 1, 34) = var_chaste_interface__environment__fake_dt * ((var_t1519 + var_t1520) + var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg);
        IJth(rJacobian, 33, 34) = var_chaste_interface__environment__fake_dt * (-var_t1519);
        IJth(rJacobian, 34, 34) = var_chaste_interface__environment__fake_dt * ((-var_t1520) - var_cytosolic_Ca_buffer__koff_TroponinC_Ca_Mg_Mg);
        IJth(rJacobian, 1, 35) = var_chaste_interface__environment__fake_dt * (var_t1524);
        IJth(rJacobian, 35, 35) = var_chaste_interface__environment__fake_dt * (-var_t1524);
        IJth(rJacobian, 1, 36) = var_chaste_interface__environment__fake_dt * ((var_t1525 + var_cytosolic_Ca_buffer__koff_Myosin_Ca) + var_t1526);
        IJth(rJacobian, 36, 36) = var_chaste_interface__environment__fake_dt * ((-var_t1525) - var_cytosolic_Ca_buffer__koff_Myosin_Ca);
        IJth(rJacobian, 37, 36) = var_chaste_interface__environment__fake_dt * (-var_t1526);
        IJth(rJacobian, 1, 37) = var_chaste_interface__environment__fake_dt * ((var_t1525 + var_t1526) + var_cytosolic_Ca_buffer__koff_Myosin_Mg);
        IJth(rJacobian, 36, 37) = var_chaste_interface__environment__fake_dt * (-var_t1525);
        IJth(rJacobian, 37, 37) = var_chaste_interface__environment__fake_dt * ((-var_t1526) - var_cytosolic_Ca_buffer__koff_Myosin_Mg);
        IJth(rJacobian, 1, 38) = var_chaste_interface__environment__fake_dt * (var_t1530);
        IJth(rJacobian, 38, 38) = var_chaste_interface__environment__fake_dt * (-var_t1530);
    }
    
template<>
void OdeSystemInformation<DynamicShannon2004FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "shannon_2004";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-8.556885e1);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.597401e-5);

    // rY[2]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.867005e-1);

    // rY[3]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.91562e-1);

    // rY[4]:
    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.405627e-3);

    // rY[5]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.641386e-3);

    // rY[6]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.412034e-3);

    // rY[7]:
    this->mVariableNames.push_back("Itos_X_gate__X_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[8]:
    this->mVariableNames.push_back("Itos_Y_gate__Y_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[9]:
    this->mVariableNames.push_back("Itos_R_gate__R_tos");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9946);

    // rY[10]:
    this->mVariableNames.push_back("Itof_X_gate__X_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.051574e-3);

    // rY[11]:
    this->mVariableNames.push_back("Itof_Y_gate__Y_tof");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(9.945511e-1);

    // rY[12]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(7.175662e-6);

    // rY[13]:
    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.000681);

    // rY[14]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_SL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.452605e-2);

    // rY[15]:
    this->mVariableNames.push_back("ICaL_fCa_gate__fCaB_jct");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.421991e-2);

    // rY[16]:
    this->mVariableNames.push_back("Jrel_SR__R");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.884332e-1);

    // rY[17]:
    this->mVariableNames.push_back("Jrel_SR__I");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.024274e-7);

    // rY[18]:
    this->mVariableNames.push_back("Jrel_SR__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.156628e-7);

    // rY[19]:
    this->mVariableNames.push_back("Na_buffer__Na_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80733);

    // rY[20]:
    this->mVariableNames.push_back("Na_buffer__Na_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80329);

    // rY[21]:
    this->mVariableNames.push_back("Na_buffer__Na_SL_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.720854e-1);

    // rY[22]:
    this->mVariableNames.push_back("Na_buffer__Na_jct_buf");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.539892);

    // rY[23]:
    this->mVariableNames.push_back("Na_buffer__Nai");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.80853);

    // rY[24]:
    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(5.545201e-1);

    // rY[25]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.031812e-4);

    // rY[26]:
    this->mVariableNames.push_back("Ca_buffer__Ca_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.737475e-4);

    // rY[27]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.110363e-1);

    // rY[28]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLB_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(9.566355e-3);

    // rY[29]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_SL");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.297378e-2);

    // rY[30]:
    this->mVariableNames.push_back("Ca_buffer__Ca_SLHigh_jct");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.347888e-3);

    // rY[31]:
    this->mVariableNames.push_back("Ca_buffer__Ca_Calsequestrin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.242988);

    // rY[32]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.773191e-3);

    // rY[33]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.078283e-1);

    // rY[34]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_TroponinC_Ca_Mg");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.524002e-2);

    // rY[35]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Calmodulin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.911916e-4);

    // rY[36]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.298754e-3);

    // rY[37]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Mg_Myosin");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.381982e-1);

    // rY[38]:
    this->mVariableNames.push_back("cytosolic_Ca_buffer__Ca_SRB");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.143165e-3);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(DynamicShannon2004FromCellMLCvode)

#endif // CHASTE_CVODE
