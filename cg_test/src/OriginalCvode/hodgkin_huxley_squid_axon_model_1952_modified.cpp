#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: hodgkin_huxley_squid_axon_model_1952_modified
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:10:05 2020
//! 
//! <autogenerated>

#include "hodgkin_huxley_squid_axon_model_1952_modified.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode::Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                4,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode>::Instance();
        Init();

        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode::~Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode()
    {
    }
    
    double Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -75
        double var_chaste_interface__sodium_channel_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.05
        double var_chaste_interface__sodium_channel_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.6
        double var_chaste_interface__potassium_channel_n_gate__n = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.325
        
        const double var_membrane__E_R =  -75.0; // millivolt
        const double var_sodium_channel__h = var_chaste_interface__sodium_channel_h_gate__h; // dimensionless
        const double var_sodium_channel__m = var_chaste_interface__sodium_channel_m_gate__m; // dimensionless
        const double var_sodium_channel__g_Na = 120.0; // milliS_per_cm2
        const double var_sodium_channel__E_R = var_membrane__E_R; // millivolt
        const double var_sodium_channel__E_Na = var_sodium_channel__E_R + 115.0; // millivolt
        const double var_sodium_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_channel__i_Na = var_sodium_channel__g_Na * pow(var_sodium_channel__m, 3.0) * var_sodium_channel__h * (var_sodium_channel__V - var_sodium_channel__E_Na); // microA_per_cm2
        const double var_potassium_channel__n = var_chaste_interface__potassium_channel_n_gate__n; // dimensionless
        const double var_potassium_channel__E_R = var_membrane__E_R; // millivolt
        const double var_potassium_channel__E_K = var_potassium_channel__E_R - 12.0; // millivolt
        const double var_potassium_channel__g_K = 36.0; // milliS_per_cm2
        const double var_potassium_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_channel__i_K = var_potassium_channel__g_K * pow(var_potassium_channel__n, 4.0) * (var_potassium_channel__V - var_potassium_channel__E_K); // microA_per_cm2
        const double var_leakage_current__g_L = 0.29999999999999999; // milliS_per_cm2
        const double var_leakage_current__E_R = var_membrane__E_R; // millivolt
        const double var_leakage_current__E_L = var_leakage_current__E_R + 10.613; // millivolt
        const double var_leakage_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_leakage_current__i_L = var_leakage_current__g_L * (var_leakage_current__V - var_leakage_current__E_L); // microA_per_cm2
        const double var_chaste_interface__potassium_channel__i_K = var_potassium_channel__i_K; // microA_per_cm2
        const double var_chaste_interface__sodium_channel__i_Na = var_sodium_channel__i_Na; // microA_per_cm2
        const double var_chaste_interface__leakage_current__i_L = var_leakage_current__i_L; // microA_per_cm2
        const double var_chaste_interface__i_ionic = var_chaste_interface__sodium_channel__i_Na + var_chaste_interface__potassium_channel__i_K + var_chaste_interface__leakage_current__i_L; // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -75
        double var_chaste_interface__sodium_channel_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.05
        double var_chaste_interface__sodium_channel_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.6
        double var_chaste_interface__potassium_channel_n_gate__n = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.325
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_sodium_channel__h = var_chaste_interface__sodium_channel_h_gate__h; // dimensionless
        const double var_sodium_channel__m = var_chaste_interface__sodium_channel_m_gate__m; // dimensionless
        const double var_sodium_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_channel__n = var_chaste_interface__potassium_channel_n_gate__n; // dimensionless
        const double var_potassium_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_channel_m_gate__m = var_sodium_channel__m; // dimensionless
        const double var_sodium_channel_m_gate__V = var_sodium_channel__V; // millivolt
        const double var_sodium_channel_m_gate__beta_m = 4.0 * exp((-(var_sodium_channel_m_gate__V + 75.0)) / 18.0); // per_millisecond
        const double var_sodium_channel_m_gate__alpha_m = ((-0.10000000000000001) * (var_sodium_channel_m_gate__V + 50.0)) / (exp((-(var_sodium_channel_m_gate__V + 50.0)) / 10.0) - 1.0); // per_millisecond
        const double var_sodium_channel_m_gate__d_m_d_environment__time = (var_sodium_channel_m_gate__alpha_m * (1.0 - var_sodium_channel_m_gate__m)) - (var_sodium_channel_m_gate__beta_m * var_sodium_channel_m_gate__m); // per_millisecond
        const double var_sodium_channel__sodium_channel_m_gate__d_m_d_environment__time = var_sodium_channel_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_sodium_channel_h_gate__h = var_sodium_channel__h; // dimensionless
        const double var_sodium_channel_h_gate__V = var_sodium_channel__V; // millivolt
        const double var_sodium_channel_h_gate__beta_h = 1.0 / (exp((-(var_sodium_channel_h_gate__V + 45.0)) / 10.0) + 1.0); // per_millisecond
        const double var_sodium_channel_h_gate__alpha_h = 0.070000000000000007 * exp((-(var_sodium_channel_h_gate__V + 75.0)) / 20.0); // per_millisecond
        const double var_sodium_channel_h_gate__d_h_d_environment__time = (var_sodium_channel_h_gate__alpha_h * (1.0 - var_sodium_channel_h_gate__h)) - (var_sodium_channel_h_gate__beta_h * var_sodium_channel_h_gate__h); // per_millisecond
        const double var_sodium_channel__sodium_channel_h_gate__d_h_d_environment__time = var_sodium_channel_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_potassium_channel_n_gate__V = var_potassium_channel__V; // millivolt
        const double var_potassium_channel_n_gate__beta_n = 0.125 * exp((var_potassium_channel_n_gate__V + 75.0) / 80.0); // per_millisecond
        const double var_potassium_channel_n_gate__n = var_potassium_channel__n; // dimensionless
        const double var_potassium_channel_n_gate__alpha_n = ((-0.01) * (var_potassium_channel_n_gate__V + 65.0)) / (exp((-(var_potassium_channel_n_gate__V + 65.0)) / 10.0) - 1.0); // per_millisecond
        const double var_potassium_channel_n_gate__d_n_d_environment__time = (var_potassium_channel_n_gate__alpha_n * (1.0 - var_potassium_channel_n_gate__n)) - (var_potassium_channel_n_gate__beta_n * var_potassium_channel_n_gate__n); // per_millisecond
        const double var_potassium_channel__potassium_channel_n_gate__d_n_d_environment__time = var_potassium_channel_n_gate__d_n_d_environment__time; // per_millisecond
        const double var_chaste_interface__sodium_channel_m_gate__d_m_d_environment__time = var_sodium_channel__sodium_channel_m_gate__d_m_d_environment__time; // per_millisecond
        const double var_chaste_interface__sodium_channel_h_gate__d_h_d_environment__time = var_sodium_channel__sodium_channel_h_gate__d_h_d_environment__time; // per_millisecond
        const double var_chaste_interface__potassium_channel_n_gate__d_n_d_environment__time = var_potassium_channel__potassium_channel_n_gate__d_n_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__sodium_channel_m_gate__m = var_chaste_interface__sodium_channel_m_gate__d_m_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__sodium_channel_h_gate__h = var_chaste_interface__sodium_channel_h_gate__d_h_d_environment__time; // per_millisecond
        const double d_dt_chaste_interface__potassium_channel_n_gate__n = var_chaste_interface__potassium_channel_n_gate__d_n_d_environment__time; // per_millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__E_R =  -75.0; // millivolt
            const double var_membrane__Cm = 1.0; // microF_per_cm2
            const double var_sodium_channel__g_Na = 120.0; // milliS_per_cm2
            const double var_sodium_channel__E_R = var_membrane__E_R; // millivolt
            const double var_sodium_channel__E_Na = var_sodium_channel__E_R + 115.0; // millivolt
            const double var_sodium_channel__i_Na = var_sodium_channel__g_Na * pow(var_sodium_channel__m, 3.0) * var_sodium_channel__h * (var_sodium_channel__V - var_sodium_channel__E_Na); // microA_per_cm2
            const double var_membrane__i_Na = var_sodium_channel__i_Na; // microA_per_cm2
            const double var_potassium_channel__E_R = var_membrane__E_R; // millivolt
            const double var_potassium_channel__E_K = var_potassium_channel__E_R - 12.0; // millivolt
            const double var_potassium_channel__g_K = 36.0; // milliS_per_cm2
            const double var_potassium_channel__i_K = var_potassium_channel__g_K * pow(var_potassium_channel__n, 4.0) * (var_potassium_channel__V - var_potassium_channel__E_K); // microA_per_cm2
            const double var_membrane__i_K = var_potassium_channel__i_K; // microA_per_cm2
            const double var_leakage_current__g_L = 0.29999999999999999; // milliS_per_cm2
            const double var_leakage_current__E_R = var_membrane__E_R; // millivolt
            const double var_leakage_current__E_L = var_leakage_current__E_R + 10.613; // millivolt
            const double var_leakage_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_leakage_current__i_L = var_leakage_current__g_L * (var_leakage_current__V - var_leakage_current__E_L); // microA_per_cm2
            const double var_membrane__i_L = var_leakage_current__i_L; // microA_per_cm2
            const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            const double var_membrane__i_Stim = var_chaste_interface__membrane__i_Stim; // microA_per_cm2
            const double var_membrane__d_V_d_environment__time = (-(var_membrane__i_Stim + var_membrane__i_Na + var_membrane__i_K + var_membrane__i_L)) / var_membrane__Cm; // 'millivolt per millisecond'
            const double var_chaste_interface__membrane__d_V_d_environment__time = var_membrane__d_V_d_environment__time; // ___units_1
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__sodium_channel_m_gate__m;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__sodium_channel_h_gate__h;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__potassium_channel_n_gate__n;
    }
    
    void Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -75
        double var_chaste_interface__sodium_channel_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.05
        double var_chaste_interface__sodium_channel_h_gate__h = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.6
        double var_chaste_interface__potassium_channel_n_gate__n = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.325
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // millisecond
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__E_R =  -75.0; // millivolt
        const double var_membrane__Cm = 1.0; // microF_per_cm2
        const double var_sodium_channel__h = var_chaste_interface__sodium_channel_h_gate__h; // dimensionless
        const double var_sodium_channel__m = var_chaste_interface__sodium_channel_m_gate__m; // dimensionless
        const double var_sodium_channel__g_Na = 120.0; // milliS_per_cm2
        const double var_potassium_channel__n = var_chaste_interface__potassium_channel_n_gate__n; // dimensionless
        const double var_potassium_channel__g_K = 36.0; // milliS_per_cm2
        const double var_leakage_current__g_L = 0.29999999999999999; // milliS_per_cm2
        const double var_sodium_channel_m_gate__m = var_sodium_channel__m; // dimensionless
        const double var_sodium_channel_h_gate__h = var_sodium_channel__h; // dimensionless
        const double var_potassium_channel_n_gate__n = var_potassium_channel__n; // dimensionless
        const double var_t1 = pow(var_sodium_channel_m_gate__m, 2.0); // dimensionless
        const double var_t3 = (var_sodium_channel__g_Na * var_t1) * var_sodium_channel_m_gate__m; // dimensionless
        const double var_t5 = pow(var_potassium_channel_n_gate__n, 2.0); // dimensionless
        const double var_t6 = pow(var_t5, 2.0); // dimensionless
        const double var_t9 = 1.0 / var_membrane__Cm; // dimensionless
        const double var_t12 = (var_membrane__V - var_membrane__E_R) - 115.0; // dimensionless
        const double var_t25 = (1.0 / 10.0) * var_membrane__V; // dimensionless
        const double var_t27 = exp((-var_t25) - 5.0); // dimensionless
        const double var_t28 = var_t27 - 1.0; // dimensionless
        const double var_t29 = 1.0 / var_t28; // dimensionless
        const double var_t30 = 1.0 - var_sodium_channel_m_gate__m; // dimensionless
        const double var_t33 = var_membrane__V + 50.0; // dimensionless
        const double var_t34 = pow(var_t28, 2.0); // dimensionless
        const double var_t42 = exp((((-1.0) / 18.0) * var_membrane__V) - (25.0 / 6.0)); // dimensionless
        const double var_t52 = exp((((-1.0) / 20.0) * var_membrane__V) - (15.0 / 4.0)); // dimensionless
        const double var_t57 = exp((-var_t25) - (9.0 / 2.0)); // dimensionless
        const double var_t58 = var_t57 + 1.0; // dimensionless
        const double var_t59 = pow(var_t58, 2.0); // dimensionless
        const double var_t69 = exp((-var_t25) - (13.0 / 2.0)); // dimensionless
        const double var_t70 = var_t69 - 1.0; // dimensionless
        const double var_t71 = 1.0 / var_t70; // dimensionless
        const double var_t72 = 1.0 - var_potassium_channel_n_gate__n; // dimensionless
        const double var_t75 = var_membrane__V + 65.0; // dimensionless
        const double var_t76 = pow(var_t70, 2.0); // dimensionless
        const double var_t84 = exp(((1.0 / 80.0) * var_membrane__V) + (15.0 / 16.0)); // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t3) * var_sodium_channel_h_gate__h) - (var_potassium_channel__g_K * var_t6)) - var_leakage_current__g_L) * var_t9));
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((((-0.10000000000000001) * var_t29) * var_t30) - ((((0.01 * var_t33) / var_t34) * var_t30) * var_t27)) + (((2.0 / 9.0) * var_t42) * var_sodium_channel_m_gate__m));
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((-0.0035000000000000001) * var_t52) * (1.0 - var_sodium_channel_h_gate__h)) - ((((1.0 / 10.0) / var_t59) * var_sodium_channel_h_gate__h) * var_t57));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * (((((-0.01) * var_t71) * var_t72) - ((((0.001 * var_t75) / var_t76) * var_t72) * var_t69)) - ((0.0015625000000000001 * var_t84) * var_potassium_channel_n_gate__n));
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-3.0) * var_sodium_channel__g_Na) * var_t1) * var_sodium_channel_h_gate__h) * var_t12) * var_t9));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (((0.10000000000000001 * var_t33) * var_t29) - (4.0 * var_t42));
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t3) * var_t12) * var_t9));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (((-0.070000000000000007) * var_t52) - (1.0 / var_t58));
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-4.0) * var_potassium_channel__g_K) * var_t5) * var_potassium_channel_n_gate__n) * ((var_membrane__V - var_membrane__E_R) + 12.0)) * var_t9));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (((0.01 * var_t75) * var_t71) - (0.125 * var_t84));
    }
    
template<>
void OdeSystemInformation<Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "hodgkin_huxley_squid_axon_model_1952_modified";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-75);

    // rY[1]:
    this->mVariableNames.push_back("sodium_channel_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.05);

    // rY[2]:
    this->mVariableNames.push_back("sodium_channel_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.6);

    // rY[3]:
    this->mVariableNames.push_back("potassium_channel_n_gate__n");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.325);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamichodgkin_huxley_squid_axon_model_1952_modifiedFromCellMLCvode)

#endif // CHASTE_CVODE
