#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: zhang_SAN_model_2000_all
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:16:08 2020
//! 
//! <autogenerated>

#include "zhang_SAN_model_2000_all.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    Dynamiczhang_SAN_model_2000_allFromCellMLCvode::Dynamiczhang_SAN_model_2000_allFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiczhang_SAN_model_2000_allFromCellMLCvode>::Instance();
        Init();

        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamiczhang_SAN_model_2000_allFromCellMLCvode::~Dynamiczhang_SAN_model_2000_allFromCellMLCvode()
    {
    }
    
    double Dynamiczhang_SAN_model_2000_allFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_membrane__Version = 1.0; // dimensionless
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__Version == 0.0) ? ((1.0700000000000001 * ((3.0 * var_membrane__dCell) - 0.10000000000000001)) / (3.0 * (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))))) : (var_membrane__Version == 1.0) ? ((var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998)))) : ((1.0700000000000001 * 29.0 * var_membrane__dCell) / (30.0 * (1.0 + (0.77449999999999997 * exp((-((29.0 * var_membrane__dCell) - 24.5)) / 1.95))))); // dimensionless
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
        const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
        const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
        const double var_ionic_concentrations__Na_o = 140.0; // millimolar
        const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
        const double var_ionic_concentrations__Na_i = 8.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
        const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
        const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__Version = var_membrane__Version; // dimensionless
        const double var_sodium_current_h_gate__Version = var_sodium_current__Version; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_h_gate__F_Na = (var_sodium_current_h_gate__Version == 0.0) ? (((0.095200000000000007 * exp((-0.063) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6599999999999999 * exp((-0.22500000000000001) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086900000000000005) : (((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993); // dimensionless
        const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
        const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
        const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
        const double var_sodium_current__g_Na_Centre_1DCapable = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Centre_Published = 0.0; // microlitre_per_second
        const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_current__g_Na_Periphery_1DCapable = 3.7e-07; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery_Published = 1.1999999999999999e-06; // microlitre_per_second
        const double var_sodium_current__g_Na_Centre_0DCapable = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery_0DCapable = 1.204e-06; // microlitre_per_second
        const double var_sodium_current__g_Na = (var_sodium_current__Version == 0.0) ? (var_sodium_current__g_Na_Centre_Published + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_Published - var_sodium_current__g_Na_Centre_Published))) : (var_sodium_current__Version == 1.0) ? (var_sodium_current__g_Na_Centre_0DCapable + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_0DCapable - var_sodium_current__g_Na_Centre_0DCapable))) : (var_sodium_current__g_Na_Centre_1DCapable + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_1DCapable - var_sodium_current__g_Na_Centre_1DCapable))); // microlitre_per_second
        const double var_sodium_current__T = var_membrane__T; // kelvin
        const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_Published = 0.0659; // microS
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__Version = var_membrane__Version; // dimensionless
        const double var_L_type_Ca_channel__g_Ca_L_Centre_Published = 0.0057999999999999996; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable = 0.0082000000000000007; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable = 0.065886479999999997; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable = 0.0659; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L = (var_L_type_Ca_channel__Version == 0.0) ? (var_L_type_Ca_channel__g_Ca_L_Centre_Published + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_Published - var_L_type_Ca_channel__g_Ca_L_Centre_Published))) : (var_L_type_Ca_channel__Version == 1.0) ? (var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable))) : (var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable))); // microS
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_Published = 0.013899999999999999; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_Published = 0.0043; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable = 0.0020999999999999999; // microS
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable = 0.0138823; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable = 0.00694; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__Version = var_membrane__Version; // dimensionless
        const double var_T_type_Ca_channel__g_Ca_T = (var_T_type_Ca_channel__Version == 0.0) ? (var_T_type_Ca_channel__g_Ca_T_Centre_Published + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_Published - var_T_type_Ca_channel__g_Ca_T_Centre_Published))) : (var_T_type_Ca_channel__Version == 1.0) ? (var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable))) : (var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable))); // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
        const double var_four_AP_sensitive_currents__g_to_Periphery_Published = 0.036490000000000002; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_1DCapable = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery_0DCapable = 0.036495; // microS
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__Version = var_membrane__Version; // dimensionless
        const double var_four_AP_sensitive_currents__g_to_Periphery_1DCapable = 0.036499999999999998; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_0DCapable = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_Published = 0.0049100000000000003; // microS
        const double var_four_AP_sensitive_currents__g_to = (var_four_AP_sensitive_currents__Version == 0.0) ? (var_four_AP_sensitive_currents__g_to_Centre_Published + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_Published - var_four_AP_sensitive_currents__g_to_Centre_Published))) : (var_four_AP_sensitive_currents__Version == 1.0) ? (var_four_AP_sensitive_currents__g_to_Centre_0DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_0DCapable - var_four_AP_sensitive_currents__g_to_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_to_Centre_1DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_1DCapable - var_four_AP_sensitive_currents__g_to_Centre_1DCapable))); // microS
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_ionic_concentrations__K_i = 140.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
        const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable = 0.0114; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_1DCapable = 0.00026600000000000001; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_Published = 6.6500000000000004e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery_Published = 0.0114; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable = 0.01138376; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_0DCapable = 6.6455040000000003e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus = (var_four_AP_sensitive_currents__Version == 0.0) ? (var_four_AP_sensitive_currents__g_sus_Centre_Published + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_Published - var_four_AP_sensitive_currents__g_sus_Centre_Published))) : (var_four_AP_sensitive_currents__Version == 1.0) ? (var_four_AP_sensitive_currents__g_sus_Centre_0DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable - var_four_AP_sensitive_currents__g_sus_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_sus_Centre_1DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable - var_four_AP_sensitive_currents__g_sus_Centre_1DCapable))); // microS
        const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable = 0.020799999999999999; // microS
        const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable = 0.00073800000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__Version = var_membrane__Version; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published = 0.00079699999999999997; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r = (var_rapid_delayed_rectifying_potassium_current__Version == 0.0) ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published))) : (var_rapid_delayed_rectifying_potassium_current__Version == 1.0) ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable))) : (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable))); // microS
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published = 0.00051800000000000001; // microS
        const double var_slow_delayed_rectifying_potassium_current__Version = var_membrane__Version; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable = 0.00034499999999999998; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s = (var_slow_delayed_rectifying_potassium_current__Version == 0.0) ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published))) : (var_slow_delayed_rectifying_potassium_current__Version == 1.0) ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable))) : (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable))); // microS
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_and_equilibrium_potentials__Version = var_membrane__Version; // dimensionless
        const double var_reversal_and_equilibrium_potentials__E_K_s = (var_reversal_and_equilibrium_potentials__Version == 0.0) ? (((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.12 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.12 * var_reversal_and_equilibrium_potentials__Na_i)))) : (((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i)))); // millivolt
        const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
        const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable = 0.000437; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_Published = 0.00054799999999999998; // microS
        const double var_hyperpolarisation_activated_current__Version = var_membrane__Version; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published = 0.0068999999999999999; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable = 0.0054999999999999997; // microS
        const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_Na = (var_hyperpolarisation_activated_current__Version == 0.0) ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_Published + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published - var_hyperpolarisation_activated_current__g_f_Na_Centre_Published))) : (var_hyperpolarisation_activated_current__Version == 1.0) ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable))); // microS
        const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_Na = (var_hyperpolarisation_activated_current__Version != 2.0) ? (var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na)) : (var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - 77.599999999999994)); // nanoA
        const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_Published = 0.00054799999999999998; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable = 0.000437; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_Published = 0.0068999999999999999; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable = 0.0054999999999999997; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_K = (var_hyperpolarisation_activated_current__Version == 0.0) ? (var_hyperpolarisation_activated_current__g_f_K_Centre_Published + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_Published - var_hyperpolarisation_activated_current__g_f_K_Centre_Published))) : (var_hyperpolarisation_activated_current__Version == 1.0) ? (var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable))); // microS
        const double var_hyperpolarisation_activated_current__i_f_K = (var_hyperpolarisation_activated_current__Version != 2.0) ? (var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K)) : (var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V + 102.0)); // nanoA
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_b_Na_Periphery_1DCapable = 0.00018900000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre_1DCapable = 5.8e-05; // microS
        const double var_sodium_background_current__g_b_Na_Centre_0DCapable = 5.8181799999999999e-05; // microS
        const double var_sodium_background_current__g_b_Na_Periphery_Published = 0.00018900000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Periphery_0DCapable = 0.00018880000000000001; // microS
        const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_background_current__Version = var_membrane__Version; // dimensionless
        const double var_sodium_background_current__g_b_Na_Centre_Published = 5.8e-05; // microS
        const double var_sodium_background_current__g_b_Na = (var_sodium_background_current__Version == 0.0) ? (var_sodium_background_current__g_b_Na_Centre_Published + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_Published - var_sodium_background_current__g_b_Na_Centre_Published))) : (var_sodium_background_current__Version == 1.0) ? (var_sodium_background_current__g_b_Na_Centre_0DCapable + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_0DCapable - var_sodium_background_current__g_b_Na_Centre_0DCapable))) : (var_sodium_background_current__g_b_Na_Centre_1DCapable + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_1DCapable - var_sodium_background_current__g_b_Na_Centre_1DCapable))); // microS
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
        const double var_ionic_concentrations__Ca_i = 0.0001; // millimolar
        const double var_reversal_and_equilibrium_potentials__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__Version = var_membrane__Version; // dimensionless
        const double var_calcium_background_current__g_b_Ca_Periphery_Published = 4.3000000000000002e-05; // microS
        const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_calcium_background_current__g_b_Ca_Centre_0DCapable = 1.3236e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Periphery_0DCapable = 4.2951999999999998e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Periphery_1DCapable = 4.2899999999999999e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre_1DCapable = 1.323e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre_Published = 1.3200000000000001e-05; // microS
        const double var_calcium_background_current__g_b_Ca = (var_calcium_background_current__Version == 0.0) ? (var_calcium_background_current__g_b_Ca_Centre_Published + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_Published - var_calcium_background_current__g_b_Ca_Centre_Published))) : (var_calcium_background_current__Version == 1.0) ? (var_calcium_background_current__g_b_Ca_Centre_0DCapable + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_0DCapable - var_calcium_background_current__g_b_Ca_Centre_0DCapable))) : (var_calcium_background_current__g_b_Ca_Centre_1DCapable + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_1DCapable - var_calcium_background_current__g_b_Ca_Centre_1DCapable))); // microS
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
        const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_potassium_background_current__Version = var_membrane__Version; // dimensionless
        const double var_potassium_background_current__g_b_K_Periphery_1DCapable = 8.1899999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery_Published = 8.1899999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_1DCapable = 2.5199999999999999e-05; // microS
        const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_potassium_background_current__g_b_K_Periphery_0DCapable = 8.1891999999999995e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_Published = 2.5199999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_0DCapable = 2.5236359999999998e-05; // microS
        const double var_potassium_background_current__g_b_K = (var_potassium_background_current__Version == 0.0) ? (var_potassium_background_current__g_b_K_Centre_Published + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_Published - var_potassium_background_current__g_b_K_Centre_Published))) : (var_potassium_background_current__Version == 1.0) ? (var_potassium_background_current__g_b_K_Centre_0DCapable + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_0DCapable - var_potassium_background_current__g_b_K_Centre_0DCapable))) : (var_potassium_background_current__g_b_K_Centre_1DCapable + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_1DCapable - var_potassium_background_current__g_b_K_Centre_1DCapable))); // microS
        const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__Version = var_membrane__Version; // dimensionless
        const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable = 2.7999999999999999e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable = 2.7228999999999998e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable = 8.8358400000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_Published = 2.7e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable = 8.8000000000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_Published = 8.8000000000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa = (var_sodium_calcium_exchanger__Version == 0.0) ? (var_sodium_calcium_exchanger__k_NaCa_Centre_Published + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_Published - var_sodium_calcium_exchanger__k_NaCa_Centre_Published))) : (var_sodium_calcium_exchanger__Version == 1.0) ? (var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable))) : (var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable))); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__Version == 0.0) ? ((var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037400000000000003 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0)))))) : ((var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0)))))); // nanoA
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump__Version = var_membrane__Version; // dimensionless
        const double var_sodium_potassium_pump__i_p_max_Centre_1DCapable = 0.047800000000000002; // nanoA
        const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_potassium_pump__i_p_max_Periphery_1DCapable = 0.16; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Centre_Published = 0.047800000000000002; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Centre_0DCapable = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery_Published = 0.16; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery_0DCapable = 0.15519359999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max = (var_sodium_potassium_pump__Version == 0.0) ? (var_sodium_potassium_pump__i_p_max_Centre_Published + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_Published - var_sodium_potassium_pump__i_p_max_Centre_Published))) : (var_sodium_potassium_pump__Version == 1.0) ? (var_sodium_potassium_pump__i_p_max_Centre_0DCapable + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_0DCapable - var_sodium_potassium_pump__i_p_max_Centre_0DCapable))) : (var_sodium_potassium_pump__i_p_max_Centre_1DCapable + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_1DCapable - var_sodium_potassium_pump__i_p_max_Centre_1DCapable))); // nanoA
        const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
        const double var_persistent_calcium_current__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
        const double var_persistent_calcium_current__Version = var_membrane__Version; // dimensionless
        const double var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable = 0.0041999999999999997; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery_Published = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Centre_Published = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery_1DCapable = 0.033390000000000003; // nanoA
        const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery_0DCapable = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max = (var_persistent_calcium_current__Version == 0.0) ? (var_persistent_calcium_current__i_Ca_p_max_Centre_Published + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_Published - var_persistent_calcium_current__i_Ca_p_max_Centre_Published))) : (var_persistent_calcium_current__Version == 1.0) ? (var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_0DCapable - var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable))) : (var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_1DCapable - var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable))); // nanoA
        const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
        const double var_chaste_interface__potassium_background_current__i_b_K = var_potassium_background_current__i_b_K; // nanoA
        const double var_chaste_interface__sodium_current__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_chaste_interface__persistent_calcium_current__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
        const double var_chaste_interface__membrane__Cm = var_membrane__Cm; // microF
        const double var_chaste_interface__four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
        const double var_chaste_interface__L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
        const double var_chaste_interface__sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_chaste_interface__four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
        const double var_chaste_interface__sodium_potassium_pump__i_p = var_sodium_potassium_pump__i_p; // nanoA
        const double var_chaste_interface__T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_chaste_interface__sodium_current__i_Na + var_chaste_interface__L_type_Ca_channel__i_Ca_L + var_chaste_interface__T_type_Ca_channel__i_Ca_T + var_chaste_interface__four_AP_sensitive_currents__i_to + var_chaste_interface__four_AP_sensitive_currents__i_sus + var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r + var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s + var_chaste_interface__hyperpolarisation_activated_current__i_f_Na + var_chaste_interface__hyperpolarisation_activated_current__i_f_K + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_background_current__i_b_K + var_chaste_interface__sodium_calcium_exchanger__i_NaCa + var_chaste_interface__sodium_potassium_pump__i_p + var_chaste_interface__persistent_calcium_current__i_Ca_p) / var_chaste_interface__membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiczhang_SAN_model_2000_allFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__Version = 1.0; // dimensionless
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__Version == 0.0) ? ((1.0700000000000001 * ((3.0 * var_membrane__dCell) - 0.10000000000000001)) / (3.0 * (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))))) : (var_membrane__Version == 1.0) ? ((var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998)))) : ((1.0700000000000001 * 29.0 * var_membrane__dCell) / (30.0 * (1.0 + (0.77449999999999997 * exp((-((29.0 * var_membrane__dCell) - 24.5)) / 1.95))))); // dimensionless
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__Version = var_membrane__Version; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__Version = var_membrane__Version; // dimensionless
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__Version = var_membrane__Version; // dimensionless
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__Version = var_membrane__Version; // dimensionless
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__Version = var_membrane__Version; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__Version = var_membrane__Version; // dimensionless
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_m_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_m_gate__Version = var_sodium_current__Version; // dimensionless
        const double var_sodium_current_m_gate__m_infinity = (var_sodium_current_m_gate__Version == 0.0) ? pow(1.0 / (1.0 + exp((-var_sodium_current_m_gate__V) / 5.46)), 1.0 / 3.0) : pow(1.0 / (1.0 + exp((-(var_sodium_current_m_gate__V + 30.32)) / 5.46)), 1.0 / 3.0); // dimensionless
        const double var_sodium_current_m_gate__tau_m = (var_sodium_current_m_gate__Version == 0.0) ? ((0.00062469999999999995 / ((0.83199999999999996 * exp((-0.33500000000000002) * (var_sodium_current_m_gate__V + 56.700000000000003))) + (0.627 * exp(0.082000000000000003 * (var_sodium_current_m_gate__V + 65.010000000000005))))) + 4.0000000000000003e-05) : ((0.00062469999999999995 / ((0.83221659999999997 * exp((-0.33566000000000001) * (var_sodium_current_m_gate__V + 56.706200000000003))) + (0.62739999999999996 * exp(0.082299999999999998 * (var_sodium_current_m_gate__V + 65.013099999999994))))) + 4.5689999999999998e-05); // second
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_sodium_current_m_gate__d_m_d_environment__time = (var_sodium_current_m_gate__m_infinity - var_sodium_current_m_gate__m) / var_sodium_current_m_gate__tau_m; // per_second
        const double var_sodium_current__sodium_current_m_gate__d_m_d_environment__time = var_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_sodium_current_h_gate__h1_infinity = 1.0 / (1.0 + exp((var_sodium_current_h_gate__V + 66.099999999999994) / 6.4000000000000004)); // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = ((3.7170000000000002e-06 * exp((-0.28149999999999997) * (var_sodium_current_h_gate__V + 17.109999999999999))) / (1.0 + (0.0037320000000000001 * exp((-0.34260000000000002) * (var_sodium_current_h_gate__V + 37.759999999999998))))) + 0.00059770000000000005; // second
        const double var_sodium_current_h_gate__d_h1_d_environment__time = (var_sodium_current_h_gate__h1_infinity - var_sodium_current_h_gate__h1) / var_sodium_current_h_gate__tau_h1; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time = var_sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_sodium_current_h_gate__tau_h2 = ((3.1860000000000002e-08 * exp((-0.62190000000000001) * (var_sodium_current_h_gate__V + 18.800000000000001))) / (1.0 + (7.1890000000000005e-05 * exp((-0.66830000000000001) * (var_sodium_current_h_gate__V + 34.07))))) + 0.0035560000000000001; // second
        const double var_sodium_current_h_gate__h2_infinity = var_sodium_current_h_gate__h1_infinity; // dimensionless
        const double var_sodium_current_h_gate__d_h2_d_environment__time = (var_sodium_current_h_gate__h2_infinity - var_sodium_current_h_gate__h2) / var_sodium_current_h_gate__tau_h2; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time = var_sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_L_type_Ca_channel_d_gate__Version = var_L_type_Ca_channel__Version; // dimensionless
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__beta_d_L = (var_L_type_Ca_channel_d_gate__Version == 1.0) ? ((11.43 * (var_L_type_Ca_channel_d_gate__V - 5.0)) / (exp(0.40000000000000002 * (var_L_type_Ca_channel_d_gate__V - 5.0)) - 1.0)) : ((11.42 * (var_L_type_Ca_channel_d_gate__V - 5.0)) / (exp(0.40000000000000002 * (var_L_type_Ca_channel_d_gate__V - 5.0)) - 1.0)); // per_second
        const double var_L_type_Ca_channel_d_gate__alpha_d_L = (var_L_type_Ca_channel_d_gate__Version == 0.0) ? ((((-28.379999999999999) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((-(var_L_type_Ca_channel_d_gate__V + 35.0)) / 2.5) - 1.0)) - ((84.900000000000006 * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0))) : (var_L_type_Ca_channel_d_gate__Version == 1.0) ? ((((-28.390000000000001) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((-(var_L_type_Ca_channel_d_gate__V + 35.0)) / 2.5) - 1.0)) - ((84.900000000000006 * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0))) : ((((-28.399999999999999) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((-(var_L_type_Ca_channel_d_gate__V + 35.0)) / 2.5) - 1.0)) - ((84.900000000000006 * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0))); // per_second
        const double var_L_type_Ca_channel_d_gate__tau_d_L = 2.0 / (var_L_type_Ca_channel_d_gate__alpha_d_L + var_L_type_Ca_channel_d_gate__beta_d_L); // second
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_d_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = (var_L_type_Ca_channel_d_gate__Version == 0.0) ? (1.0 / (1.0 + exp((-(var_L_type_Ca_channel_d_gate__V + 23.100000000000001)) / 6.0))) : (var_L_type_Ca_channel_d_gate__Version == 1.0) ? (1.0 / (1.0 + exp((-(var_L_type_Ca_channel_d_gate__V + 22.300000000000001 + (0.80000000000000004 * var_L_type_Ca_channel_d_gate__FCell))) / 6.0))) : (1.0 / (1.0 + exp((-(var_L_type_Ca_channel_d_gate__V + 22.199999999999999)) / 6.0))); // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time = (var_L_type_Ca_channel_d_gate__d_L_infinity - var_L_type_Ca_channel_d_gate__d_L) / var_L_type_Ca_channel_d_gate__tau_d_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_L_type_Ca_channel_f_gate__Version = var_L_type_Ca_channel__Version; // dimensionless
        const double var_L_type_Ca_channel_f_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_f_gate__alpha_f_L = (var_L_type_Ca_channel_f_gate__Version == 1.0) ? ((3.75 * (var_L_type_Ca_channel_f_gate__V + 28.0)) / (exp((var_L_type_Ca_channel_f_gate__V + 28.0) / 4.0) - 1.0)) : ((3.1200000000000001 * (var_L_type_Ca_channel_f_gate__V + 28.0)) / (exp((var_L_type_Ca_channel_f_gate__V + 28.0) / 4.0) - 1.0)); // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f_L = (var_L_type_Ca_channel_f_gate__Version == 1.0) ? (30.0 / (1.0 + exp((-(var_L_type_Ca_channel_f_gate__V + 28.0)) / 4.0))) : (25.0 / (1.0 + exp((-(var_L_type_Ca_channel_f_gate__V + 28.0)) / 4.0))); // per_second
        const double var_L_type_Ca_channel_f_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_f_gate__tau_f_L = (var_L_type_Ca_channel_f_gate__Version == 1.0) ? ((1.2 - (0.20000000000000001 * var_L_type_Ca_channel_f_gate__FCell)) / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L)) : (1.0 / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L)); // second
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_f_gate__V + 45.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time = (var_L_type_Ca_channel_f_gate__f_L_infinity - var_L_type_Ca_channel_f_gate__f_L) / var_L_type_Ca_channel_f_gate__tau_f_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_T_type_Ca_channel_d_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_d_gate__beta_d_T = 1068.0 * exp((-(var_T_type_Ca_channel_d_gate__V + 26.300000000000001)) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__alpha_d_T = 1068.0 * exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__tau_d_T = 1.0 / (var_T_type_Ca_channel_d_gate__alpha_d_T + var_T_type_Ca_channel_d_gate__beta_d_T); // second
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T_infinity = 1.0 / (1.0 + exp((-(var_T_type_Ca_channel_d_gate__V + 37.0)) / 6.7999999999999998)); // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time = (var_T_type_Ca_channel_d_gate__d_T_infinity - var_T_type_Ca_channel_d_gate__d_T) / var_T_type_Ca_channel_d_gate__tau_d_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_T_type_Ca_channel_f_gate__FCell = var_T_type_Ca_channel__FCell; // dimensionless
        const double var_T_type_Ca_channel_f_gate__Version = var_T_type_Ca_channel__Version; // dimensionless
        const double var_T_type_Ca_channel_f_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_f_gate__alpha_f_T = (var_T_type_Ca_channel_f_gate__Version == 1.0) ? (15.300000000000001 * exp((-(var_T_type_Ca_channel_f_gate__V + 71.0 + (0.69999999999999996 * var_T_type_Ca_channel_f_gate__FCell))) / 83.299999999999997)) : (15.300000000000001 * exp((-(var_T_type_Ca_channel_f_gate__V + 71.700000000000003)) / 83.299999999999997)); // per_second
        const double var_T_type_Ca_channel_f_gate__beta_f_T = (var_T_type_Ca_channel_f_gate__Version == 1.0) ? (15.0 * exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 15.380000000000001)) : (15.0 * exp((var_T_type_Ca_channel_f_gate__V + 71.700000000000003) / 15.380000000000001)); // per_second
        const double var_T_type_Ca_channel_f_gate__tau_f_T = 1.0 / (var_T_type_Ca_channel_f_gate__alpha_f_T + var_T_type_Ca_channel_f_gate__beta_f_T); // second
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T_infinity = 1.0 / (1.0 + exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 9.0)); // dimensionless
        const double var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time = (var_T_type_Ca_channel_f_gate__f_T_infinity - var_T_type_Ca_channel_f_gate__f_T) / var_T_type_Ca_channel_f_gate__tau_f_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_q_gate__q = var_four_AP_sensitive_currents__q; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__Version = var_four_AP_sensitive_currents__Version; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_q_gate__FCell = var_four_AP_sensitive_currents__FCell; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__tau_q = (var_four_AP_sensitive_currents_q_gate__Version == 0.0) ? (0.0101 + (0.065170000000000006 / (0.56999999999999995 * exp((-0.080000000000000002) * (var_four_AP_sensitive_currents_q_gate__V + 49.0)))) + (2.4000000000000001e-05 * exp(0.10000000000000001 * (var_four_AP_sensitive_currents_q_gate__V + 50.93)))) : (var_four_AP_sensitive_currents_q_gate__Version == 1.0) ? ((0.001 / 3.0) * (30.309999999999999 + (195.5 / ((0.56859999999999999 * exp((-0.081610000000000002) * (var_four_AP_sensitive_currents_q_gate__V + 39.0 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell)))) + (0.71740000000000004 * exp((0.27189999999999998 - (0.1719 * var_four_AP_sensitive_currents_q_gate__FCell)) * 1.0 * (var_four_AP_sensitive_currents_q_gate__V + 40.93 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell)))))))) : (0.0101 + (0.065170000000000006 / ((0.56859999999999999 * exp((-0.081610000000000002) * (var_four_AP_sensitive_currents_q_gate__V + 39.0))) + (0.71740000000000004 * exp(0.27189999999999998 * (var_four_AP_sensitive_currents_q_gate__V + 40.93)))))); // second
        const double var_four_AP_sensitive_currents_q_gate__q_infinity = 1.0 / (1.0 + exp((var_four_AP_sensitive_currents_q_gate__V + 59.369999999999997) / 13.1)); // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time = (var_four_AP_sensitive_currents_q_gate__q_infinity - var_four_AP_sensitive_currents_q_gate__q) / var_four_AP_sensitive_currents_q_gate__tau_q; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_r_gate__Version = var_four_AP_sensitive_currents__Version; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_r_gate__tau_r = (var_four_AP_sensitive_currents_r_gate__Version == 0.0) ? (0.001 * (2.98 + (15.59 / ((1.0369999999999999 * exp(0.089999999999999997 * (var_four_AP_sensitive_currents_r_gate__V + 30.609999999999999))) + (0.36899999999999999 * exp((-0.12) * (var_four_AP_sensitive_currents_r_gate__V + 23.84))))))) : (var_four_AP_sensitive_currents_r_gate__Version == 1.0) ? (0.0025000000000000001 * (1.1910000000000001 + (7.8380000000000001 / ((1.0369999999999999 * exp(0.090120000000000006 * (var_four_AP_sensitive_currents_r_gate__V + 30.609999999999999))) + (0.36899999999999999 * exp((-0.11899999999999999) * (var_four_AP_sensitive_currents_r_gate__V + 23.84))))))) : (0.001 * (2.98 + (19.59 / ((1.0369999999999999 * exp(0.090120000000000006 * (var_four_AP_sensitive_currents_r_gate__V + 30.609999999999999))) + (0.36899999999999999 * exp((-0.11899999999999999) * (var_four_AP_sensitive_currents_r_gate__V + 23.84))))))); // second
        const double var_four_AP_sensitive_currents_r_gate__r = var_four_AP_sensitive_currents__r; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r_infinity = 1.0 / (1.0 + exp((-(var_four_AP_sensitive_currents_r_gate__V - 10.93)) / 19.699999999999999)); // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time = (var_four_AP_sensitive_currents_r_gate__r_infinity - var_four_AP_sensitive_currents_r_gate__r) / var_four_AP_sensitive_currents_r_gate__tau_r; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_rapid_delayed_rectifying_potassium_current__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__Version = var_rapid_delayed_rectifying_potassium_current__Version; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af = (var_rapid_delayed_rectifying_potassium_current_P_af_gate__Version != 2.0) ? (1.0 / ((37.200000000000003 * exp((var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0) / 15.9)) + (0.95999999999999996 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0)) / 22.5)))) : (1.0 / ((37.200000000000003 * exp((var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 10.0) / 15.9)) + (0.95999999999999996 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 10.0)) / 22.5)))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity = (var_rapid_delayed_rectifying_potassium_current_P_af_gate__Version != 2.0) ? (1.0 / (1.0 + exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V + 14.199999999999999)) / 10.6))) : (1.0 / (1.0 + exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V + 13.199999999999999)) / 10.6))); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity - var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) / var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity = var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity = var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__Version = var_rapid_delayed_rectifying_potassium_current__Version; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as = (var_rapid_delayed_rectifying_potassium_current_P_as_gate__Version != 2.0) ? (1.0 / ((4.2000000000000002 * exp((var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0) / 17.0)) + (0.14999999999999999 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0)) / 21.600000000000001)))) : (1.0 / ((4.2000000000000002 * exp((var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 10.0) / 17.0)) + (0.14999999999999999 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 10.0)) / 21.600000000000001)))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_rapid_delayed_rectifying_potassium_current__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity - var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) / var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__Version = var_rapid_delayed_rectifying_potassium_current__Version; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i = (var_rapid_delayed_rectifying_potassium_current_P_i_gate__Version == 0.0) ? 0.002 : (var_rapid_delayed_rectifying_potassium_current_P_i_gate__Version == 1.0) ? 0.002 : 0.0060000000000000001; // second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity = 1.0 / (1.0 + exp((var_rapid_delayed_rectifying_potassium_current_P_i_gate__V + 18.600000000000001) / 10.1)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_rapid_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity - var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i) / var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs = var_slow_delayed_rectifying_potassium_current__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__V = var_slow_delayed_rectifying_potassium_current__V; // millivolt
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs = 14.0 / (1.0 + exp((-(var_slow_delayed_rectifying_potassium_current_xs_gate__V - 40.0)) / 9.0)); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs = 1.0 * exp((-var_slow_delayed_rectifying_potassium_current_xs_gate__V) / 45.0); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = (var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs * (1.0 - var_slow_delayed_rectifying_potassium_current_xs_gate__xs)) - (var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs * var_slow_delayed_rectifying_potassium_current_xs_gate__xs); // per_second
        const double var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_hyperpolarisation_activated_current_y_gate__Version = var_hyperpolarisation_activated_current__Version; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__V = var_hyperpolarisation_activated_current__V; // millivolt
        const double var_hyperpolarisation_activated_current_y_gate__alpha_y = (var_hyperpolarisation_activated_current_y_gate__Version == 0.0) ? (1.0 * exp((-(var_hyperpolarisation_activated_current_y_gate__V + 78.909999999999997)) / 26.620000000000001)) : (1.0 * exp((-(var_hyperpolarisation_activated_current_y_gate__V + 78.909999999999997)) / 26.629999999999999)); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__beta_y = 1.0 * exp((var_hyperpolarisation_activated_current_y_gate__V + 75.129999999999995) / 21.25); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = (var_hyperpolarisation_activated_current_y_gate__alpha_y * (1.0 - var_hyperpolarisation_activated_current_y_gate__y)) - (var_hyperpolarisation_activated_current_y_gate__beta_y * var_hyperpolarisation_activated_current_y_gate__y); // per_second
        const double var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter = var_sodium_current__sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time = 0.001 * var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter = var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = 0.001 * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter = var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_m_gate__m = var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h1 = var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h2 = var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_membrane__F = 96845.0; // coulomb_per_mole
            const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
            const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
            const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
            const double var_ionic_concentrations__Na_o = 140.0; // millimolar
            const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
            const double var_ionic_concentrations__Na_i = 8.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
            const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
            const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_current_h_gate__Version = var_sodium_current__Version; // dimensionless
            const double var_sodium_current_h_gate__F_Na = (var_sodium_current_h_gate__Version == 0.0) ? (((0.095200000000000007 * exp((-0.063) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6599999999999999 * exp((-0.22500000000000001) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086900000000000005) : (((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993); // dimensionless
            const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
            const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
            const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
            const double var_sodium_current__g_Na_Centre_1DCapable = 0.0; // microlitre_per_second
            const double var_sodium_current__g_Na_Centre_Published = 0.0; // microlitre_per_second
            const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_current__g_Na_Periphery_1DCapable = 3.7e-07; // microlitre_per_second
            const double var_sodium_current__g_Na_Periphery_Published = 1.1999999999999999e-06; // microlitre_per_second
            const double var_sodium_current__g_Na_Centre_0DCapable = 0.0; // microlitre_per_second
            const double var_sodium_current__g_Na_Periphery_0DCapable = 1.204e-06; // microlitre_per_second
            const double var_sodium_current__g_Na = (var_sodium_current__Version == 0.0) ? (var_sodium_current__g_Na_Centre_Published + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_Published - var_sodium_current__g_Na_Centre_Published))) : (var_sodium_current__Version == 1.0) ? (var_sodium_current__g_Na_Centre_0DCapable + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_0DCapable - var_sodium_current__g_Na_Centre_0DCapable))) : (var_sodium_current__g_Na_Centre_1DCapable + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery_1DCapable - var_sodium_current__g_Na_Centre_1DCapable))); // microlitre_per_second
            const double var_sodium_current__T = var_membrane__T; // kelvin
            const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
            const double var_membrane__i_Na = var_sodium_current__i_Na; // nanoA
            const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
            const double var_L_type_Ca_channel__g_Ca_L_Periphery_Published = 0.0659; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Centre_Published = 0.0057999999999999996; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable = 0.0082000000000000007; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable = 0.065886479999999997; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable = 0.0659; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable = 0.0057938; // microS
            const double var_L_type_Ca_channel__g_Ca_L = (var_L_type_Ca_channel__Version == 0.0) ? (var_L_type_Ca_channel__g_Ca_L_Centre_Published + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_Published - var_L_type_Ca_channel__g_Ca_L_Centre_Published))) : (var_L_type_Ca_channel__Version == 1.0) ? (var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable))) : (var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable))); // microS
            const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
            const double var_membrane__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
            const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
            const double var_T_type_Ca_channel__g_Ca_T_Periphery_Published = 0.013899999999999999; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Centre_Published = 0.0043; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable = 0.0020999999999999999; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable = 0.0138823; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable = 0.00694; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable = 0.0042780600000000002; // microS
            const double var_T_type_Ca_channel__g_Ca_T = (var_T_type_Ca_channel__Version == 0.0) ? (var_T_type_Ca_channel__g_Ca_T_Centre_Published + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_Published - var_T_type_Ca_channel__g_Ca_T_Centre_Published))) : (var_T_type_Ca_channel__Version == 1.0) ? (var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable))) : (var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable))); // microS
            const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
            const double var_membrane__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
            const double var_four_AP_sensitive_currents__g_to_Periphery_Published = 0.036490000000000002; // microS
            const double var_four_AP_sensitive_currents__g_to_Centre_1DCapable = 0.0049049999999999996; // microS
            const double var_four_AP_sensitive_currents__g_to_Periphery_0DCapable = 0.036495; // microS
            const double var_four_AP_sensitive_currents__g_to_Periphery_1DCapable = 0.036499999999999998; // microS
            const double var_four_AP_sensitive_currents__g_to_Centre_0DCapable = 0.0049049999999999996; // microS
            const double var_four_AP_sensitive_currents__g_to_Centre_Published = 0.0049100000000000003; // microS
            const double var_four_AP_sensitive_currents__g_to = (var_four_AP_sensitive_currents__Version == 0.0) ? (var_four_AP_sensitive_currents__g_to_Centre_Published + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_Published - var_four_AP_sensitive_currents__g_to_Centre_Published))) : (var_four_AP_sensitive_currents__Version == 1.0) ? (var_four_AP_sensitive_currents__g_to_Centre_0DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_0DCapable - var_four_AP_sensitive_currents__g_to_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_to_Centre_1DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery_1DCapable - var_four_AP_sensitive_currents__g_to_Centre_1DCapable))); // microS
            const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_ionic_concentrations__K_i = 140.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
            const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
            const double var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable = 0.0114; // microS
            const double var_four_AP_sensitive_currents__g_sus_Centre_1DCapable = 0.00026600000000000001; // microS
            const double var_four_AP_sensitive_currents__g_sus_Centre_Published = 6.6500000000000004e-05; // microS
            const double var_four_AP_sensitive_currents__g_sus_Periphery_Published = 0.0114; // microS
            const double var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable = 0.01138376; // microS
            const double var_four_AP_sensitive_currents__g_sus_Centre_0DCapable = 6.6455040000000003e-05; // microS
            const double var_four_AP_sensitive_currents__g_sus = (var_four_AP_sensitive_currents__Version == 0.0) ? (var_four_AP_sensitive_currents__g_sus_Centre_Published + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_Published - var_four_AP_sensitive_currents__g_sus_Centre_Published))) : (var_four_AP_sensitive_currents__Version == 1.0) ? (var_four_AP_sensitive_currents__g_sus_Centre_0DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable - var_four_AP_sensitive_currents__g_sus_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_sus_Centre_1DCapable + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable - var_four_AP_sensitive_currents__g_sus_Centre_1DCapable))); // microS
            const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
            const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable = 0.020799999999999999; // microS
            const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable = 0.00073800000000000005; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable = 0.00079704000000000005; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published = 0.016; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable = 0.016; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published = 0.00079699999999999997; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r = (var_rapid_delayed_rectifying_potassium_current__Version == 0.0) ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published))) : (var_rapid_delayed_rectifying_potassium_current__Version == 1.0) ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable))) : (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable))); // microS
            const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
            const double var_membrane__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published = 0.00051800000000000001; // microS
            const double var_slow_delayed_rectifying_potassium_current__Version = var_membrane__Version; // dimensionless
            const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable = 0.00034450000000000003; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable = 0.00034499999999999998; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s = (var_slow_delayed_rectifying_potassium_current__Version == 0.0) ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published))) : (var_slow_delayed_rectifying_potassium_current__Version == 1.0) ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable))) : (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable))); // microS
            const double var_reversal_and_equilibrium_potentials__Version = var_membrane__Version; // dimensionless
            const double var_reversal_and_equilibrium_potentials__E_K_s = (var_reversal_and_equilibrium_potentials__Version == 0.0) ? (((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.12 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.12 * var_reversal_and_equilibrium_potentials__Na_i)))) : (((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i)))); // millivolt
            const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
            const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
            const double var_membrane__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable = 0.000437; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre_Published = 0.00054799999999999998; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published = 0.0068999999999999999; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable = 0.0054999999999999997; // microS
            const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
            const double var_hyperpolarisation_activated_current__g_f_Na = (var_hyperpolarisation_activated_current__Version == 0.0) ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_Published + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published - var_hyperpolarisation_activated_current__g_f_Na_Centre_Published))) : (var_hyperpolarisation_activated_current__Version == 1.0) ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable))); // microS
            const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_hyperpolarisation_activated_current__i_f_Na = (var_hyperpolarisation_activated_current__Version != 2.0) ? (var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na)) : (var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - 77.599999999999994)); // nanoA
            const double var_membrane__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
            const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_hyperpolarisation_activated_current__g_f_K_Centre_Published = 0.00054799999999999998; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable = 0.000437; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery_Published = 0.0068999999999999999; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable = 0.0054999999999999997; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_K = (var_hyperpolarisation_activated_current__Version == 0.0) ? (var_hyperpolarisation_activated_current__g_f_K_Centre_Published + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_Published - var_hyperpolarisation_activated_current__g_f_K_Centre_Published))) : (var_hyperpolarisation_activated_current__Version == 1.0) ? (var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable))); // microS
            const double var_hyperpolarisation_activated_current__i_f_K = (var_hyperpolarisation_activated_current__Version != 2.0) ? (var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K)) : (var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V + 102.0)); // nanoA
            const double var_membrane__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
            const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_background_current__g_b_Na_Periphery_1DCapable = 0.00018900000000000001; // microS
            const double var_sodium_background_current__g_b_Na_Centre_1DCapable = 5.8e-05; // microS
            const double var_sodium_background_current__g_b_Na_Centre_0DCapable = 5.8181799999999999e-05; // microS
            const double var_sodium_background_current__g_b_Na_Periphery_Published = 0.00018900000000000001; // microS
            const double var_sodium_background_current__g_b_Na_Periphery_0DCapable = 0.00018880000000000001; // microS
            const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_background_current__Version = var_membrane__Version; // dimensionless
            const double var_sodium_background_current__g_b_Na_Centre_Published = 5.8e-05; // microS
            const double var_sodium_background_current__g_b_Na = (var_sodium_background_current__Version == 0.0) ? (var_sodium_background_current__g_b_Na_Centre_Published + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_Published - var_sodium_background_current__g_b_Na_Centre_Published))) : (var_sodium_background_current__Version == 1.0) ? (var_sodium_background_current__g_b_Na_Centre_0DCapable + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_0DCapable - var_sodium_background_current__g_b_Na_Centre_0DCapable))) : (var_sodium_background_current__g_b_Na_Centre_1DCapable + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery_1DCapable - var_sodium_background_current__g_b_Na_Centre_1DCapable))); // microS
            const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
            const double var_membrane__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
            const double var_ionic_concentrations__Ca_i = 0.0001; // millimolar
            const double var_reversal_and_equilibrium_potentials__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
            const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
            const double var_calcium_background_current__Version = var_membrane__Version; // dimensionless
            const double var_calcium_background_current__g_b_Ca_Periphery_Published = 4.3000000000000002e-05; // microS
            const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_calcium_background_current__g_b_Ca_Centre_0DCapable = 1.3236e-05; // microS
            const double var_calcium_background_current__g_b_Ca_Periphery_0DCapable = 4.2951999999999998e-05; // microS
            const double var_calcium_background_current__g_b_Ca_Periphery_1DCapable = 4.2899999999999999e-05; // microS
            const double var_calcium_background_current__g_b_Ca_Centre_1DCapable = 1.323e-05; // microS
            const double var_calcium_background_current__g_b_Ca_Centre_Published = 1.3200000000000001e-05; // microS
            const double var_calcium_background_current__g_b_Ca = (var_calcium_background_current__Version == 0.0) ? (var_calcium_background_current__g_b_Ca_Centre_Published + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_Published - var_calcium_background_current__g_b_Ca_Centre_Published))) : (var_calcium_background_current__Version == 1.0) ? (var_calcium_background_current__g_b_Ca_Centre_0DCapable + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_0DCapable - var_calcium_background_current__g_b_Ca_Centre_0DCapable))) : (var_calcium_background_current__g_b_Ca_Centre_1DCapable + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery_1DCapable - var_calcium_background_current__g_b_Ca_Centre_1DCapable))); // microS
            const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
            const double var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
            const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_potassium_background_current__Version = var_membrane__Version; // dimensionless
            const double var_potassium_background_current__g_b_K_Periphery_1DCapable = 8.1899999999999999e-05; // microS
            const double var_potassium_background_current__g_b_K_Periphery_Published = 8.1899999999999999e-05; // microS
            const double var_potassium_background_current__g_b_K_Centre_1DCapable = 2.5199999999999999e-05; // microS
            const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_potassium_background_current__g_b_K_Periphery_0DCapable = 8.1891999999999995e-05; // microS
            const double var_potassium_background_current__g_b_K_Centre_Published = 2.5199999999999999e-05; // microS
            const double var_potassium_background_current__g_b_K_Centre_0DCapable = 2.5236359999999998e-05; // microS
            const double var_potassium_background_current__g_b_K = (var_potassium_background_current__Version == 0.0) ? (var_potassium_background_current__g_b_K_Centre_Published + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_Published - var_potassium_background_current__g_b_K_Centre_Published))) : (var_potassium_background_current__Version == 1.0) ? (var_potassium_background_current__g_b_K_Centre_0DCapable + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_0DCapable - var_potassium_background_current__g_b_K_Centre_0DCapable))) : (var_potassium_background_current__g_b_K_Centre_1DCapable + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery_1DCapable - var_potassium_background_current__g_b_K_Centre_1DCapable))); // microS
            const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
            const double var_membrane__i_b_K = var_potassium_background_current__i_b_K; // nanoA
            const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
            const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
            const double var_sodium_calcium_exchanger__Version = var_membrane__Version; // dimensionless
            const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_calcium_exchanger__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable = 2.7999999999999999e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable = 2.7228999999999998e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable = 8.8358400000000004e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Centre_Published = 2.7e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable = 8.8000000000000004e-06; // nanoA
            const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery_Published = 8.8000000000000004e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa = (var_sodium_calcium_exchanger__Version == 0.0) ? (var_sodium_calcium_exchanger__k_NaCa_Centre_Published + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_Published - var_sodium_calcium_exchanger__k_NaCa_Centre_Published))) : (var_sodium_calcium_exchanger__Version == 1.0) ? (var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable))) : (var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable))); // nanoA
            const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__Version == 0.0) ? ((var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037400000000000003 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0)))))) : ((var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0)))))); // nanoA
            const double var_membrane__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
            const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
            const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
            const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_potassium_pump__Version = var_membrane__Version; // dimensionless
            const double var_sodium_potassium_pump__i_p_max_Centre_1DCapable = 0.047800000000000002; // nanoA
            const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_potassium_pump__i_p_max_Periphery_1DCapable = 0.16; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Centre_Published = 0.047800000000000002; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Centre_0DCapable = 0.047825449999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Periphery_Published = 0.16; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Periphery_0DCapable = 0.15519359999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max = (var_sodium_potassium_pump__Version == 0.0) ? (var_sodium_potassium_pump__i_p_max_Centre_Published + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_Published - var_sodium_potassium_pump__i_p_max_Centre_Published))) : (var_sodium_potassium_pump__Version == 1.0) ? (var_sodium_potassium_pump__i_p_max_Centre_0DCapable + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_0DCapable - var_sodium_potassium_pump__i_p_max_Centre_0DCapable))) : (var_sodium_potassium_pump__i_p_max_Centre_1DCapable + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery_1DCapable - var_sodium_potassium_pump__i_p_max_Centre_1DCapable))); // nanoA
            const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
            const double var_membrane__i_p = var_sodium_potassium_pump__i_p; // nanoA
            const double var_persistent_calcium_current__Ca_i = var_ionic_concentrations__Ca_i; // millimolar
            const double var_persistent_calcium_current__Version = var_membrane__Version; // dimensionless
            const double var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable = 0.0041999999999999997; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery_Published = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Centre_Published = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery_1DCapable = 0.033390000000000003; // nanoA
            const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery_0DCapable = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max = (var_persistent_calcium_current__Version == 0.0) ? (var_persistent_calcium_current__i_Ca_p_max_Centre_Published + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_Published - var_persistent_calcium_current__i_Ca_p_max_Centre_Published))) : (var_persistent_calcium_current__Version == 1.0) ? (var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_0DCapable - var_persistent_calcium_current__i_Ca_p_max_Centre_0DCapable))) : (var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery_1DCapable - var_persistent_calcium_current__i_Ca_p_max_Centre_1DCapable))); // nanoA
            const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
            const double var_membrane__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
            const double var_membrane__d_V_d_environment__time = ((-1.0) / var_membrane__Cm) * (var_membrane__i_Na + var_membrane__i_Ca_L + var_membrane__i_Ca_T + var_membrane__i_to + var_membrane__i_sus + var_membrane__i_K_r + var_membrane__i_K_s + var_membrane__i_f_Na + var_membrane__i_f_K + var_membrane__i_b_Na + var_membrane__i_b_Ca + var_membrane__i_b_K + var_membrane__i_NaCa + var_membrane__i_p + var_membrane__i_Ca_p); // 'millivolt per second'
            const double var_chaste_interface__membrane__d_V_d_environment__time_converter = var_membrane__d_V_d_environment__time; // ___units_2
            const double var_chaste_interface__membrane__d_V_d_environment__time = 0.001 * var_chaste_interface__membrane__d_V_d_environment__time_converter; // 'millivolt per millisecond'
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__sodium_current_m_gate__m;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__sodium_current_h_gate__h1;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__sodium_current_h_gate__h2;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
    }
    
    void Dynamiczhang_SAN_model_2000_allFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_chaste_interface__environment__fake_dt = 0.001; // second
        const double var_membrane__Version = 1.0; // dimensionless
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
        const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
        const double var_ionic_concentrations__Na_o = 140.0; // millimolar
        const double var_ionic_concentrations__Na_i = 8.0; // millimolar
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__g_Na_Centre_1DCapable = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Centre_Published = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery_1DCapable = 3.7e-07; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery_Published = 1.1999999999999999e-06; // microlitre_per_second
        const double var_sodium_current__g_Na_Centre_0DCapable = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery_0DCapable = 1.204e-06; // microlitre_per_second
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_Published = 0.0659; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Centre_Published = 0.0057999999999999996; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable = 0.0082000000000000007; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable = 0.065886479999999997; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable = 0.0659; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable = 0.0057938; // microS
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_Published = 0.013899999999999999; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_Published = 0.0043; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable = 0.0020999999999999999; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable = 0.0138823; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable = 0.00694; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_four_AP_sensitive_currents__g_to_Periphery_Published = 0.036490000000000002; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_1DCapable = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery_0DCapable = 0.036495; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery_1DCapable = 0.036499999999999998; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_0DCapable = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Centre_Published = 0.0049100000000000003; // microS
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
        const double var_ionic_concentrations__K_i = 140.0; // millimolar
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable = 0.0114; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_1DCapable = 0.00026600000000000001; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_Published = 6.6500000000000004e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery_Published = 0.0114; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable = 0.01138376; // microS
        const double var_four_AP_sensitive_currents__g_sus_Centre_0DCapable = 6.6455040000000003e-05; // microS
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable = 0.020799999999999999; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable = 0.00073800000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published = 0.00079699999999999997; // microS
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published = 0.00051800000000000001; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable = 0.00034499999999999998; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable = 0.0104; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable = 0.000437; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_Published = 0.00054799999999999998; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published = 0.0068999999999999999; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable = 0.0054999999999999997; // microS
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_Published = 0.00054799999999999998; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable = 0.000437; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_Published = 0.0068999999999999999; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable = 0.0054999999999999997; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable = 0.006875; // microS
        const double var_sodium_background_current__g_b_Na_Periphery_1DCapable = 0.00018900000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre_1DCapable = 5.8e-05; // microS
        const double var_sodium_background_current__g_b_Na_Centre_0DCapable = 5.8181799999999999e-05; // microS
        const double var_sodium_background_current__g_b_Na_Periphery_Published = 0.00018900000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Periphery_0DCapable = 0.00018880000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre_Published = 5.8e-05; // microS
        const double var_ionic_concentrations__Ca_i = 0.0001; // millimolar
        const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
        const double var_calcium_background_current__g_b_Ca_Periphery_Published = 4.3000000000000002e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre_0DCapable = 1.3236e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Periphery_0DCapable = 4.2951999999999998e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Periphery_1DCapable = 4.2899999999999999e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre_1DCapable = 1.323e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre_Published = 1.3200000000000001e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery_1DCapable = 8.1899999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery_Published = 8.1899999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_1DCapable = 2.5199999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery_0DCapable = 8.1891999999999995e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_Published = 2.5199999999999999e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre_0DCapable = 2.5236359999999998e-05; // microS
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable = 2.7999999999999999e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable = 2.7228999999999998e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable = 8.8358400000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Centre_Published = 2.7e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable = 8.8000000000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery_Published = 8.8000000000000004e-06; // nanoA
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__i_p_max_Centre_1DCapable = 0.047800000000000002; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery_1DCapable = 0.16; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Centre_Published = 0.047800000000000002; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Centre_0DCapable = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery_Published = 0.16; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery_0DCapable = 0.15519359999999999; // nanoA
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__q = var_four_AP_sensitive_currents__q; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r = var_four_AP_sensitive_currents__r; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_rapid_delayed_rectifying_potassium_current__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_rapid_delayed_rectifying_potassium_current__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_rapid_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs = var_slow_delayed_rectifying_potassium_current__xs; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_t1 = var_membrane__Version == 0.0; // dimensionless
        const double var_t6 = exp(((-10.169491519999999) * var_membrane__dCell) + 6.9491525410000001); // dimensionless
        const double var_t12 = var_membrane__Version == 1.0; // dimensionless
        const double var_t20 = exp(((-14.87179487) * var_membrane__dCell) + 12.56410256); // dimensionless
        const double var_t26 = var_t1 ? ((1.0700000000000001 * ((3.0 * var_membrane__dCell) - 0.10000000000000001)) / (3.0 + (2.3235000000000001 * var_t6))) : var_t12 ? ((var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * var_t6))) : ((31.030000000000001 * var_membrane__dCell) / (30.0 + (23.234999999999999 * var_t20))); // dimensionless
        const double var_t30 = 1.0 / (var_membrane__CmCentre + (var_t26 * (var_membrane__CmPeriphery - var_membrane__CmCentre))); // dimensionless
        const double var_t40 = var_t1 ? (var_sodium_current__g_Na_Centre_Published + (var_t26 * (var_sodium_current__g_Na_Periphery_Published - var_sodium_current__g_Na_Centre_Published))) : var_t12 ? (var_sodium_current__g_Na_Centre_0DCapable + (var_t26 * (var_sodium_current__g_Na_Periphery_0DCapable - var_sodium_current__g_Na_Centre_0DCapable))) : (var_sodium_current__g_Na_Centre_1DCapable + (var_t26 * (var_sodium_current__g_Na_Periphery_1DCapable - var_sodium_current__g_Na_Centre_1DCapable))); // dimensionless
        const double var_t41 = pow(var_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t42 = var_t41 * var_sodium_current_m_gate__m; // dimensionless
        const double var_t43 = var_t40 * var_t42; // dimensionless
        const double var_t46 = exp(((-0.063) * var_membrane__V) - 2.1671999999999998); // dimensionless
        const double var_t49 = exp(((-0.22500000000000001) * var_membrane__V) - 14.3325); // dimensionless
        const double var_t51 = 1.0 + (1.6599999999999999 * var_t49); // dimensionless
        const double var_t53 = var_t46 / var_t51; // dimensionless
        const double var_t55 = pow(var_t51, 2.0); // dimensionless
        const double var_t63 = exp(((-0.063060000000000005) * var_membrane__V) - 2.1692640000000001); // dimensionless
        const double var_t66 = exp(((-0.22509999999999999) * var_membrane__V) - 14.33887); // dimensionless
        const double var_t68 = 1.0 + (1.6619999999999999 * var_t66); // dimensionless
        const double var_t70 = var_t63 / var_t68; // dimensionless
        const double var_t72 = pow(var_t68, 2.0); // dimensionless
        const double var_t78 = var_t1 ? (((-0.0059975999999999996) * var_t53) + (((0.035557199999999997 * var_t46) / var_t55) * var_t49)) : (((-0.0060020508000000004) * var_t70) + (((0.035608379920000002 * var_t63) / var_t72) * var_t66)); // dimensionless
        const double var_t83 = pow(var_membrane__F, 2.0); // dimensionless
        const double var_t86 = 1.0 / var_membrane__R; // dimensionless
        const double var_t87 = 1.0 / var_membrane__T; // dimensionless
        const double var_t88 = var_t86 * var_t87; // dimensionless
        const double var_t89 = var_membrane__R * var_membrane__T; // dimensionless
        const double var_t90 = 1.0 / var_membrane__F; // dimensionless
        const double var_t93 = log(var_ionic_concentrations__Na_o / var_ionic_concentrations__Na_i); // dimensionless
        const double var_t96 = var_membrane__V - ((var_t89 * var_t90) * var_t93); // dimensionless
        const double var_t99 = exp((var_t96 * var_membrane__F) * var_t88); // dimensionless
        const double var_t100 = var_t99 - 1.0; // dimensionless
        const double var_t103 = exp((var_membrane__V * var_membrane__F) * var_t88); // dimensionless
        const double var_t104 = var_t103 - 1.0; // dimensionless
        const double var_t105 = 1.0 / var_t104; // dimensionless
        const double var_t107 = (var_t100 * var_t105) * var_membrane__V; // dimensionless
        const double var_t114 = var_t1 ? ((0.095200000000000007 * var_t53) + 0.086900000000000005) : ((0.095180000000000001 * var_t70) + 0.086929999999999993); // dimensionless
        const double var_t115 = 1.0 - var_t114; // dimensionless
        const double var_t118 = (var_t115 * var_sodium_current_h_gate__h1) + (var_t114 * var_sodium_current_h_gate__h2); // dimensionless
        const double var_t119 = var_t118 * var_ionic_concentrations__Na_o; // dimensionless
        const double var_t122 = ((var_t43 * var_t119) * var_t83) * var_membrane__F; // dimensionless
        const double var_t123 = pow(var_membrane__R, 2.0); // dimensionless
        const double var_t125 = pow(var_membrane__T, 2.0); // dimensionless
        const double var_t127 = (1.0 / var_t123) / var_t125; // dimensionless
        const double var_t133 = pow(var_t104, 2.0); // dimensionless
        const double var_t140 = var_t83 * var_t86; // dimensionless
        const double var_t154 = var_t1 ? (var_L_type_Ca_channel__g_Ca_L_Centre_Published + (var_t26 * (var_L_type_Ca_channel__g_Ca_L_Periphery_Published - var_L_type_Ca_channel__g_Ca_L_Centre_Published))) : var_t12 ? (var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable + (var_t26 * (var_L_type_Ca_channel__g_Ca_L_Periphery_0DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_0DCapable))) : (var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable + (var_t26 * (var_L_type_Ca_channel__g_Ca_L_Periphery_1DCapable - var_L_type_Ca_channel__g_Ca_L_Centre_1DCapable))); // dimensionless
        const double var_t155 = (1.0 / 6.0) * var_membrane__V; // dimensionless
        const double var_t157 = exp((-var_t155) - 2.3500000000000001); // dimensionless
        const double var_t158 = 1.0 + var_t157; // dimensionless
        const double var_t159 = pow(var_t158, 2.0); // dimensionless
        const double var_t162 = var_membrane__V - var_L_type_Ca_channel__E_Ca_L; // dimensionless
        const double var_t180 = var_t1 ? (var_T_type_Ca_channel__g_Ca_T_Centre_Published + (var_t26 * (var_T_type_Ca_channel__g_Ca_T_Periphery_Published - var_T_type_Ca_channel__g_Ca_T_Centre_Published))) : var_t12 ? (var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable + (var_t26 * (var_T_type_Ca_channel__g_Ca_T_Periphery_0DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_0DCapable))) : (var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable + (var_t26 * (var_T_type_Ca_channel__g_Ca_T_Periphery_1DCapable - var_T_type_Ca_channel__g_Ca_T_Centre_1DCapable))); // dimensionless
        const double var_t192 = var_t1 ? (var_four_AP_sensitive_currents__g_to_Centre_Published + (var_t26 * (var_four_AP_sensitive_currents__g_to_Periphery_Published - var_four_AP_sensitive_currents__g_to_Centre_Published))) : var_t12 ? (var_four_AP_sensitive_currents__g_to_Centre_0DCapable + (var_t26 * (var_four_AP_sensitive_currents__g_to_Periphery_0DCapable - var_four_AP_sensitive_currents__g_to_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_to_Centre_1DCapable + (var_t26 * (var_four_AP_sensitive_currents__g_to_Periphery_1DCapable - var_four_AP_sensitive_currents__g_to_Centre_1DCapable))); // dimensionless
        const double var_t193 = var_t192 * var_four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_t204 = var_t1 ? (var_four_AP_sensitive_currents__g_sus_Centre_Published + (var_t26 * (var_four_AP_sensitive_currents__g_sus_Periphery_Published - var_four_AP_sensitive_currents__g_sus_Centre_Published))) : var_t12 ? (var_four_AP_sensitive_currents__g_sus_Centre_0DCapable + (var_t26 * (var_four_AP_sensitive_currents__g_sus_Periphery_0DCapable - var_four_AP_sensitive_currents__g_sus_Centre_0DCapable))) : (var_four_AP_sensitive_currents__g_sus_Centre_1DCapable + (var_t26 * (var_four_AP_sensitive_currents__g_sus_Periphery_1DCapable - var_four_AP_sensitive_currents__g_sus_Centre_1DCapable))); // dimensionless
        const double var_t215 = var_t1 ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published + (var_t26 * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_Published - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_Published))) : var_t12 ? (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable + (var_t26 * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_0DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_0DCapable))) : (var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable + (var_t26 * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery_1DCapable - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre_1DCapable))); // dimensionless
        const double var_t218 = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as); // dimensionless
        const double var_t230 = var_t1 ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published + (var_t26 * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_Published - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_Published))) : var_t12 ? (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable + (var_t26 * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_0DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_0DCapable))) : (var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable + (var_t26 * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery_1DCapable - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre_1DCapable))); // dimensionless
        const double var_t231 = pow(var_slow_delayed_rectifying_potassium_current_xs_gate__xs, 2.0); // dimensionless
        const double var_t233 = var_membrane__Version != 2.0; // dimensionless
        const double var_t243 = var_t1 ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_Published + (var_t26 * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_Published - var_hyperpolarisation_activated_current__g_f_Na_Centre_Published))) : var_t12 ? (var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable + (var_t26 * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable + (var_t26 * (var_hyperpolarisation_activated_current__g_f_Na_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_Na_Centre_1DCapable))); // dimensionless
        const double var_t244 = var_t243 * var_hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_t245 = var_t233 ? var_t244 : var_t244; // dimensionless
        const double var_t255 = var_t1 ? (var_hyperpolarisation_activated_current__g_f_K_Centre_Published + (var_t26 * (var_hyperpolarisation_activated_current__g_f_K_Periphery_Published - var_hyperpolarisation_activated_current__g_f_K_Centre_Published))) : var_t12 ? (var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable + (var_t26 * (var_hyperpolarisation_activated_current__g_f_K_Periphery_0DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_0DCapable))) : (var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable + (var_t26 * (var_hyperpolarisation_activated_current__g_f_K_Periphery_1DCapable - var_hyperpolarisation_activated_current__g_f_K_Centre_1DCapable))); // dimensionless
        const double var_t256 = var_t255 * var_hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_t257 = var_t233 ? var_t256 : var_t256; // dimensionless
        const double var_t267 = var_t1 ? (var_sodium_background_current__g_b_Na_Centre_Published + (var_t26 * (var_sodium_background_current__g_b_Na_Periphery_Published - var_sodium_background_current__g_b_Na_Centre_Published))) : var_t12 ? (var_sodium_background_current__g_b_Na_Centre_0DCapable + (var_t26 * (var_sodium_background_current__g_b_Na_Periphery_0DCapable - var_sodium_background_current__g_b_Na_Centre_0DCapable))) : (var_sodium_background_current__g_b_Na_Centre_1DCapable + (var_t26 * (var_sodium_background_current__g_b_Na_Periphery_1DCapable - var_sodium_background_current__g_b_Na_Centre_1DCapable))); // dimensionless
        const double var_t277 = var_t1 ? (var_calcium_background_current__g_b_Ca_Centre_Published + (var_t26 * (var_calcium_background_current__g_b_Ca_Periphery_Published - var_calcium_background_current__g_b_Ca_Centre_Published))) : var_t12 ? (var_calcium_background_current__g_b_Ca_Centre_0DCapable + (var_t26 * (var_calcium_background_current__g_b_Ca_Periphery_0DCapable - var_calcium_background_current__g_b_Ca_Centre_0DCapable))) : (var_calcium_background_current__g_b_Ca_Centre_1DCapable + (var_t26 * (var_calcium_background_current__g_b_Ca_Periphery_1DCapable - var_calcium_background_current__g_b_Ca_Centre_1DCapable))); // dimensionless
        const double var_t287 = var_t1 ? (var_potassium_background_current__g_b_K_Centre_Published + (var_t26 * (var_potassium_background_current__g_b_K_Periphery_Published - var_potassium_background_current__g_b_K_Centre_Published))) : var_t12 ? (var_potassium_background_current__g_b_K_Centre_0DCapable + (var_t26 * (var_potassium_background_current__g_b_K_Periphery_0DCapable - var_potassium_background_current__g_b_K_Centre_0DCapable))) : (var_potassium_background_current__g_b_K_Centre_1DCapable + (var_t26 * (var_potassium_background_current__g_b_K_Periphery_1DCapable - var_potassium_background_current__g_b_K_Centre_1DCapable))); // dimensionless
        const double var_t297 = var_t1 ? (var_sodium_calcium_exchanger__k_NaCa_Centre_Published + (var_t26 * (var_sodium_calcium_exchanger__k_NaCa_Periphery_Published - var_sodium_calcium_exchanger__k_NaCa_Centre_Published))) : var_t12 ? (var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable + (var_t26 * (var_sodium_calcium_exchanger__k_NaCa_Periphery_0DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_0DCapable))) : (var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable + (var_t26 * (var_sodium_calcium_exchanger__k_NaCa_Periphery_1DCapable - var_sodium_calcium_exchanger__k_NaCa_Centre_1DCapable))); // dimensionless
        const double var_t298 = pow(var_ionic_concentrations__Na_i, 2.0); // dimensionless
        const double var_t299 = var_t298 * var_ionic_concentrations__Na_i; // dimensionless
        const double var_t300 = var_ionic_concentrations__Ca_o * var_t299; // dimensionless
        const double var_t303 = exp((0.037429999999999998 * var_membrane__V) * var_sodium_calcium_exchanger__gamma_NaCa); // dimensionless
        const double var_t306 = ((0.037429999999999998 * var_t300) * var_sodium_calcium_exchanger__gamma_NaCa) * var_t303; // dimensionless
        const double var_t307 = pow(var_ionic_concentrations__Na_o, 2.0); // dimensionless
        const double var_t309 = (var_ionic_concentrations__Ca_i * var_t307) * var_ionic_concentrations__Na_o; // dimensionless
        const double var_t313 = var_membrane__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0); // dimensionless
        const double var_t315 = exp(0.037400000000000003 * var_t313); // dimensionless
        const double var_t323 = 1.0 / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * (var_t309 + var_t300))); // dimensionless
        const double var_t328 = exp(0.037429999999999998 * var_t313); // dimensionless
        const double var_t334 = var_t1 ? ((var_t297 * (var_t306 - ((var_t309 * ((0.037400000000000003 * var_sodium_calcium_exchanger__gamma_NaCa) - 0.037400000000000003)) * var_t315))) * var_t323) : ((var_t297 * (var_t306 - ((var_t309 * ((0.037429999999999998 * var_sodium_calcium_exchanger__gamma_NaCa) - 0.037429999999999998)) * var_t328))) * var_t323); // dimensionless
        const double var_t344 = var_t1 ? (var_sodium_potassium_pump__i_p_max_Centre_Published + (var_t26 * (var_sodium_potassium_pump__i_p_max_Periphery_Published - var_sodium_potassium_pump__i_p_max_Centre_Published))) : var_t12 ? (var_sodium_potassium_pump__i_p_max_Centre_0DCapable + (var_t26 * (var_sodium_potassium_pump__i_p_max_Periphery_0DCapable - var_sodium_potassium_pump__i_p_max_Centre_0DCapable))) : (var_sodium_potassium_pump__i_p_max_Centre_1DCapable + (var_t26 * (var_sodium_potassium_pump__i_p_max_Periphery_1DCapable - var_sodium_potassium_pump__i_p_max_Centre_1DCapable))); // dimensionless
        const double var_t346 = var_sodium_potassium_pump__K_m_Na + var_ionic_concentrations__Na_i; // dimensionless
        const double var_t347 = pow(var_t346, 2.0); // dimensionless
        const double var_t351 = pow(var_ionic_concentrations__K_o, 2.0); // dimensionless
        const double var_t353 = pow(var_sodium_potassium_pump__K_m_K + var_ionic_concentrations__K_o, 2.0); // dimensionless
        const double var_t358 = exp((((-1.0) / 40.0) * var_membrane__V) - (3.0 / 2.0)); // dimensionless
        const double var_t360 = pow(1.5 + var_t358, 2.0); // dimensionless
        const double var_t366 = (((((((((((((((((((((var_t43 * (((-var_t78) * var_sodium_current_h_gate__h1) + (var_t78 * var_sodium_current_h_gate__h2))) * var_ionic_concentrations__Na_o) * var_t83) * var_t88) * var_t107) + ((((var_t122 * var_t127) * var_t99) * var_t105) * var_membrane__V)) - (((((var_t122 * var_t127) * var_t100) / var_t133) * var_membrane__V) * var_t103)) + (((((var_t43 * var_t119) * var_t140) * var_t87) * var_t100) * var_t105)) + ((((0.001 * var_t154) / var_t159) * var_t157) * var_t162)) + (var_t154 * ((var_L_type_Ca_channel_f_gate__f_L * var_L_type_Ca_channel_d_gate__d_L) + (0.0060000000000000001 / var_t158)))) + ((var_t180 * var_T_type_Ca_channel_d_gate__d_T) * var_T_type_Ca_channel_f_gate__f_T)) + (var_t193 * var_four_AP_sensitive_currents_r_gate__r)) + (var_t204 * var_four_AP_sensitive_currents_r_gate__r)) + ((var_t215 * var_t218) * var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i)) + (var_t230 * var_t231)) + var_t245) + var_t257) + var_t267) + var_t277) + var_t287) + var_t334) + ((((((((0.040000000000000001 * var_t344) * var_t299) / var_t347) / var_t346) * var_t351) / var_t353) / var_t360) * var_t358); // dimensionless
        const double var_t368 = var_t30 * var_t40; // dimensionless
        const double var_t373 = (var_t140 * var_t87) * var_t107; // dimensionless
        const double var_t384 = var_t30 * var_t154; // dimensionless
        const double var_t389 = var_t30 * var_t180; // dimensionless
        const double var_t390 = var_membrane__V - var_T_type_Ca_channel__E_Ca_T; // dimensionless
        const double var_t398 = log(var_ionic_concentrations__K_o / var_ionic_concentrations__K_i); // dimensionless
        const double var_t401 = var_membrane__V - ((var_t89 * var_t90) * var_t398); // dimensionless
        const double var_t408 = var_t30 * var_t215; // dimensionless
        const double var_t410 = (var_t408 * var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i) * var_t401; // dimensionless
        const double var_t422 = log((var_ionic_concentrations__K_o + (0.12 * var_ionic_concentrations__Na_o)) / (var_ionic_concentrations__K_i + (0.12 * var_ionic_concentrations__Na_i))); // dimensionless
        const double var_t431 = log((var_ionic_concentrations__K_o + (0.029999999999999999 * var_ionic_concentrations__Na_o)) / (var_ionic_concentrations__K_i + (0.029999999999999999 * var_ionic_concentrations__Na_i))); // dimensionless
        const double var_t434 = var_t1 ? ((var_t89 * var_t90) * var_t422) : ((var_t89 * var_t90) * var_t431); // dimensionless
        const double var_t442 = var_t233 ? (var_t243 * var_t96) : (var_t243 * (var_membrane__V - 77.599999999999994)); // dimensionless
        const double var_t446 = var_t233 ? (var_t255 * var_t401) : (var_t255 * (var_membrane__V + 102.0)); // dimensionless
        const double var_t449 = 0.18315018320000001 * var_membrane__V; // dimensionless
        const double var_t450 = exp(-var_t449); // dimensionless
        const double var_t451 = 1.0 + var_t450; // dimensionless
        const double var_t453 = pow(1.0 / var_t451, 1.0 / 3.0); // dimensionless
        const double var_t454 = pow(var_t453, 2.0); // dimensionless
        const double var_t456 = pow(var_t451, 2.0); // dimensionless
        const double var_t462 = exp((-var_t449) - 5.5531135550000004); // dimensionless
        const double var_t463 = 1.0 + var_t462; // dimensionless
        const double var_t465 = pow(1.0 / var_t463, 1.0 / 3.0); // dimensionless
        const double var_t466 = pow(var_t465, 2.0); // dimensionless
        const double var_t468 = pow(var_t463, 2.0); // dimensionless
        const double var_t473 = var_t1 ? (((0.061050061070000002 / var_t454) / var_t456) * var_t450) : (((0.061050061070000002 / var_t466) / var_t468) * var_t462); // dimensionless
        const double var_t476 = exp(((-0.33500000000000002) * var_membrane__V) - 18.994499999999999); // dimensionless
        const double var_t480 = exp((0.082000000000000003 * var_membrane__V) + 5.3308200000000001); // dimensionless
        const double var_t482 = (0.83199999999999996 * var_t476) + (0.627 * var_t480); // dimensionless
        const double var_t488 = exp(((-0.33566000000000001) * var_membrane__V) - 19.034003089999999); // dimensionless
        const double var_t492 = exp((0.082299999999999998 * var_membrane__V) + 5.3505781299999997); // dimensionless
        const double var_t494 = (0.83221659999999997 * var_t488) + (0.62739999999999996 * var_t492); // dimensionless
        const double var_t498 = var_t1 ? ((0.00062469999999999995 / var_t482) + 4.0000000000000003e-05) : ((0.00062469999999999995 / var_t494) + 4.5689999999999998e-05); // dimensionless
        const double var_t499 = 1.0 / var_t498; // dimensionless
        const double var_t501 = var_t1 ? var_t453 : var_t465; // dimensionless
        const double var_t503 = pow(var_t498, 2.0); // dimensionless
        const double var_t506 = pow(var_t482, 2.0); // dimensionless
        const double var_t513 = pow(var_t494, 2.0); // dimensionless
        const double var_t520 = var_t1 ? (((-0.00062469999999999995) / var_t506) * (((-0.27872000000000002) * var_t476) + (0.051414000000000001 * var_t480))) : (((-0.00062469999999999995) / var_t513) * (((-0.27934182400000002) * var_t488) + (0.051635019999999997 * var_t492))); // dimensionless
        const double var_t525 = exp((0.15625 * var_membrane__V) + 10.328125); // dimensionless
        const double var_t526 = 1.0 + var_t525; // dimensionless
        const double var_t527 = pow(var_t526, 2.0); // dimensionless
        const double var_t529 = (1.0 / var_t527) * var_t525; // dimensionless
        const double var_t532 = exp(((-0.28149999999999997) * var_membrane__V) - 4.816465); // dimensionless
        const double var_t535 = exp(((-0.34260000000000002) * var_membrane__V) - 12.936576000000001); // dimensionless
        const double var_t537 = 1.0 + (0.0037320000000000001 * var_t535); // dimensionless
        const double var_t539 = var_t532 / var_t537; // dimensionless
        const double var_t541 = (3.7170000000000002e-06 * var_t539) + 0.00059770000000000005; // dimensionless
        const double var_t542 = 1.0 / var_t541; // dimensionless
        const double var_t545 = 1.0 / var_t526; // dimensionless
        const double var_t547 = pow(var_t541, 2.0); // dimensionless
        const double var_t551 = pow(var_t537, 2.0); // dimensionless
        const double var_t561 = exp(((-0.62190000000000001) * var_membrane__V) - 11.69172); // dimensionless
        const double var_t564 = exp(((-0.66830000000000001) * var_membrane__V) - 22.768981); // dimensionless
        const double var_t566 = 1.0 + (7.1890000000000005e-05 * var_t564); // dimensionless
        const double var_t568 = var_t561 / var_t566; // dimensionless
        const double var_t570 = (3.1860000000000002e-08 * var_t568) + 0.0035560000000000001; // dimensionless
        const double var_t571 = 1.0 / var_t570; // dimensionless
        const double var_t575 = pow(var_t570, 2.0); // dimensionless
        const double var_t579 = pow(var_t566, 2.0); // dimensionless
        const double var_t588 = exp((-var_t155) - 3.8500000000000001); // dimensionless
        const double var_t589 = 1.0 + var_t588; // dimensionless
        const double var_t590 = pow(var_t589, 2.0); // dimensionless
        const double var_t596 = exp(((-var_t155) - 3.7166666670000001) - (0.1333333333 * var_t26)); // dimensionless
        const double var_t597 = 1.0 + var_t596; // dimensionless
        const double var_t598 = pow(var_t597, 2.0); // dimensionless
        const double var_t603 = exp((-var_t155) - 3.7000000000000002); // dimensionless
        const double var_t604 = 1.0 + var_t603; // dimensionless
        const double var_t605 = pow(var_t604, 2.0); // dimensionless
        const double var_t609 = var_t1 ? (((1.0 / 6.0) / var_t590) * var_t588) : var_t12 ? (((1.0 / 6.0) / var_t598) * var_t596) : (((1.0 / 6.0) / var_t605) * var_t603); // dimensionless
        const double var_t610 = var_membrane__V + 35.0; // dimensionless
        const double var_t613 = exp(((-0.40000000000000002) * var_membrane__V) - 14.0); // dimensionless
        const double var_t614 = var_t613 - 1.0; // dimensionless
        const double var_t615 = 1.0 / var_t614; // dimensionless
        const double var_t616 = var_t610 * var_t615; // dimensionless
        const double var_t619 = exp((-0.20799999999999999) * var_membrane__V); // dimensionless
        const double var_t620 = var_t619 - 1.0; // dimensionless
        const double var_t621 = 1.0 / var_t620; // dimensionless
        const double var_t623 = (84.900000000000006 * var_membrane__V) * var_t621; // dimensionless
        const double var_t629 = var_t1 ? (((-28.379999999999999) * var_t616) - var_t623) : var_t12 ? (((-28.390000000000001) * var_t616) - var_t623) : (((-28.399999999999999) * var_t616) - var_t623); // dimensionless
        const double var_t630 = var_membrane__V - 5.0; // dimensionless
        const double var_t633 = exp((0.40000000000000002 * var_membrane__V) - 2.0); // dimensionless
        const double var_t634 = var_t633 - 1.0; // dimensionless
        const double var_t635 = 1.0 / var_t634; // dimensionless
        const double var_t636 = var_t630 * var_t635; // dimensionless
        const double var_t639 = var_t12 ? (11.43 * var_t636) : (11.42 * var_t636); // dimensionless
        const double var_t640 = var_t629 + var_t639; // dimensionless
        const double var_t645 = var_t1 ? (1.0 / var_t589) : var_t12 ? (1.0 / var_t597) : (1.0 / var_t604); // dimensionless
        const double var_t648 = pow(var_t614, 2.0); // dimensionless
        const double var_t651 = (var_t610 / var_t648) * var_t613; // dimensionless
        const double var_t653 = 84.900000000000006 * var_t621; // dimensionless
        const double var_t654 = pow(var_t620, 2.0); // dimensionless
        const double var_t658 = ((17.659199999999998 * var_membrane__V) / var_t654) * var_t619; // dimensionless
        const double var_t666 = var_t1 ? (((((-28.379999999999999) * var_t615) - (11.352 * var_t651)) - var_t653) - var_t658) : var_t12 ? (((((-28.390000000000001) * var_t615) - (11.356 * var_t651)) - var_t653) - var_t658) : (((((-28.399999999999999) * var_t615) - (11.359999999999999 * var_t651)) - var_t653) - var_t658); // dimensionless
        const double var_t668 = pow(var_t634, 2.0); // dimensionless
        const double var_t671 = (var_t630 / var_t668) * var_t633; // dimensionless
        const double var_t677 = var_t12 ? ((11.43 * var_t635) - (4.5720000000000001 * var_t671)) : ((11.42 * var_t635) - (4.5679999999999996 * var_t671)); // dimensionless
        const double var_t683 = exp(((1.0 / 5.0) * var_membrane__V) + 9.0); // dimensionless
        const double var_t684 = 1.0 + var_t683; // dimensionless
        const double var_t685 = pow(var_t684, 2.0); // dimensionless
        const double var_t689 = 1.2 - (0.20000000000000001 * var_t26); // dimensionless
        const double var_t690 = var_membrane__V + 28.0; // dimensionless
        const double var_t692 = ((1.0 / 4.0) * var_membrane__V) + 7.0; // dimensionless
        const double var_t693 = exp(var_t692); // dimensionless
        const double var_t694 = var_t693 - 1.0; // dimensionless
        const double var_t695 = 1.0 / var_t694; // dimensionless
        const double var_t696 = var_t690 * var_t695; // dimensionless
        const double var_t699 = var_t12 ? (3.75 * var_t696) : (3.1200000000000001 * var_t696); // dimensionless
        const double var_t700 = exp(-var_t692); // dimensionless
        const double var_t701 = 1.0 + var_t700; // dimensionless
        const double var_t702 = 1.0 / var_t701; // dimensionless
        const double var_t705 = var_t12 ? (30.0 * var_t702) : (25.0 * var_t702); // dimensionless
        const double var_t706 = var_t699 + var_t705; // dimensionless
        const double var_t707 = 1.0 / var_t706; // dimensionless
        const double var_t709 = var_t12 ? (var_t689 * var_t707) : var_t707; // dimensionless
        const double var_t710 = 1.0 / var_t709; // dimensionless
        const double var_t715 = pow(var_t709, 2.0); // dimensionless
        const double var_t718 = pow(var_t706, 2.0); // dimensionless
        const double var_t719 = 1.0 / var_t718; // dimensionless
        const double var_t722 = pow(var_t694, 2.0); // dimensionless
        const double var_t725 = (var_t690 / var_t722) * var_t693; // dimensionless
        const double var_t731 = var_t12 ? ((3.75 * var_t695) - (0.9375 * var_t725)) : ((3.1200000000000001 * var_t695) - (0.78000000000000003 * var_t725)); // dimensionless
        const double var_t732 = pow(var_t701, 2.0); // dimensionless
        const double var_t734 = (1.0 / var_t732) * var_t700; // dimensionless
        const double var_t737 = var_t12 ? ((15.0 / 2.0) * var_t734) : ((25.0 / 4.0) * var_t734); // dimensionless
        const double var_t738 = var_t731 + var_t737; // dimensionless
        const double var_t741 = var_t12 ? (((-var_t689) * var_t719) * var_t738) : ((-var_t719) * var_t738); // dimensionless
        const double var_t746 = exp(((-0.14705882349999999) * var_membrane__V) - 5.4411764700000003); // dimensionless
        const double var_t747 = 1.0 + var_t746; // dimensionless
        const double var_t748 = pow(var_t747, 2.0); // dimensionless
        const double var_t752 = ((1.0 / 30.0) * var_membrane__V) + 0.87666666670000004; // dimensionless
        const double var_t753 = exp(var_t752); // dimensionless
        const double var_t754 = exp(-var_t752); // dimensionless
        const double var_t755 = var_t753 + var_t754; // dimensionless
        const double var_t763 = (1.0 / 9.0) * var_membrane__V; // dimensionless
        const double var_t765 = exp(var_t763 + (71.0 / 9.0)); // dimensionless
        const double var_t766 = 1.0 + var_t765; // dimensionless
        const double var_t767 = pow(var_t766, 2.0); // dimensionless
        const double var_t770 = 0.012004801920000001 * var_membrane__V; // dimensionless
        const double var_t773 = exp(((-var_t770) - 0.85234093629999996) - (0.0084033613440000002 * var_t26)); // dimensionless
        const double var_t776 = exp((-var_t770) - 0.86074429770000005); // dimensionless
        const double var_t778 = var_t12 ? (15.300000000000001 * var_t773) : (15.300000000000001 * var_t776); // dimensionless
        const double var_t779 = 0.065019505850000006 * var_membrane__V; // dimensionless
        const double var_t781 = exp(var_t779 + 4.6163849150000003); // dimensionless
        const double var_t784 = exp(var_t779 + 4.6618985689999999); // dimensionless
        const double var_t786 = var_t12 ? (15.0 * var_t781) : (15.0 * var_t784); // dimensionless
        const double var_t787 = var_t778 + var_t786; // dimensionless
        const double var_t794 = var_t12 ? ((-0.18367346940000001) * var_t773) : ((-0.18367346940000001) * var_t776); // dimensionless
        const double var_t797 = var_t12 ? (0.97529258780000005 * var_t781) : (0.97529258780000005 * var_t784); // dimensionless
        const double var_t803 = exp((0.076335877859999998 * var_membrane__V) + 4.5320610690000001); // dimensionless
        const double var_t804 = 1.0 + var_t803; // dimensionless
        const double var_t805 = pow(var_t804, 2.0); // dimensionless
        const double var_t810 = exp(((-0.080000000000000002) * var_membrane__V) - 3.9199999999999999); // dimensionless
        const double var_t811 = 1.0 / var_t810; // dimensionless
        const double var_t815 = exp((0.10000000000000001 * var_membrane__V) + 5.093); // dimensionless
        const double var_t818 = 0.081610000000000002 * var_membrane__V; // dimensionless
        const double var_t821 = exp(((-var_t818) - 3.1827899999999998) - (0.81610000000000005 * var_t26)); // dimensionless
        const double var_t824 = 0.27189999999999998 - (0.1719 * var_t26); // dimensionless
        const double var_t828 = exp(var_t824 * ((var_membrane__V + 40.93) + (10.0 * var_t26))); // dimensionless
        const double var_t830 = (0.56859999999999999 * var_t821) + (0.71740000000000004 * var_t828); // dimensionless
        const double var_t835 = exp((-var_t818) - 3.1827899999999998); // dimensionless
        const double var_t839 = exp((0.27189999999999998 * var_membrane__V) + 11.128867); // dimensionless
        const double var_t841 = (0.56859999999999999 * var_t835) + (0.71740000000000004 * var_t839); // dimensionless
        const double var_t845 = var_t1 ? ((0.0101 + (0.11433333330000001 * var_t811)) + (2.4000000000000001e-05 * var_t815)) : var_t12 ? (0.01010333333 + (0.065166666659999997 / var_t830)) : (0.0101 + (0.065170000000000006 / var_t841)); // dimensionless
        const double var_t846 = 1.0 / var_t845; // dimensionless
        const double var_t851 = pow(var_t845, 2.0); // dimensionless
        const double var_t857 = pow(var_t830, 2.0); // dimensionless
        const double var_t865 = pow(var_t841, 2.0); // dimensionless
        const double var_t872 = var_t1 ? ((0.0091466666640000003 * var_t811) + (2.3999999999999999e-06 * var_t815)) : var_t12 ? (((-0.065166666659999997) / var_t857) * (((-0.046403446000000001) * var_t821) + ((0.71740000000000004 * var_t824) * var_t828))) : (((-0.065170000000000006) / var_t865) * (((-0.046403446000000001) * var_t835) + (0.19506106000000001 * var_t839))); // dimensionless
        const double var_t877 = exp(((-0.05076142132) * var_membrane__V) + 0.554822335); // dimensionless
        const double var_t878 = 1.0 + var_t877; // dimensionless
        const double var_t879 = pow(var_t878, 2.0); // dimensionless
        const double var_t884 = exp((0.089999999999999997 * var_membrane__V) + 2.7549000000000001); // dimensionless
        const double var_t888 = exp(((-0.12) * var_membrane__V) - 2.8607999999999998); // dimensionless
        const double var_t890 = (1.0369999999999999 * var_t884) + (0.36899999999999999 * var_t888); // dimensionless
        const double var_t896 = exp((0.090120000000000006 * var_membrane__V) + 2.7585731999999998); // dimensionless
        const double var_t900 = exp(((-0.11899999999999999) * var_membrane__V) - 2.8369599999999999); // dimensionless
        const double var_t902 = (1.0369999999999999 * var_t896) + (0.36899999999999999 * var_t900); // dimensionless
        const double var_t903 = 1.0 / var_t902; // dimensionless
        const double var_t908 = var_t1 ? (0.00298 + (0.01559 / var_t890)) : var_t12 ? (0.0029775000000000001 + (0.019595000000000001 * var_t903)) : (0.00298 + (0.01959 * var_t903)); // dimensionless
        const double var_t909 = 1.0 / var_t908; // dimensionless
        const double var_t914 = pow(var_t908, 2.0); // dimensionless
        const double var_t917 = pow(var_t890, 2.0); // dimensionless
        const double var_t924 = pow(var_t902, 2.0); // dimensionless
        const double var_t929 = (1.0 / var_t924) * ((0.09345444 * var_t896) - (0.043910999999999999 * var_t900)); // dimensionless
        const double var_t932 = var_t1 ? (((-0.01559) / var_t917) * ((0.093329999999999996 * var_t884) - (0.04428 * var_t888))) : var_t12 ? ((-0.019595000000000001) * var_t929) : ((-0.01959) * var_t929); // dimensionless
        const double var_t935 = 0.094339622639999995 * var_membrane__V; // dimensionless
        const double var_t937 = exp((-var_t935) - 1.3396226410000001); // dimensionless
        const double var_t938 = 1.0 + var_t937; // dimensionless
        const double var_t939 = pow(var_t938, 2.0); // dimensionless
        const double var_t944 = exp((-var_t935) - 1.2452830189999999); // dimensionless
        const double var_t945 = 1.0 + var_t944; // dimensionless
        const double var_t946 = pow(var_t945, 2.0); // dimensionless
        const double var_t950 = var_t233 ? ((0.094339622639999995 / var_t939) * var_t937) : ((0.094339622639999995 / var_t946) * var_t944); // dimensionless
        const double var_t951 = 0.062893081759999997 * var_membrane__V; // dimensionless
        const double var_t953 = exp(var_t951 - 0.56603773580000005); // dimensionless
        const double var_t955 = 0.044444444440000001 * var_membrane__V; // dimensionless
        const double var_t957 = exp((-var_t955) + 0.40000000000000002); // dimensionless
        const double var_t959 = (37.200000000000003 * var_t953) + (0.95999999999999996 * var_t957); // dimensionless
        const double var_t962 = exp(var_t951 - 0.62893081760000003); // dimensionless
        const double var_t965 = exp((-var_t955) + 0.44444444440000003); // dimensionless
        const double var_t967 = (37.200000000000003 * var_t962) + (0.95999999999999996 * var_t965); // dimensionless
        const double var_t969 = var_t233 ? (1.0 / var_t959) : (1.0 / var_t967); // dimensionless
        const double var_t970 = 1.0 / var_t969; // dimensionless
        const double var_t974 = var_t233 ? (1.0 / var_t938) : (1.0 / var_t945); // dimensionless
        const double var_t976 = pow(var_t969, 2.0); // dimensionless
        const double var_t979 = pow(var_t959, 2.0); // dimensionless
        const double var_t985 = pow(var_t967, 2.0); // dimensionless
        const double var_t991 = var_t233 ? (((-1.0) / var_t979) * ((2.3396226410000001 * var_t953) - (0.042666666659999998 * var_t957))) : (((-1.0) / var_t985) * ((2.3396226410000001 * var_t962) - (0.042666666659999998 * var_t965))); // dimensionless
        const double var_t994 = (1.0 / 17.0) * var_membrane__V; // dimensionless
        const double var_t996 = exp(var_t994 - (9.0 / 17.0)); // dimensionless
        const double var_t998 = 0.046296296299999998 * var_membrane__V; // dimensionless
        const double var_t1000 = exp((-var_t998) + 0.41666666670000002); // dimensionless
        const double var_t1002 = (4.2000000000000002 * var_t996) + (0.14999999999999999 * var_t1000); // dimensionless
        const double var_t1005 = exp(var_t994 - (10.0 / 17.0)); // dimensionless
        const double var_t1008 = exp((-var_t998) + 0.46296296300000001); // dimensionless
        const double var_t1010 = (4.2000000000000002 * var_t1005) + (0.14999999999999999 * var_t1008); // dimensionless
        const double var_t1012 = var_t233 ? (1.0 / var_t1002) : (1.0 / var_t1010); // dimensionless
        const double var_t1013 = 1.0 / var_t1012; // dimensionless
        const double var_t1016 = pow(var_t1012, 2.0); // dimensionless
        const double var_t1019 = pow(var_t1002, 2.0); // dimensionless
        const double var_t1025 = pow(var_t1010, 2.0); // dimensionless
        const double var_t1031 = var_t233 ? (((-1.0) / var_t1019) * ((0.2470588235 * var_t996) - (0.0069444444449999997 * var_t1000))) : (((-1.0) / var_t1025) * ((0.2470588235 * var_t1005) - (0.0069444444449999997 * var_t1008))); // dimensionless
        const double var_t1036 = exp((0.099009900989999997 * var_membrane__V) + 1.8415841580000001); // dimensionless
        const double var_t1038 = pow(1.0 + var_t1036, 2.0); // dimensionless
        const double var_t1041 = var_t1 ? 0.002 : var_t12 ? 0.002 : 0.0060000000000000001; // dimensionless
        const double var_t1042 = 1.0 / var_t1041; // dimensionless
        const double var_t1046 = exp((-var_t763) + (40.0 / 9.0)); // dimensionless
        const double var_t1047 = 1.0 + var_t1046; // dimensionless
        const double var_t1048 = pow(var_t1047, 2.0); // dimensionless
        const double var_t1055 = exp(((-1.0) / 45.0) * var_membrane__V); // dimensionless
        const double var_t1064 = exp(((-0.037565740039999997) * var_membrane__V) - 2.964312547); // dimensionless
        const double var_t1068 = exp(((-0.037551633500000001) * var_membrane__V) - 2.9631993990000001); // dimensionless
        const double var_t1070 = var_t1 ? ((-0.037565740039999997) * var_t1064) : ((-0.037551633500000001) * var_t1068); // dimensionless
        const double var_t1075 = exp((0.047058823530000002 * var_membrane__V) + 3.5355294119999998); // dimensionless
        const double var_t1079 = var_t1 ? var_t1064 : var_t1068; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t30) * var_t366));
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * ((var_t473 * var_t499) - (((var_t501 - var_sodium_current_m_gate__m) / var_t503) * var_t520));
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((-0.15625) * var_t529) * var_t542) - (((var_t545 - var_sodium_current_h_gate__h1) / var_t547) * (((-1.0463355000000001e-06) * var_t539) + (((4.7524937540000001e-09 * var_t532) / var_t551) * var_t535))));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((((-0.15625) * var_t529) * var_t571) - (((var_t545 - var_sodium_current_h_gate__h2) / var_t575) * (((-1.9813733999999999e-08) * var_t568) + (((1.5306846119999999e-12 * var_t561) / var_t579) * var_t564))));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * ((((1.0 / 2.0) * var_t609) * var_t640) + (((1.0 / 2.0) * (var_t645 - var_L_type_Ca_channel_d_gate__d_L)) * (var_t666 + var_t677)));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 5.0) / var_t685) * var_t683) * var_t710) - ((((1.0 / var_t684) - var_L_type_Ca_channel_f_gate__f_L) / var_t715) * var_t741));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((157.05882349999999 / var_t748) * var_t746) * var_t755) + (((178.0 / 5.0) * ((1.0 / var_t747) - var_T_type_Ca_channel_d_gate__d_T)) * (var_t753 - var_t754)));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 9.0) / var_t767) * var_t765) * var_t787) + (((1.0 / var_t766) - var_T_type_Ca_channel_f_gate__f_T) * (var_t794 + var_t797)));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((-0.076335877859999998) / var_t805) * var_t803) * var_t846) - ((((1.0 / var_t804) - var_four_AP_sensitive_currents_q_gate__q) / var_t851) * var_t872));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((0.05076142132 / var_t879) * var_t877) * var_t909) - ((((1.0 / var_t878) - var_four_AP_sensitive_currents_r_gate__r) / var_t914) * var_t932));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((var_t950 * var_t970) - (((var_t974 - var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) / var_t976) * var_t991));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * ((var_t950 * var_t1013) - (((var_t974 - var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) / var_t1016) * var_t1031));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * ((((-0.099009900989999997) / var_t1038) * var_t1036) * var_t1042);
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * (((((14.0 / 9.0) / var_t1048) * (1.0 - var_slow_delayed_rectifying_potassium_current_xs_gate__xs)) * var_t1046) + (((1.0 / 45.0) * var_t1055) * var_slow_delayed_rectifying_potassium_current_xs_gate__xs));
        IJth(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * ((var_t1070 * (1.0 - var_hyperpolarisation_activated_current_y_gate__y)) - ((0.047058823530000002 * var_t1075) * var_hyperpolarisation_activated_current_y_gate__y));
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-3.0) * var_t368) * var_t41) * var_t118) * var_ionic_concentrations__Na_o) * var_t373));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (-var_t499);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t368) * var_t42) * var_t115) * var_ionic_concentrations__Na_o) * var_t373));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (-var_t542);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t368) * var_t42) * var_t114) * var_ionic_concentrations__Na_o) * var_t373));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (-var_t571);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t384) * var_L_type_Ca_channel_f_gate__f_L) * var_t162));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (((-1.0) / 2.0) * var_t640);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t384) * var_L_type_Ca_channel_d_gate__d_L) * var_t162));
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t710);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t389) * var_T_type_Ca_channel_f_gate__f_T) * var_t390));
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * ((-1068.0) * var_t755);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t389) * var_T_type_Ca_channel_d_gate__d_T) * var_t390));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t787);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t30) * var_t192) * var_four_AP_sensitive_currents_r_gate__r) * var_t401));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t846);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t30) * ((var_t193 * var_t401) + (var_t204 * var_t401))));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t909);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.59999999999999998) * var_t410));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (-var_t970);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.40000000000000002) * var_t410));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t1013);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t408) * var_t218) * var_t401));
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (-var_t1042);
        IJth(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-2.0) * var_t30) * var_t230) * var_slow_delayed_rectifying_potassium_current_xs_gate__xs) * (var_membrane__V - var_t434)));
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (((-14.0) / var_t1047) - var_t1055);
        IJth(rJacobian, 0, 14) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t30) * (var_t442 + var_t446)));
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ((-var_t1079) - var_t1075);
    }
    
template<>
void OdeSystemInformation<Dynamiczhang_SAN_model_2000_allFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "zhang_SAN_model_2000_all";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-39.013558536);

    // rY[1]:
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.092361701692);

    // rY[2]:
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015905380261);

    // rY[3]:
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01445216109);

    // rY[4]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.04804900895);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.48779845203);

    // rY[6]:
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42074047435);

    // rY[7]:
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.038968420558);

    // rY[8]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.29760539675);

    // rY[9]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.064402950262);

    // rY[10]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_af_gate__P_af");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.13034201158);

    // rY[11]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_as_gate__P_as");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.46960956028);

    // rY[12]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.87993375273);

    // rY[13]:
    this->mVariableNames.push_back("slow_delayed_rectifying_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.082293827208);

    // rY[14]:
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03889291759);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiczhang_SAN_model_2000_allFromCellMLCvode)

#endif // CHASTE_CVODE
