#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: hund_rudy_2004
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:10:19 2020
//! 
//! <autogenerated>

#include "hund_rudy_2004_a.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamichund_rudy_2004_aFromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_amplitude =  -15.0; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamichund_rudy_2004_aFromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamichund_rudy_2004_aFromCellMLCvode::Dynamichund_rudy_2004_aFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                29,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamichund_rudy_2004_aFromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamichund_rudy_2004_aFromCellMLCvode::~Dynamichund_rudy_2004_aFromCellMLCvode()
    {
    }
    
    double Dynamichund_rudy_2004_aFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.781844107117
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00012131666
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.987317750543
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.991924983076
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00000164013
        double var_chaste_interface__ICaL__dp = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.98230672628
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999961508634
        double var_chaste_interface__ICaL__fca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.97836624923
        double var_chaste_interface__ICaL__fca2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.893052931249
        double var_chaste_interface__ICaL__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.992234519148
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00000724074
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.019883138161
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.019890650554
        double var_chaste_interface__Ito__ydv = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.013970786703
        double var_chaste_interface__Ito__ydv2 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.99996472752
        double var_chaste_interface__Ito__zdv = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.829206149767
        double var_chaste_interface__Ito2__AA = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.000816605172
        double var_chaste_interface__INal__mL = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INal__hL = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.26130711759
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 23);
        // Units: mM; Initial value: 12.972433387269
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 24);
        // Units: mM; Initial value: 135.469546216758
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 25);
        // Units: mM; Initial value: 15.59207157178
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 28);
        // Units: mM; Initial value: 0.00012271265
        
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Cl_o = 100.0; // mM
        const double var_Environment__FonRT = 0.0374358835078; // per_mV
        const double var_Environment__tissue = 0.0; // dimensionless
        const double var_INa__G_Na_mult = 1.0; // dimensionless
        const double var_INa__tissue = var_Environment__tissue; // dimensionless
        const double var_INa__GNa = (var_INa__tissue == 0.0) ? 8.25 : (4.0 * 8.25); // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_INa__gNa = var_INa__GNa * var_INa__m * var_INa__m * var_INa__m * var_INa__H * var_INa__J; // mS_per_uF
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_reversal_potentials__ENa = log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i) / var_reversal_potentials__FonRT; // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__INa = var_INa__G_Na_mult * var_INa__gNa * (var_INa__V - var_INa__ENa); // uA_per_uF
        const double var_cell__INa = var_INa__INa; // uA_per_uF
        const double var_ICaL__f2 = var_chaste_interface__ICaL__f2; // dimensionless
        const double var_ICaL__fca2 = var_chaste_interface__ICaL__fca2; // dimensionless
        const double var_ICaL__tissue = var_Environment__tissue; // dimensionless
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICaL__F = var_Environment__F; // C_per_mole
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.000243; // L_per_F_ms
        const double var_ICaL__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_ICaL__ibarca = (var_ICaL__G_CaL_mult * var_ICaL__pca * 4.0 * (var_ICaL__V - 15.0) * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gacai * var_ICaL__Ca_ss * exp(2.0 * (var_ICaL__V - 15.0) * var_ICaL__FonRT)) - (var_ICaL__gacao * var_ICaL__Ca_o))) / (exp(2.0 * (var_ICaL__V - 15.0) * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__fca = var_chaste_interface__ICaL__fca; // dimensionless
        const double var_ICaL__dp = var_chaste_interface__ICaL__dp; // dimensionless
        const double var_ICaL__ICaL = (var_ICaL__tissue == 0.0) ? (pow(var_ICaL__d, var_ICaL__dp) * var_ICaL__f * var_ICaL__f2 * var_ICaL__fca * var_ICaL__fca2 * var_ICaL__ibarca) : (var_ICaL__d * var_ICaL__f * var_ICaL__f2 * var_ICaL__fca * var_ICaL__fca2 * var_ICaL__ibarca); // uA_per_uF
        const double var_cell__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
        const double var_reversal_potentials__EK = log(var_reversal_potentials__K_o / var_reversal_potentials__K_i) / var_reversal_potentials__FonRT; // mV
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__EK) - 59.215000000000003))); // per_ms
        const double var_IK1__bk1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__EK) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__EK) + 4.7530000000000001))); // per_ms
        const double var_IK1__K_o = var_Environment__K_o; // mM
        const double var_IK1__IK1 = ((0.5 * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__ak1) / (var_IK1__ak1 + var_IK1__bk1)) * (var_IK1__V - var_IK1__EK); // uA_per_uF
        const double var_cell__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__V = var_chaste_interface__cell__V; // mV
        const double var_IKp__IKp = (0.0027599999999999999 * (var_IKp__V - var_IKp__EK)) / (1.0 + exp((7.4880000000000004 - var_IKp__V) / 5.9800000000000004)); // uA_per_uF
        const double var_cell__IKp = var_IKp__IKp; // uA_per_uF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IKs__gks = 0.024897499999999999 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))) / var_reversal_potentials__FonRT; // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__IKs = var_IKs__gks * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__EKs); // uA_per_uF
        const double var_cell__IKs = var_IKs__IKs; // uA_per_uF
        const double var_IKr__G_Kr_mult = 1.0; // dimensionless
        const double var_IKr__K_o = var_Environment__K_o; // mM
        const double var_IKr__gkr = 0.013854200000000001 * sqrt(var_IKr__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__r = 1.0 / (1.0 + exp((var_IKr__V + 10.0) / 15.4)); // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKr__IKr = var_IKr__G_Kr_mult * var_IKr__gkr * var_IKr__xr * var_IKr__r * (var_IKr__V - var_IKr__EK); // uA_per_uF
        const double var_cell__IKr = var_IKr__IKr; // uA_per_uF
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 0.057500000000000002; // uA_per_uF
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IpCa__IpCa = (var_IpCa__ibarpca * var_IpCa__Ca_i) / (var_IpCa__kmpca + var_IpCa__Ca_i); // uA_per_uF
        const double var_cell__IpCa = var_IpCa__IpCa; // uA_per_uF
        const double var_ICab__F = var_Environment__F; // C_per_mole
        const double var_ICab__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICab__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_ICab__ICab = (1.9950840000000001e-07 * 4.0 * var_ICab__V * var_ICab__F * var_ICab__FonRT * ((var_ICab__Ca_i * exp(2.0 * var_ICab__V * var_ICab__FonRT)) - (0.34100000000000003 * var_ICab__Ca_o))) / (exp(2.0 * var_ICab__V * var_ICab__FonRT) - 1.0); // uA_per_uF
        const double var_cell__ICab = var_ICab__ICab; // uA_per_uF
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__ca_i_NaCa = 1.5 * var_INaCa__Ca_i; // mM
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_INaCa__denom2 = (var_INaCa__KmCao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__ca_i_NaCa) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__ca_i_NaCa / var_INaCa__KmCai))); // mM4
        const double var_INaCa__NCXmax = 4.5; // uA_per_uF
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__num = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp(var_INaCa__eta * var_INaCa__V * var_INaCa__FonRT)) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__ca_i_NaCa * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)); // mM4
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__denom1 = 1.0 + (var_INaCa__ksat * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)); // dimensionless
        const double var_INaCa__KmCa = 0.000125; // mM
        const double var_INaCa__allo = 1.0 / (1.0 + pow(var_INaCa__KmCa / var_INaCa__ca_i_NaCa, 2.0)); // dimensionless
        const double var_INaCa__denom3 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__ca_i_NaCa); // mM4
        const double var_INaCa__INaCa = (var_INaCa__NCXmax * var_INaCa__allo * var_INaCa__num) / (var_INaCa__denom1 * (var_INaCa__denom2 + var_INaCa__denom3)); // uA_per_uF
        const double var_cell__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__ibarnak = 0.61875000000000002; // uA_per_uF
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__INaK = (((var_INaK__ibarnak * var_INaK__fnak * 1.0) / (1.0 + pow(var_INaK__kmnai / var_INaK__Na_i, 2.0))) * var_INaK__K_o) / (var_INaK__K_o + var_INaK__kmko); // uA_per_uF
        const double var_cell__INaK = var_INaK__INaK; // uA_per_uF
        const double var_Ito__gitodv = 0.19; // mS_per_uF
        const double var_Ito__EK = var_reversal_potentials__EK; // mV
        const double var_Ito__zdv = var_chaste_interface__Ito__zdv; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__rv = exp(var_Ito__V / 300.0); // dimensionless
        const double var_Ito__ydv2 = var_chaste_interface__Ito__ydv2; // dimensionless
        const double var_Ito__ydv = var_chaste_interface__Ito__ydv; // dimensionless
        const double var_Ito__Ito = var_Ito__gitodv * pow(var_Ito__ydv, 3.0) * var_Ito__ydv2 * var_Ito__zdv * var_Ito__rv * (var_Ito__V - var_Ito__EK); // uA_per_uF
        const double var_cell__Ito = var_Ito__Ito; // uA_per_uF
        const double var_Ito2__AA = var_chaste_interface__Ito2__AA; // dimensionless
        const double var_Ito2__F = var_Environment__F; // C_per_mole
        const double var_Ito2__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Ito2__FonRT = var_Environment__FonRT; // per_mV
        const double var_Ito2__Cl_o = var_Environment__Cl_o; // mM
        const double var_Ito2__PCl = 3.9999999999999998e-07; // L_per_F_ms
        const double var_Ito2__V = var_chaste_interface__cell__V; // mV
        const double var_Ito2__Ito2_max = (var_Ito2__PCl * var_Ito2__V * var_Ito2__F * var_Ito2__FonRT * (var_Ito2__Cl_i - (var_Ito2__Cl_o * exp(var_Ito2__V * var_Ito2__FonRT)))) / (1.0 - exp(var_Ito2__V * var_Ito2__FonRT)); // uA_per_uF
        const double var_Ito2__Ito2 = var_Ito2__Ito2_max * var_Ito2__AA; // uA_per_uF
        const double var_cell__Ito2 = var_Ito2__Ito2; // uA_per_uF
        const double var_IClb__V = var_chaste_interface__cell__V; // mV
        const double var_IClb__GClb = 0.00022499999999999999; // mS_per_uF
        const double var_reversal_potentials__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_reversal_potentials__Cl_o = var_Environment__Cl_o; // mM
        const double var_reversal_potentials__ECl = (-log(var_reversal_potentials__Cl_o / var_reversal_potentials__Cl_i)) / var_reversal_potentials__FonRT; // mV
        const double var_IClb__ECl = var_reversal_potentials__ECl; // mV
        const double var_IClb__IClb = var_IClb__GClb * (var_IClb__V - var_IClb__ECl); // uA_per_uF
        const double var_cell__IClb = var_IClb__IClb; // uA_per_uF
        const double var_INal__V = var_chaste_interface__cell__V; // mV
        const double var_INal__ENa = var_reversal_potentials__ENa; // mV
        const double var_INal__hL = var_chaste_interface__INal__hL; // dimensionless
        const double var_INal__mL = var_chaste_interface__INal__mL; // dimensionless
        const double var_INal__GNaL = 0.0064999999999999997; // mS_per_uF
        const double var_INal__INal = var_INal__GNaL * pow(var_INal__mL, 3.0) * var_INal__hL * (var_INal__V - var_INal__ENa); // uA_per_uF
        const double var_cell__INal = var_INal__INal; // uA_per_uF
        const double var_cell__caiont = (var_cell__ICaL + var_cell__ICab + var_cell__IpCa) - (2.0 * var_cell__INaCa); // uA_per_uF
        const double var_cell__naiont = var_cell__INa + (3.0 * var_cell__INaCa) + (3.0 * var_cell__INaK) + var_cell__INal; // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__kiont = ((var_cell__IKr + var_cell__IKs + var_cell__IK1 + var_cell__IKp) - (2.0 * var_cell__INaK)) + var_cell__Ito + (0.5 * var_cell__i_Stim); // uA_per_uF
        const double var_cell__clont = var_cell__IClb + var_cell__Ito2 + (0.5 * var_cell__i_Stim); // uA_per_uF
        const double var_chaste_interface__cell__kiont = var_cell__kiont; // uA_per_uF
        const double var_chaste_interface__cell__clont = var_cell__clont; // uA_per_uF
        const double var_chaste_interface__cell__caiont = var_cell__caiont; // uA_per_uF
        const double var_chaste_interface__cell__naiont = var_cell__naiont; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__naiont + var_chaste_interface__cell__kiont + var_chaste_interface__cell__caiont + var_chaste_interface__cell__clont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamichund_rudy_2004_aFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.781844107117
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00012131666
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.987317750543
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.991924983076
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00000164013
        double var_chaste_interface__ICaL__dp = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.98230672628
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999961508634
        double var_chaste_interface__ICaL__fca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.97836624923
        double var_chaste_interface__ICaL__fca2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.893052931249
        double var_chaste_interface__ICaL__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.992234519148
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00000724074
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.019883138161
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.019890650554
        double var_chaste_interface__Ito__ydv = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.013970786703
        double var_chaste_interface__Ito__ydv2 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.99996472752
        double var_chaste_interface__Ito__zdv = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.829206149767
        double var_chaste_interface__Ito2__AA = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.000816605172
        double var_chaste_interface__INal__mL = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INal__hL = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.26130711759
        double var_chaste_interface__Irel__CaMKtrap = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.021123704774
        double var_chaste_interface__Irel__ro = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__Irel__ri = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.862666650318
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 23);
        // Units: mM; Initial value: 12.972433387269
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 24);
        // Units: mM; Initial value: 135.469546216758
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 25);
        // Units: mM; Initial value: 15.59207157178
        double var_chaste_interface__Ca__Ca_jsr = NV_Ith_S(rY, 26);
        // Units: mM; Initial value: 1.737580994071
        double var_chaste_interface__Ca__Ca_nsr = NV_Ith_S(rY, 27);
        // Units: mM; Initial value: 1.832822335168
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 28);
        // Units: mM; Initial value: 0.00012271265
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Cl_o = 100.0; // mM
        const double var_Environment__FonRT = 0.0374358835078; // per_mV
        const double var_Environment__tissue = 0.0; // dimensionless
        const double var_cell__F = var_Environment__F; // C_per_mole
        const double var_INa__G_Na_mult = 1.0; // dimensionless
        const double var_INa__tissue = var_Environment__tissue; // dimensionless
        const double var_INa__GNa = (var_INa__tissue == 0.0) ? 8.25 : (4.0 * 8.25); // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_INa__gNa = var_INa__GNa * var_INa__m * var_INa__m * var_INa__m * var_INa__H * var_INa__J; // mS_per_uF
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // mM
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__FonRT = var_Environment__FonRT; // per_mV
        const double var_reversal_potentials__ENa = log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i) / var_reversal_potentials__FonRT; // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__INa = var_INa__G_Na_mult * var_INa__gNa * (var_INa__V - var_INa__ENa); // uA_per_uF
        const double var_cell__INa = var_INa__INa; // uA_per_uF
        const double var_ICaL__f2 = var_chaste_interface__ICaL__f2; // dimensionless
        const double var_ICaL__fca2 = var_chaste_interface__ICaL__fca2; // dimensionless
        const double var_ICaL__tissue = var_Environment__tissue; // dimensionless
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICaL__V = var_chaste_interface__cell__V; // mV
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICaL__F = var_Environment__F; // C_per_mole
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.000243; // L_per_F_ms
        const double var_ICaL__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_ICaL__ibarca = (var_ICaL__G_CaL_mult * var_ICaL__pca * 4.0 * (var_ICaL__V - 15.0) * var_ICaL__F * var_ICaL__FonRT * ((var_ICaL__gacai * var_ICaL__Ca_ss * exp(2.0 * (var_ICaL__V - 15.0) * var_ICaL__FonRT)) - (var_ICaL__gacao * var_ICaL__Ca_o))) / (exp(2.0 * (var_ICaL__V - 15.0) * var_ICaL__FonRT) - 1.0); // uA_per_uF
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__fca = var_chaste_interface__ICaL__fca; // dimensionless
        const double var_ICaL__dp = var_chaste_interface__ICaL__dp; // dimensionless
        const double var_ICaL__ICaL = (var_ICaL__tissue == 0.0) ? (pow(var_ICaL__d, var_ICaL__dp) * var_ICaL__f * var_ICaL__f2 * var_ICaL__fca * var_ICaL__fca2 * var_ICaL__ibarca) : (var_ICaL__d * var_ICaL__f * var_ICaL__f2 * var_ICaL__fca * var_ICaL__fca2 * var_ICaL__ibarca); // uA_per_uF
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_Environment__K_o; // mM
        const double var_reversal_potentials__EK = log(var_reversal_potentials__K_o / var_reversal_potentials__K_i) / var_reversal_potentials__FonRT; // mV
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1__ak1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1__V - var_IK1__EK) - 59.215000000000003))); // per_ms
        const double var_IK1__bk1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1__V - var_IK1__EK) + 5.476))) + (1.0 * exp(0.061749999999999999 * ((var_IK1__V - var_IK1__EK) - 594.30999999999995)))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1__V - var_IK1__EK) + 4.7530000000000001))); // per_ms
        const double var_IK1__K_o = var_Environment__K_o; // mM
        const double var_IK1__IK1 = ((0.5 * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__ak1) / (var_IK1__ak1 + var_IK1__bk1)) * (var_IK1__V - var_IK1__EK); // uA_per_uF
        const double var_cell__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__V = var_chaste_interface__cell__V; // mV
        const double var_IKp__IKp = (0.0027599999999999999 * (var_IKp__V - var_IKp__EK)) / (1.0 + exp((7.4880000000000004 - var_IKp__V) / 5.9800000000000004)); // uA_per_uF
        const double var_cell__IKp = var_IKp__IKp; // uA_per_uF
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IKs__gks = 0.024897499999999999 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))) / var_reversal_potentials__FonRT; // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__IKs = var_IKs__gks * var_IKs__xs1 * var_IKs__xs2 * (var_IKs__V - var_IKs__EKs); // uA_per_uF
        const double var_cell__IKs = var_IKs__IKs; // uA_per_uF
        const double var_IKr__G_Kr_mult = 1.0; // dimensionless
        const double var_IKr__K_o = var_Environment__K_o; // mM
        const double var_IKr__gkr = 0.013854200000000001 * sqrt(var_IKr__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__r = 1.0 / (1.0 + exp((var_IKr__V + 10.0) / 15.4)); // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IKr__IKr = var_IKr__G_Kr_mult * var_IKr__gkr * var_IKr__xr * var_IKr__r * (var_IKr__V - var_IKr__EK); // uA_per_uF
        const double var_cell__IKr = var_IKr__IKr; // uA_per_uF
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 0.057500000000000002; // uA_per_uF
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IpCa__IpCa = (var_IpCa__ibarpca * var_IpCa__Ca_i) / (var_IpCa__kmpca + var_IpCa__Ca_i); // uA_per_uF
        const double var_ICab__F = var_Environment__F; // C_per_mole
        const double var_ICab__FonRT = var_Environment__FonRT; // per_mV
        const double var_ICab__Ca_o = var_Environment__Ca_o; // mM
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_ICab__ICab = (1.9950840000000001e-07 * 4.0 * var_ICab__V * var_ICab__F * var_ICab__FonRT * ((var_ICab__Ca_i * exp(2.0 * var_ICab__V * var_ICab__FonRT)) - (0.34100000000000003 * var_ICab__Ca_o))) / (exp(2.0 * var_ICab__V * var_ICab__FonRT) - 1.0); // uA_per_uF
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__ca_i_NaCa = 1.5 * var_INaCa__Ca_i; // mM
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // mM
        const double var_INaCa__denom2 = (var_INaCa__KmCao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__ca_i_NaCa) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__ca_i_NaCa / var_INaCa__KmCai))); // mM4
        const double var_INaCa__NCXmax = 4.5; // uA_per_uF
        const double var_INaCa__Na_o = var_Environment__Na_o; // mM
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaCa__num = (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp(var_INaCa__eta * var_INaCa__V * var_INaCa__FonRT)) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__ca_i_NaCa * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)); // mM4
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__denom1 = 1.0 + (var_INaCa__ksat * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)); // dimensionless
        const double var_INaCa__KmCa = 0.000125; // mM
        const double var_INaCa__allo = 1.0 / (1.0 + pow(var_INaCa__KmCa / var_INaCa__ca_i_NaCa, 2.0)); // dimensionless
        const double var_INaCa__denom3 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__ca_i_NaCa); // mM4
        const double var_INaCa__INaCa = (var_INaCa__NCXmax * var_INaCa__allo * var_INaCa__num) / (var_INaCa__denom1 * (var_INaCa__denom2 + var_INaCa__denom3)); // uA_per_uF
        const double var_cell__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_Environment__FonRT; // per_mV
        const double var_INaK__Na_o = var_Environment__Na_o; // mM
        const double var_INaK__sigma = (exp(var_INaK__Na_o / 67.299999999999997) - 1.0) / 7.0; // dimensionless
        const double var_INaK__fnak = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__ibarnak = 0.61875000000000002; // uA_per_uF
        const double var_INaK__K_o = var_Environment__K_o; // mM
        const double var_INaK__INaK = (((var_INaK__ibarnak * var_INaK__fnak * 1.0) / (1.0 + pow(var_INaK__kmnai / var_INaK__Na_i, 2.0))) * var_INaK__K_o) / (var_INaK__K_o + var_INaK__kmko); // uA_per_uF
        const double var_cell__INaK = var_INaK__INaK; // uA_per_uF
        const double var_Ito__gitodv = 0.19; // mS_per_uF
        const double var_Ito__EK = var_reversal_potentials__EK; // mV
        const double var_Ito__zdv = var_chaste_interface__Ito__zdv; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__rv = exp(var_Ito__V / 300.0); // dimensionless
        const double var_Ito__ydv2 = var_chaste_interface__Ito__ydv2; // dimensionless
        const double var_Ito__ydv = var_chaste_interface__Ito__ydv; // dimensionless
        const double var_Ito__Ito = var_Ito__gitodv * pow(var_Ito__ydv, 3.0) * var_Ito__ydv2 * var_Ito__zdv * var_Ito__rv * (var_Ito__V - var_Ito__EK); // uA_per_uF
        const double var_cell__Ito = var_Ito__Ito; // uA_per_uF
        const double var_Ito2__AA = var_chaste_interface__Ito2__AA; // dimensionless
        const double var_Ito2__F = var_Environment__F; // C_per_mole
        const double var_Ito2__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Ito2__FonRT = var_Environment__FonRT; // per_mV
        const double var_Ito2__Cl_o = var_Environment__Cl_o; // mM
        const double var_Ito2__PCl = 3.9999999999999998e-07; // L_per_F_ms
        const double var_Ito2__V = var_chaste_interface__cell__V; // mV
        const double var_Ito2__Ito2_max = (var_Ito2__PCl * var_Ito2__V * var_Ito2__F * var_Ito2__FonRT * (var_Ito2__Cl_i - (var_Ito2__Cl_o * exp(var_Ito2__V * var_Ito2__FonRT)))) / (1.0 - exp(var_Ito2__V * var_Ito2__FonRT)); // uA_per_uF
        const double var_Ito2__Ito2 = var_Ito2__Ito2_max * var_Ito2__AA; // uA_per_uF
        const double var_cell__Ito2 = var_Ito2__Ito2; // uA_per_uF
        const double var_IClb__V = var_chaste_interface__cell__V; // mV
        const double var_IClb__GClb = 0.00022499999999999999; // mS_per_uF
        const double var_reversal_potentials__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_reversal_potentials__Cl_o = var_Environment__Cl_o; // mM
        const double var_reversal_potentials__ECl = (-log(var_reversal_potentials__Cl_o / var_reversal_potentials__Cl_i)) / var_reversal_potentials__FonRT; // mV
        const double var_IClb__ECl = var_reversal_potentials__ECl; // mV
        const double var_IClb__IClb = var_IClb__GClb * (var_IClb__V - var_IClb__ECl); // uA_per_uF
        const double var_cell__IClb = var_IClb__IClb; // uA_per_uF
        const double var_INal__V = var_chaste_interface__cell__V; // mV
        const double var_INal__ENa = var_reversal_potentials__ENa; // mV
        const double var_INal__hL = var_chaste_interface__INal__hL; // dimensionless
        const double var_INal__mL = var_chaste_interface__INal__mL; // dimensionless
        const double var_INal__GNaL = 0.0064999999999999997; // mS_per_uF
        const double var_INal__INal = var_INal__GNaL * pow(var_INal__mL, 3.0) * var_INal__hL * (var_INal__V - var_INal__ENa); // uA_per_uF
        const double var_cell__INal = var_INal__INal; // uA_per_uF
        const double var_cell__naiont = var_cell__INa + (3.0 * var_cell__INaCa) + (3.0 * var_cell__INaK) + var_cell__INal; // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__kiont = ((var_cell__IKr + var_cell__IKs + var_cell__IK1 + var_cell__IKp) - (2.0 * var_cell__INaK)) + var_cell__Ito + (0.5 * var_cell__i_Stim); // uA_per_uF
        const double var_cell__clont = var_cell__IClb + var_cell__Ito2 + (0.5 * var_cell__i_Stim); // uA_per_uF
        const double var_cell__l = 0.01; // cm
        const double var_cell__a = 0.0011000000000000001; // cm
        const double var_cell__vcell = 1000.0 * M_PI * var_cell__a * var_cell__a * var_cell__l; // uL
        const double var_cell__ageo = (2.0 * M_PI * var_cell__a * var_cell__a) + (2.0 * M_PI * var_cell__a * var_cell__l); // cm2
        const double var_cell__Acap = var_cell__ageo * 2.0; // uF
        const double var_cell__vmyo = var_cell__vcell * 0.68000000000000005; // uL
        const double var_cell__vnsr = var_cell__vcell * 0.055199999999999999; // uL
        const double var_cell__vjsr = var_cell__vcell * 0.0047999999999999996; // uL
        const double var_cell__vss = var_cell__vcell * 0.02; // uL
        const double var_cell__AF = var_cell__Acap / var_cell__F; // uF_mole_per_C
        const double var_INa__am = (0.32000000000000001 * 1.0 * (var_INa__V + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INa__V + 47.130000000000003))); // per_ms
        const double var_INa__bm = 0.080000000000000002 * exp((-var_INa__V) / 11.0); // per_ms
        const double var_INa__ah = (var_INa__V >= (-40.0)) ? 0.0 : (0.13500000000000001 * exp((80.0 + var_INa__V) / (-6.7999999999999998))); // per_ms
        const double var_INa__bh = (var_INa__V >= (-40.0)) ? (1.0 / (0.13 * (1.0 + exp((var_INa__V + 10.66) / (-11.1))))) : ((3.5600000000000001 * exp(0.079000000000000001 * var_INa__V)) + (310000.0 * exp(0.34999999999999998 * var_INa__V))); // per_ms
        const double var_INa__aj = (var_INa__V >= (-40.0)) ? 0.0 : (((((-127140.0) * exp(0.24440000000000001 * var_INa__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa__V))) * 1.0 * (var_INa__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_INa__V + 79.230000000000004)))); // per_ms
        const double var_INa__bj = (var_INa__V >= (-40.0)) ? ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa__V + 32.0)))) : ((0.1212 * exp((-0.01052) * var_INa__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa__V + 40.140000000000001)))); // per_ms
        const double var_INa__d_H_d_Environment__time = (var_INa__ah * (1.0 - var_INa__H)) - (var_INa__bh * var_INa__H); // 'per millisecond'
        const double var_INa__d_m_d_Environment__time = (var_INa__am * (1.0 - var_INa__m)) - (var_INa__bm * var_INa__m); // 'per millisecond'
        const double var_INa__d_J_d_Environment__time = (var_INa__aj * (1.0 - var_INa__J)) - (var_INa__bj * var_INa__J); // 'per millisecond'
        const double var_Irel__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_Irel__CaMKtrap = var_chaste_interface__Irel__CaMKtrap; // dimensionless
        const double var_Irel__Km = 0.0015; // mM
        const double var_Irel__CaMK0 = 0.050000000000000003; // dimensionless
        const double var_Irel__CaMKbound = (var_Irel__CaMK0 * (1.0 - var_Irel__CaMKtrap)) / (1.0 + (var_Irel__Km / var_Irel__Ca_ss)); // dimensionless
        const double var_Irel__CaMKactive = var_Irel__CaMKbound + var_Irel__CaMKtrap; // dimensionless
        const double var_ICaL__CaMKactive = var_Irel__CaMKactive; // dimensionless
        const double var_ICaL__dss = 1.0 / (1.0 + exp((-(var_ICaL__V - 4.0)) / 6.7400000000000002)); // dimensionless
        const double var_ICaL__taud = 0.58999999999999997 + ((0.80000000000000004 * exp(0.051999999999999998 * (var_ICaL__V + 13.0))) / (1.0 + exp(0.13200000000000001 * (var_ICaL__V + 13.0)))); // ms
        const double var_ICaL__fss = (0.69999999999999996 / (1.0 + exp((var_ICaL__V + 17.120000000000001) / 7.0))) + 0.29999999999999999; // dimensionless
        const double var_ICaL__f2ss = (0.77000000000000002 / (1.0 + exp((var_ICaL__V + 17.120000000000001) / 7.0))) + 0.23000000000000001; // dimensionless
        const double var_ICaL__tauf = 1.0 / ((0.24110000000000001 * exp(-pow(0.044999999999999998 * (var_ICaL__V - 9.6913999999999998), 2.0))) + 0.052900000000000003); // ms
        const double var_ICaL__tauf2 = 1.0 / ((0.042299999999999997 * exp(-pow(0.058999999999999997 * (var_ICaL__V - 18.572600000000001), 2.0))) + 0.0054000000000000003); // ms
        const double var_ICaL__dpss = 9.0 - (8.0 / (1.0 + exp((-(var_ICaL__V + 65.0)) / 3.3999999999999999))); // dimensionless
        const double var_ICaL__fcass = (0.29999999999999999 / (1.0 - (var_ICaL__ICaL / 0.050000000000000003))) + (0.55000000000000004 / (1.0 + (var_ICaL__Ca_ss / 0.0030000000000000001))) + 0.14999999999999999; // dimensionless
        const double var_ICaL__fca2ss = 1.0 / (1.0 - (var_ICaL__ICaL / 0.01)); // dimensionless
        const double var_ICaL__taufca = ((10.0 * var_ICaL__CaMKactive) / (0.14999999999999999 + var_ICaL__CaMKactive)) + (1.0 / (1.0 + (var_ICaL__Ca_ss / 0.0030000000000000001))) + 0.5; // ms
        const double var_ICaL__taufca2 = (300.0 / (1.0 + exp(((-var_ICaL__ICaL) - 0.17499999999999999) / 0.040000000000000001))) + 125.0; // ms
        const double var_ICaL__d_d_d_Environment__time = (var_ICaL__dss - var_ICaL__d) / var_ICaL__taud; // 'per millisecond'
        const double var_ICaL__d_dp_d_Environment__time = (var_ICaL__dpss - var_ICaL__dp) / 10.0; // 'per millisecond'
        const double var_ICaL__d_f_d_Environment__time = (var_ICaL__fss - var_ICaL__f) / var_ICaL__tauf; // 'per millisecond'
        const double var_ICaL__d_fca_d_Environment__time = (var_ICaL__fcass - var_ICaL__fca) / var_ICaL__taufca; // 'per millisecond'
        const double var_ICaL__d_fca2_d_Environment__time = (var_ICaL__fca2ss - var_ICaL__fca2) / var_ICaL__taufca2; // 'per millisecond'
        const double var_ICaL__d_f2_d_Environment__time = (var_ICaL__f2ss - var_ICaL__f2) / var_ICaL__tauf2; // 'per millisecond'
        const double var_IKr__xrss = 1.0 / (1.0 + exp((-(var_IKr__V + 10.085000000000001)) / 4.25)); // dimensionless
        const double var_IKr__tauxr = 1.0 / (((0.00059999999999999995 * (var_IKr__V - 1.7383999999999999)) / (1.0 - exp((-0.13600000000000001) * (var_IKr__V - 1.7383999999999999)))) + ((0.00029999999999999997 * (var_IKr__V + 38.360799999999998)) / (exp(0.1522 * (var_IKr__V + 38.360799999999998)) - 1.0))); // ms
        const double var_IKr__d_xr_d_Environment__time = (var_IKr__xrss - var_IKr__xr) / var_IKr__tauxr; // 'per millisecond'
        const double var_IKs__xss = 1.0 / (1.0 + exp((-(var_IKs__V - 10.5)) / 24.699999999999999)); // dimensionless
        const double var_IKs__tauxs = 1.0 / (((7.6100000000000007e-05 * (var_IKs__V + 44.600000000000001)) / (1.0 - exp((-9.9700000000000006) * (var_IKs__V + 44.600000000000001)))) + ((0.00036000000000000002 * (var_IKs__V - 0.55000000000000004)) / (exp(0.128 * (var_IKs__V - 0.55000000000000004)) - 1.0))); // ms
        const double var_IKs__d_xs1_d_Environment__time = (var_IKs__xss - var_IKs__xs1) / var_IKs__tauxs; // 'per millisecond'
        const double var_IKs__d_xs2_d_Environment__time = ((var_IKs__xss - var_IKs__xs2) / var_IKs__tauxs) / 2.0; // 'per millisecond'
        const double var_Ito__ay = (25.0 * exp((var_Ito__V - 40.0) / 25.0)) / (1.0 + exp((var_Ito__V - 40.0) / 25.0)); // per_ms
        const double var_Ito__by = (25.0 * exp((-(var_Ito__V + 90.0)) / 25.0)) / (1.0 + exp((-(var_Ito__V + 90.0)) / 25.0)); // per_ms
        const double var_Ito__ay2 = 0.029999999999999999 / (1.0 + exp((var_Ito__V + 60.0) / 5.0)); // per_ms
        const double var_Ito__by2 = (0.20000000000000001 * exp((var_Ito__V + 25.0) / 5.0)) / (1.0 + exp((var_Ito__V + 25.0) / 5.0)); // per_ms
        const double var_Ito__ay3 = 0.0022499999999999998 / (1.0 + exp((var_Ito__V + 60.0) / 5.0)); // per_ms
        const double var_Ito__by3 = (0.10000000000000001 * exp((var_Ito__V + 25.0) / 5.0)) / (1.0 + exp((var_Ito__V + 25.0) / 5.0)); // per_ms
        const double var_Ito__d_ydv_d_Environment__time = (var_Ito__ay * (1.0 - var_Ito__ydv)) - (var_Ito__by * var_Ito__ydv); // 'per millisecond'
        const double var_Ito__d_ydv2_d_Environment__time = (var_Ito__ay2 * (1.0 - var_Ito__ydv2)) - (var_Ito__by2 * var_Ito__ydv2); // 'per millisecond'
        const double var_Ito__d_zdv_d_Environment__time = (var_Ito__ay3 * (1.0 - var_Ito__zdv)) - (var_Ito__by3 * var_Ito__zdv); // 'per millisecond'
        const double var_Ito2__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_Ito2__Kmto2 = 0.1502; // mM
        const double var_Ito2__AAss = 1.0 / (1.0 + (var_Ito2__Kmto2 / var_Ito2__Ca_ss)); // dimensionless
        const double var_Ito2__d_AA_d_Environment__time = (var_Ito2__AAss - var_Ito2__AA) / 1.0; // 'per millisecond'
        const double var_INal__amL = (0.32000000000000001 * 1.0 * (var_INal__V + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INal__V + 47.130000000000003))); // per_ms
        const double var_INal__bmL = 0.080000000000000002 * exp((-var_INal__V) / 11.0); // per_ms
        const double var_INal__hLss = 1.0 / (1.0 + exp((var_INal__V + 91.0) / 6.0999999999999996)); // dimensionless
        const double var_INal__d_mL_d_Environment__time = (var_INal__amL * (1.0 - var_INal__mL)) - (var_INal__bmL * var_INal__mL); // 'per millisecond'
        const double var_INal__d_hL_d_Environment__time = (var_INal__hLss - var_INal__hL) / 600.0; // 'per millisecond'
        const double var_Irel__tissue = var_Environment__tissue; // dimensionless
        const double var_Irel__Ca_jsr = var_chaste_interface__Ca__Ca_jsr; // mM
        const double var_Irel__ibarca = var_ICaL__ibarca; // uA_per_uF
        const double var_Irel__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_Irel__vg = (var_Irel__tissue == 0.0) ? (1.0 / (1.0 + exp((var_Irel__ibarca + 13.0) / 5.0))) : 1.0; // dimensionless
        const double var_Irel__Grel = 3000.0 * var_Irel__vg; // per_ms
        const double var_Irel__dro_inf = pow(var_Irel__Ca_jsr, 1.8999999999999999) / (pow(var_Irel__Ca_jsr, 1.8999999999999999) + pow((49.280000000000001 * var_Irel__Ca_ss) / (var_Irel__Ca_ss + 0.0028), 1.8999999999999999)); // dimensionless
        const double var_Irel__dtau_rel_max = 10.0; // ms
        const double var_Irel__KmCaMK = 0.14999999999999999; // dimensionless
        const double var_Irel__dtau_rel = (var_Irel__dtau_rel_max * var_Irel__CaMKactive) / (var_Irel__KmCaMK + var_Irel__CaMKactive); // ms
        const double var_Irel__ross = var_Irel__dro_inf / (pow(1.0 / var_Irel__ICaL, 2.0) + 1.0); // dimensionless
        const double var_Irel__cafac = 1.0 / (1.0 + exp((var_Irel__ICaL + 0.050000000000000003) / 0.014999999999999999)); // dimensionless
        const double var_Irel__riss = 1.0 / (1.0 + exp(((var_Irel__Ca_ss - 0.00040000000000000002) + (0.002 * var_Irel__cafac)) / 2.5000000000000001e-05)); // dimensionless
        const double var_Irel__tauri = 3.0 + var_Irel__dtau_rel + ((350.0 - var_Irel__dtau_rel) / (1.0 + exp(((var_Irel__Ca_ss - 0.0030000000000000001) + (0.0030000000000000001 * var_Irel__cafac)) / 0.00020000000000000001))); // ms
        const double var_Irel__ro = var_chaste_interface__Irel__ro; // dimensionless
        const double var_Irel__ri = var_chaste_interface__Irel__ri; // dimensionless
        const double var_Irel__irelcicr = var_Irel__Grel * var_Irel__ro * var_Irel__ri * (var_Irel__Ca_jsr - var_Irel__Ca_ss); // mM_per_ms
        const double var_Irel__d_CaMKtrap_d_Environment__time = (0.050000000000000003 * var_Irel__CaMKactive * (var_Irel__CaMKactive - var_Irel__CaMKtrap)) - (0.00068000000000000005 * var_Irel__CaMKtrap); // 'per millisecond'
        const double var_Irel__d_ro_d_Environment__time = (var_Irel__ross - var_Irel__ro) / 3.0; // 'per millisecond'
        const double var_Irel__d_ri_d_Environment__time = (var_Irel__riss - var_Irel__ri) / var_Irel__tauri; // 'per millisecond'
        const double var_Iup_Ileak__dKmPLBmax = 0.00017000000000000001; // mM
        const double var_Iup_Ileak__dJupmax = 0.75; // dimensionless
        const double var_Iup_Ileak__KmCaMK = var_Irel__KmCaMK; // dimensionless
        const double var_Iup_Ileak__CaMKactive = var_Irel__CaMKactive; // dimensionless
        const double var_Iup_Ileak__dKmPLB = (var_Iup_Ileak__dKmPLBmax * var_Iup_Ileak__CaMKactive) / (var_Iup_Ileak__KmCaMK + var_Iup_Ileak__CaMKactive); // mM
        const double var_Iup_Ileak__dJup = (var_Iup_Ileak__dJupmax * var_Iup_Ileak__CaMKactive) / (var_Iup_Ileak__KmCaMK + var_Iup_Ileak__CaMKactive); // dimensionless
        const double var_Iup_Ileak__iupmax = 0.0043750000000000004; // mM_per_ms
        const double var_Iup_Ileak__Kmup = 0.00092000000000000003; // mM
        const double var_Iup_Ileak__nsrmax = 15.0; // mM
        const double var_Iup_Ileak__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Iup_Ileak__iup = ((var_Iup_Ileak__dJup + 1.0) * var_Iup_Ileak__iupmax * var_Iup_Ileak__Ca_i) / ((var_Iup_Ileak__Ca_i + var_Iup_Ileak__Kmup) - var_Iup_Ileak__dKmPLB); // mM_per_ms
        const double var_Iup_Ileak__Ca_nsr = var_chaste_interface__Ca__Ca_nsr; // mM
        const double var_Iup_Ileak__ileak = (var_Iup_Ileak__iupmax * var_Iup_Ileak__Ca_nsr) / var_Iup_Ileak__nsrmax; // mM_per_ms
        const double var_Idiff_Itr__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_Idiff_Itr__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Idiff_Itr__idiff = (var_Idiff_Itr__Ca_ss - var_Idiff_Itr__Ca_i) / 0.20000000000000001; // mM_per_ms
        const double var_Idiff_Itr__Ca_nsr = var_chaste_interface__Ca__Ca_nsr; // mM
        const double var_Idiff_Itr__Ca_jsr = var_chaste_interface__Ca__Ca_jsr; // mM
        const double var_Idiff_Itr__itr = (var_Idiff_Itr__Ca_nsr - var_Idiff_Itr__Ca_jsr) / 120.0; // mM_per_ms
        const double var_Na__naiont = var_cell__naiont; // uA_per_uF
        const double var_Na__AF = var_cell__AF; // uF_mole_per_C
        const double var_Na__vmyo = var_cell__vmyo; // uL
        const double var_Na__ECl = var_reversal_potentials__ECl; // mV
        const double var_Na__CTNaClmax = 9.8442999999999999e-06; // mM_per_ms
        const double var_Na__ENa = var_reversal_potentials__ENa; // mV
        const double var_Na__CTNaCl = (var_Na__CTNaClmax * pow(var_Na__ENa - var_Na__ECl, 4.0)) / (pow(var_Na__ENa - var_Na__ECl, 4.0) + pow(87.825100000000006, 4.0)); // mM_per_ms
        const double var_Na__d_Na_i_d_Environment__time = (((-var_Na__naiont) * var_Na__AF) / var_Na__vmyo) + var_Na__CTNaCl; // 'millimole per litre per millisecond'
        const double var_K__kiont = var_cell__kiont; // uA_per_uF
        const double var_K__AF = var_cell__AF; // uF_mole_per_C
        const double var_K__vmyo = var_cell__vmyo; // uL
        const double var_K__EK = var_reversal_potentials__EK; // mV
        const double var_K__CTKClmax = 7.0755999999999996e-06; // mM_per_ms
        const double var_K__ECl = var_reversal_potentials__ECl; // mV
        const double var_K__CTKCl = (var_K__CTKClmax * (var_K__EK - var_K__ECl)) / ((var_K__EK - var_K__ECl) + 87.825100000000006); // mM_per_ms
        const double var_K__d_K_i_d_Environment__time = (((-var_K__kiont) * var_K__AF) / var_K__vmyo) + var_K__CTKCl; // 'millimole per litre per millisecond'
        const double var_Cl__clont = var_cell__clont; // uA_per_uF
        const double var_Cl__AF = var_cell__AF; // uF_mole_per_C
        const double var_Cl__vmyo = var_cell__vmyo; // uL
        const double var_Cl__CTNaCl = var_Na__CTNaCl; // mM_per_ms
        const double var_Cl__CTKCl = var_K__CTKCl; // mM_per_ms
        const double var_Cl__d_Cl_i_d_Environment__time = ((var_Cl__clont * var_Cl__AF) / var_Cl__vmyo) + var_Cl__CTNaCl + var_Cl__CTKCl; // 'millimole per litre per millisecond'
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Ca__Ca_jsr = var_chaste_interface__Ca__Ca_jsr; // mM
        const double var_Ca__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_Ca__kmt = 0.00050000000000000001; // mM
        const double var_Ca__kmc = 0.0023800000000000002; // mM
        const double var_Ca__tbar = 0.070000000000000007; // mM
        const double var_Ca__cbar = 0.050000000000000003; // mM
        const double var_Ca__kmcsqn = 0.80000000000000004; // mM
        const double var_Ca__csqnbar = 10.0; // mM
        const double var_Ca__bcsqn = 1.0 / (1.0 + ((var_Ca__kmcsqn * var_Ca__csqnbar) / pow(var_Ca__Ca_jsr + var_Ca__kmcsqn, 2.0))); // dimensionless
        const double var_Ca__bmyo = 1.0 / (1.0 + ((var_Ca__cbar * var_Ca__kmc) / pow(var_Ca__Ca_i + var_Ca__kmc, 2.0)) + ((var_Ca__kmt * var_Ca__tbar) / pow(var_Ca__Ca_i + var_Ca__kmt, 2.0))); // dimensionless
        const double var_Ca__BSRmax = 0.047; // mM
        const double var_Ca__KmBSR = 0.00087000000000000001; // mM
        const double var_Ca__BSLmax = 1.1240000000000001; // mM
        const double var_Ca__KmBSL = 0.0086999999999999994; // mM
        const double var_Ca__bss = 1.0 / (1.0 + ((var_Ca__BSRmax * var_Ca__KmBSR) / pow(var_Ca__KmBSR + var_Ca__Ca_ss, 2.0)) + ((var_Ca__BSLmax * var_Ca__KmBSL) / pow(var_Ca__KmBSL + var_Ca__Ca_ss, 2.0))); // dimensionless
        const double var_Ca__ICab = var_ICab__ICab; // uA_per_uF
        const double var_Ca__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_Ca__IpCa = var_IpCa__IpCa; // uA_per_uF
        const double var_Ca__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_Ca__vmyo = var_cell__vmyo; // uL
        const double var_Ca__vnsr = var_cell__vnsr; // uL
        const double var_Ca__vjsr = var_cell__vjsr; // uL
        const double var_Ca__vss = var_cell__vss; // uL
        const double var_Ca__AF = var_cell__AF; // uF_mole_per_C
        const double var_Ca__iup = var_Iup_Ileak__iup; // mM_per_ms
        const double var_Ca__ileak = var_Iup_Ileak__ileak; // mM_per_ms
        const double var_Ca__irelcicr = var_Irel__irelcicr; // mM_per_ms
        const double var_Ca__idiff = var_Idiff_Itr__idiff; // mM_per_ms
        const double var_Ca__itr = var_Idiff_Itr__itr; // mM_per_ms
        const double var_Ca__d_Ca_i_d_Environment__time = var_Ca__bmyo * ((((-((var_Ca__ICab + var_Ca__IpCa) - (2.0 * var_Ca__INaCa))) * var_Ca__AF) / (var_Ca__vmyo * 2.0)) + (((var_Ca__ileak - var_Ca__iup) * var_Ca__vnsr) / var_Ca__vmyo) + ((var_Ca__idiff * var_Ca__vss) / var_Ca__vmyo)); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_jsr_d_Environment__time = var_Ca__bcsqn * (var_Ca__itr - var_Ca__irelcicr); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_nsr_d_Environment__time = (var_Ca__iup - ((var_Ca__itr * var_Ca__vjsr) / var_Ca__vnsr)) - var_Ca__ileak; // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_ss_d_Environment__time = var_Ca__bss * (((((-var_Ca__ICaL) * var_Ca__AF) / (var_Ca__vss * 2.0)) + ((var_Ca__irelcicr * var_Ca__vjsr) / var_Ca__vss)) - var_Ca__idiff); // 'millimole per litre per millisecond'
        const double var_chaste_interface__Ca__d_Ca_i_d_Environment__time = var_Ca__d_Ca_i_d_Environment__time; // ___units_67
        const double var_chaste_interface__INa__d_H_d_Environment__time = var_INa__d_H_d_Environment__time; // ___units_23
        const double var_chaste_interface__INa__d_m_d_Environment__time = var_INa__d_m_d_Environment__time; // ___units_23
        const double var_chaste_interface__INa__d_J_d_Environment__time = var_INa__d_J_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_d_d_Environment__time = var_ICaL__d_d_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_dp_d_Environment__time = var_ICaL__d_dp_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_f_d_Environment__time = var_ICaL__d_f_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_fca_d_Environment__time = var_ICaL__d_fca_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_fca2_d_Environment__time = var_ICaL__d_fca2_d_Environment__time; // ___units_23
        const double var_chaste_interface__ICaL__d_f2_d_Environment__time = var_ICaL__d_f2_d_Environment__time; // ___units_23
        const double var_chaste_interface__IKr__d_xr_d_Environment__time = var_IKr__d_xr_d_Environment__time; // ___units_23
        const double var_chaste_interface__IKs__d_xs1_d_Environment__time = var_IKs__d_xs1_d_Environment__time; // ___units_23
        const double var_chaste_interface__IKs__d_xs2_d_Environment__time = var_IKs__d_xs2_d_Environment__time; // ___units_23
        const double var_chaste_interface__Ito__d_ydv_d_Environment__time = var_Ito__d_ydv_d_Environment__time; // ___units_23
        const double var_chaste_interface__Ito__d_ydv2_d_Environment__time = var_Ito__d_ydv2_d_Environment__time; // ___units_23
        const double var_chaste_interface__Ito__d_zdv_d_Environment__time = var_Ito__d_zdv_d_Environment__time; // ___units_23
        const double var_chaste_interface__Ito2__d_AA_d_Environment__time = var_Ito2__d_AA_d_Environment__time; // ___units_23
        const double var_chaste_interface__INal__d_mL_d_Environment__time = var_INal__d_mL_d_Environment__time; // ___units_23
        const double var_chaste_interface__INal__d_hL_d_Environment__time = var_INal__d_hL_d_Environment__time; // ___units_23
        const double var_chaste_interface__Irel__d_CaMKtrap_d_Environment__time = var_Irel__d_CaMKtrap_d_Environment__time; // ___units_23
        const double var_chaste_interface__Irel__d_ro_d_Environment__time = var_Irel__d_ro_d_Environment__time; // ___units_23
        const double var_chaste_interface__Irel__d_ri_d_Environment__time = var_Irel__d_ri_d_Environment__time; // ___units_23
        const double var_chaste_interface__Na__d_Na_i_d_Environment__time = var_Na__d_Na_i_d_Environment__time; // ___units_69
        const double var_chaste_interface__K__d_K_i_d_Environment__time = var_K__d_K_i_d_Environment__time; // ___units_69
        const double var_chaste_interface__Cl__d_Cl_i_d_Environment__time = var_Cl__d_Cl_i_d_Environment__time; // ___units_69
        const double var_chaste_interface__Ca__d_Ca_jsr_d_Environment__time = var_Ca__d_Ca_jsr_d_Environment__time; // ___units_69
        const double var_chaste_interface__Ca__d_Ca_nsr_d_Environment__time = var_Ca__d_Ca_nsr_d_Environment__time; // ___units_69
        const double var_chaste_interface__Ca__d_Ca_ss_d_Environment__time = var_Ca__d_Ca_ss_d_Environment__time; // ___units_69
        const double d_dt_chaste_interface__Ca__Ca_i = var_chaste_interface__Ca__d_Ca_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa__H = var_chaste_interface__INa__d_H_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__m = var_chaste_interface__INa__d_m_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa__J = var_chaste_interface__INa__d_J_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__d = var_chaste_interface__ICaL__d_d_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__dp = var_chaste_interface__ICaL__d_dp_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__f = var_chaste_interface__ICaL__d_f_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__fca = var_chaste_interface__ICaL__d_fca_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__fca2 = var_chaste_interface__ICaL__d_fca2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__f2 = var_chaste_interface__ICaL__d_f2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKr__xr = var_chaste_interface__IKr__d_xr_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs1 = var_chaste_interface__IKs__d_xs1_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__xs2 = var_chaste_interface__IKs__d_xs2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ydv = var_chaste_interface__Ito__d_ydv_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__ydv2 = var_chaste_interface__Ito__d_ydv2_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito__zdv = var_chaste_interface__Ito__d_zdv_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito2__AA = var_chaste_interface__Ito2__d_AA_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INal__mL = var_chaste_interface__INal__d_mL_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INal__hL = var_chaste_interface__INal__d_hL_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__CaMKtrap = var_chaste_interface__Irel__d_CaMKtrap_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__ro = var_chaste_interface__Irel__d_ro_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__ri = var_chaste_interface__Irel__d_ri_d_Environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Na__Na_i = var_chaste_interface__Na__d_Na_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__K__K_i = var_chaste_interface__K__d_K_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Cl__Cl_i = var_chaste_interface__Cl__d_Cl_i_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_jsr = var_chaste_interface__Ca__d_Ca_jsr_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_nsr = var_chaste_interface__Ca__d_Ca_nsr_d_Environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_ss = var_chaste_interface__Ca__d_Ca_ss_d_Environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_cell__ICaL = var_ICaL__ICaL; // uA_per_uF
            const double var_cell__IpCa = var_IpCa__IpCa; // uA_per_uF
            const double var_cell__ICab = var_ICab__ICab; // uA_per_uF
            const double var_cell__caiont = (var_cell__ICaL + var_cell__ICab + var_cell__IpCa) - (2.0 * var_cell__INaCa); // uA_per_uF
            const double var_cell__d_V_d_Environment__time = -(var_cell__naiont + var_cell__kiont + var_cell__caiont + var_cell__clont); // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_Environment__time = var_cell__d_V_d_Environment__time; // ___units_13
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_Environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__Ca__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa__H;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa__m;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__INa__J;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__ICaL__d;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__ICaL__dp;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__ICaL__f;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__ICaL__fca;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__ICaL__fca2;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__ICaL__f2;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__IKr__xr;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__IKs__xs1;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__IKs__xs2;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__Ito__ydv;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Ito__ydv2;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Ito__zdv;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Ito2__AA;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__INal__mL;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__INal__hL;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Irel__CaMKtrap;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Irel__ro;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Irel__ri;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__K__K_i;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Cl__Cl_i;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__Ca__Ca_jsr;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__Ca__Ca_nsr;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__Ca__Ca_ss;
    }
    
    void Dynamichund_rudy_2004_aFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -85.781844107117
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.00012131666
        double var_chaste_interface__INa__H = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.987317750543
        double var_chaste_interface__INa__m = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INa__J = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.991924983076
        double var_chaste_interface__ICaL__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.00000164013
        double var_chaste_interface__ICaL__dp = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 8.98230672628
        double var_chaste_interface__ICaL__f = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.999961508634
        double var_chaste_interface__ICaL__fca = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.97836624923
        double var_chaste_interface__ICaL__fca2 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.893052931249
        double var_chaste_interface__ICaL__f2 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.992234519148
        double var_chaste_interface__IKr__xr = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00000724074
        double var_chaste_interface__IKs__xs1 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.019883138161
        double var_chaste_interface__IKs__xs2 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.019890650554
        double var_chaste_interface__Ito__ydv = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.013970786703
        double var_chaste_interface__Ito__ydv2 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.99996472752
        double var_chaste_interface__Ito__zdv = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.829206149767
        double var_chaste_interface__Ito2__AA = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 0.000816605172
        double var_chaste_interface__INal__mL = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.001356538159
        double var_chaste_interface__INal__hL = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.26130711759
        double var_chaste_interface__Irel__CaMKtrap = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 0.021123704774
        double var_chaste_interface__Irel__ro = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__Irel__ri = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 0.862666650318
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 23);
        // Units: mM; Initial value: 12.972433387269
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 24);
        // Units: mM; Initial value: 135.469546216758
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 25);
        // Units: mM; Initial value: 15.59207157178
        double var_chaste_interface__Ca__Ca_jsr = NV_Ith_S(rY, 26);
        // Units: mM; Initial value: 1.737580994071
        double var_chaste_interface__Ca__Ca_nsr = NV_Ith_S(rY, 27);
        // Units: mM; Initial value: 1.832822335168
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 28);
        // Units: mM; Initial value: 0.00012271265
        
        const double var_Environment__F = 96485.0; // C_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // mM
        const double var_Environment__Ca_o = 1.8; // mM
        const double var_Environment__Na_o = 140.0; // mM
        const double var_Environment__Cl_o = 100.0; // mM
        const double var_Environment__FonRT = 0.0374358835078; // per_mV
        const double var_Environment__tissue = 0.0; // dimensionless
        const double var_chaste_interface__Environment__fake_dt = 1.0; // ms
        const double var_cell__V = var_chaste_interface__cell__V; // mV
        const double var_INa__G_Na_mult = 1.0; // dimensionless
        const double var_INa__m = var_chaste_interface__INa__m; // dimensionless
        const double var_INa__J = var_chaste_interface__INa__J; // dimensionless
        const double var_INa__H = var_chaste_interface__INa__H; // dimensionless
        const double var_ICaL__f2 = var_chaste_interface__ICaL__f2; // dimensionless
        const double var_ICaL__fca2 = var_chaste_interface__ICaL__fca2; // dimensionless
        const double var_ICaL__d = var_chaste_interface__ICaL__d; // dimensionless
        const double var_ICaL__G_CaL_mult = 1.0; // dimensionless
        const double var_ICaL__gacao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gacai = 1.0; // dimensionless
        const double var_ICaL__pca = 0.000243; // L_per_F_ms
        const double var_ICaL__f = var_chaste_interface__ICaL__f; // dimensionless
        const double var_ICaL__fca = var_chaste_interface__ICaL__fca; // dimensionless
        const double var_ICaL__dp = var_chaste_interface__ICaL__dp; // dimensionless
        const double var_IKs__xs2 = var_chaste_interface__IKs__xs2; // dimensionless
        const double var_IKs__xs1 = var_chaste_interface__IKs__xs1; // dimensionless
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_IKr__G_Kr_mult = 1.0; // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr__xr; // dimensionless
        const double var_IpCa__kmpca = 0.00050000000000000001; // mM
        const double var_IpCa__ibarpca = 0.057500000000000002; // uA_per_uF
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__NCXmax = 4.5; // uA_per_uF
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__ksat = 0.27000000000000002; // dimensionless
        const double var_INaCa__KmCa = 0.000125; // mM
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__kmnai = 10.0; // mM
        const double var_INaK__ibarnak = 0.61875000000000002; // uA_per_uF
        const double var_Ito__gitodv = 0.19; // mS_per_uF
        const double var_Ito__zdv = var_chaste_interface__Ito__zdv; // dimensionless
        const double var_Ito__ydv2 = var_chaste_interface__Ito__ydv2; // dimensionless
        const double var_Ito__ydv = var_chaste_interface__Ito__ydv; // dimensionless
        const double var_Ito2__AA = var_chaste_interface__Ito2__AA; // dimensionless
        const double var_Ito2__PCl = 3.9999999999999998e-07; // L_per_F_ms
        const double var_IClb__GClb = 0.00022499999999999999; // mS_per_uF
        const double var_INal__hL = var_chaste_interface__INal__hL; // dimensionless
        const double var_INal__mL = var_chaste_interface__INal__mL; // dimensionless
        const double var_INal__GNaL = 0.0064999999999999997; // mS_per_uF
        const double var_cell__l = 0.01; // cm
        const double var_cell__a = 0.0011000000000000001; // cm
        const double var_Irel__CaMKtrap = var_chaste_interface__Irel__CaMKtrap; // dimensionless
        const double var_Irel__Km = 0.0015; // mM
        const double var_Irel__CaMK0 = 0.050000000000000003; // dimensionless
        const double var_Ito2__Kmto2 = 0.1502; // mM
        const double var_Irel__dtau_rel_max = 10.0; // ms
        const double var_Irel__KmCaMK = 0.14999999999999999; // dimensionless
        const double var_Irel__ro = var_chaste_interface__Irel__ro; // dimensionless
        const double var_Irel__ri = var_chaste_interface__Irel__ri; // dimensionless
        const double var_Iup_Ileak__dKmPLBmax = 0.00017000000000000001; // mM
        const double var_Iup_Ileak__dJupmax = 0.75; // dimensionless
        const double var_Iup_Ileak__iupmax = 0.0043750000000000004; // mM_per_ms
        const double var_Iup_Ileak__Kmup = 0.00092000000000000003; // mM
        const double var_Iup_Ileak__nsrmax = 15.0; // mM
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_Na__CTNaClmax = 9.8442999999999999e-06; // mM_per_ms
        const double var_K__K_i = var_chaste_interface__K__K_i; // mM
        const double var_K__CTKClmax = 7.0755999999999996e-06; // mM_per_ms
        const double var_Cl__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Ca__Ca_jsr = var_chaste_interface__Ca__Ca_jsr; // mM
        const double var_Ca__Ca_nsr = var_chaste_interface__Ca__Ca_nsr; // mM
        const double var_Ca__Ca_ss = var_chaste_interface__Ca__Ca_ss; // mM
        const double var_Ca__kmt = 0.00050000000000000001; // mM
        const double var_Ca__kmc = 0.0023800000000000002; // mM
        const double var_Ca__tbar = 0.070000000000000007; // mM
        const double var_Ca__cbar = 0.050000000000000003; // mM
        const double var_Ca__kmcsqn = 0.80000000000000004; // mM
        const double var_Ca__csqnbar = 10.0; // mM
        const double var_Ca__BSRmax = 0.047; // mM
        const double var_Ca__KmBSR = 0.00087000000000000001; // mM
        const double var_Ca__BSLmax = 1.1240000000000001; // mM
        const double var_Ca__KmBSL = 0.0086999999999999994; // mM
        const double var_t1 = var_Environment__tissue == 0.0; // dimensionless
        const double var_t2 = var_t1 ? 8.25 : 33.0; // dimensionless
        const double var_t3 = var_INa__G_Na_mult * var_t2; // dimensionless
        const double var_t4 = pow(var_INa__m, 2.0); // dimensionless
        const double var_t5 = var_t4 * var_INa__m; // dimensionless
        const double var_t6 = var_t5 * var_INa__H; // dimensionless
        const double var_t8 = (var_t3 * var_t6) * var_INa__J; // dimensionless
        const double var_t9 = pow(var_INaCa__KmCa, 2.0); // dimensionless
        const double var_t10 = pow(var_Ca__Ca_i, 2.0); // dimensionless
        const double var_t11 = 1.0 / var_t10; // dimensionless
        const double var_t14 = 1.0 + ((0.44444444440000003 * var_t9) * var_t11); // dimensionless
        const double var_t16 = var_INaCa__NCXmax / var_t14; // dimensionless
        const double var_t17 = pow(var_Na__Na_i, 2.0); // dimensionless
        const double var_t18 = var_t17 * var_Na__Na_i; // dimensionless
        const double var_t19 = var_t18 * var_Environment__Ca_o; // dimensionless
        const double var_t23 = exp((var_INaCa__eta * var_cell__V) * var_Environment__FonRT); // dimensionless
        const double var_t26 = pow(var_Environment__Na_o, 2.0); // dimensionless
        const double var_t27 = var_t26 * var_Environment__Na_o; // dimensionless
        const double var_t28 = var_t27 * var_Ca__Ca_i; // dimensionless
        const double var_t29 = var_INaCa__eta - 1.0; // dimensionless
        const double var_t33 = exp((var_t29 * var_cell__V) * var_Environment__FonRT); // dimensionless
        const double var_t34 = (var_t29 * var_Environment__FonRT) * var_t33; // dimensionless
        const double var_t39 = 1.0 + (var_INaCa__ksat * var_t33); // dimensionless
        const double var_t40 = 1.0 / var_t39; // dimensionless
        const double var_t43 = pow(var_INaCa__KmNao, 2.0); // dimensionless
        const double var_t44 = var_t43 * var_INaCa__KmNao; // dimensionless
        const double var_t47 = pow(var_INaCa__KmNai, 2.0); // dimensionless
        const double var_t48 = var_t47 * var_INaCa__KmNai; // dimensionless
        const double var_t49 = var_t48 * var_Environment__Ca_o; // dimensionless
        const double var_t50 = 1.0 / var_INaCa__KmCai; // dimensionless
        const double var_t55 = var_INaCa__KmCai * var_t27; // dimensionless
        const double var_t56 = 1.0 / var_t48; // dimensionless
        const double var_t61 = (((((var_INaCa__KmCao * var_t18) + ((1.5 * var_t44) * var_Ca__Ca_i)) + (var_t49 * (1.0 + ((1.5 * var_Ca__Ca_i) * var_t50)))) + (var_t55 * (1.0 + (var_t18 * var_t56)))) + var_t19) + (1.5 * var_t28); // dimensionless
        const double var_t62 = 1.0 / var_t61; // dimensionless
        const double var_t64 = ((var_t16 * ((((var_t19 * var_INaCa__eta) * var_Environment__FonRT) * var_t23) - ((1.5 * var_t28) * var_t34))) * var_t40) * var_t62; // dimensionless
        const double var_t68 = (var_t19 * var_t23) - ((1.5 * var_t28) * var_t33); // dimensionless
        const double var_t69 = pow(var_t39, 2.0); // dimensionless
        const double var_t75 = ((((var_t16 * var_t68) / var_t69) * var_t62) * var_INaCa__ksat) * var_t34; // dimensionless
        const double var_t76 = var_cell__V * var_Environment__FonRT; // dimensionless
        const double var_t78 = exp((-0.10000000000000001) * var_t76); // dimensionless
        const double var_t81 = exp(0.01485884101 * var_Environment__Na_o); // dimensionless
        const double var_t82 = var_t81 - 1.0; // dimensionless
        const double var_t83 = exp(-var_t76); // dimensionless
        const double var_t86 = (1.0 + (0.1245 * var_t78)) + ((0.0052142857139999997 * var_t82) * var_t83); // dimensionless
        const double var_t87 = pow(var_t86, 2.0); // dimensionless
        const double var_t90 = pow(var_INaK__kmnai, 2.0); // dimensionless
        const double var_t93 = 1.0 + (var_t90 / var_t17); // dimensionless
        const double var_t98 = var_Environment__K_o / (var_Environment__K_o + var_INaK__kmko); // dimensionless
        const double var_t106 = (((var_INaK__ibarnak / var_t87) / var_t93) * var_t98) * ((((-0.012449999999999999) * var_Environment__FonRT) * var_t78) - (((0.0052142857139999997 * var_t82) * var_Environment__FonRT) * var_t83)); // dimensionless
        const double var_t107 = pow(var_INal__mL, 2.0); // dimensionless
        const double var_t109 = (var_INal__GNaL * var_t107) * var_INal__mL; // dimensionless
        const double var_t110 = var_t109 * var_INal__hL; // dimensionless
        const double var_t111 = pow(var_Environment__K_o, 1.0 / 2.0); // dimensionless
        const double var_t112 = var_IKr__G_Kr_mult * var_t111; // dimensionless
        const double var_t113 = var_t112 * var_IKr__xr; // dimensionless
        const double var_t116 = exp((0.064935064939999995 * var_cell__V) + 0.64935064939999998); // dimensionless
        const double var_t117 = 1.0 + var_t116; // dimensionless
        const double var_t118 = pow(var_t117, 2.0); // dimensionless
        const double var_t120 = 1.0 / var_K__K_i; // dimensionless
        const double var_t122 = log(var_Environment__K_o * var_t120); // dimensionless
        const double var_t123 = 1.0 / var_Environment__FonRT; // dimensionless
        const double var_t124 = var_t122 * var_t123; // dimensionless
        const double var_t125 = var_cell__V - var_t124; // dimensionless
        const double var_t129 = (((0.0003871362617 * var_t113) / var_t118) * var_t125) * var_t116; // dimensionless
        const double var_t130 = 1.0 / var_t117; // dimensionless
        const double var_t133 = ((0.0059618984300000002 * var_t112) * var_IKr__xr) * var_t130; // dimensionless
        const double var_t134 = 1.0 / var_Ca__Ca_i; // dimensionless
        const double var_t135 = pow(var_t134, 1.3999999999999999); // dimensionless
        const double var_t137 = 1.0 + (6.481821026e-07 * var_t135); // dimensionless
        const double var_t140 = 0.024897499999999999 + (0.0149385 / var_t137); // dimensionless
        const double var_t141 = var_t140 * var_IKs__xs1; // dimensionless
        const double var_t142 = var_t141 * var_IKs__xs2; // dimensionless
        const double var_t146 = exp(((0.23849999999999999 * var_cell__V) - (0.23849999999999999 * var_t124)) - 14.1227775); // dimensionless
        const double var_t147 = 1.0 + var_t146; // dimensionless
        const double var_t148 = pow(var_t147, 2.0); // dimensionless
        const double var_t149 = 1.0 / var_t148; // dimensionless
        const double var_t150 = var_t111 * var_t149; // dimensionless
        const double var_t151 = 1.0 / var_t147; // dimensionless
        const double var_t156 = exp(((0.080320000000000003 * var_cell__V) - (0.080320000000000003 * var_t124)) + 0.43983232); // dimensionless
        const double var_t161 = exp(((0.061749999999999999 * var_cell__V) - (0.061749999999999999 * var_t124)) - 36.698642499999998); // dimensionless
        const double var_t162 = (0.49124000000000001 * var_t156) + var_t161; // dimensionless
        const double var_t166 = exp((((-0.51429999999999998) * var_cell__V) + (0.51429999999999998 * var_t124)) - 2.4444678999999998); // dimensionless
        const double var_t167 = 1.0 + var_t166; // dimensionless
        const double var_t168 = 1.0 / var_t167; // dimensionless
        const double var_t170 = (1.02 * var_t151) + (var_t162 * var_t168); // dimensionless
        const double var_t171 = 1.0 / var_t170; // dimensionless
        const double var_t175 = (((0.052343369930000001 * var_t150) * var_t171) * var_t125) * var_t146; // dimensionless
        const double var_t176 = var_t111 * var_t151; // dimensionless
        const double var_t177 = pow(var_t170, 2.0); // dimensionless
        const double var_t179 = (1.0 / var_t177) * var_t125; // dimensionless
        const double var_t186 = pow(var_t167, 2.0); // dimensionless
        const double var_t188 = var_t162 / var_t186; // dimensionless
        const double var_t194 = ((0.21946905629999999 * var_t176) * var_t179) * (((((-0.24326999999999999) * var_t149) * var_t146) + (((0.039456396800000001 * var_t156) + (0.061749999999999999 * var_t161)) * var_t168)) + ((0.51429999999999998 * var_t188) * var_t166)); // dimensionless
        const double var_t196 = (0.21946905629999999 * var_t176) * var_t171; // dimensionless
        const double var_t197 = ((((((((((-var_t8) - var_t64) + var_t75) + var_t106) - var_t110) + var_t129) - var_t133) - var_t142) + var_t175) + var_t194) - var_t196; // dimensionless
        const double var_t200 = exp(1.252173913 - (0.16722408029999999 * var_cell__V)); // dimensionless
        const double var_t201 = 1.0 + var_t200; // dimensionless
        const double var_t202 = 1.0 / var_t201; // dimensionless
        const double var_t203 = 0.0027599999999999999 * var_t202; // dimensionless
        const double var_t204 = pow(var_t201, 2.0); // dimensionless
        const double var_t208 = ((0.00046153846159999998 * var_t125) / var_t204) * var_t200; // dimensionless
        const double var_t209 = pow(var_Ito__ydv, 2.0); // dimensionless
        const double var_t211 = (var_Ito__gitodv * var_t209) * var_Ito__ydv; // dimensionless
        const double var_t212 = var_t211 * var_Ito__ydv2; // dimensionless
        const double var_t214 = exp((1.0 / 300.0) * var_cell__V); // dimensionless
        const double var_t215 = var_Ito__zdv * var_t214; // dimensionless
        const double var_t216 = var_t215 * var_t125; // dimensionless
        const double var_t218 = ((1.0 / 300.0) * var_t212) * var_t216; // dimensionless
        const double var_t220 = (var_Ito__ydv2 * var_Ito__zdv) * var_t214; // dimensionless
        const double var_t221 = var_t211 * var_t220; // dimensionless
        const double var_t222 = pow(var_ICaL__d, var_ICaL__dp); // dimensionless
        const double var_t223 = var_t222 * var_ICaL__f; // dimensionless
        const double var_t224 = var_ICaL__f2 * var_ICaL__fca; // dimensionless
        const double var_t225 = var_t224 * var_ICaL__fca2; // dimensionless
        const double var_t227 = var_ICaL__G_CaL_mult * var_ICaL__pca; // dimensionless
        const double var_t229 = var_ICaL__gacai * var_Ca__Ca_ss; // dimensionless
        const double var_t230 = var_cell__V - 15.0; // dimensionless
        const double var_t233 = exp((2.0 * var_t230) * var_Environment__FonRT); // dimensionless
        const double var_t236 = (var_t229 * var_t233) - (var_ICaL__gacao * var_Environment__Ca_o); // dimensionless
        const double var_t238 = var_t233 - 1.0; // dimensionless
        const double var_t239 = 1.0 / var_t238; // dimensionless
        const double var_t240 = (var_Environment__FonRT * var_t236) * var_t239; // dimensionless
        const double var_t241 = (var_t227 * var_Environment__F) * var_t240; // dimensionless
        const double var_t244 = var_t223 * var_ICaL__f2; // dimensionless
        const double var_t245 = var_ICaL__fca * var_ICaL__fca2; // dimensionless
        const double var_t246 = var_t245 * var_t227; // dimensionless
        const double var_t248 = var_t230 * var_Environment__F; // dimensionless
        const double var_t249 = pow(var_Environment__FonRT, 2.0); // dimensionless
        const double var_t251 = var_t233 * var_t239; // dimensionless
        const double var_t253 = ((var_t248 * var_t249) * var_t229) * var_t251; // dimensionless
        const double var_t256 = var_t245 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t257 = var_t244 * var_t256; // dimensionless
        const double var_t259 = (var_ICaL__pca * var_t230) * var_Environment__F; // dimensionless
        const double var_t261 = pow(var_t238, 2.0); // dimensionless
        const double var_t264 = ((var_t249 * var_t236) / var_t261) * var_t233; // dimensionless
        const double var_t265 = var_t259 * var_t264; // dimensionless
        const double var_t269 = var_ICaL__d * var_ICaL__f; // dimensionless
        const double var_t273 = var_t269 * var_ICaL__f2; // dimensionless
        const double var_t277 = var_t273 * var_t256; // dimensionless
        const double var_t281 = var_t1 ? (((((4.0 * var_t223) * var_t225) * var_t241) + (((8.0 * var_t244) * var_t246) * var_t253)) - ((8.0 * var_t257) * var_t265)) : (((((4.0 * var_t269) * var_t225) * var_t241) + (((8.0 * var_t273) * var_t246) * var_t253)) - ((8.0 * var_t277) * var_t265)); // dimensionless
        const double var_t282 = var_Environment__F * var_Environment__FonRT; // dimensionless
        const double var_t284 = exp(2.0 * var_t76); // dimensionless
        const double var_t285 = var_Ca__Ca_i * var_t284; // dimensionless
        const double var_t287 = var_t285 - (0.34100000000000003 * var_Environment__Ca_o); // dimensionless
        const double var_t288 = var_t284 - 1.0; // dimensionless
        const double var_t289 = 1.0 / var_t288; // dimensionless
        const double var_t292 = ((7.9803360000000004e-07 * var_t282) * var_t287) * var_t289; // dimensionless
        const double var_t293 = var_cell__V * var_Environment__F; // dimensionless
        const double var_t294 = var_t293 * var_t249; // dimensionless
        const double var_t297 = ((1.5960672000000001e-06 * var_t294) * var_t285) * var_t289; // dimensionless
        const double var_t298 = pow(var_t288, 2.0); // dimensionless
        const double var_t303 = (((1.5960672000000001e-06 * var_t294) * var_t287) / var_t298) * var_t284; // dimensionless
        const double var_t306 = exp(var_t76); // dimensionless
        const double var_t307 = var_Environment__Cl_o * var_t306; // dimensionless
        const double var_t308 = var_Cl__Cl_i - var_t307; // dimensionless
        const double var_t309 = 1.0 - var_t306; // dimensionless
        const double var_t310 = 1.0 / var_t309; // dimensionless
        const double var_t313 = ((((var_Ito2__PCl * var_Environment__F) * var_Environment__FonRT) * var_t308) * var_t310) * var_Ito2__AA; // dimensionless
        const double var_t314 = var_Ito2__PCl * var_cell__V; // dimensionless
        const double var_t316 = (var_t314 * var_Environment__F) * var_t249; // dimensionless
        const double var_t319 = ((var_t316 * var_t307) * var_t310) * var_Ito2__AA; // dimensionless
        const double var_t320 = pow(var_t309, 2.0); // dimensionless
        const double var_t325 = (((var_t316 * var_t308) / var_t320) * var_Ito2__AA) * var_t306; // dimensionless
        const double var_t326 = (((((((((((-var_t203) - var_t208) - var_t218) - var_t221) - var_t281) - var_t292) - var_t297) + var_t303) - var_IClb__GClb) - var_t313) + var_t319) - var_t325; // dimensionless
        const double var_t329 = 1.0 / var_Na__Na_i; // dimensionless
        const double var_t331 = log(var_Environment__Na_o * var_t329); // dimensionless
        const double var_t332 = var_t331 * var_t123; // dimensionless
        const double var_t333 = var_cell__V - var_t332; // dimensionless
        const double var_t335 = ((var_t3 * var_t5) * var_INa__J) * var_t333; // dimensionless
        const double var_t337 = var_INa__H * var_INa__J; // dimensionless
        const double var_t342 = (var_t3 * var_t6) * var_t333; // dimensionless
        const double var_t346 = var_ICaL__f * var_ICaL__f2; // dimensionless
        const double var_t352 = (((var_t227 * var_t230) * var_t282) * var_t236) * var_t239; // dimensionless
        const double var_t356 = var_t259 * var_t240; // dimensionless
        const double var_t359 = var_t1 ? ((((((4.0 * var_t222) * var_ICaL__dp) / var_ICaL__d) * var_t346) * var_t245) * var_t352) : (((4.0 * var_t346) * var_t256) * var_t356); // dimensionless
        const double var_t360 = log(var_ICaL__d); // dimensionless
        const double var_t366 = var_t1 ? (((((4.0 * var_t222) * var_t360) * var_ICaL__f) * var_t225) * var_t352) : 0.0; // dimensionless
        const double var_t375 = var_t1 ? ((((4.0 * var_t222) * var_ICaL__f2) * var_t256) * var_t356) : ((((4.0 * var_ICaL__d) * var_ICaL__f2) * var_t256) * var_t356); // dimensionless
        const double var_t377 = (var_ICaL__f2 * var_ICaL__fca2) * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t384 = var_t1 ? (((4.0 * var_t223) * var_t377) * var_t356) : (((4.0 * var_t269) * var_t377) * var_t356); // dimensionless
        const double var_t385 = var_t224 * var_ICaL__G_CaL_mult; // dimensionless
        const double var_t392 = var_t1 ? (((4.0 * var_t223) * var_t385) * var_t356) : (((4.0 * var_t269) * var_t385) * var_t356); // dimensionless
        const double var_t399 = var_t1 ? (((4.0 * var_t223) * var_t256) * var_t356) : (((4.0 * var_t269) * var_t256) * var_t356); // dimensionless
        const double var_t401 = (var_t112 * var_t130) * var_t125; // dimensionless
        const double var_t403 = var_t140 * var_IKs__xs2; // dimensionless
        const double var_t408 = 1.0 / (var_K__K_i + (var_reversal_potentials__prnak * var_Na__Na_i)); // dimensionless
        const double var_t410 = log((var_Environment__K_o + (var_reversal_potentials__prnak * var_Environment__Na_o)) * var_t408); // dimensionless
        const double var_t412 = var_cell__V - (var_t410 * var_t123); // dimensionless
        const double var_t415 = var_Ito__gitodv * var_t209; // dimensionless
        const double var_t419 = var_t211 * var_t216; // dimensionless
        const double var_t422 = ((var_t211 * var_Ito__ydv2) * var_t214) * var_t125; // dimensionless
        const double var_t423 = var_t314 * var_Environment__F; // dimensionless
        const double var_t424 = var_Environment__FonRT * var_t308; // dimensionless
        const double var_t429 = ((var_INal__GNaL * var_t107) * var_INal__hL) * var_t333; // dimensionless
        const double var_t435 = (((var_t3 * var_t5) * var_t337) * var_t329) * var_t123; // dimensionless
        const double var_t438 = var_t40 * var_t62; // dimensionless
        const double var_t440 = (((var_t16 * var_t17) * var_Environment__Ca_o) * var_t23) * var_t438; // dimensionless
        const double var_t442 = var_t16 * var_t68; // dimensionless
        const double var_t443 = pow(var_t61, 2.0); // dimensionless
        const double var_t445 = var_t40 / var_t443; // dimensionless
        const double var_t452 = ((3.0 * var_t442) * var_t445) * (((var_INaCa__KmCao * var_t17) + ((var_t55 * var_t17) * var_t56)) + (var_t17 * var_Environment__Ca_o)); // dimensionless
        const double var_t455 = pow(var_t93, 2.0); // dimensionless
        const double var_t461 = ((((var_INaK__ibarnak / var_t86) / var_t455) * var_t98) * var_t90) / var_t18; // dimensionless
        const double var_t465 = ((var_t109 * var_INal__hL) * var_t329) * var_t123; // dimensionless
        const double var_t468 = ((var_t142 * var_t408) * var_reversal_potentials__prnak) * var_t123; // dimensionless
        const double var_t479 = var_t123 * var_t146; // dimensionless
        const double var_t486 = var_t120 * var_t123; // dimensionless
        const double var_t508 = ((((((((((-0.0059618984300000002) * var_t113) * var_t130) * var_t120) * var_t123) - (((var_t141 * var_IKs__xs2) * var_t408) * var_t123)) + (((((0.052343369930000001 * var_t150) * var_t171) * var_t125) * var_t120) * var_t479)) + (((0.21946905629999999 * var_t176) * var_t179) * ((((((-0.24326999999999999) * var_t149) * var_t120) * var_t479) + ((((0.039456396800000001 * var_t486) * var_t156) + ((0.061749999999999999 * var_t486) * var_t161)) * var_t168)) + (((0.51429999999999998 * var_t188) * var_t486) * var_t166)))) - ((((0.21946905629999999 * var_t176) * var_t171) * var_t120) * var_t123)) - ((0.0027599999999999999 * var_t486) * var_t202)) - ((var_t212 * var_t215) * var_t486); // dimensionless
        const double var_t509 = 1.0 / var_Cl__Cl_i; // dimensionless
        const double var_t515 = ((var_IClb__GClb * var_t509) * var_t123) - (((var_t423 * var_Environment__FonRT) * var_t310) * var_Ito2__AA); // dimensionless
        const double var_t516 = pow(var_t14, 2.0); // dimensionless
        const double var_t524 = (((((var_INaCa__NCXmax / var_t516) * var_t68) * var_t438) * var_t9) / var_t10) / var_Ca__Ca_i; // dimensionless
        const double var_t529 = (((var_t16 * var_t27) * var_t33) * var_t40) * var_t62; // dimensionless
        const double var_t537 = (var_t442 * var_t445) * (((1.5 * var_t44) + ((1.5 * var_t49) * var_t50)) + (1.5 * var_t27)); // dimensionless
        const double var_t538 = pow(var_t137, 2.0); // dimensionless
        const double var_t540 = pow(var_t134, 0.40000000000000002); // dimensionless
        const double var_t541 = (1.0 / var_t538) * var_t540; // dimensionless
        const double var_t550 = (((7.9803360000000004e-07 * var_t293) * var_Environment__FonRT) * var_t284) * var_t289; // dimensionless
        const double var_t551 = var_IpCa__kmpca + var_Ca__Ca_i; // dimensionless
        const double var_t552 = 1.0 / var_t551; // dimensionless
        const double var_t553 = var_IpCa__ibarpca * var_t552; // dimensionless
        const double var_t554 = var_IpCa__ibarpca * var_Ca__Ca_i; // dimensionless
        const double var_t555 = pow(var_t551, 2.0); // dimensionless
        const double var_t557 = var_t554 / var_t555; // dimensionless
        const double var_t559 = var_Environment__FonRT * var_ICaL__gacai; // dimensionless
        const double var_t561 = (var_t259 * var_t559) * var_t251; // dimensionless
        const double var_t566 = var_t1 ? ((4.0 * var_t257) * var_t561) : ((4.0 * var_t277) * var_t561); // dimensionless
        const double var_t567 = var_cell__V < (-40.0); // dimensionless
        const double var_t570 = exp((-11.764705879999999) - (0.14705882349999999 * var_cell__V)); // dimensionless
        const double var_t573 = (-40.0) < var_cell__V; // dimensionless
        const double var_t574 = var_t567 ? ((-0.01985294118) * var_t570) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t578 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t581 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t586 = exp(((-0.090090090090000005) * var_cell__V) - 0.96036036039999995); // dimensionless
        const double var_t589 = pow(0.13 + (0.13 * var_t586), 2.0); // dimensionless
        const double var_t593 = (var_cell__V <= (-40.0)) ? ((0.28123999999999999 * var_t578) + (108500.0 * var_t581)) : var_t573 ? ((0.011711711709999999 / var_t589) * var_t586) : NAN; // dimensionless
        const double var_t596 = (-40.0) <= var_cell__V; // dimensionless
        const double var_t598 = var_t596 ? 0.0 : (0.13500000000000001 * var_t570); // dimensionless
        const double var_t603 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t606 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t609 = var_t596 ? (1.0 / (0.13 + (0.13 * var_t586))) : ((3.5600000000000001 * var_t603) + (310000.0 * var_t606)); // dimensionless
        const double var_t611 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t613 = exp((-var_t611) - 4.7130000000000001); // dimensionless
        const double var_t614 = 1.0 - var_t613; // dimensionless
        const double var_t615 = 1.0 / var_t614; // dimensionless
        const double var_t616 = 1.0 - var_INa__m; // dimensionless
        const double var_t619 = var_cell__V + 47.130000000000003; // dimensionless
        const double var_t620 = pow(var_t614, 2.0); // dimensionless
        const double var_t622 = var_t619 / var_t620; // dimensionless
        const double var_t627 = exp(((-1.0) / 11.0) * var_cell__V); // dimensionless
        const double var_t634 = (((-0.32000000000000001) * var_t619) * var_t615) - (0.080000000000000002 * var_t627); // dimensionless
        const double var_t636 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t639 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t642 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t646 = exp((0.311 * var_cell__V) + 24.640530009999999); // dimensionless
        const double var_t647 = 1.0 + var_t646; // dimensionless
        const double var_t648 = 1.0 / var_t647; // dimensionless
        const double var_t652 = ((-127140.0) * var_t636) - (3.4740000000000003e-05 * var_t639); // dimensionless
        const double var_t655 = pow(var_t647, 2.0); // dimensionless
        const double var_t661 = var_t567 ? (((((((-31073.016) * var_t636) + (1.5254334000000001e-06 * var_t639)) * var_t642) * var_t648) + (var_t652 * var_t648)) - ((((0.311 * var_t652) * var_t642) / var_t655) * var_t646)) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t665 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t668 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919950000001); // dimensionless
        const double var_t669 = 1.0 + var_t668; // dimensionless
        const double var_t673 = pow(var_t669, 2.0); // dimensionless
        const double var_t680 = exp((-2.5349999990000002e-07) * var_cell__V); // dimensionless
        const double var_t683 = exp(((-0.10000000000000001) * var_cell__V) - 3.2000000000000002); // dimensionless
        const double var_t684 = 1.0 + var_t683; // dimensionless
        const double var_t688 = pow(var_t684, 2.0); // dimensionless
        const double var_t694 = (var_cell__V <= (-40.0)) ? ((((-0.001275024) * var_t665) / var_t669) + (((0.016701359999999998 * var_t665) / var_t673) * var_t668)) : var_t573 ? ((((-7.604999998e-08) * var_t680) / var_t684) + (((0.029999999999999999 * var_t680) / var_t688) * var_t683)) : NAN; // dimensionless
        const double var_t698 = exp(0.24440000000000001 * var_cell__V); // dimensionless
        const double var_t701 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t708 = exp((0.311 * var_cell__V) + 24.640529999999998); // dimensionless
        const double var_t712 = var_t596 ? 0.0 : (((((-127140.0) * var_t698) - (3.4740000000000003e-05 * var_t701)) * (var_cell__V + 37.780000000000001)) / (1.0 + var_t708)); // dimensionless
        const double var_t714 = exp((-2.5349999999999999e-07) * var_cell__V); // dimensionless
        const double var_t716 = exp((-var_t611) - 3.2000000000000002); // dimensionless
        const double var_t722 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t725 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919999999997); // dimensionless
        const double var_t730 = var_t596 ? ((0.29999999999999999 * var_t714) / (1.0 + var_t716)) : ((0.1212 * var_t722) / (1.0 + var_t725)); // dimensionless
        const double var_t734 = exp(((-0.14836795250000001) * var_cell__V) + 0.59347181000000004); // dimensionless
        const double var_t735 = 1.0 + var_t734; // dimensionless
        const double var_t736 = pow(var_t735, 2.0); // dimensionless
        const double var_t741 = exp((0.051999999999999998 * var_cell__V) + 0.67600000000000005); // dimensionless
        const double var_t744 = exp((0.13200000000000001 * var_cell__V) + 1.716); // dimensionless
        const double var_t745 = 1.0 + var_t744; // dimensionless
        const double var_t747 = var_t741 / var_t745; // dimensionless
        const double var_t749 = 0.58999999999999997 + (0.80000000000000004 * var_t747); // dimensionless
        const double var_t750 = 1.0 / var_t749; // dimensionless
        const double var_t755 = pow(var_t749, 2.0); // dimensionless
        const double var_t759 = pow(var_t745, 2.0); // dimensionless
        const double var_t769 = exp(((-0.29411764709999999) * var_cell__V) - 19.117647059999999); // dimensionless
        const double var_t771 = pow(1.0 + var_t769, 2.0); // dimensionless
        const double var_t777 = exp(((1.0 / 7.0) * var_cell__V) + 2.4457142859999998); // dimensionless
        const double var_t778 = 1.0 + var_t777; // dimensionless
        const double var_t779 = pow(var_t778, 2.0); // dimensionless
        const double var_t781 = (1.0 / var_t779) * var_t777; // dimensionless
        const double var_t784 = pow((0.044999999999999998 * var_cell__V) - 0.43611299999999997, 2.0); // dimensionless
        const double var_t785 = exp(-var_t784); // dimensionless
        const double var_t787 = (0.24110000000000001 * var_t785) + 0.052900000000000003; // dimensionless
        const double var_t790 = 1.0 / var_t778; // dimensionless
        const double var_t803 = var_t1 ? ((4.0 * var_t257) * var_t356) : ((4.0 * var_t277) * var_t356); // dimensionless
        const double var_t805 = 1.0 - (20.0 * var_t803); // dimensionless
        const double var_t806 = pow(var_t805, 2.0); // dimensionless
        const double var_t807 = 1.0 / var_t806; // dimensionless
        const double var_t809 = 1.0 - var_Irel__CaMKtrap; // dimensionless
        const double var_t810 = var_Irel__CaMK0 * var_t809; // dimensionless
        const double var_t811 = 1.0 / var_Ca__Ca_ss; // dimensionless
        const double var_t813 = 1.0 + (var_Irel__Km * var_t811); // dimensionless
        const double var_t814 = 1.0 / var_t813; // dimensionless
        const double var_t815 = var_t810 * var_t814; // dimensionless
        const double var_t816 = var_t815 + var_Irel__CaMKtrap; // dimensionless
        const double var_t817 = (0.14999999999999999 + var_t815) + var_Irel__CaMKtrap; // dimensionless
        const double var_t818 = 1.0 / var_t817; // dimensionless
        const double var_t822 = 1.0 + (333.33333329999999 * var_Ca__Ca_ss); // dimensionless
        const double var_t823 = 1.0 / var_t822; // dimensionless
        const double var_t824 = (((10.0 * var_t816) * var_t818) + var_t823) + 0.5; // dimensionless
        const double var_t825 = 1.0 / var_t824; // dimensionless
        const double var_t851 = pow(var_t824, 2.0); // dimensionless
        const double var_t853 = ((((0.29999999999999999 / var_t805) + (0.55000000000000004 * var_t823)) + 0.14999999999999999) - var_ICaL__fca) / var_t851; // dimensionless
        const double var_t855 = ((-var_Irel__CaMK0) * var_t814) + 1.0; // dimensionless
        const double var_t857 = pow(var_t817, 2.0); // dimensionless
        const double var_t859 = var_t816 / var_t857; // dimensionless
        const double var_t865 = pow(var_t822, 2.0); // dimensionless
        const double var_t866 = 1.0 / var_t865; // dimensionless
        const double var_t870 = pow(var_t813, 2.0); // dimensionless
        const double var_t871 = 1.0 / var_t870; // dimensionless
        const double var_t873 = pow(var_Ca__Ca_ss, 2.0); // dimensionless
        const double var_t874 = 1.0 / var_t873; // dimensionless
        const double var_t875 = var_Irel__Km * var_t874; // dimensionless
        const double var_t881 = (var_t809 * var_t871) * var_t875; // dimensionless
        const double var_t889 = 1.0 - (100.0 * var_t803); // dimensionless
        const double var_t890 = pow(var_t889, 2.0); // dimensionless
        const double var_t891 = 1.0 / var_t890; // dimensionless
        const double var_t895 = exp(((-25.0) * var_t803) - 4.375); // dimensionless
        const double var_t896 = 1.0 + var_t895; // dimensionless
        const double var_t899 = (300.0 / var_t896) + 125.0; // dimensionless
        const double var_t900 = 1.0 / var_t899; // dimensionless
        const double var_t905 = pow(var_t899, 2.0); // dimensionless
        const double var_t907 = ((1.0 / var_t889) - var_ICaL__fca2) / var_t905; // dimensionless
        const double var_t908 = pow(var_t896, 2.0); // dimensionless
        const double var_t909 = 1.0 / var_t908; // dimensionless
        const double var_t974 = pow((0.058999999999999997 * var_cell__V) - 1.0957834, 2.0); // dimensionless
        const double var_t975 = exp(-var_t974); // dimensionless
        const double var_t977 = (0.042299999999999997 * var_t975) + 0.0054000000000000003; // dimensionless
        const double var_t990 = exp(((-0.23529411759999999) * var_cell__V) - 2.3729411759999999); // dimensionless
        const double var_t991 = 1.0 + var_t990; // dimensionless
        const double var_t992 = pow(var_t991, 2.0); // dimensionless
        const double var_t995 = var_cell__V - 1.7383999999999999; // dimensionless
        const double var_t998 = exp(((-0.13600000000000001) * var_cell__V) + 0.2364224); // dimensionless
        const double var_t999 = 1.0 - var_t998; // dimensionless
        const double var_t1000 = 1.0 / var_t999; // dimensionless
        const double var_t1003 = var_cell__V + 38.360799999999998; // dimensionless
        const double var_t1006 = exp((0.1522 * var_cell__V) + 5.8385137599999997); // dimensionless
        const double var_t1007 = var_t1006 - 1.0; // dimensionless
        const double var_t1008 = 1.0 / var_t1007; // dimensionless
        const double var_t1011 = ((0.00059999999999999995 * var_t995) * var_t1000) + ((0.00029999999999999997 * var_t1003) * var_t1008); // dimensionless
        const double var_t1017 = pow(var_t999, 2.0); // dimensionless
        const double var_t1023 = pow(var_t1007, 2.0); // dimensionless
        const double var_t1033 = exp(((-0.040485829959999997) * var_cell__V) + 0.4251012146); // dimensionless
        const double var_t1034 = 1.0 + var_t1033; // dimensionless
        const double var_t1035 = pow(var_t1034, 2.0); // dimensionless
        const double var_t1038 = var_cell__V + 44.600000000000001; // dimensionless
        const double var_t1041 = exp(((-9.9700000000000006) * var_cell__V) - 444.66199999999998); // dimensionless
        const double var_t1042 = 1.0 - var_t1041; // dimensionless
        const double var_t1043 = 1.0 / var_t1042; // dimensionless
        const double var_t1044 = var_t1038 * var_t1043; // dimensionless
        const double var_t1046 = var_cell__V - 0.55000000000000004; // dimensionless
        const double var_t1049 = exp((0.128 * var_cell__V) - 0.070400000000000004); // dimensionless
        const double var_t1050 = var_t1049 - 1.0; // dimensionless
        const double var_t1051 = 1.0 / var_t1050; // dimensionless
        const double var_t1052 = var_t1046 * var_t1051; // dimensionless
        const double var_t1054 = (7.6100000000000007e-05 * var_t1044) + (0.00036000000000000002 * var_t1052); // dimensionless
        const double var_t1055 = ((1.0 / var_t1035) * var_t1033) * var_t1054; // dimensionless
        const double var_t1057 = 1.0 / var_t1034; // dimensionless
        const double var_t1060 = pow(var_t1042, 2.0); // dimensionless
        const double var_t1066 = pow(var_t1050, 2.0); // dimensionless
        const double var_t1071 = (((7.6100000000000007e-05 * var_t1043) - (((0.00075871700000000001 * var_t1038) / var_t1060) * var_t1041)) + (0.00036000000000000002 * var_t1051)) - (((4.6079999999999999e-05 * var_t1046) / var_t1066) * var_t1049); // dimensionless
        const double var_t1082 = (1.0 / 25.0) * var_cell__V; // dimensionless
        const double var_t1084 = exp(var_t1082 - (8.0 / 5.0)); // dimensionless
        const double var_t1085 = 1.0 + var_t1084; // dimensionless
        const double var_t1087 = var_t1084 / var_t1085; // dimensionless
        const double var_t1088 = 1.0 - var_Ito__ydv; // dimensionless
        const double var_t1090 = pow(var_t1084, 2.0); // dimensionless
        const double var_t1091 = pow(var_t1085, 2.0); // dimensionless
        const double var_t1096 = exp((-var_t1082) - (18.0 / 5.0)); // dimensionless
        const double var_t1097 = 1.0 + var_t1096; // dimensionless
        const double var_t1099 = var_t1096 / var_t1097; // dimensionless
        const double var_t1101 = pow(var_t1096, 2.0); // dimensionless
        const double var_t1102 = pow(var_t1097, 2.0); // dimensionless
        const double var_t1108 = (1.0 / 5.0) * var_cell__V; // dimensionless
        const double var_t1110 = exp(var_t1108 + 12.0); // dimensionless
        const double var_t1111 = 1.0 + var_t1110; // dimensionless
        const double var_t1112 = pow(var_t1111, 2.0); // dimensionless
        const double var_t1113 = 1.0 / var_t1112; // dimensionless
        const double var_t1119 = exp(var_t1108 + 5.0); // dimensionless
        const double var_t1120 = 1.0 + var_t1119; // dimensionless
        const double var_t1122 = var_t1119 / var_t1120; // dimensionless
        const double var_t1125 = pow(var_t1119, 2.0); // dimensionless
        const double var_t1126 = pow(var_t1120, 2.0); // dimensionless
        const double var_t1128 = var_t1125 / var_t1126; // dimensionless
        const double var_t1132 = 1.0 / var_t1111; // dimensionless
        const double var_t1150 = pow(1.0 + (var_Ito2__Kmto2 * var_t811), 2.0); // dimensionless
        const double var_t1154 = 1.0 - var_INal__mL; // dimensionless
        const double var_t1165 = exp((0.16393442620000001 * var_cell__V) + 14.918032780000001); // dimensionless
        const double var_t1167 = pow(1.0 + var_t1165, 2.0); // dimensionless
        const double var_t1175 = var_t816 * var_Irel__CaMK0; // dimensionless
        const double var_t1179 = pow(var_Irel__CaMK0, 2.0); // dimensionless
        const double var_t1180 = pow(var_t809, 2.0); // dimensionless
        const double var_t1189 = var_t871 * var_Irel__Km; // dimensionless
        const double var_t1194 = pow(var_Ca__Ca_jsr, 1.8999999999999999); // dimensionless
        const double var_t1195 = var_Ca__Ca_ss + 0.0028; // dimensionless
        const double var_t1196 = 1.0 / var_t1195; // dimensionless
        const double var_t1197 = var_Ca__Ca_ss * var_t1196; // dimensionless
        const double var_t1198 = pow(var_t1197, 1.8999999999999999); // dimensionless
        const double var_t1200 = var_t1194 + (1644.6531769999999 * var_t1198); // dimensionless
        const double var_t1201 = 1.0 / var_t1200; // dimensionless
        const double var_t1202 = var_t1194 * var_t1201; // dimensionless
        const double var_t1203 = pow(var_t803, 2.0); // dimensionless
        const double var_t1205 = (1.0 / var_t1203) + 1.0; // dimensionless
        const double var_t1206 = pow(var_t1205, 2.0); // dimensionless
        const double var_t1210 = ((1.0 / var_t1206) / var_t1203) / var_t803; // dimensionless
        const double var_t1232 = pow(var_Ca__Ca_jsr, 0.90000000000000002); // dimensionless
        const double var_t1234 = 1.0 / var_t1205; // dimensionless
        const double var_t1237 = pow(var_Ca__Ca_jsr, 2.7999999999999998); // dimensionless
        const double var_t1238 = pow(var_t1200, 2.0); // dimensionless
        const double var_t1239 = 1.0 / var_t1238; // dimensionless
        const double var_t1245 = pow(var_t1197, 0.90000000000000002); // dimensionless
        const double var_t1247 = pow(var_t1195, 2.0); // dimensionless
        const double var_t1261 = exp((66.666666669999998 * var_t803) + 3.3333333340000002); // dimensionless
        const double var_t1262 = 1.0 + var_t1261; // dimensionless
        const double var_t1263 = 1.0 / var_t1262; // dimensionless
        const double var_t1266 = exp(((40000.0 * var_Ca__Ca_ss) - 16.0) + (80.0 * var_t1263)); // dimensionless
        const double var_t1267 = 1.0 + var_t1266; // dimensionless
        const double var_t1268 = pow(var_t1267, 2.0); // dimensionless
        const double var_t1269 = 1.0 / var_t1268; // dimensionless
        const double var_t1270 = pow(var_t1262, 2.0); // dimensionless
        const double var_t1271 = 1.0 / var_t1270; // dimensionless
        const double var_t1272 = var_t1269 * var_t1271; // dimensionless
        const double var_t1275 = var_Irel__dtau_rel_max * var_t816; // dimensionless
        const double var_t1276 = (var_Irel__KmCaMK + var_t815) + var_Irel__CaMKtrap; // dimensionless
        const double var_t1277 = 1.0 / var_t1276; // dimensionless
        const double var_t1278 = var_t1275 * var_t1277; // dimensionless
        const double var_t1279 = 350.0 - var_t1278; // dimensionless
        const double var_t1283 = exp(((5000.0 * var_Ca__Ca_ss) - 15.0) + (15.0 * var_t1263)); // dimensionless
        const double var_t1284 = 1.0 + var_t1283; // dimensionless
        const double var_t1285 = 1.0 / var_t1284; // dimensionless
        const double var_t1287 = (3.0 + var_t1278) + (var_t1279 * var_t1285); // dimensionless
        const double var_t1288 = 1.0 / var_t1287; // dimensionless
        const double var_t1289 = (var_t1261 * var_t1266) * var_t1288; // dimensionless
        const double var_t1294 = pow(var_t1287, 2.0); // dimensionless
        const double var_t1296 = ((1.0 / var_t1267) - var_Irel__ri) / var_t1294; // dimensionless
        const double var_t1297 = pow(var_t1284, 2.0); // dimensionless
        const double var_t1299 = var_t1279 / var_t1297; // dimensionless
        const double var_t1300 = var_t1296 * var_t1299; // dimensionless
        const double var_t1302 = var_t1261 * var_t1283; // dimensionless
        const double var_t1356 = (var_Irel__dtau_rel_max * var_t855) * var_t1277; // dimensionless
        const double var_t1357 = pow(var_t1276, 2.0); // dimensionless
        const double var_t1358 = 1.0 / var_t1357; // dimensionless
        const double var_t1359 = var_t1358 * var_t855; // dimensionless
        const double var_t1360 = var_t1275 * var_t1359; // dimensionless
        const double var_t1366 = (var_t1271 * var_t566) * var_t1261; // dimensionless
        const double var_t1375 = (var_t1189 * var_t874) * var_t1277; // dimensionless
        const double var_t1376 = ((var_Irel__dtau_rel_max * var_Irel__CaMK0) * var_t809) * var_t1375; // dimensionless
        const double var_t1377 = var_t1358 * var_Irel__CaMK0; // dimensionless
        const double var_t1379 = (var_t1275 * var_t1377) * var_t881; // dimensionless
        const double var_t1393 = pow(var_cell__a, 2.0); // dimensionless
        const double var_t1397 = (M_PI * var_t1393) + ((M_PI * var_cell__a) * var_cell__l); // dimensionless
        const double var_t1399 = 1.0 / var_Environment__F; // dimensionless
        const double var_t1401 = 1.0 / M_PI; // dimensionless
        const double var_t1402 = 1.0 / var_t1393; // dimensionless
        const double var_t1404 = 1.0 / var_cell__l; // dimensionless
        const double var_t1405 = (var_t1401 * var_t1402) * var_t1404; // dimensionless
        const double var_t1409 = ((4.0 * var_t1397) * var_t1399) * var_t1405; // dimensionless
        const double var_t1415 = (4.0 * var_t333) * var_t1397; // dimensionless
        const double var_t1427 = ((var_t1399 * var_t1401) * var_t1402) * var_t1404; // dimensionless
        const double var_t1439 = log(var_Environment__Cl_o * var_t509); // dimensionless
        const double var_t1440 = var_t1439 * var_t123; // dimensionless
        const double var_t1441 = var_t332 + var_t1440; // dimensionless
        const double var_t1442 = pow(var_t1441, 2.0); // dimensionless
        const double var_t1443 = var_t1442 * var_t1441; // dimensionless
        const double var_t1444 = var_Na__CTNaClmax * var_t1443; // dimensionless
        const double var_t1445 = pow(var_t1442, 2.0); // dimensionless
        const double var_t1446 = var_t1445 + 59494197.640000001; // dimensionless
        const double var_t1447 = 1.0 / var_t1446; // dimensionless
        const double var_t1450 = ((var_t1444 * var_t1447) * var_t329) * var_t123; // dimensionless
        const double var_t1453 = (var_Na__CTNaClmax * var_t1445) * var_t1443; // dimensionless
        const double var_t1454 = pow(var_t1446, 2.0); // dimensionless
        const double var_t1455 = 1.0 / var_t1454; // dimensionless
        const double var_t1458 = ((var_t1453 * var_t1455) * var_t329) * var_t123; // dimensionless
        const double var_t1463 = ((var_t1444 * var_t1447) * var_t509) * var_t123; // dimensionless
        const double var_t1466 = ((var_t1453 * var_t1455) * var_t509) * var_t123; // dimensionless
        const double var_t1477 = ((((((((((-var_t129) + var_t133) + var_t142) - var_t175) - var_t194) + var_t196) + var_t203) + var_t208) + (2.0 * var_t106)) + var_t218) + var_t221; // dimensionless
        const double var_t1484 = (4.0 * var_t412) * var_t1397; // dimensionless
        const double var_t1512 = (var_t124 + var_t1440) + 87.825100000000006; // dimensionless
        const double var_t1514 = var_t123 / var_t1512; // dimensionless
        const double var_t1515 = (var_K__CTKClmax * var_t120) * var_t1514; // dimensionless
        const double var_t1517 = var_K__CTKClmax * (var_t124 + var_t1440); // dimensionless
        const double var_t1518 = pow(var_t1512, 2.0); // dimensionless
        const double var_t1519 = 1.0 / var_t1518; // dimensionless
        const double var_t1522 = ((var_t1517 * var_t1519) * var_t120) * var_t123; // dimensionless
        const double var_t1525 = (var_K__CTKClmax * var_t509) * var_t1514; // dimensionless
        const double var_t1528 = ((var_t1517 * var_t1519) * var_t509) * var_t123; // dimensionless
        const double var_t1556 = var_Ca__cbar * var_Ca__kmc; // dimensionless
        const double var_t1557 = var_Ca__Ca_i + var_Ca__kmc; // dimensionless
        const double var_t1558 = pow(var_t1557, 2.0); // dimensionless
        const double var_t1561 = var_Ca__kmt * var_Ca__tbar; // dimensionless
        const double var_t1562 = var_Ca__Ca_i + var_Ca__kmt; // dimensionless
        const double var_t1563 = pow(var_t1562, 2.0); // dimensionless
        const double var_t1566 = (1.0 + (var_t1556 / var_t1558)) + (var_t1561 / var_t1563); // dimensionless
        const double var_t1567 = 1.0 / var_t1566; // dimensionless
        const double var_t1577 = var_Iup_Ileak__dJupmax * var_t816; // dimensionless
        const double var_t1581 = var_Iup_Ileak__dKmPLBmax * var_t816; // dimensionless
        const double var_t1583 = (var_Ca__Ca_i + var_Iup_Ileak__Kmup) - (var_t1581 * var_t1277); // dimensionless
        const double var_t1584 = 1.0 / var_t1583; // dimensionless
        const double var_t1585 = var_Ca__Ca_i * var_t1584; // dimensionless
        const double var_t1586 = ((((var_Iup_Ileak__dJupmax * var_t855) * var_t1277) - (var_t1577 * var_t1359)) * var_Iup_Ileak__iupmax) * var_t1585; // dimensionless
        const double var_t1590 = ((var_t1577 * var_t1277) + 1.0) * var_Iup_Ileak__iupmax; // dimensionless
        const double var_t1591 = pow(var_t1583, 2.0); // dimensionless
        const double var_t1593 = var_Ca__Ca_i / var_t1591; // dimensionless
        const double var_t1599 = (var_t1590 * var_t1593) * ((((-var_Iup_Ileak__dKmPLBmax) * var_t855) * var_t1277) + (var_t1581 * var_t1359)); // dimensionless
        const double var_t1610 = pow(var_t1566, 2.0); // dimensionless
        const double var_t1627 = 1.0 / var_Iup_Ileak__nsrmax; // dimensionless
        const double var_t1652 = var_t1590 * var_t1584; // dimensionless
        const double var_t1654 = var_t1590 * var_t1593; // dimensionless
        const double var_t1669 = (((((var_Iup_Ileak__dJupmax * var_Irel__CaMK0) * var_t809) * var_t1375) - ((var_t1577 * var_t1377) * var_t881)) * var_Iup_Ileak__iupmax) * var_t1585; // dimensionless
        const double var_t1678 = (var_t1590 * var_t1593) * (((((-var_Iup_Ileak__dKmPLBmax) * var_Irel__CaMK0) * var_t809) * var_t1375) + ((var_t1581 * var_t1377) * var_t881)); // dimensionless
        const double var_t1682 = var_Ca__kmcsqn * var_Ca__csqnbar; // dimensionless
        const double var_t1683 = var_Ca__Ca_jsr + var_Ca__kmcsqn; // dimensionless
        const double var_t1684 = pow(var_t1683, 2.0); // dimensionless
        const double var_t1687 = 1.0 + (var_t1682 / var_t1684); // dimensionless
        const double var_t1688 = 1.0 / var_t1687; // dimensionless
        const double var_t1691 = exp(((4.0 / 5.0) * var_t352) + (13.0 / 5.0)); // dimensionless
        const double var_t1692 = 1.0 + var_t1691; // dimensionless
        const double var_t1693 = pow(var_t1692, 2.0); // dimensionless
        const double var_t1694 = 1.0 / var_t1693; // dimensionless
        const double var_t1696 = var_t227 * var_t248; // dimensionless
        const double var_t1708 = var_t1 ? (((-var_t1694) * ((((4.0 / 5.0) * var_t241) + (((((((8.0 / 5.0) * var_t1696) * var_t249) * var_ICaL__gacai) * var_Ca__Ca_ss) * var_t233) * var_t239)) - (((8.0 / 5.0) * var_t1696) * var_t264))) * var_t1691) : 0.0; // dimensionless
        const double var_t1710 = var_Irel__ro * var_Irel__ri; // dimensionless
        const double var_t1711 = var_Ca__Ca_jsr - var_Ca__Ca_ss; // dimensionless
        const double var_t1716 = var_t1 ? (1.0 / var_t1692) : 1.0; // dimensionless
        const double var_t1717 = var_t1688 * var_t1716; // dimensionless
        const double var_t1718 = var_Irel__ri * var_t1711; // dimensionless
        const double var_t1721 = var_Irel__ro * var_t1711; // dimensionless
        const double var_t1724 = pow(var_t1687, 2.0); // dimensionless
        const double var_t1728 = var_t1716 * var_Irel__ro; // dimensionless
        const double var_t1729 = var_t1728 * var_t1718; // dimensionless
        const double var_t1738 = var_t1728 * var_Irel__ri; // dimensionless
        const double var_t1750 = var_t1 ? ((((((((-4.0) / 5.0) * var_t1694) * var_ICaL__G_CaL_mult) * var_t259) * var_t559) * var_t251) * var_t1691) : 0.0; // dimensionless
        const double var_t1752 = (var_t1750 * var_Irel__ro) * var_t1718; // dimensionless
        const double var_t1760 = var_Ca__BSRmax * var_Ca__KmBSR; // dimensionless
        const double var_t1761 = var_Ca__KmBSR + var_Ca__Ca_ss; // dimensionless
        const double var_t1762 = pow(var_t1761, 2.0); // dimensionless
        const double var_t1765 = var_Ca__BSLmax * var_Ca__KmBSL; // dimensionless
        const double var_t1766 = var_Ca__KmBSL + var_Ca__Ca_ss; // dimensionless
        const double var_t1767 = pow(var_t1766, 2.0); // dimensionless
        const double var_t1770 = (1.0 + (var_t1760 / var_t1762)) + (var_t1765 / var_t1767); // dimensionless
        const double var_t1771 = 1.0 / var_t1770; // dimensionless
        const double var_t1805 = var_t1771 * var_t1716; // dimensionless
        const double var_t1813 = pow(var_t1770, 2.0); // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t197 + var_t326));
        IJth(rJacobian, 1, 0) = var_chaste_interface__Environment__fake_dt * ((((0.0029411764700000001 * var_t1567) * (((((-var_t292) - var_t297) + var_t303) + (2.0 * var_t64)) - (2.0 * var_t75))) * var_t1397) * var_t1427);
        IJth(rJacobian, 2, 0) = var_chaste_interface__Environment__fake_dt * ((var_t574 * (1.0 - var_INa__H)) - (var_t593 * var_INa__H));
        IJth(rJacobian, 3, 0) = var_chaste_interface__Environment__fake_dt * ((((0.32000000000000001 * var_t615) * var_t616) - (((0.032000000000000001 * var_t622) * var_t616) * var_t613)) + ((0.0072727272729999999 * var_t627) * var_INa__m));
        IJth(rJacobian, 4, 0) = var_chaste_interface__Environment__fake_dt * ((var_t661 * (1.0 - var_INa__J)) - (var_t694 * var_INa__J));
        IJth(rJacobian, 5, 0) = var_chaste_interface__Environment__fake_dt * ((((0.14836795250000001 / var_t736) * var_t734) * var_t750) - ((((1.0 / var_t735) - var_ICaL__d) / var_t755) * ((0.041599999999999998 * var_t747) - (((0.1056 * var_t741) / var_t759) * var_t744))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__Environment__fake_dt * (((-0.2352941177) / var_t771) * var_t769);
        IJth(rJacobian, 7, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.10000000000000001) * var_t781) * var_t787) + (((0.24110000000000001 * (((0.69999999999999996 * var_t790) + 0.29999999999999999) - var_ICaL__f)) * (((-0.0040499999999999998) * var_cell__V) + 0.039250170000000001)) * var_t785));
        IJth(rJacobian, 8, 0) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t281) * var_t825);
        IJth(rJacobian, 9, 0) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t281) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t281) * var_t895));
        IJth(rJacobian, 10, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.11) * var_t781) * var_t977) + (((0.042299999999999997 * (((0.77000000000000002 * var_t790) + 0.23000000000000001) - var_ICaL__f2)) * (((-0.0069620000000000003) * var_cell__V) + 0.12930244120000001)) * var_t975));
        IJth(rJacobian, 11, 0) = var_chaste_interface__Environment__fake_dt * ((((0.23529411759999999 / var_t992) * var_t990) * var_t1011) + (((1.0 / var_t991) - var_IKr__xr) * ((((0.00059999999999999995 * var_t1000) - (((8.1600000000000005e-05 * var_t995) / var_t1017) * var_t998)) + (0.00029999999999999997 * var_t1008)) - (((4.566e-05 * var_t1003) / var_t1023) * var_t1006))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__Environment__fake_dt * ((0.040485829959999997 * var_t1055) + ((var_t1057 - var_IKs__xs1) * var_t1071));
        IJth(rJacobian, 13, 0) = var_chaste_interface__Environment__fake_dt * ((0.020242914979999999 * var_t1055) + (((1.0 / 2.0) * (var_t1057 - var_IKs__xs2)) * var_t1071));
        IJth(rJacobian, 14, 0) = var_chaste_interface__Environment__fake_dt * ((((var_t1087 * var_t1088) - ((var_t1090 / var_t1091) * var_t1088)) + (var_t1099 * var_Ito__ydv)) - ((var_t1101 / var_t1102) * var_Ito__ydv));
        IJth(rJacobian, 15, 0) = var_chaste_interface__Environment__fake_dt * ((((((-0.0060000000000000001) * var_t1113) * (1.0 - var_Ito__ydv2)) * var_t1110) - ((0.040000000000000001 * var_t1122) * var_Ito__ydv2)) + ((0.040000000000000001 * var_t1128) * var_Ito__ydv2));
        IJth(rJacobian, 16, 0) = var_chaste_interface__Environment__fake_dt * ((((((-0.00044999999999999999) * var_t1113) * (1.0 - var_Ito__zdv)) * var_t1110) - ((0.02 * var_t1122) * var_Ito__zdv)) + ((0.02 * var_t1128) * var_Ito__zdv));
        IJth(rJacobian, 18, 0) = var_chaste_interface__Environment__fake_dt * ((((0.32000000000000001 * var_t615) * var_t1154) - (((0.032000000000000001 * var_t622) * var_t1154) * var_t613)) + ((0.0072727272729999999 * var_t627) * var_INal__mL));
        IJth(rJacobian, 19, 0) = var_chaste_interface__Environment__fake_dt * (((-0.00027322404370000002) / var_t1167) * var_t1165);
        IJth(rJacobian, 21, 0) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t281);
        IJth(rJacobian, 22, 0) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t281) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t281) * var_t1302));
        IJth(rJacobian, 23, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * ((((var_t8 + (3.0 * var_t64)) - (3.0 * var_t75)) - (3.0 * var_t106)) + var_t110)) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 24, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * var_t1477) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 25, 0) = var_chaste_interface__Environment__fake_dt * ((((0.0058823529400000001 * (((var_IClb__GClb + var_t313) - var_t319) + var_t325)) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 26, 0) = var_chaste_interface__Environment__fake_dt * (((((-3000.0) * var_t1688) * var_t1708) * var_t1710) * var_t1711);
        IJth(rJacobian, 28, 0) = var_chaste_interface__Environment__fake_dt * (var_t1771 * ((((((-0.10000000000000001) * var_t281) * var_t1397) * var_t1399) * var_t1405) + (((720.0 * var_t1708) * var_Irel__ro) * var_t1718)));
        IJth(rJacobian, 0, 1) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-0.88888888880000005) * var_t524) + (1.5 * var_t529)) + var_t537) - (((((1.355601567e-08 * var_t541) * var_t11) * var_IKs__xs1) * var_IKs__xs2) * var_t412)) - var_t550) - var_t553) + var_t557));
        IJth(rJacobian, 1, 1) = var_chaste_interface__Environment__fake_dt * (((((-2.0) / var_t1610) * ((((((((0.0029411764700000001 * (((((((-7.9803360000000004e-07) * var_t293) * var_Environment__FonRT) * var_t287) * var_t289) - (var_t554 * var_t552)) + ((((2.0 * var_t16) * var_t68) * var_t40) * var_t62))) * var_t1397) * var_t1399) * var_t1405) + (((0.081176470589999994 * var_Iup_Ileak__iupmax) * var_Ca__Ca_nsr) * var_t1627)) - ((0.081176470589999994 * var_t1590) * var_t1585)) + (0.1470588236 * var_Ca__Ca_ss)) - (0.1470588236 * var_Ca__Ca_i))) * ((((-var_t1556) / var_t1558) / var_t1557) - ((var_t1561 / var_t1563) / var_t1562))) + (var_t1567 * (((((((0.0029411764700000001 * ((((((-var_t550) - var_t553) + var_t557) + (1.7777777779999999 * var_t524)) - (3.0 * var_t529)) - (2.0 * var_t537))) * var_t1397) * var_t1399) * var_t1405) - (0.081176470589999994 * var_t1652)) + (0.081176470589999994 * var_t1654)) - 0.1470588236)));
        IJth(rJacobian, 23, 1) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * (((2.6666666659999998 * var_t524) - (4.5 * var_t529)) - (3.0 * var_t537))) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 24, 1) = var_chaste_interface__Environment__fake_dt * ((((((((-1.993531716e-11) * var_t541) * var_t11) * var_IKs__xs1) * var_IKs__xs2) * var_t1484) * var_t1399) * var_t1405);
        IJth(rJacobian, 27, 1) = var_chaste_interface__Environment__fake_dt * (var_t1652 - var_t1654);
        IJth(rJacobian, 28, 1) = var_chaste_interface__Environment__fake_dt * (5.0 * var_t1771);
        IJth(rJacobian, 0, 2) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t335));
        IJth(rJacobian, 2, 2) = var_chaste_interface__Environment__fake_dt * ((-var_t598) - var_t609);
        IJth(rJacobian, 23, 2) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t335) * var_t1409);
        IJth(rJacobian, 0, 3) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-3.0) * var_t3) * var_t4) * var_t337) * var_t333));
        IJth(rJacobian, 3, 3) = var_chaste_interface__Environment__fake_dt * (var_t634);
        IJth(rJacobian, 23, 3) = var_chaste_interface__Environment__fake_dt * ((((((((-0.0044117647049999997) * var_t3) * var_t4) * var_INa__H) * var_INa__J) * var_t1415) * var_t1399) * var_t1405);
        IJth(rJacobian, 0, 4) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t342));
        IJth(rJacobian, 4, 4) = var_chaste_interface__Environment__fake_dt * ((-var_t712) - var_t730);
        IJth(rJacobian, 23, 4) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t342) * var_t1409);
        IJth(rJacobian, 0, 5) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t359));
        IJth(rJacobian, 5, 5) = var_chaste_interface__Environment__fake_dt * (-var_t750);
        IJth(rJacobian, 8, 5) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t359) * var_t825);
        IJth(rJacobian, 9, 5) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t359) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t359) * var_t895));
        IJth(rJacobian, 21, 5) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t359);
        IJth(rJacobian, 22, 5) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t359) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t359) * var_t1302));
        IJth(rJacobian, 28, 5) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t359) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 6) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t366));
        IJth(rJacobian, 6, 6) = var_chaste_interface__Environment__fake_dt * ((-1.0) / 10.0);
        IJth(rJacobian, 8, 6) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t366) * var_t825);
        IJth(rJacobian, 9, 6) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t366) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t366) * var_t895));
        IJth(rJacobian, 21, 6) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t366);
        IJth(rJacobian, 22, 6) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t366) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t366) * var_t1302));
        IJth(rJacobian, 28, 6) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t366) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 7) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t375));
        IJth(rJacobian, 7, 7) = var_chaste_interface__Environment__fake_dt * (-var_t787);
        IJth(rJacobian, 8, 7) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t375) * var_t825);
        IJth(rJacobian, 9, 7) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t375) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t375) * var_t895));
        IJth(rJacobian, 21, 7) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t375);
        IJth(rJacobian, 22, 7) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t375) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t375) * var_t1302));
        IJth(rJacobian, 28, 7) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t375) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 8) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t384));
        IJth(rJacobian, 8, 8) = var_chaste_interface__Environment__fake_dt * ((((6.0 * var_t807) * var_t384) - 1.0) * var_t825);
        IJth(rJacobian, 9, 8) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t384) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t384) * var_t895));
        IJth(rJacobian, 21, 8) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t384);
        IJth(rJacobian, 22, 8) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t384) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t384) * var_t1302));
        IJth(rJacobian, 28, 8) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t384) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 9) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t392));
        IJth(rJacobian, 8, 9) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t392) * var_t825);
        IJth(rJacobian, 9, 9) = var_chaste_interface__Environment__fake_dt * (((((100.0 * var_t891) * var_t392) - 1.0) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t392) * var_t895));
        IJth(rJacobian, 21, 9) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t392);
        IJth(rJacobian, 22, 9) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t392) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t392) * var_t1302));
        IJth(rJacobian, 28, 9) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t392) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 10) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t399));
        IJth(rJacobian, 8, 10) = var_chaste_interface__Environment__fake_dt * (((6.0 * var_t807) * var_t399) * var_t825);
        IJth(rJacobian, 9, 10) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t399) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t399) * var_t895));
        IJth(rJacobian, 10, 10) = var_chaste_interface__Environment__fake_dt * (-var_t977);
        IJth(rJacobian, 21, 10) = var_chaste_interface__Environment__fake_dt * ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t399);
        IJth(rJacobian, 22, 10) = var_chaste_interface__Environment__fake_dt * ((((5333.3333339999999 * var_t1272) * var_t399) * var_t1289) - ((((1000.0 * var_t1300) * var_t1271) * var_t399) * var_t1302));
        IJth(rJacobian, 28, 10) = var_chaste_interface__Environment__fake_dt * (((((-0.10000000000000001) * var_t1771) * var_t399) * var_t1397) * var_t1427);
        IJth(rJacobian, 0, 11) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.0059618984300000002) * var_t401));
        IJth(rJacobian, 11, 11) = var_chaste_interface__Environment__fake_dt * (-var_t1011);
        IJth(rJacobian, 24, 11) = var_chaste_interface__Environment__fake_dt * (((-8.7674976889999999e-06) * var_t401) * var_t1409);
        IJth(rJacobian, 0, 12) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t403) * var_t412));
        IJth(rJacobian, 12, 12) = var_chaste_interface__Environment__fake_dt * (-var_t1054);
        IJth(rJacobian, 24, 12) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t403) * var_t1484) * var_t1427);
        IJth(rJacobian, 0, 13) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t141) * var_t412));
        IJth(rJacobian, 13, 13) = var_chaste_interface__Environment__fake_dt * (((-3.8050000000000003e-05) * var_t1044) - (0.00018000000000000001 * var_t1052));
        IJth(rJacobian, 24, 13) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t141) * var_t1484) * var_t1427);
        IJth(rJacobian, 0, 14) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t415) * var_Ito__ydv2) * var_t216));
        IJth(rJacobian, 14, 14) = var_chaste_interface__Environment__fake_dt * (((-25.0) * var_t1087) - (25.0 * var_t1099));
        IJth(rJacobian, 24, 14) = var_chaste_interface__Environment__fake_dt * (((((((-0.017647058819999999) * var_t415) * var_t220) * var_t125) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 0, 15) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t419));
        IJth(rJacobian, 15, 15) = var_chaste_interface__Environment__fake_dt * (((-0.029999999999999999) * var_t1132) - (0.20000000000000001 * var_t1122));
        IJth(rJacobian, 24, 15) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t419) * var_t1409);
        IJth(rJacobian, 0, 16) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t422));
        IJth(rJacobian, 16, 16) = var_chaste_interface__Environment__fake_dt * (((-0.0022499999999999998) * var_t1132) - (0.10000000000000001 * var_t1122));
        IJth(rJacobian, 24, 16) = var_chaste_interface__Environment__fake_dt * (((-0.001470588235) * var_t422) * var_t1409);
        IJth(rJacobian, 0, 17) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t423) * var_t424) * var_t310));
        IJth(rJacobian, 17, 17) = var_chaste_interface__Environment__fake_dt * (-1.0);
        IJth(rJacobian, 25, 17) = var_chaste_interface__Environment__fake_dt * (((((0.0058823529400000001 * var_t314) * var_t424) * var_t310) * var_t1397) * var_t1405);
        IJth(rJacobian, 0, 18) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-3.0) * var_t429));
        IJth(rJacobian, 18, 18) = var_chaste_interface__Environment__fake_dt * (var_t634);
        IJth(rJacobian, 23, 18) = var_chaste_interface__Environment__fake_dt * (((-0.0044117647049999997) * var_t429) * var_t1409);
        IJth(rJacobian, 0, 19) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t109) * var_t333));
        IJth(rJacobian, 19, 19) = var_chaste_interface__Environment__fake_dt * ((-1.0) / 600.0);
        IJth(rJacobian, 23, 19) = var_chaste_interface__Environment__fake_dt * ((((-0.001470588235) * var_t109) * var_t1415) * var_t1427);
        IJth(rJacobian, 1, 20) = var_chaste_interface__Environment__fake_dt * (var_t1567 * (((-0.081176470589999994) * var_t1586) + (0.081176470589999994 * var_t1599)));
        IJth(rJacobian, 8, 20) = var_chaste_interface__Environment__fake_dt * (((-10.0) * var_t853) * ((var_t855 * var_t818) - (var_t859 * var_t855)));
        IJth(rJacobian, 20, 20) = var_chaste_interface__Environment__fake_dt * ((((((0.050000000000000003 * var_t855) * var_Irel__CaMK0) * var_t809) * var_t814) - ((0.050000000000000003 * var_t1175) * var_t814)) - 0.00068000000000000005);
        IJth(rJacobian, 22, 20) = var_chaste_interface__Environment__fake_dt * ((-var_t1296) * ((var_t1356 - var_t1360) + (((-var_t1356) + var_t1360) * var_t1285)));
        IJth(rJacobian, 27, 20) = var_chaste_interface__Environment__fake_dt * (var_t1586 - var_t1599);
        IJth(rJacobian, 21, 21) = var_chaste_interface__Environment__fake_dt * ((-1.0) / 3.0);
        IJth(rJacobian, 26, 21) = var_chaste_interface__Environment__fake_dt * (((-3000.0) * var_t1717) * var_t1718);
        IJth(rJacobian, 28, 21) = var_chaste_interface__Environment__fake_dt * ((720.0 * var_t1805) * var_t1718);
        IJth(rJacobian, 22, 22) = var_chaste_interface__Environment__fake_dt * (-var_t1288);
        IJth(rJacobian, 26, 22) = var_chaste_interface__Environment__fake_dt * (((-3000.0) * var_t1717) * var_t1721);
        IJth(rJacobian, 28, 22) = var_chaste_interface__Environment__fake_dt * ((720.0 * var_t1805) * var_t1721);
        IJth(rJacobian, 0, 23) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t435) - (3.0 * var_t440)) + var_t452) - (2.0 * var_t461)) - var_t465) - var_t468));
        IJth(rJacobian, 1, 23) = var_chaste_interface__Environment__fake_dt * ((((0.0029411764700000001 * var_t1567) * ((6.0 * var_t440) - (2.0 * var_t452))) * var_t1397) * var_t1427);
        IJth(rJacobian, 23, 23) = var_chaste_interface__Environment__fake_dt * (((((((-0.0058823529400000001) * ((((var_t435 + (9.0 * var_t440)) - (3.0 * var_t452)) + (6.0 * var_t461)) + var_t465)) * var_t1397) * var_t1399) * var_t1405) - (4.0 * var_t1450)) + (4.0 * var_t1458));
        IJth(rJacobian, 24, 23) = var_chaste_interface__Environment__fake_dt * (((((-0.0058823529400000001) * (var_t468 - (4.0 * var_t461))) * var_t1397) * var_t1399) * var_t1405);
        IJth(rJacobian, 25, 23) = var_chaste_interface__Environment__fake_dt * (((-4.0) * var_t1450) + (4.0 * var_t1458));
        IJth(rJacobian, 0, 24) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t508);
        IJth(rJacobian, 24, 24) = var_chaste_interface__Environment__fake_dt * ((((((0.0058823529400000001 * var_t508) * var_t1397) * var_t1399) * var_t1405) - var_t1515) + var_t1522);
        IJth(rJacobian, 25, 24) = var_chaste_interface__Environment__fake_dt * ((-var_t1515) + var_t1522);
        IJth(rJacobian, 0, 25) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t515);
        IJth(rJacobian, 23, 25) = var_chaste_interface__Environment__fake_dt * (((-4.0) * var_t1463) + (4.0 * var_t1466));
        IJth(rJacobian, 24, 25) = var_chaste_interface__Environment__fake_dt * ((-var_t1525) + var_t1528);
        IJth(rJacobian, 25, 25) = var_chaste_interface__Environment__fake_dt * (((((((((-0.0058823529400000001) * var_t515) * var_t1397) * var_t1399) * var_t1405) - (4.0 * var_t1463)) + (4.0 * var_t1466)) - var_t1525) + var_t1528);
        IJth(rJacobian, 21, 26) = var_chaste_interface__Environment__fake_dt * ((((0.63333333329999997 * var_t1232) * var_t1201) * var_t1234) - (((0.63333333329999997 * var_t1237) * var_t1239) * var_t1234));
        IJth(rJacobian, 26, 26) = var_chaste_interface__Environment__fake_dt * ((((((2.0 / var_t1724) * ((((1.0 / 120.0) * var_Ca__Ca_nsr) - ((1.0 / 120.0) * var_Ca__Ca_jsr)) - (3000.0 * var_t1729))) * var_t1682) / var_t1684) / var_t1683) + (var_t1688 * (((-1.0) / 120.0) - (3000.0 * var_t1738))));
        IJth(rJacobian, 27, 26) = var_chaste_interface__Environment__fake_dt * (0.00072463768120000003);
        IJth(rJacobian, 28, 26) = var_chaste_interface__Environment__fake_dt * ((720.0 * var_t1805) * var_t1710);
        IJth(rJacobian, 1, 27) = var_chaste_interface__Environment__fake_dt * (((0.081176470589999994 * var_t1567) * var_Iup_Ileak__iupmax) * var_t1627);
        IJth(rJacobian, 26, 27) = var_chaste_interface__Environment__fake_dt * ((1.0 / 120.0) * var_t1688);
        IJth(rJacobian, 27, 27) = var_chaste_interface__Environment__fake_dt * ((-0.00072463768120000003) - (var_Iup_Ileak__iupmax * var_t1627));
        IJth(rJacobian, 0, 28) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t566));
        IJth(rJacobian, 1, 28) = var_chaste_interface__Environment__fake_dt * (var_t1567 * ((((-0.081176470589999994) * var_t1669) + (0.081176470589999994 * var_t1678)) + 0.1470588236));
        IJth(rJacobian, 8, 28) = var_chaste_interface__Environment__fake_dt * (((((6.0 * var_t807) * var_t566) - (183.33333329999999 * var_t866)) * var_t825) - (var_t853 * ((((((10.0 * var_t810) * var_t871) * var_t875) * var_t818) - (((10.0 * var_t859) * var_Irel__CaMK0) * var_t881)) - (333.33333329999999 * var_t866))));
        IJth(rJacobian, 9, 28) = var_chaste_interface__Environment__fake_dt * ((((100.0 * var_t891) * var_t566) * var_t900) - ((((7500.0 * var_t907) * var_t909) * var_t566) * var_t895));
        IJth(rJacobian, 17, 28) = var_chaste_interface__Environment__fake_dt * (((1.0 / var_t1150) * var_Ito2__Kmto2) * var_t874);
        IJth(rJacobian, 20, 28) = var_chaste_interface__Environment__fake_dt * (((((((0.050000000000000003 * var_t1179) * var_t1180) / var_t870) / var_t813) * var_Irel__Km) * var_t874) + ((((0.050000000000000003 * var_t1175) * var_t809) * var_t1189) * var_t874));
        IJth(rJacobian, 21, 28) = var_chaste_interface__Environment__fake_dt * (((((((-1041.613679) * var_t1194) * var_t1239) * var_t1234) * var_t1245) * (var_t1196 - (var_Ca__Ca_ss / var_t1247))) + ((((2.0 / 3.0) * var_t1202) * var_t1210) * var_t566));
        IJth(rJacobian, 22, 28) = var_chaste_interface__Environment__fake_dt * (((((-var_t1269) * (40000.0 - (5333.3333339999999 * var_t1366))) * var_t1266) * var_t1288) - (var_t1296 * (((var_t1376 - var_t1379) + (((-var_t1376) + var_t1379) * var_t1285)) - ((var_t1299 * (5000.0 - (1000.0 * var_t1366))) * var_t1283))));
        IJth(rJacobian, 26, 28) = var_chaste_interface__Environment__fake_dt * ((3000.0 * var_t1688) * ((-var_t1752) + var_t1738));
        IJth(rJacobian, 27, 28) = var_chaste_interface__Environment__fake_dt * (var_t1669 - var_t1678);
        IJth(rJacobian, 28, 28) = var_chaste_interface__Environment__fake_dt * (((((-2.0) / var_t1813) * ((((((((-0.10000000000000001) * var_t803) * var_t1397) * var_t1399) * var_t1405) + (720.0 * var_t1729)) - (5.0 * var_Ca__Ca_ss)) + (5.0 * var_Ca__Ca_i))) * ((((-var_t1760) / var_t1762) / var_t1761) - ((var_t1765 / var_t1767) / var_t1766))) + (var_t1771 * ((((((((-0.10000000000000001) * var_t566) * var_t1397) * var_t1399) * var_t1405) + (720.0 * var_t1752)) - (720.0 * var_t1738)) - 5.0)));
    }
    
template<>
void OdeSystemInformation<Dynamichund_rudy_2004_aFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "hund_rudy_2004";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.781844107117);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00012131666);

    // rY[2]:
    this->mVariableNames.push_back("INa__H");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.987317750543);

    // rY[3]:
    this->mVariableNames.push_back("INa__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001356538159);

    // rY[4]:
    this->mVariableNames.push_back("INa__J");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.991924983076);

    // rY[5]:
    this->mVariableNames.push_back("ICaL__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00000164013);

    // rY[6]:
    this->mVariableNames.push_back("ICaL__dp");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.98230672628);

    // rY[7]:
    this->mVariableNames.push_back("ICaL__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999961508634);

    // rY[8]:
    this->mVariableNames.push_back("ICaL__fca");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.97836624923);

    // rY[9]:
    this->mVariableNames.push_back("ICaL__fca2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.893052931249);

    // rY[10]:
    this->mVariableNames.push_back("ICaL__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.992234519148);

    // rY[11]:
    this->mVariableNames.push_back("IKr__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00000724074);

    // rY[12]:
    this->mVariableNames.push_back("IKs__xs1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.019883138161);

    // rY[13]:
    this->mVariableNames.push_back("IKs__xs2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.019890650554);

    // rY[14]:
    this->mVariableNames.push_back("Ito__ydv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.013970786703);

    // rY[15]:
    this->mVariableNames.push_back("Ito__ydv2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99996472752);

    // rY[16]:
    this->mVariableNames.push_back("Ito__zdv");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.829206149767);

    // rY[17]:
    this->mVariableNames.push_back("Ito2__AA");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000816605172);

    // rY[18]:
    this->mVariableNames.push_back("INal__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001356538159);

    // rY[19]:
    this->mVariableNames.push_back("INal__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.26130711759);

    // rY[20]:
    this->mVariableNames.push_back("Irel__CaMKtrap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.021123704774);

    // rY[21]:
    this->mVariableNames.push_back("Irel__ro");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[22]:
    this->mVariableNames.push_back("Irel__ri");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.862666650318);

    // rY[23]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(12.972433387269);

    // rY[24]:
    this->mVariableNames.push_back("K__K_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(135.469546216758);

    // rY[25]:
    this->mVariableNames.push_back("Cl__Cl_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(15.59207157178);

    // rY[26]:
    this->mVariableNames.push_back("Ca__Ca_jsr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.737580994071);

    // rY[27]:
    this->mVariableNames.push_back("Ca__Ca_nsr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(1.832822335168);

    // rY[28]:
    this->mVariableNames.push_back("Ca__Ca_ss");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.00012271265);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamichund_rudy_2004_aFromCellMLCvode)


#endif // CHASTE_CVODE
