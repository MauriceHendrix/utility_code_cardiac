#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: zhang_SAN_model_2000_0D_capable
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:15:57 2020
//! 
//! <autogenerated>

#include "zhang_SAN_model_2000_0D_capable.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode::Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                15,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode>::Instance();
        Init();

        NV_Ith_S(this->mParameters, 0) = 0.0001; // (chaste_interface,ionic_concentrations__Ca_i) [millimolar]
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode::~Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode()
    {
    }
    
    double Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))); // dimensionless
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
        const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
        const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
        const double var_ionic_concentrations__Na_o = 140.0; // millimolar
        const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
        const double var_ionic_concentrations__Na_i = 8.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
        const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
        const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_h_gate__F_Na = ((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993; // dimensionless
        const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
        const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
        const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
        const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_current__g_Na_Centre = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery = 1.204e-06; // microlitre_per_second
        const double var_sodium_current__g_Na = var_sodium_current__g_Na_Centre + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery - var_sodium_current__g_Na_Centre)); // microlitre_per_second
        const double var_sodium_current__T = var_membrane__T; // kelvin
        const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
        const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__g_Ca_L = var_L_type_Ca_channel__g_Ca_L_Centre + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery - var_L_type_Ca_channel__g_Ca_L_Centre)); // microS
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__g_Ca_T = var_T_type_Ca_channel__g_Ca_T_Centre + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery - var_T_type_Ca_channel__g_Ca_T_Centre)); // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
        const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__g_to = var_four_AP_sensitive_currents__g_to_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery - var_four_AP_sensitive_currents__g_to_Centre)); // microS
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_ionic_concentrations__K_i = 140.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
        const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
        const double var_four_AP_sensitive_currents__g_sus = var_four_AP_sensitive_currents__g_sus_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery - var_four_AP_sensitive_currents__g_sus_Centre)); // microS
        const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre)); // microS
        const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
        const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre)); // microS
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_reversal_and_equilibrium_potentials__E_K_s = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i))); // millivolt
        const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
        const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
        const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na = var_hyperpolarisation_activated_current__g_f_Na_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery - var_hyperpolarisation_activated_current__g_f_Na_Centre)); // microS
        const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na); // nanoA
        const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_K = var_hyperpolarisation_activated_current__g_f_K_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery - var_hyperpolarisation_activated_current__g_f_K_Centre)); // microS
        const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K); // nanoA
        const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
        const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-05; // microS
        const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_background_current__g_b_Na = var_sodium_background_current__g_b_Na_Centre + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery - var_sodium_background_current__g_b_Na_Centre)); // microS
        const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
        const double var_reversal_and_equilibrium_potentials__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
        const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
        const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
        const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
        const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-05; // microS
        const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-05; // microS
        const double var_calcium_background_current__g_b_Ca = var_calcium_background_current__g_b_Ca_Centre + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery - var_calcium_background_current__g_b_Ca_Centre)); // microS
        const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
        const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
        const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-05; // microS
        const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
        const double var_potassium_background_current__g_b_K = var_potassium_background_current__g_b_K_Centre + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery - var_potassium_background_current__g_b_K_Centre)); // microS
        const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_calcium_exchanger__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
        const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
        const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
        const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-06; // nanoA
        const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa = var_sodium_calcium_exchanger__k_NaCa_Centre + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery - var_sodium_calcium_exchanger__k_NaCa_Centre)); // nanoA
        const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0))))); // nanoA
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
        const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max = var_sodium_potassium_pump__i_p_max_Centre + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery - var_sodium_potassium_pump__i_p_max_Centre)); // nanoA
        const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
        const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
        const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
        const double var_persistent_calcium_current__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
        const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
        const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0.0; // nanoA
        const double var_persistent_calcium_current__i_Ca_p_max = var_persistent_calcium_current__i_Ca_p_max_Centre + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery - var_persistent_calcium_current__i_Ca_p_max_Centre)); // nanoA
        const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
        const double var_chaste_interface__potassium_background_current__i_b_K = var_potassium_background_current__i_b_K; // nanoA
        const double var_chaste_interface__sodium_current__i_Na = var_sodium_current__i_Na; // nanoA
        const double var_chaste_interface__persistent_calcium_current__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
        const double var_chaste_interface__sodium_background_current__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
        const double var_chaste_interface__membrane__Cm = var_membrane__Cm; // microF
        const double var_chaste_interface__four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
        const double var_chaste_interface__L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
        const double var_chaste_interface__calcium_background_current__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
        const double var_chaste_interface__sodium_calcium_exchanger__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
        const double var_chaste_interface__four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
        const double var_chaste_interface__hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
        const double var_chaste_interface__sodium_potassium_pump__i_p = var_sodium_potassium_pump__i_p; // nanoA
        const double var_chaste_interface__T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
        const double var_chaste_interface__i_ionic = 0.001 * (((var_chaste_interface__sodium_current__i_Na + var_chaste_interface__L_type_Ca_channel__i_Ca_L + var_chaste_interface__T_type_Ca_channel__i_Ca_T + var_chaste_interface__four_AP_sensitive_currents__i_to + var_chaste_interface__four_AP_sensitive_currents__i_sus + var_chaste_interface__rapid_delayed_rectifying_potassium_current__i_K_r + var_chaste_interface__slow_delayed_rectifying_potassium_current__i_K_s + var_chaste_interface__hyperpolarisation_activated_current__i_f_Na + var_chaste_interface__hyperpolarisation_activated_current__i_f_K + var_chaste_interface__sodium_background_current__i_b_Na + var_chaste_interface__calcium_background_current__i_b_Ca + var_chaste_interface__potassium_background_current__i_b_K + var_chaste_interface__sodium_calcium_exchanger__i_NaCa + var_chaste_interface__sodium_potassium_pump__i_p + var_chaste_interface__persistent_calcium_current__i_Ca_p) / var_chaste_interface__membrane__Cm) * HeartConfig::Instance()->GetCapacitance()); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__V;
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__FCell = (var_membrane__FCellConstant * var_membrane__dCell) / (1.0 + (0.77449999999999997 * exp((-((3.0 * var_membrane__dCell) - 2.0499999999999998)) / 0.29499999999999998))); // dimensionless
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_h_gate__V = var_sodium_current__V; // millivolt
        const double var_L_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_L_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__FCell = var_membrane__FCell; // dimensionless
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__V = var_chaste_interface__membrane__V; // millivolt
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_four_AP_sensitive_currents__FCell = var_membrane__FCell; // dimensionless
        const double var_four_AP_sensitive_currents__V = var_chaste_interface__membrane__V; // millivolt
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__V = var_chaste_interface__membrane__V; // millivolt
        const double var_sodium_current_m_gate__V = var_sodium_current__V; // millivolt
        const double var_sodium_current_m_gate__m_infinity = pow(1.0 / (1.0 + exp((-(var_sodium_current_m_gate__V + 30.32)) / 5.46)), 1.0 / 3.0); // dimensionless
        const double var_sodium_current_m_gate__tau_m = (0.00062469999999999995 / ((0.83221659999999997 * exp((-0.33566000000000001) * (var_sodium_current_m_gate__V + 56.706200000000003))) + (0.62739999999999996 * exp(0.082299999999999998 * (var_sodium_current_m_gate__V + 65.013099999999994))))) + 4.5689999999999998e-05; // second
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_sodium_current_m_gate__d_m_d_environment__time = (var_sodium_current_m_gate__m_infinity - var_sodium_current_m_gate__m) / var_sodium_current_m_gate__tau_m; // per_second
        const double var_sodium_current__sodium_current_m_gate__d_m_d_environment__time = var_sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_sodium_current_h_gate__h1_infinity = 1.0 / (1.0 + exp((var_sodium_current_h_gate__V + 66.099999999999994) / 6.4000000000000004)); // dimensionless
        const double var_sodium_current_h_gate__tau_h1 = ((3.7170000000000002e-06 * exp((-0.28149999999999997) * (var_sodium_current_h_gate__V + 17.109999999999999))) / (1.0 + (0.0037320000000000001 * exp((-0.34260000000000002) * (var_sodium_current_h_gate__V + 37.759999999999998))))) + 0.00059770000000000005; // second
        const double var_sodium_current_h_gate__d_h1_d_environment__time = (var_sodium_current_h_gate__h1_infinity - var_sodium_current_h_gate__h1) / var_sodium_current_h_gate__tau_h1; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time = var_sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_sodium_current_h_gate__tau_h2 = ((3.1860000000000002e-08 * exp((-0.62190000000000001) * (var_sodium_current_h_gate__V + 18.800000000000001))) / (1.0 + (7.1890000000000005e-05 * exp((-0.66830000000000001) * (var_sodium_current_h_gate__V + 34.07))))) + 0.0035560000000000001; // second
        const double var_sodium_current_h_gate__h2_infinity = var_sodium_current_h_gate__h1_infinity; // dimensionless
        const double var_sodium_current_h_gate__d_h2_d_environment__time = (var_sodium_current_h_gate__h2_infinity - var_sodium_current_h_gate__h2) / var_sodium_current_h_gate__tau_h2; // per_second
        const double var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time = var_sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_L_type_Ca_channel_d_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_d_gate__beta_d_L = (11.43 * (var_L_type_Ca_channel_d_gate__V - 5.0)) / (exp(0.40000000000000002 * (var_L_type_Ca_channel_d_gate__V - 5.0)) - 1.0); // per_second
        const double var_L_type_Ca_channel_d_gate__alpha_d_L = (((-28.390000000000001) * (var_L_type_Ca_channel_d_gate__V + 35.0)) / (exp((-(var_L_type_Ca_channel_d_gate__V + 35.0)) / 2.5) - 1.0)) - ((84.900000000000006 * var_L_type_Ca_channel_d_gate__V) / (exp((-0.20799999999999999) * var_L_type_Ca_channel_d_gate__V) - 1.0)); // per_second
        const double var_L_type_Ca_channel_d_gate__tau_d_L = 2.0 / (var_L_type_Ca_channel_d_gate__alpha_d_L + var_L_type_Ca_channel_d_gate__beta_d_L); // second
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_d_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L_infinity = 1.0 / (1.0 + exp((-(var_L_type_Ca_channel_d_gate__V + 22.300000000000001 + (0.80000000000000004 * var_L_type_Ca_channel_d_gate__FCell))) / 6.0)); // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time = (var_L_type_Ca_channel_d_gate__d_L_infinity - var_L_type_Ca_channel_d_gate__d_L) / var_L_type_Ca_channel_d_gate__tau_d_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = var_L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_L_type_Ca_channel_f_gate__FCell = var_L_type_Ca_channel__FCell; // dimensionless
        const double var_L_type_Ca_channel_f_gate__V = var_L_type_Ca_channel__V; // millivolt
        const double var_L_type_Ca_channel_f_gate__alpha_f_L = (3.75 * (var_L_type_Ca_channel_f_gate__V + 28.0)) / (exp((var_L_type_Ca_channel_f_gate__V + 28.0) / 4.0) - 1.0); // per_second
        const double var_L_type_Ca_channel_f_gate__beta_f_L = 30.0 / (1.0 + exp((-(var_L_type_Ca_channel_f_gate__V + 28.0)) / 4.0)); // per_second
        const double var_L_type_Ca_channel_f_gate__tau_f_L = (1.2 - (0.20000000000000001 * var_L_type_Ca_channel_f_gate__FCell)) / (var_L_type_Ca_channel_f_gate__alpha_f_L + var_L_type_Ca_channel_f_gate__beta_f_L); // second
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L_infinity = 1.0 / (1.0 + exp((var_L_type_Ca_channel_f_gate__V + 45.0) / 5.0)); // dimensionless
        const double var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time = (var_L_type_Ca_channel_f_gate__f_L_infinity - var_L_type_Ca_channel_f_gate__f_L) / var_L_type_Ca_channel_f_gate__tau_f_L; // per_second
        const double var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = var_L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_T_type_Ca_channel_d_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_d_gate__beta_d_T = 1068.0 * exp((-(var_T_type_Ca_channel_d_gate__V + 26.300000000000001)) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__alpha_d_T = 1068.0 * exp((var_T_type_Ca_channel_d_gate__V + 26.300000000000001) / 30.0); // per_second
        const double var_T_type_Ca_channel_d_gate__tau_d_T = 1.0 / (var_T_type_Ca_channel_d_gate__alpha_d_T + var_T_type_Ca_channel_d_gate__beta_d_T); // second
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T_infinity = 1.0 / (1.0 + exp((-(var_T_type_Ca_channel_d_gate__V + 37.0)) / 6.7999999999999998)); // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time = (var_T_type_Ca_channel_d_gate__d_T_infinity - var_T_type_Ca_channel_d_gate__d_T) / var_T_type_Ca_channel_d_gate__tau_d_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = var_T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_T_type_Ca_channel_f_gate__FCell = var_T_type_Ca_channel__FCell; // dimensionless
        const double var_T_type_Ca_channel_f_gate__V = var_T_type_Ca_channel__V; // millivolt
        const double var_T_type_Ca_channel_f_gate__alpha_f_T = 15.300000000000001 * exp((-(var_T_type_Ca_channel_f_gate__V + 71.0 + (0.69999999999999996 * var_T_type_Ca_channel_f_gate__FCell))) / 83.299999999999997); // per_second
        const double var_T_type_Ca_channel_f_gate__beta_f_T = 15.0 * exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 15.380000000000001); // per_second
        const double var_T_type_Ca_channel_f_gate__tau_f_T = 1.0 / (var_T_type_Ca_channel_f_gate__alpha_f_T + var_T_type_Ca_channel_f_gate__beta_f_T); // second
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T_infinity = 1.0 / (1.0 + exp((var_T_type_Ca_channel_f_gate__V + 71.0) / 9.0)); // dimensionless
        const double var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time = (var_T_type_Ca_channel_f_gate__f_T_infinity - var_T_type_Ca_channel_f_gate__f_T) / var_T_type_Ca_channel_f_gate__tau_f_T; // per_second
        const double var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = var_T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_q_gate__q = var_four_AP_sensitive_currents__q; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__FCell = var_four_AP_sensitive_currents__FCell; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_q_gate__tau_q = (0.001 / 3.0) * (30.309999999999999 + (195.5 / ((0.56859999999999999 * exp((-0.081610000000000002) * (var_four_AP_sensitive_currents_q_gate__V + 39.0 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell)))) + (0.71740000000000004 * exp((0.27189999999999998 - (0.1719 * var_four_AP_sensitive_currents_q_gate__FCell)) * 1.0 * (var_four_AP_sensitive_currents_q_gate__V + 40.93 + (10.0 * var_four_AP_sensitive_currents_q_gate__FCell))))))); // second
        const double var_four_AP_sensitive_currents_q_gate__q_infinity = 1.0 / (1.0 + exp((var_four_AP_sensitive_currents_q_gate__V + 59.369999999999997) / 13.1)); // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time = (var_four_AP_sensitive_currents_q_gate__q_infinity - var_four_AP_sensitive_currents_q_gate__q) / var_four_AP_sensitive_currents_q_gate__tau_q; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = var_four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_four_AP_sensitive_currents_r_gate__V = var_four_AP_sensitive_currents__V; // millivolt
        const double var_four_AP_sensitive_currents_r_gate__tau_r = 0.0025000000000000001 * (1.1910000000000001 + (7.8380000000000001 / ((1.0369999999999999 * exp(0.090120000000000006 * (var_four_AP_sensitive_currents_r_gate__V + 30.609999999999999))) + (0.36899999999999999 * exp((-0.11899999999999999) * (var_four_AP_sensitive_currents_r_gate__V + 23.84)))))); // second
        const double var_four_AP_sensitive_currents_r_gate__r = var_four_AP_sensitive_currents__r; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r_infinity = 1.0 / (1.0 + exp((-(var_four_AP_sensitive_currents_r_gate__V - 10.93)) / 19.699999999999999)); // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time = (var_four_AP_sensitive_currents_r_gate__r_infinity - var_four_AP_sensitive_currents_r_gate__r) / var_four_AP_sensitive_currents_r_gate__tau_r; // per_second
        const double var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = var_four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_rapid_delayed_rectifying_potassium_current__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af = 1.0 / ((37.200000000000003 * exp((var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0) / 15.9)) + (0.95999999999999996 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V - 9.0)) / 22.5))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity = 1.0 / (1.0 + exp((-(var_rapid_delayed_rectifying_potassium_current_P_af_gate__V + 14.199999999999999)) / 10.6)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity - var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) / var_rapid_delayed_rectifying_potassium_current_P_af_gate__tau_P_af; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity = var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity = var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_af_infinity; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as = 1.0 / ((4.2000000000000002 * exp((var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0) / 17.0)) + (0.14999999999999999 * exp((-(var_rapid_delayed_rectifying_potassium_current_P_as_gate__V - 9.0)) / 21.600000000000001))); // second
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_rapid_delayed_rectifying_potassium_current__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as_infinity - var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) / var_rapid_delayed_rectifying_potassium_current_P_as_gate__tau_P_as; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i = 0.002; // second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__V = var_rapid_delayed_rectifying_potassium_current__V; // millivolt
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity = 1.0 / (1.0 + exp((var_rapid_delayed_rectifying_potassium_current_P_i_gate__V + 18.600000000000001) / 10.1)); // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_rapid_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = (var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i_infinity - var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i) / var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i; // per_second
        const double var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = var_rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs = var_slow_delayed_rectifying_potassium_current__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__V = var_slow_delayed_rectifying_potassium_current__V; // millivolt
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs = 14.0 / (1.0 + exp((-(var_slow_delayed_rectifying_potassium_current_xs_gate__V - 40.0)) / 9.0)); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs = 1.0 * exp((-var_slow_delayed_rectifying_potassium_current_xs_gate__V) / 45.0); // per_second
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = (var_slow_delayed_rectifying_potassium_current_xs_gate__alpha_xs * (1.0 - var_slow_delayed_rectifying_potassium_current_xs_gate__xs)) - (var_slow_delayed_rectifying_potassium_current_xs_gate__beta_xs * var_slow_delayed_rectifying_potassium_current_xs_gate__xs); // per_second
        const double var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = var_slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_hyperpolarisation_activated_current_y_gate__V = var_hyperpolarisation_activated_current__V; // millivolt
        const double var_hyperpolarisation_activated_current_y_gate__alpha_y = 1.0 * exp((-(var_hyperpolarisation_activated_current_y_gate__V + 78.909999999999997)) / 26.629999999999999); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__beta_y = 1.0 * exp((var_hyperpolarisation_activated_current_y_gate__V + 75.129999999999995) / 21.25); // per_second
        const double var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = (var_hyperpolarisation_activated_current_y_gate__alpha_y * (1.0 - var_hyperpolarisation_activated_current_y_gate__y)) - (var_hyperpolarisation_activated_current_y_gate__beta_y * var_hyperpolarisation_activated_current_y_gate__y); // per_second
        const double var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = var_hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter = var_sodium_current__sodium_current_m_gate__d_m_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time = 0.001 * var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h1_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter = var_sodium_current__sodium_current_h_gate__d_h2_d_environment__time; // per_second
        const double var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time = 0.001 * var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter = var_L_type_Ca_channel__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // per_second
        const double var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time = 0.001 * var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter = var_T_type_Ca_channel__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // per_second
        const double var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time = 0.001 * var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter = var_four_AP_sensitive_currents__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // per_second
        const double var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time = 0.001 * var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter = var_rapid_delayed_rectifying_potassium_current__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // per_second
        const double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time = 0.001 * var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter = var_slow_delayed_rectifying_potassium_current__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // per_second
        const double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time = 0.001 * var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time_converter; // 'per millisecond'
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter = var_hyperpolarisation_activated_current__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // per_second
        const double var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time = 0.001 * var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time_converter; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_m_gate__m = var_chaste_interface__sodium_current_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h1 = var_chaste_interface__sodium_current_h_gate__d_h1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__sodium_current_h_gate__h2 = var_chaste_interface__sodium_current_h_gate__d_h2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_d_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__d_f_L_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_d_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__d_f_T_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__d_q_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__d_r_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__d_P_af_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__d_P_as_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__d_P_i_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__d_xs_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__d_y_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__V = 0.0;
        }
        else
        {
            const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
            const double var_membrane__T = 310.0; // kelvin
            const double var_membrane__F = 96845.0; // coulomb_per_mole
            const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
            const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
            const double var_membrane__Cm = var_membrane__CmCentre + (var_membrane__FCell * (var_membrane__CmPeriphery - var_membrane__CmCentre)); // microF
            const double var_ionic_concentrations__Na_o = 140.0; // millimolar
            const double var_sodium_current__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_reversal_and_equilibrium_potentials__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__T = var_membrane__T; // kelvin
            const double var_ionic_concentrations__Na_i = 8.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__F = var_membrane__F; // coulomb_per_mole
            const double var_reversal_and_equilibrium_potentials__E_Na = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__Na_o / var_reversal_and_equilibrium_potentials__Na_i); // millivolt
            const double var_sodium_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_current_h_gate__F_Na = ((0.095180000000000001 * exp((-0.063060000000000005) * (var_sodium_current_h_gate__V + 34.399999999999999))) / (1.0 + (1.6619999999999999 * exp((-0.22509999999999999) * (var_sodium_current_h_gate__V + 63.700000000000003))))) + 0.086929999999999993; // dimensionless
            const double var_sodium_current_h_gate__h = ((1.0 - var_sodium_current_h_gate__F_Na) * var_sodium_current_h_gate__h1) + (var_sodium_current_h_gate__F_Na * var_sodium_current_h_gate__h2); // dimensionless
            const double var_sodium_current__h = var_sodium_current_h_gate__h; // dimensionless
            const double var_sodium_current__F = var_membrane__F; // coulomb_per_mole
            const double var_sodium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_current__g_Na_Centre = 0.0; // microlitre_per_second
            const double var_sodium_current__g_Na_Periphery = 1.204e-06; // microlitre_per_second
            const double var_sodium_current__g_Na = var_sodium_current__g_Na_Centre + (var_sodium_current__FCell * (var_sodium_current__g_Na_Periphery - var_sodium_current__g_Na_Centre)); // microlitre_per_second
            const double var_sodium_current__T = var_membrane__T; // kelvin
            const double var_sodium_current__R = var_membrane__R; // millijoule_per_mole_kelvin
            const double var_sodium_current__i_Na = ((((var_sodium_current__g_Na * pow(var_sodium_current__m, 3.0) * var_sodium_current__h * var_sodium_current__Na_o * pow(var_sodium_current__F, 2.0)) / (var_sodium_current__R * var_sodium_current__T)) * (exp(((var_sodium_current__V - var_sodium_current__E_Na) * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) / (exp((var_sodium_current__V * var_sodium_current__F) / (var_sodium_current__R * var_sodium_current__T)) - 1.0)) * var_sodium_current__V; // nanoA
            const double var_membrane__i_Na = var_sodium_current__i_Na; // nanoA
            const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
            const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
            const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
            const double var_L_type_Ca_channel__g_Ca_L = var_L_type_Ca_channel__g_Ca_L_Centre + (var_L_type_Ca_channel__FCell * (var_L_type_Ca_channel__g_Ca_L_Periphery - var_L_type_Ca_channel__g_Ca_L_Centre)); // microS
            const double var_L_type_Ca_channel__i_Ca_L = var_L_type_Ca_channel__g_Ca_L * ((var_L_type_Ca_channel__f_L * var_L_type_Ca_channel__d_L) + (0.0060000000000000001 / (1.0 + exp((-(var_L_type_Ca_channel__V + 14.1)) / 6.0)))) * (var_L_type_Ca_channel__V - var_L_type_Ca_channel__E_Ca_L); // nanoA
            const double var_membrane__i_Ca_L = var_L_type_Ca_channel__i_Ca_L; // nanoA
            const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
            const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
            const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
            const double var_T_type_Ca_channel__g_Ca_T = var_T_type_Ca_channel__g_Ca_T_Centre + (var_T_type_Ca_channel__FCell * (var_T_type_Ca_channel__g_Ca_T_Periphery - var_T_type_Ca_channel__g_Ca_T_Centre)); // microS
            const double var_T_type_Ca_channel__i_Ca_T = var_T_type_Ca_channel__g_Ca_T * var_T_type_Ca_channel__d_T * var_T_type_Ca_channel__f_T * (var_T_type_Ca_channel__V - var_T_type_Ca_channel__E_Ca_T); // nanoA
            const double var_membrane__i_Ca_T = var_T_type_Ca_channel__i_Ca_T; // nanoA
            const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
            const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
            const double var_four_AP_sensitive_currents__g_to = var_four_AP_sensitive_currents__g_to_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_to_Periphery - var_four_AP_sensitive_currents__g_to_Centre)); // microS
            const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_ionic_concentrations__K_i = 140.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__K_i = var_ionic_concentrations__K_i; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_K = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log(var_reversal_and_equilibrium_potentials__K_o / var_reversal_and_equilibrium_potentials__K_i); // millivolt
            const double var_four_AP_sensitive_currents__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_four_AP_sensitive_currents__i_to = var_four_AP_sensitive_currents__g_to * var_four_AP_sensitive_currents__q * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_to = var_four_AP_sensitive_currents__i_to; // nanoA
            const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-05; // microS
            const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
            const double var_four_AP_sensitive_currents__g_sus = var_four_AP_sensitive_currents__g_sus_Centre + (var_four_AP_sensitive_currents__FCell * (var_four_AP_sensitive_currents__g_sus_Periphery - var_four_AP_sensitive_currents__g_sus_Centre)); // microS
            const double var_four_AP_sensitive_currents__i_sus = var_four_AP_sensitive_currents__g_sus * var_four_AP_sensitive_currents__r * (var_four_AP_sensitive_currents__V - var_four_AP_sensitive_currents__E_K); // nanoA
            const double var_membrane__i_sus = var_four_AP_sensitive_currents__i_sus; // nanoA
            const double var_rapid_delayed_rectifying_potassium_current__P_a = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current__P_as); // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
            const double var_rapid_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
            const double var_rapid_delayed_rectifying_potassium_current__g_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + (var_rapid_delayed_rectifying_potassium_current__FCell * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre)); // microS
            const double var_rapid_delayed_rectifying_potassium_current__i_K_r = var_rapid_delayed_rectifying_potassium_current__g_K_r * var_rapid_delayed_rectifying_potassium_current__P_a * var_rapid_delayed_rectifying_potassium_current__P_i * (var_rapid_delayed_rectifying_potassium_current__V - var_rapid_delayed_rectifying_potassium_current__E_K); // nanoA
            const double var_membrane__i_K_r = var_rapid_delayed_rectifying_potassium_current__i_K_r; // nanoA
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
            const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
            const double var_slow_delayed_rectifying_potassium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_slow_delayed_rectifying_potassium_current__g_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + (var_slow_delayed_rectifying_potassium_current__FCell * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre)); // microS
            const double var_reversal_and_equilibrium_potentials__E_K_s = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / var_reversal_and_equilibrium_potentials__F) * log((var_reversal_and_equilibrium_potentials__K_o + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_o)) / (var_reversal_and_equilibrium_potentials__K_i + (0.029999999999999999 * var_reversal_and_equilibrium_potentials__Na_i))); // millivolt
            const double var_slow_delayed_rectifying_potassium_current__E_K_s = var_reversal_and_equilibrium_potentials__E_K_s; // millivolt
            const double var_slow_delayed_rectifying_potassium_current__i_K_s = var_slow_delayed_rectifying_potassium_current__g_K_s * pow(var_slow_delayed_rectifying_potassium_current__xs, 2.0) * (var_slow_delayed_rectifying_potassium_current__V - var_slow_delayed_rectifying_potassium_current__E_K_s); // nanoA
            const double var_membrane__i_K_s = var_slow_delayed_rectifying_potassium_current__i_K_s; // nanoA
            const double var_hyperpolarisation_activated_current__FCell = var_membrane__FCell; // dimensionless
            const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_Na = var_hyperpolarisation_activated_current__g_f_Na_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_Na_Periphery - var_hyperpolarisation_activated_current__g_f_Na_Centre)); // microS
            const double var_hyperpolarisation_activated_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_hyperpolarisation_activated_current__i_f_Na = var_hyperpolarisation_activated_current__g_f_Na * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_Na); // nanoA
            const double var_membrane__i_f_Na = var_hyperpolarisation_activated_current__i_f_Na; // nanoA
            const double var_hyperpolarisation_activated_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
            const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
            const double var_hyperpolarisation_activated_current__g_f_K = var_hyperpolarisation_activated_current__g_f_K_Centre + (var_hyperpolarisation_activated_current__FCell * (var_hyperpolarisation_activated_current__g_f_K_Periphery - var_hyperpolarisation_activated_current__g_f_K_Centre)); // microS
            const double var_hyperpolarisation_activated_current__i_f_K = var_hyperpolarisation_activated_current__g_f_K * var_hyperpolarisation_activated_current__y * (var_hyperpolarisation_activated_current__V - var_hyperpolarisation_activated_current__E_K); // nanoA
            const double var_membrane__i_f_K = var_hyperpolarisation_activated_current__i_f_K; // nanoA
            const double var_sodium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_background_current__E_Na = var_reversal_and_equilibrium_potentials__E_Na; // millivolt
            const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
            const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-05; // microS
            const double var_sodium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_background_current__g_b_Na = var_sodium_background_current__g_b_Na_Centre + (var_sodium_background_current__FCell * (var_sodium_background_current__g_b_Na_Periphery - var_sodium_background_current__g_b_Na_Centre)); // microS
            const double var_sodium_background_current__i_b_Na = var_sodium_background_current__g_b_Na * (var_sodium_background_current__V - var_sodium_background_current__E_Na); // nanoA
            const double var_membrane__i_b_Na = var_sodium_background_current__i_b_Na; // nanoA
            const double var_reversal_and_equilibrium_potentials__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
            const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
            const double var_reversal_and_equilibrium_potentials__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_reversal_and_equilibrium_potentials__E_Ca = ((var_reversal_and_equilibrium_potentials__R * var_reversal_and_equilibrium_potentials__T) / (2.0 * var_reversal_and_equilibrium_potentials__F)) * log(var_reversal_and_equilibrium_potentials__Ca_o / var_reversal_and_equilibrium_potentials__Ca_i); // millivolt
            const double var_calcium_background_current__E_Ca = var_reversal_and_equilibrium_potentials__E_Ca; // millivolt
            const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-05; // microS
            const double var_calcium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-05; // microS
            const double var_calcium_background_current__g_b_Ca = var_calcium_background_current__g_b_Ca_Centre + (var_calcium_background_current__FCell * (var_calcium_background_current__g_b_Ca_Periphery - var_calcium_background_current__g_b_Ca_Centre)); // microS
            const double var_calcium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_calcium_background_current__i_b_Ca = var_calcium_background_current__g_b_Ca * (var_calcium_background_current__V - var_calcium_background_current__E_Ca); // nanoA
            const double var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca; // nanoA
            const double var_potassium_background_current__E_K = var_reversal_and_equilibrium_potentials__E_K; // millivolt
            const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-05; // microS
            const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-05; // microS
            const double var_potassium_background_current__FCell = var_membrane__FCell; // dimensionless
            const double var_potassium_background_current__g_b_K = var_potassium_background_current__g_b_K_Centre + (var_potassium_background_current__FCell * (var_potassium_background_current__g_b_K_Periphery - var_potassium_background_current__g_b_K_Centre)); // microS
            const double var_potassium_background_current__V = var_chaste_interface__membrane__V; // millivolt
            const double var_potassium_background_current__i_b_K = var_potassium_background_current__g_b_K * (var_potassium_background_current__V - var_potassium_background_current__E_K); // nanoA
            const double var_membrane__i_b_K = var_potassium_background_current__i_b_K; // nanoA
            const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
            const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
            const double var_sodium_calcium_exchanger__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_calcium_exchanger__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
            const double var_sodium_calcium_exchanger__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_calcium_exchanger__Na_o = var_ionic_concentrations__Na_o; // millimolar
            const double var_sodium_calcium_exchanger__Ca_o = var_ionic_concentrations__Ca_o; // millimolar
            const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-06; // nanoA
            const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-06; // nanoA
            const double var_sodium_calcium_exchanger__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_calcium_exchanger__k_NaCa = var_sodium_calcium_exchanger__k_NaCa_Centre + (var_sodium_calcium_exchanger__FCell * (var_sodium_calcium_exchanger__k_NaCa_Periphery - var_sodium_calcium_exchanger__k_NaCa_Centre)); // nanoA
            const double var_sodium_calcium_exchanger__i_NaCa = (var_sodium_calcium_exchanger__k_NaCa * ((pow(var_sodium_calcium_exchanger__Na_i, 3.0) * var_sodium_calcium_exchanger__Ca_o * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * var_sodium_calcium_exchanger__gamma_NaCa)) - (pow(var_sodium_calcium_exchanger__Na_o, 3.0) * var_sodium_calcium_exchanger__Ca_i * exp(0.037429999999999998 * var_sodium_calcium_exchanger__V * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0))))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * ((var_sodium_calcium_exchanger__Ca_i * pow(var_sodium_calcium_exchanger__Na_o, 3.0)) + (var_sodium_calcium_exchanger__Ca_o * pow(var_sodium_calcium_exchanger__Na_i, 3.0))))); // nanoA
            const double var_membrane__i_NaCa = var_sodium_calcium_exchanger__i_NaCa; // nanoA
            const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
            const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
            const double var_sodium_potassium_pump__V = var_chaste_interface__membrane__V; // millivolt
            const double var_sodium_potassium_pump__FCell = var_membrane__FCell; // dimensionless
            const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
            const double var_sodium_potassium_pump__i_p_max = var_sodium_potassium_pump__i_p_max_Centre + (var_sodium_potassium_pump__FCell * (var_sodium_potassium_pump__i_p_max_Periphery - var_sodium_potassium_pump__i_p_max_Centre)); // nanoA
            const double var_sodium_potassium_pump__K_o = var_ionic_concentrations__K_o; // millimolar
            const double var_sodium_potassium_pump__Na_i = var_ionic_concentrations__Na_i; // millimolar
            const double var_sodium_potassium_pump__i_p = (var_sodium_potassium_pump__i_p_max * pow(var_sodium_potassium_pump__Na_i / (var_sodium_potassium_pump__K_m_Na + var_sodium_potassium_pump__Na_i), 3.0) * pow(var_sodium_potassium_pump__K_o / (var_sodium_potassium_pump__K_m_K + var_sodium_potassium_pump__K_o), 2.0) * 1.6000000000000001) / (1.5 + exp((-(var_sodium_potassium_pump__V + 60.0)) / 40.0)); // nanoA
            const double var_membrane__i_p = var_sodium_potassium_pump__i_p; // nanoA
            const double var_persistent_calcium_current__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
            const double var_persistent_calcium_current__FCell = var_membrane__FCell; // dimensionless
            const double var_persistent_calcium_current__i_Ca_p_max_Centre = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max_Periphery = 0.0; // nanoA
            const double var_persistent_calcium_current__i_Ca_p_max = var_persistent_calcium_current__i_Ca_p_max_Centre + (var_persistent_calcium_current__FCell * (var_persistent_calcium_current__i_Ca_p_max_Periphery - var_persistent_calcium_current__i_Ca_p_max_Centre)); // nanoA
            const double var_persistent_calcium_current__i_Ca_p = (var_persistent_calcium_current__i_Ca_p_max * var_persistent_calcium_current__Ca_i) / (var_persistent_calcium_current__Ca_i + 0.00040000000000000002); // nanoA
            const double var_membrane__i_Ca_p = var_persistent_calcium_current__i_Ca_p; // nanoA
            const double var_membrane__d_V_d_environment__time = ((-1.0) / var_membrane__Cm) * (var_membrane__i_Na + var_membrane__i_Ca_L + var_membrane__i_Ca_T + var_membrane__i_to + var_membrane__i_sus + var_membrane__i_K_r + var_membrane__i_K_s + var_membrane__i_f_Na + var_membrane__i_f_K + var_membrane__i_b_Na + var_membrane__i_b_Ca + var_membrane__i_b_K + var_membrane__i_NaCa + var_membrane__i_p + var_membrane__i_Ca_p); // 'millivolt per second'
            const double var_chaste_interface__membrane__d_V_d_environment__time_converter = var_membrane__d_V_d_environment__time; // ___units_2
            const double var_chaste_interface__membrane__d_V_d_environment__time = 0.001 * var_chaste_interface__membrane__d_V_d_environment__time_converter; // 'millivolt per millisecond'
            d_dt_chaste_interface__membrane__V = var_chaste_interface__membrane__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__sodium_current_m_gate__m;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__sodium_current_h_gate__h1;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__sodium_current_h_gate__h2;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__L_type_Ca_channel_d_gate__d_L;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__L_type_Ca_channel_f_gate__f_L;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__T_type_Ca_channel_d_gate__d_T;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__T_type_Ca_channel_f_gate__f_T;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__four_AP_sensitive_currents_q_gate__q;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__four_AP_sensitive_currents_r_gate__r;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__hyperpolarisation_activated_current_y_gate__y;
    }
    
    void Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -39.013558536
        double var_chaste_interface__sodium_current_m_gate__m = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.092361701692
        double var_chaste_interface__sodium_current_h_gate__h1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.015905380261
        double var_chaste_interface__sodium_current_h_gate__h2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.01445216109
        double var_chaste_interface__L_type_Ca_channel_d_gate__d_L = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.04804900895
        double var_chaste_interface__L_type_Ca_channel_f_gate__f_L = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.48779845203
        double var_chaste_interface__T_type_Ca_channel_d_gate__d_T = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.42074047435
        double var_chaste_interface__T_type_Ca_channel_f_gate__f_T = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.038968420558
        double var_chaste_interface__four_AP_sensitive_currents_q_gate__q = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.29760539675
        double var_chaste_interface__four_AP_sensitive_currents_r_gate__r = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.064402950262
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.13034201158
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.46960956028
        double var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.87993375273
        double var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.082293827208
        double var_chaste_interface__hyperpolarisation_activated_current_y_gate__y = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.03889291759
        
        const double var_chaste_interface__environment__fake_dt = 0.001; // second
        const double var_membrane__dCell = 0.0; // dimensionless
        const double var_membrane__FCellConstant = 1.0309347; // dimensionless
        const double var_membrane__V = var_chaste_interface__membrane__V; // millivolt
        const double var_membrane__R = 8314.0; // millijoule_per_mole_kelvin
        const double var_membrane__T = 310.0; // kelvin
        const double var_membrane__F = 96845.0; // coulomb_per_mole
        const double var_membrane__CmPeriphery = 6.4999999999999994e-05; // microF
        const double var_membrane__CmCentre = 2.0000000000000002e-05; // microF
        const double var_ionic_concentrations__Na_o = 140.0; // millimolar
        const double var_ionic_concentrations__Na_i = 8.0; // millimolar
        const double var_sodium_current__m = var_chaste_interface__sodium_current_m_gate__m; // dimensionless
        const double var_sodium_current__h2 = var_chaste_interface__sodium_current_h_gate__h2; // dimensionless
        const double var_sodium_current_h_gate__h2 = var_sodium_current__h2; // dimensionless
        const double var_sodium_current__h1 = var_chaste_interface__sodium_current_h_gate__h1; // dimensionless
        const double var_sodium_current_h_gate__h1 = var_sodium_current__h1; // dimensionless
        const double var_sodium_current__g_Na_Centre = 0.0; // microlitre_per_second
        const double var_sodium_current__g_Na_Periphery = 1.204e-06; // microlitre_per_second
        const double var_L_type_Ca_channel__E_Ca_L = 46.399999999999999; // millivolt
        const double var_L_type_Ca_channel__g_Ca_L_Centre = 0.0057938; // microS
        const double var_L_type_Ca_channel__g_Ca_L_Periphery = 0.065886479999999997; // microS
        const double var_L_type_Ca_channel__d_L = var_chaste_interface__L_type_Ca_channel_d_gate__d_L; // dimensionless
        const double var_L_type_Ca_channel__f_L = var_chaste_interface__L_type_Ca_channel_f_gate__f_L; // dimensionless
        const double var_T_type_Ca_channel__E_Ca_T = 45.0; // millivolt
        const double var_T_type_Ca_channel__g_Ca_T_Centre = 0.0042780600000000002; // microS
        const double var_T_type_Ca_channel__g_Ca_T_Periphery = 0.0138823; // microS
        const double var_T_type_Ca_channel__d_T = var_chaste_interface__T_type_Ca_channel_d_gate__d_T; // dimensionless
        const double var_T_type_Ca_channel__f_T = var_chaste_interface__T_type_Ca_channel_f_gate__f_T; // dimensionless
        const double var_four_AP_sensitive_currents__g_to_Centre = 0.0049049999999999996; // microS
        const double var_four_AP_sensitive_currents__g_to_Periphery = 0.036495; // microS
        const double var_four_AP_sensitive_currents__q = var_chaste_interface__four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_ionic_concentrations__K_o = 5.4000000000000004; // millimolar
        const double var_ionic_concentrations__K_i = 140.0; // millimolar
        const double var_four_AP_sensitive_currents__r = var_chaste_interface__four_AP_sensitive_currents_r_gate__r; // dimensionless
        const double var_four_AP_sensitive_currents__g_sus_Centre = 6.6455040000000003e-05; // microS
        const double var_four_AP_sensitive_currents__g_sus_Periphery = 0.01138376; // microS
        const double var_rapid_delayed_rectifying_potassium_current__P_as = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_as_gate__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_af = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_af_gate__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__P_i = var_chaste_interface__rapid_delayed_rectifying_potassium_current_P_i_gate__P_i; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery = 0.016; // microS
        const double var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre = 0.00079704000000000005; // microS
        const double var_slow_delayed_rectifying_potassium_current__xs = var_chaste_interface__slow_delayed_rectifying_potassium_current_xs_gate__xs; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Centre = 0.00034450000000000003; // microS
        const double var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery = 0.0104; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Periphery = 0.006875; // microS
        const double var_hyperpolarisation_activated_current__g_f_Na_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__y = var_chaste_interface__hyperpolarisation_activated_current_y_gate__y; // dimensionless
        const double var_hyperpolarisation_activated_current__g_f_K_Centre = 0.0005465; // microS
        const double var_hyperpolarisation_activated_current__g_f_K_Periphery = 0.006875; // microS
        const double var_sodium_background_current__g_b_Na_Periphery = 0.00018880000000000001; // microS
        const double var_sodium_background_current__g_b_Na_Centre = 5.8181799999999999e-05; // microS
        const double var_ionic_concentrations__Ca_o = 2.0; // millimolar
        const double var_calcium_background_current__g_b_Ca_Periphery = 4.2951999999999998e-05; // microS
        const double var_calcium_background_current__g_b_Ca_Centre = 1.3236e-05; // microS
        const double var_potassium_background_current__g_b_K_Centre = 2.5236359999999998e-05; // microS
        const double var_potassium_background_current__g_b_K_Periphery = 8.1891999999999995e-05; // microS
        const double var_sodium_calcium_exchanger__gamma_NaCa = 0.5; // dimensionless
        const double var_sodium_calcium_exchanger__d_NaCa = 0.0001; // dimensionless
        const double var_sodium_calcium_exchanger__k_NaCa_Centre = 2.7228999999999998e-06; // nanoA
        const double var_sodium_calcium_exchanger__k_NaCa_Periphery = 8.8358400000000004e-06; // nanoA
        const double var_sodium_potassium_pump__K_m_Na = 5.6399999999999997; // millimolar
        const double var_sodium_potassium_pump__K_m_K = 0.621; // millimolar
        const double var_sodium_potassium_pump__i_p_max_Centre = 0.047825449999999999; // nanoA
        const double var_sodium_potassium_pump__i_p_max_Periphery = 0.15519359999999999; // nanoA
        const double var_sodium_current_m_gate__m = var_sodium_current__m; // dimensionless
        const double var_L_type_Ca_channel_d_gate__d_L = var_L_type_Ca_channel__d_L; // dimensionless
        const double var_L_type_Ca_channel_f_gate__f_L = var_L_type_Ca_channel__f_L; // dimensionless
        const double var_T_type_Ca_channel_d_gate__d_T = var_T_type_Ca_channel__d_T; // dimensionless
        const double var_T_type_Ca_channel_f_gate__f_T = var_T_type_Ca_channel__f_T; // dimensionless
        const double var_four_AP_sensitive_currents_q_gate__q = var_four_AP_sensitive_currents__q; // dimensionless
        const double var_four_AP_sensitive_currents_r_gate__r = var_four_AP_sensitive_currents__r; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af = var_rapid_delayed_rectifying_potassium_current__P_af; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as = var_rapid_delayed_rectifying_potassium_current__P_as; // dimensionless
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i = 0.002; // second
        const double var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i = var_rapid_delayed_rectifying_potassium_current__P_i; // dimensionless
        const double var_slow_delayed_rectifying_potassium_current_xs_gate__xs = var_slow_delayed_rectifying_potassium_current__xs; // dimensionless
        const double var_hyperpolarisation_activated_current_y_gate__y = var_hyperpolarisation_activated_current__y; // dimensionless
        const double var_ionic_concentrations__Ca_i = NV_Ith_S(mParameters, 0); // millimolar
        const double var_t1 = var_membrane__FCellConstant * var_membrane__dCell; // dimensionless
        const double var_t4 = exp(((-10.169491519999999) * var_membrane__dCell) + 6.9491525410000001); // dimensionless
        const double var_t7 = 1.0 / (1.0 + (0.77449999999999997 * var_t4)); // dimensionless
        const double var_t12 = 1.0 / (var_membrane__CmCentre + ((var_t1 * var_t7) * (var_membrane__CmPeriphery - var_membrane__CmCentre))); // dimensionless
        const double var_t16 = var_sodium_current__g_Na_Centre + ((var_t1 * var_t7) * (var_sodium_current__g_Na_Periphery - var_sodium_current__g_Na_Centre)); // dimensionless
        const double var_t17 = pow(var_sodium_current_m_gate__m, 2.0); // dimensionless
        const double var_t18 = var_t17 * var_sodium_current_m_gate__m; // dimensionless
        const double var_t19 = var_t16 * var_t18; // dimensionless
        const double var_t22 = exp(((-0.063060000000000005) * var_membrane__V) - 2.1692640000000001); // dimensionless
        const double var_t25 = exp(((-0.22509999999999999) * var_membrane__V) - 14.33887); // dimensionless
        const double var_t27 = 1.0 + (1.6619999999999999 * var_t25); // dimensionless
        const double var_t29 = var_t22 / var_t27; // dimensionless
        const double var_t31 = pow(var_t27, 2.0); // dimensionless
        const double var_t36 = (0.0060020508000000004 * var_t29) - (((0.035608379920000002 * var_t22) / var_t31) * var_t25); // dimensionless
        const double var_t41 = pow(var_membrane__F, 2.0); // dimensionless
        const double var_t44 = 1.0 / var_membrane__R; // dimensionless
        const double var_t45 = 1.0 / var_membrane__T; // dimensionless
        const double var_t46 = var_t44 * var_t45; // dimensionless
        const double var_t47 = var_membrane__R * var_membrane__T; // dimensionless
        const double var_t48 = 1.0 / var_membrane__F; // dimensionless
        const double var_t51 = log(var_ionic_concentrations__Na_o / var_ionic_concentrations__Na_i); // dimensionless
        const double var_t54 = var_membrane__V - ((var_t47 * var_t48) * var_t51); // dimensionless
        const double var_t57 = exp((var_t54 * var_membrane__F) * var_t46); // dimensionless
        const double var_t58 = var_t57 - 1.0; // dimensionless
        const double var_t61 = exp((var_membrane__V * var_membrane__F) * var_t46); // dimensionless
        const double var_t62 = var_t61 - 1.0; // dimensionless
        const double var_t63 = 1.0 / var_t62; // dimensionless
        const double var_t65 = (var_t58 * var_t63) * var_membrane__V; // dimensionless
        const double var_t68 = 0.095180000000000001 * var_t29; // dimensionless
        const double var_t69 = 0.91307000000000005 - var_t68; // dimensionless
        const double var_t71 = var_t68 + 0.086929999999999993; // dimensionless
        const double var_t73 = (var_t69 * var_sodium_current_h_gate__h1) + (var_t71 * var_sodium_current_h_gate__h2); // dimensionless
        const double var_t74 = var_t73 * var_ionic_concentrations__Na_o; // dimensionless
        const double var_t77 = ((var_t19 * var_t74) * var_t41) * var_membrane__F; // dimensionless
        const double var_t78 = pow(var_membrane__R, 2.0); // dimensionless
        const double var_t80 = pow(var_membrane__T, 2.0); // dimensionless
        const double var_t82 = (1.0 / var_t78) / var_t80; // dimensionless
        const double var_t88 = pow(var_t62, 2.0); // dimensionless
        const double var_t95 = var_t41 * var_t44; // dimensionless
        const double var_t103 = var_L_type_Ca_channel__g_Ca_L_Centre + ((var_t1 * var_t7) * (var_L_type_Ca_channel__g_Ca_L_Periphery - var_L_type_Ca_channel__g_Ca_L_Centre)); // dimensionless
        const double var_t104 = (1.0 / 6.0) * var_membrane__V; // dimensionless
        const double var_t106 = exp((-var_t104) - 2.3500000000000001); // dimensionless
        const double var_t107 = 1.0 + var_t106; // dimensionless
        const double var_t108 = pow(var_t107, 2.0); // dimensionless
        const double var_t111 = var_membrane__V - var_L_type_Ca_channel__E_Ca_L; // dimensionless
        const double var_t123 = var_T_type_Ca_channel__g_Ca_T_Centre + ((var_t1 * var_t7) * (var_T_type_Ca_channel__g_Ca_T_Periphery - var_T_type_Ca_channel__g_Ca_T_Centre)); // dimensionless
        const double var_t129 = var_four_AP_sensitive_currents__g_to_Centre + ((var_t1 * var_t7) * (var_four_AP_sensitive_currents__g_to_Periphery - var_four_AP_sensitive_currents__g_to_Centre)); // dimensionless
        const double var_t130 = var_t129 * var_four_AP_sensitive_currents_q_gate__q; // dimensionless
        const double var_t135 = var_four_AP_sensitive_currents__g_sus_Centre + ((var_t1 * var_t7) * (var_four_AP_sensitive_currents__g_sus_Periphery - var_four_AP_sensitive_currents__g_sus_Centre)); // dimensionless
        const double var_t140 = var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre + ((var_t1 * var_t7) * (var_rapid_delayed_rectifying_potassium_current__g_K_r_Periphery - var_rapid_delayed_rectifying_potassium_current__g_K_r_Centre)); // dimensionless
        const double var_t143 = (0.59999999999999998 * var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) + (0.40000000000000002 * var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as); // dimensionless
        const double var_t150 = var_slow_delayed_rectifying_potassium_current__g_K_s_Centre + ((var_t1 * var_t7) * (var_slow_delayed_rectifying_potassium_current__g_K_s_Periphery - var_slow_delayed_rectifying_potassium_current__g_K_s_Centre)); // dimensionless
        const double var_t151 = pow(var_slow_delayed_rectifying_potassium_current_xs_gate__xs, 2.0); // dimensionless
        const double var_t156 = var_hyperpolarisation_activated_current__g_f_Na_Centre + ((var_t1 * var_t7) * (var_hyperpolarisation_activated_current__g_f_Na_Periphery - var_hyperpolarisation_activated_current__g_f_Na_Centre)); // dimensionless
        const double var_t161 = var_hyperpolarisation_activated_current__g_f_K_Centre + ((var_t1 * var_t7) * (var_hyperpolarisation_activated_current__g_f_K_Periphery - var_hyperpolarisation_activated_current__g_f_K_Centre)); // dimensionless
        const double var_t176 = pow(var_ionic_concentrations__Na_i, 2.0); // dimensionless
        const double var_t177 = var_t176 * var_ionic_concentrations__Na_i; // dimensionless
        const double var_t178 = var_ionic_concentrations__Ca_o * var_t177; // dimensionless
        const double var_t181 = exp((0.037429999999999998 * var_membrane__V) * var_sodium_calcium_exchanger__gamma_NaCa); // dimensionless
        const double var_t185 = pow(var_ionic_concentrations__Na_o, 2.0); // dimensionless
        const double var_t187 = (var_ionic_concentrations__Ca_i * var_t185) * var_ionic_concentrations__Na_o; // dimensionless
        const double var_t193 = exp((0.037429999999999998 * var_membrane__V) * (var_sodium_calcium_exchanger__gamma_NaCa - 1.0)); // dimensionless
        const double var_t208 = var_sodium_potassium_pump__K_m_Na + var_ionic_concentrations__Na_i; // dimensionless
        const double var_t209 = pow(var_t208, 2.0); // dimensionless
        const double var_t213 = pow(var_ionic_concentrations__K_o, 2.0); // dimensionless
        const double var_t215 = pow(var_sodium_potassium_pump__K_m_K + var_ionic_concentrations__K_o, 2.0); // dimensionless
        const double var_t220 = exp((((-1.0) / 40.0) * var_membrane__V) - (3.0 / 2.0)); // dimensionless
        const double var_t222 = pow(1.5 + var_t220, 2.0); // dimensionless
        const double var_t228 = ((((((((((var_t150 * var_t151) + (var_t156 * var_hyperpolarisation_activated_current_y_gate__y)) + (var_t161 * var_hyperpolarisation_activated_current_y_gate__y)) + var_sodium_background_current__g_b_Na_Centre) + ((var_t1 * var_t7) * (var_sodium_background_current__g_b_Na_Periphery - var_sodium_background_current__g_b_Na_Centre))) + var_calcium_background_current__g_b_Ca_Centre) + ((var_t1 * var_t7) * (var_calcium_background_current__g_b_Ca_Periphery - var_calcium_background_current__g_b_Ca_Centre))) + var_potassium_background_current__g_b_K_Centre) + ((var_t1 * var_t7) * (var_potassium_background_current__g_b_K_Periphery - var_potassium_background_current__g_b_K_Centre))) + (((var_sodium_calcium_exchanger__k_NaCa_Centre + ((var_t1 * var_t7) * (var_sodium_calcium_exchanger__k_NaCa_Periphery - var_sodium_calcium_exchanger__k_NaCa_Centre))) * ((((0.037429999999999998 * var_t178) * var_sodium_calcium_exchanger__gamma_NaCa) * var_t181) - ((var_t187 * ((0.037429999999999998 * var_sodium_calcium_exchanger__gamma_NaCa) - 0.037429999999999998)) * var_t193))) / (1.0 + (var_sodium_calcium_exchanger__d_NaCa * (var_t187 + var_t178))))) + ((((((((0.040000000000000001 * (var_sodium_potassium_pump__i_p_max_Centre + ((var_t1 * var_t7) * (var_sodium_potassium_pump__i_p_max_Periphery - var_sodium_potassium_pump__i_p_max_Centre)))) * var_t177) / var_t209) / var_t208) * var_t213) / var_t215) / var_t222) * var_t220); // dimensionless
        const double var_t231 = var_t12 * var_t16; // dimensionless
        const double var_t236 = (var_t95 * var_t45) * var_t65; // dimensionless
        const double var_t247 = var_t12 * var_t103; // dimensionless
        const double var_t252 = var_t12 * var_t123; // dimensionless
        const double var_t253 = var_membrane__V - var_T_type_Ca_channel__E_Ca_T; // dimensionless
        const double var_t261 = log(var_ionic_concentrations__K_o / var_ionic_concentrations__K_i); // dimensionless
        const double var_t264 = var_membrane__V - ((var_t47 * var_t48) * var_t261); // dimensionless
        const double var_t271 = var_t12 * var_t140; // dimensionless
        const double var_t273 = (var_t271 * var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i) * var_t264; // dimensionless
        const double var_t285 = log((var_ionic_concentrations__K_o + (0.029999999999999999 * var_ionic_concentrations__Na_o)) / (var_ionic_concentrations__K_i + (0.029999999999999999 * var_ionic_concentrations__Na_i))); // dimensionless
        const double var_t298 = exp(((-0.18315018320000001) * var_membrane__V) - 5.5531135550000004); // dimensionless
        const double var_t299 = 1.0 + var_t298; // dimensionless
        const double var_t301 = pow(1.0 / var_t299, 1.0 / 3.0); // dimensionless
        const double var_t302 = pow(var_t301, 2.0); // dimensionless
        const double var_t304 = pow(var_t299, 2.0); // dimensionless
        const double var_t309 = exp(((-0.33566000000000001) * var_membrane__V) - 19.034003089999999); // dimensionless
        const double var_t313 = exp((0.082299999999999998 * var_membrane__V) + 5.3505781299999997); // dimensionless
        const double var_t315 = (0.83221659999999997 * var_t309) + (0.62739999999999996 * var_t313); // dimensionless
        const double var_t318 = (0.00062469999999999995 / var_t315) + 4.5689999999999998e-05; // dimensionless
        const double var_t319 = 1.0 / var_t318; // dimensionless
        const double var_t324 = pow(var_t318, 2.0); // dimensionless
        const double var_t327 = pow(var_t315, 2.0); // dimensionless
        const double var_t338 = exp((0.15625 * var_membrane__V) + 10.328125); // dimensionless
        const double var_t339 = 1.0 + var_t338; // dimensionless
        const double var_t340 = pow(var_t339, 2.0); // dimensionless
        const double var_t342 = (1.0 / var_t340) * var_t338; // dimensionless
        const double var_t345 = exp(((-0.28149999999999997) * var_membrane__V) - 4.816465); // dimensionless
        const double var_t348 = exp(((-0.34260000000000002) * var_membrane__V) - 12.936576000000001); // dimensionless
        const double var_t350 = 1.0 + (0.0037320000000000001 * var_t348); // dimensionless
        const double var_t352 = var_t345 / var_t350; // dimensionless
        const double var_t354 = (3.7170000000000002e-06 * var_t352) + 0.00059770000000000005; // dimensionless
        const double var_t355 = 1.0 / var_t354; // dimensionless
        const double var_t358 = 1.0 / var_t339; // dimensionless
        const double var_t360 = pow(var_t354, 2.0); // dimensionless
        const double var_t364 = pow(var_t350, 2.0); // dimensionless
        const double var_t374 = exp(((-0.62190000000000001) * var_membrane__V) - 11.69172); // dimensionless
        const double var_t377 = exp(((-0.66830000000000001) * var_membrane__V) - 22.768981); // dimensionless
        const double var_t379 = 1.0 + (7.1890000000000005e-05 * var_t377); // dimensionless
        const double var_t381 = var_t374 / var_t379; // dimensionless
        const double var_t383 = (3.1860000000000002e-08 * var_t381) + 0.0035560000000000001; // dimensionless
        const double var_t384 = 1.0 / var_t383; // dimensionless
        const double var_t388 = pow(var_t383, 2.0); // dimensionless
        const double var_t392 = pow(var_t379, 2.0); // dimensionless
        const double var_t400 = var_t1 * var_t7; // dimensionless
        const double var_t403 = exp(((-var_t104) - 3.7166666670000001) - (0.1333333333 * var_t400)); // dimensionless
        const double var_t404 = 1.0 + var_t403; // dimensionless
        const double var_t405 = pow(var_t404, 2.0); // dimensionless
        const double var_t408 = var_membrane__V + 35.0; // dimensionless
        const double var_t411 = exp(((-0.40000000000000002) * var_membrane__V) - 14.0); // dimensionless
        const double var_t412 = var_t411 - 1.0; // dimensionless
        const double var_t413 = 1.0 / var_t412; // dimensionless
        const double var_t414 = var_t408 * var_t413; // dimensionless
        const double var_t417 = exp((-0.20799999999999999) * var_membrane__V); // dimensionless
        const double var_t418 = var_t417 - 1.0; // dimensionless
        const double var_t419 = 1.0 / var_t418; // dimensionless
        const double var_t420 = var_membrane__V * var_t419; // dimensionless
        const double var_t422 = var_membrane__V - 5.0; // dimensionless
        const double var_t425 = exp((0.40000000000000002 * var_membrane__V) - 2.0); // dimensionless
        const double var_t426 = var_t425 - 1.0; // dimensionless
        const double var_t427 = 1.0 / var_t426; // dimensionless
        const double var_t428 = var_t422 * var_t427; // dimensionless
        const double var_t436 = pow(var_t412, 2.0); // dimensionless
        const double var_t442 = pow(var_t418, 2.0); // dimensionless
        const double var_t448 = pow(var_t426, 2.0); // dimensionless
        const double var_t463 = exp(((1.0 / 5.0) * var_membrane__V) + 9.0); // dimensionless
        const double var_t464 = 1.0 + var_t463; // dimensionless
        const double var_t465 = pow(var_t464, 2.0); // dimensionless
        const double var_t470 = 1.0 / (1.2 - (0.20000000000000001 * var_t400)); // dimensionless
        const double var_t471 = var_membrane__V + 28.0; // dimensionless
        const double var_t473 = ((1.0 / 4.0) * var_membrane__V) + 7.0; // dimensionless
        const double var_t474 = exp(var_t473); // dimensionless
        const double var_t475 = var_t474 - 1.0; // dimensionless
        const double var_t476 = 1.0 / var_t475; // dimensionless
        const double var_t479 = exp(-var_t473); // dimensionless
        const double var_t480 = 1.0 + var_t479; // dimensionless
        const double var_t484 = var_t470 * (((3.75 * var_t471) * var_t476) + (30.0 / var_t480)); // dimensionless
        const double var_t491 = pow(var_t475, 2.0); // dimensionless
        const double var_t496 = pow(var_t480, 2.0); // dimensionless
        const double var_t505 = exp(((-0.14705882349999999) * var_membrane__V) - 5.4411764700000003); // dimensionless
        const double var_t506 = 1.0 + var_t505; // dimensionless
        const double var_t507 = pow(var_t506, 2.0); // dimensionless
        const double var_t511 = ((1.0 / 30.0) * var_membrane__V) + 0.87666666670000004; // dimensionless
        const double var_t512 = exp(var_t511); // dimensionless
        const double var_t513 = exp(-var_t511); // dimensionless
        const double var_t514 = var_t512 + var_t513; // dimensionless
        const double var_t522 = (1.0 / 9.0) * var_membrane__V; // dimensionless
        const double var_t524 = exp(var_t522 + (71.0 / 9.0)); // dimensionless
        const double var_t525 = 1.0 + var_t524; // dimensionless
        const double var_t526 = pow(var_t525, 2.0); // dimensionless
        const double var_t532 = exp((((-0.012004801920000001) * var_membrane__V) - 0.85234093629999996) - (0.0084033613440000002 * var_t400)); // dimensionless
        const double var_t536 = exp((0.065019505850000006 * var_membrane__V) + 4.6163849150000003); // dimensionless
        const double var_t538 = (15.300000000000001 * var_t532) + (15.0 * var_t536); // dimensionless
        const double var_t550 = exp((0.076335877859999998 * var_membrane__V) + 4.5320610690000001); // dimensionless
        const double var_t551 = 1.0 + var_t550; // dimensionless
        const double var_t552 = pow(var_t551, 2.0); // dimensionless
        const double var_t558 = exp((((-0.081610000000000002) * var_membrane__V) - 3.1827899999999998) - (0.81610000000000005 * var_t400)); // dimensionless
        const double var_t561 = 0.27189999999999998 - (0.1719 * var_t400); // dimensionless
        const double var_t565 = exp(var_t561 * ((var_membrane__V + 40.93) + (10.0 * var_t400))); // dimensionless
        const double var_t567 = (0.56859999999999999 * var_t558) + (0.71740000000000004 * var_t565); // dimensionless
        const double var_t570 = 0.01010333333 + (0.065166666659999997 / var_t567); // dimensionless
        const double var_t571 = 1.0 / var_t570; // dimensionless
        const double var_t576 = pow(var_t570, 2.0); // dimensionless
        const double var_t579 = pow(var_t567, 2.0); // dimensionless
        const double var_t591 = exp(((-0.05076142132) * var_membrane__V) + 0.554822335); // dimensionless
        const double var_t592 = 1.0 + var_t591; // dimensionless
        const double var_t593 = pow(var_t592, 2.0); // dimensionless
        const double var_t598 = exp((0.090120000000000006 * var_membrane__V) + 2.7585731999999998); // dimensionless
        const double var_t602 = exp(((-0.11899999999999999) * var_membrane__V) - 2.8369599999999999); // dimensionless
        const double var_t604 = (1.0369999999999999 * var_t598) + (0.36899999999999999 * var_t602); // dimensionless
        const double var_t607 = 0.0029775000000000001 + (0.019595000000000001 / var_t604); // dimensionless
        const double var_t608 = 1.0 / var_t607; // dimensionless
        const double var_t613 = pow(var_t607, 2.0); // dimensionless
        const double var_t616 = pow(var_t604, 2.0); // dimensionless
        const double var_t627 = exp(((-0.094339622639999995) * var_membrane__V) - 1.3396226410000001); // dimensionless
        const double var_t628 = 1.0 + var_t627; // dimensionless
        const double var_t629 = pow(var_t628, 2.0); // dimensionless
        const double var_t631 = (1.0 / var_t629) * var_t627; // dimensionless
        const double var_t634 = exp((0.062893081759999997 * var_membrane__V) - 0.56603773580000005); // dimensionless
        const double var_t638 = exp(((-0.044444444440000001) * var_membrane__V) + 0.40000000000000002); // dimensionless
        const double var_t640 = (37.200000000000003 * var_t634) + (0.95999999999999996 * var_t638); // dimensionless
        const double var_t643 = 1.0 / var_t628; // dimensionless
        const double var_t652 = exp(((1.0 / 17.0) * var_membrane__V) - (9.0 / 17.0)); // dimensionless
        const double var_t656 = exp(((-0.046296296299999998) * var_membrane__V) + 0.41666666670000002); // dimensionless
        const double var_t658 = (4.2000000000000002 * var_t652) + (0.14999999999999999 * var_t656); // dimensionless
        const double var_t669 = exp((0.099009900989999997 * var_membrane__V) + 1.8415841580000001); // dimensionless
        const double var_t671 = pow(1.0 + var_t669, 2.0); // dimensionless
        const double var_t674 = 1.0 / var_rapid_delayed_rectifying_potassium_current_P_i_gate__tau_P_i; // dimensionless
        const double var_t678 = exp((-var_t522) + (40.0 / 9.0)); // dimensionless
        const double var_t679 = 1.0 + var_t678; // dimensionless
        const double var_t680 = pow(var_t679, 2.0); // dimensionless
        const double var_t687 = exp(((-1.0) / 45.0) * var_membrane__V); // dimensionless
        const double var_t696 = exp(((-0.037551633500000001) * var_membrane__V) - 2.9631993990000001); // dimensionless
        const double var_t702 = exp((0.047058823530000002 * var_membrane__V) + 3.5355294119999998); // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t12) * (((((((((((((((var_t19 * ((var_t36 * var_sodium_current_h_gate__h1) - (var_t36 * var_sodium_current_h_gate__h2))) * var_ionic_concentrations__Na_o) * var_t41) * var_t46) * var_t65) + ((((var_t77 * var_t82) * var_t57) * var_t63) * var_membrane__V)) - (((((var_t77 * var_t82) * var_t58) / var_t88) * var_membrane__V) * var_t61)) + (((((var_t19 * var_t74) * var_t95) * var_t45) * var_t58) * var_t63)) + ((((0.001 * var_t103) / var_t108) * var_t106) * var_t111)) + (var_t103 * ((var_L_type_Ca_channel_f_gate__f_L * var_L_type_Ca_channel_d_gate__d_L) + (0.0060000000000000001 / var_t107)))) + ((var_t123 * var_T_type_Ca_channel_d_gate__d_T) * var_T_type_Ca_channel_f_gate__f_T)) + (var_t130 * var_four_AP_sensitive_currents_r_gate__r)) + (var_t135 * var_four_AP_sensitive_currents_r_gate__r)) + ((var_t140 * var_t143) * var_rapid_delayed_rectifying_potassium_current_P_i_gate__P_i)) + var_t228)));
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * (((((0.061050061070000002 / var_t302) / var_t304) * var_t298) * var_t319) + ((((0.00062469999999999995 * (var_t301 - var_sodium_current_m_gate__m)) / var_t324) / var_t327) * (((-0.27934182400000002) * var_t309) + (0.051635019999999997 * var_t313))));
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((((-0.15625) * var_t342) * var_t355) - (((var_t358 - var_sodium_current_h_gate__h1) / var_t360) * (((-1.0463355000000001e-06) * var_t352) + (((4.7524937540000001e-09 * var_t345) / var_t364) * var_t348))));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * ((((-0.15625) * var_t342) * var_t384) - (((var_t358 - var_sodium_current_h_gate__h2) / var_t388) * (((-1.9813733999999999e-08) * var_t381) + (((1.5306846119999999e-12 * var_t374) / var_t392) * var_t377))));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * (((((1.0 / 12.0) / var_t405) * var_t403) * ((((-28.390000000000001) * var_t414) - (84.900000000000006 * var_t420)) + (11.43 * var_t428))) + (((1.0 / 2.0) * ((1.0 / var_t404) - var_L_type_Ca_channel_d_gate__d_L)) * (((((((-28.390000000000001) * var_t413) - (((11.356 * var_t408) / var_t436) * var_t411)) - (84.900000000000006 * var_t419)) - (((17.659199999999998 * var_membrane__V) / var_t442) * var_t417)) + (11.43 * var_t427)) - (((4.5720000000000001 * var_t422) / var_t448) * var_t425))));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 5.0) / var_t465) * var_t463) * var_t484) + ((((1.0 / var_t464) - var_L_type_Ca_channel_f_gate__f_L) * var_t470) * (((3.75 * var_t476) - (((0.9375 * var_t471) / var_t491) * var_t474)) + (((15.0 / 2.0) / var_t496) * var_t479))));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * ((((157.05882349999999 / var_t507) * var_t505) * var_t514) + (((178.0 / 5.0) * ((1.0 / var_t506) - var_T_type_Ca_channel_d_gate__d_T)) * (var_t512 - var_t513)));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 9.0) / var_t526) * var_t524) * var_t538) + (((1.0 / var_t525) - var_T_type_Ca_channel_f_gate__f_T) * (((-0.18367346940000001) * var_t532) + (0.97529258780000005 * var_t536))));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((-0.076335877859999998) / var_t552) * var_t550) * var_t571) + ((((0.065166666659999997 * ((1.0 / var_t551) - var_four_AP_sensitive_currents_q_gate__q)) / var_t576) / var_t579) * (((-0.046403446000000001) * var_t558) + ((0.71740000000000004 * var_t561) * var_t565))));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((0.05076142132 / var_t593) * var_t591) * var_t608) + ((((0.019595000000000001 * ((1.0 / var_t592) - var_four_AP_sensitive_currents_r_gate__r)) / var_t613) / var_t616) * ((0.09345444 * var_t598) - (0.043910999999999999 * var_t602))));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * (((0.094339622639999995 * var_t631) * var_t640) + ((var_t643 - var_rapid_delayed_rectifying_potassium_current_P_af_gate__P_af) * ((2.3396226410000001 * var_t634) - (0.042666666659999998 * var_t638))));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * (((0.094339622639999995 * var_t631) * var_t658) + ((var_t643 - var_rapid_delayed_rectifying_potassium_current_P_as_gate__P_as) * ((0.2470588235 * var_t652) - (0.0069444444449999997 * var_t656))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * ((((-0.099009900989999997) / var_t671) * var_t669) * var_t674);
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * (((((14.0 / 9.0) / var_t680) * (1.0 - var_slow_delayed_rectifying_potassium_current_xs_gate__xs)) * var_t678) + (((1.0 / 45.0) * var_t687) * var_slow_delayed_rectifying_potassium_current_xs_gate__xs));
        IJth(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * ((((-0.037551633500000001) * var_t696) * (1.0 - var_hyperpolarisation_activated_current_y_gate__y)) - ((0.047058823530000002 * var_t702) * var_hyperpolarisation_activated_current_y_gate__y));
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-3.0) * var_t231) * var_t17) * var_t73) * var_ionic_concentrations__Na_o) * var_t236));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (-var_t319);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t231) * var_t18) * var_t69) * var_ionic_concentrations__Na_o) * var_t236));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (-var_t355);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-var_t231) * var_t18) * var_t71) * var_ionic_concentrations__Na_o) * var_t236));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (-var_t384);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t247) * var_L_type_Ca_channel_f_gate__f_L) * var_t111));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (((14.195 * var_t414) + (42.450000000000003 * var_t420)) - (5.7149999999999999 * var_t428));
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t247) * var_L_type_Ca_channel_d_gate__d_L) * var_t111));
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (-var_t484);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t252) * var_T_type_Ca_channel_f_gate__f_T) * var_t253));
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * ((-1068.0) * var_t514);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t252) * var_T_type_Ca_channel_d_gate__d_T) * var_t253));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (-var_t538);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t12) * var_t129) * var_four_AP_sensitive_currents_r_gate__r) * var_t264));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (-var_t571);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t12) * ((var_t130 * var_t264) + (var_t135 * var_t264))));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (-var_t608);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.59999999999999998) * var_t273));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (-var_t640);
        IJth(rJacobian, 0, 11) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.40000000000000002) * var_t273));
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (-var_t658);
        IJth(rJacobian, 0, 12) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t271) * var_t143) * var_t264));
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (-var_t674);
        IJth(rJacobian, 0, 13) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-2.0) * var_t12) * var_t150) * var_slow_delayed_rectifying_potassium_current_xs_gate__xs) * (var_membrane__V - ((var_t47 * var_t48) * var_t285))));
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (((-14.0) / var_t679) - var_t687);
        IJth(rJacobian, 0, 14) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t12) * ((var_t156 * var_t54) + (var_t161 * var_t264))));
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ((-var_t696) - var_t702);
    }
    
template<>
void OdeSystemInformation<Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "zhang_SAN_model_2000_0D_capable";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-39.013558536);

    // rY[1]:
    this->mVariableNames.push_back("sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.092361701692);

    // rY[2]:
    this->mVariableNames.push_back("sodium_current_h_gate__h1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.015905380261);

    // rY[3]:
    this->mVariableNames.push_back("sodium_current_h_gate__h2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01445216109);

    // rY[4]:
    this->mVariableNames.push_back("L_type_Ca_channel_d_gate__d_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.04804900895);

    // rY[5]:
    this->mVariableNames.push_back("L_type_Ca_channel_f_gate__f_L");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.48779845203);

    // rY[6]:
    this->mVariableNames.push_back("T_type_Ca_channel_d_gate__d_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.42074047435);

    // rY[7]:
    this->mVariableNames.push_back("T_type_Ca_channel_f_gate__f_T");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.038968420558);

    // rY[8]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.29760539675);

    // rY[9]:
    this->mVariableNames.push_back("four_AP_sensitive_currents_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.064402950262);

    // rY[10]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_af_gate__P_af");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.13034201158);

    // rY[11]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_as_gate__P_as");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.46960956028);

    // rY[12]:
    this->mVariableNames.push_back("rapid_delayed_rectifying_potassium_current_P_i_gate__P_i");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.87993375273);

    // rY[13]:
    this->mVariableNames.push_back("slow_delayed_rectifying_potassium_current_xs_gate__xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.082293827208);

    // rY[14]:
    this->mVariableNames.push_back("hyperpolarisation_activated_current_y_gate__y");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.03889291759);

    // mParameters[0]:
    this->mParameterNames.push_back("cytosolic_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamiczhang_SAN_model_2000_0D_capableFromCellMLCvode)

#endif // CHASTE_CVODE
