#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: priebe_beuckelmann_model_1998
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:14:07 2020
//! 
//! <autogenerated>

#include "priebe_beuckelmann_model_1998.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_amplitude =  -15.0; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude_converter = var_cell__stim_amplitude; // uA_per_uF
        const double var_chaste_interface__cell__stim_amplitude = var_chaste_interface__cell__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__stim_amplitude),
                var_chaste_interface__cell__stim_duration,
                var_chaste_interface__cell__stim_period,
                var_chaste_interface__cell__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                22,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::~Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode()
    {
    }
    
    double Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Ionic_concentrations__Nai = NV_Ith_S(rY, 18);
        // Units: mM; Initial value: 10
        double var_chaste_interface__Ionic_concentrations__Ki = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 140
        
        const double var_cell__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_cell__T = 310.14999999999998; // kelvin
        const double var_cell__F = 96.486699999999999; // coulomb_per_millimole
        const double var_cell__FonRT = var_cell__F / (var_cell__R * var_cell__T); // per_mV
        const double var_cell__failing = 0.0; // dimensionless
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INa__FonRT = var_cell__FonRT; // per_mV
        const double var_Ionic_concentrations__Nao = 138.0; // mM
        const double var_INa__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INa__E_Na = log(var_INa__Nao / var_INa__Nai) / var_INa__FonRT; // mV
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__i_Na = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__V - var_INa__E_Na); // uA_per_uF
        const double var_cell__i_Na = var_INa__i_Na; // uA_per_uF
        const double var_ICa__f = var_chaste_interface__ICa_f_gate__f; // dimensionless
        const double var_ICa_f_Ca_gate__Km_Ca = 0.00059999999999999995; // mM
        const double var_ICa__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_ICa_f_Ca_gate__Cai = var_ICa__Cai; // mM
        const double var_ICa_f_Ca_gate__f_Ca = var_ICa_f_Ca_gate__Km_Ca / (var_ICa_f_Ca_gate__Km_Ca + var_ICa_f_Ca_gate__Cai); // dimensionless
        const double var_ICa__f_Ca = var_ICa_f_Ca_gate__f_Ca; // dimensionless
        const double var_ICa__V = var_chaste_interface__cell__V; // mV
        const double var_ICa__d = var_chaste_interface__ICa_d_gate__d; // dimensionless
        const double var_ICa__FonRT = var_cell__FonRT; // per_mV
        const double var_Ionic_concentrations__Cao = 2.0; // mM
        const double var_ICa__Cao = var_Ionic_concentrations__Cao; // mM
        const double var_ICa__E_Ca = log(var_ICa__Cao / var_ICa__Cai) / (2.0 * var_ICa__FonRT); // mV
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_ICa__i_Ca = var_ICa__g_Ca_max * var_ICa__d * var_ICa__f * var_ICa__f_Ca * (var_ICa__V - var_ICa__E_Ca); // uA_per_uF
        const double var_cell__i_Ca = var_ICa__i_Ca; // uA_per_uF
        const double var_Ito__r = var_chaste_interface__Ito_r_gate__r; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__t = var_chaste_interface__Ito_t_gate__t; // dimensionless
        const double var_Ito__FonRT = var_cell__FonRT; // per_mV
        const double var_Ito__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_Ito__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_Ito__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_Ionic_concentrations__Ko = 4.0; // mM
        const double var_Ito__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_Ito__E_to = log(((0.042999999999999997 * var_Ito__Nao) + var_Ito__Ko) / ((0.042999999999999997 * var_Ito__Nai) + var_Ito__Ki)) / var_Ito__FonRT; // mV
        const double var_Ito__failing = var_cell__failing; // dimensionless
        const double var_Ito__g_to_max = (var_Ito__failing == 0.0) ? 0.29999999999999999 : 0.191; // mS_per_uF
        const double var_Ito__i_to = var_Ito__g_to_max * var_Ito__r * var_Ito__t * (var_Ito__V - var_Ito__E_to); // uA_per_uF
        const double var_cell__i_to = var_Ito__i_to; // uA_per_uF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__rik = 1.0 / (1.0 + exp((var_IKr__V + 26.0) / 23.0)); // dimensionless
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKr__FonRT = var_cell__FonRT; // per_mV
        const double var_IKr__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IKr__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IKr__E_K = log(var_IKr__Ko / var_IKr__Ki) / var_IKr__FonRT; // mV
        const double var_IKr__i_Kr = var_IKr__g_Kr_max * var_IKr__Xr * var_IKr__rik * (var_IKr__V - var_IKr__E_K); // uA_per_uF
        const double var_cell__i_Kr = var_IKr__i_Kr; // uA_per_uF
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_IKs__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IKs__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IKs__FonRT = var_cell__FonRT; // per_mV
        const double var_IKs__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_IKs__E_Ks = log(((0.018329999999999999 * var_IKs__Nao) + var_IKs__Ko) / ((0.018329999999999999 * var_IKs__Nai) + var_IKs__Ki)) / var_IKs__FonRT; // mV
        const double var_IKs__g_Ks_max = 0.02; // mS_per_uF
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__i_Ks = var_IKs__g_Ks_max * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // uA_per_uF
        const double var_cell__i_Ks = var_IKs__i_Ks; // uA_per_uF
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1_K1_gate__V = var_IK1__V; // mV
        const double var_IK1__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IK1__FonRT = var_cell__FonRT; // per_mV
        const double var_IK1__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IK1__E_K1 = log(var_IK1__Ko / var_IK1__Ki) / var_IK1__FonRT; // mV
        const double var_IK1_K1_gate__E_K1 = var_IK1__E_K1; // mV
        const double var_IK1_K1_gate__beta_K1 = ((3.0 * exp(0.00020000000000000001 * (var_IK1_K1_gate__V + 100.0 + (-var_IK1_K1_gate__E_K1)))) + (1.0 * exp(0.10000000000000001 * (var_IK1_K1_gate__V - (10.0 + var_IK1_K1_gate__E_K1))))) / (1.0 + exp((-0.5) * (var_IK1_K1_gate__V - var_IK1_K1_gate__E_K1))); // per_ms
        const double var_IK1_K1_gate__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K1 + 200.0)))); // per_ms
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
        const double var_IK1__failing = var_cell__failing; // dimensionless
        const double var_IK1__g_K1_max = (var_IK1__failing == 0.0) ? 2.5 : 2.0; // mS_per_uF
        const double var_IK1__i_K1 = var_IK1__g_K1_max * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K1); // uA_per_uF
        const double var_cell__i_K1 = var_IK1__i_K1; // uA_per_uF
        const double var_INaCa__K_mNa = 87.5; // mM
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INaCa__Cao = var_Ionic_concentrations__Cao; // mM
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__K_mCa = 1.3799999999999999; // mM
        const double var_INaCa__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INaCa__FonRT = var_cell__FonRT; // per_mV
        const double var_INaCa__failing = var_cell__failing; // dimensionless
        const double var_INaCa__K_NaCa = (var_INaCa__failing == 0.0) ? 1000.0 : 1650.0; // uA_per_uF
        const double var_INaCa__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__i_NaCa = ((((((var_INaCa__K_NaCa * 1.0) / (pow(var_INaCa__K_mNa, 3.0) + pow(var_INaCa__Nao, 3.0))) * 1.0) / (var_INaCa__K_mCa + var_INaCa__Cao)) * 1.0) / (1.0 + (var_INaCa__K_sat * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)))) * ((exp(var_INaCa__eta * var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Nai, 3.0) * var_INaCa__Cao) - (exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Nao, 3.0) * var_INaCa__Cai)); // uA_per_uF
        const double var_cell__i_NaCa = var_INaCa__i_NaCa; // uA_per_uF
        const double var_INaK__K_mNai = 10.0; // mM
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_cell__FonRT; // per_mV
        const double var_INaK__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INaK__sigma = (1.0 / 7.0) * (exp(var_INaK__Nao / 67.299999999999997) - 1.0); // dimensionless
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INaK__K_mKo = 1.5; // mM
        const double var_INaK__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_INaK__failing = var_cell__failing; // dimensionless
        const double var_INaK__I_NaK_max = (var_INaK__failing == 0.0) ? 1.3 : 0.75; // uA_per_uF
        const double var_INaK__i_NaK = (((var_INaK__I_NaK_max * var_INaK__f_NaK * 1.0) / (1.0 + pow(var_INaK__K_mNai / var_INaK__Nai, 1.5))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__K_mKo); // uA_per_uF
        const double var_cell__i_NaK = var_INaK__i_NaK; // uA_per_uF
        const double var_INab__failing = var_cell__failing; // dimensionless
        const double var_INab__g_b_Na_max = (var_INab__failing == 0.0) ? 0.001 : 0.0; // mS_per_uF
        const double var_INab__E_Na = var_INa__E_Na; // mV
        const double var_INab__V = var_chaste_interface__cell__V; // mV
        const double var_INab__i_b_Na = var_INab__g_b_Na_max * (var_INab__V - var_INab__E_Na); // uA_per_uF
        const double var_cell__i_b_Na = var_INab__i_b_Na; // uA_per_uF
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__failing = var_cell__failing; // dimensionless
        const double var_ICab__g_b_Ca_max = (var_ICab__failing == 0.0) ? 0.00084999999999999995 : 0.0012999999999999999; // mS_per_uF
        const double var_ICab__E_Ca = var_ICa__E_Ca; // mV
        const double var_ICab__i_b_Ca = var_ICab__g_b_Ca_max * (var_ICab__V - var_ICab__E_Ca); // uA_per_uF
        const double var_cell__i_b_Ca = var_ICab__i_b_Ca; // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__I_tot = var_cell__i_Na + var_cell__i_Ca + var_cell__i_to + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_K1 + var_cell__i_NaCa + var_cell__i_NaK + var_cell__i_b_Na + var_cell__i_b_Ca + var_cell__i_Stim; // uA_per_uF
        const double var_cell__dVdt = (-1.0) * var_cell__I_tot; // mV_per_ms
        const double var_chaste_interface__cell__dVdt = var_cell__dVdt; // mV_per_ms
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__dVdt) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = -(var_chaste_interface__i_ionic);
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Irel__APtrack = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__APtrack3 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 4.82035353592764e-5
        double var_chaste_interface__Irel__Cainfluxtrack = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Irel__OVRLDtrack = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Irel__OVRLDtrack2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Irel__OVRLDtrack3 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Ionic_concentrations__Nai = NV_Ith_S(rY, 18);
        // Units: mM; Initial value: 10
        double var_chaste_interface__Ionic_concentrations__Ki = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 140
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = NV_Ith_S(rY, 21);
        // Units: mM; Initial value: 2.5
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_cell__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_cell__T = 310.14999999999998; // kelvin
        const double var_cell__F = 96.486699999999999; // coulomb_per_millimole
        const double var_cell__FonRT = var_cell__F / (var_cell__R * var_cell__T); // per_mV
        const double var_cell__Cm = 153.40000000000001; // pF
        const double var_cell__failing = 0.0; // dimensionless
        const double var_INa__V = var_chaste_interface__cell__V; // mV
        const double var_INa__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INa__FonRT = var_cell__FonRT; // per_mV
        const double var_Ionic_concentrations__Nao = 138.0; // mM
        const double var_INa__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INa__E_Na = log(var_INa__Nao / var_INa__Nai) / var_INa__FonRT; // mV
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__i_Na = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__V - var_INa__E_Na); // uA_per_uF
        const double var_cell__i_Na = var_INa__i_Na; // uA_per_uF
        const double var_ICa__f = var_chaste_interface__ICa_f_gate__f; // dimensionless
        const double var_ICa_f_Ca_gate__Km_Ca = 0.00059999999999999995; // mM
        const double var_ICa__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_ICa_f_Ca_gate__Cai = var_ICa__Cai; // mM
        const double var_ICa_f_Ca_gate__f_Ca = var_ICa_f_Ca_gate__Km_Ca / (var_ICa_f_Ca_gate__Km_Ca + var_ICa_f_Ca_gate__Cai); // dimensionless
        const double var_ICa__f_Ca = var_ICa_f_Ca_gate__f_Ca; // dimensionless
        const double var_ICa__V = var_chaste_interface__cell__V; // mV
        const double var_ICa__d = var_chaste_interface__ICa_d_gate__d; // dimensionless
        const double var_ICa__FonRT = var_cell__FonRT; // per_mV
        const double var_Ionic_concentrations__Cao = 2.0; // mM
        const double var_ICa__Cao = var_Ionic_concentrations__Cao; // mM
        const double var_ICa__E_Ca = log(var_ICa__Cao / var_ICa__Cai) / (2.0 * var_ICa__FonRT); // mV
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_ICa__i_Ca = var_ICa__g_Ca_max * var_ICa__d * var_ICa__f * var_ICa__f_Ca * (var_ICa__V - var_ICa__E_Ca); // uA_per_uF
        const double var_cell__i_Ca = var_ICa__i_Ca; // uA_per_uF
        const double var_Ito__r = var_chaste_interface__Ito_r_gate__r; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // mV
        const double var_Ito__t = var_chaste_interface__Ito_t_gate__t; // dimensionless
        const double var_Ito__FonRT = var_cell__FonRT; // per_mV
        const double var_Ito__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_Ito__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_Ito__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_Ionic_concentrations__Ko = 4.0; // mM
        const double var_Ito__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_Ito__E_to = log(((0.042999999999999997 * var_Ito__Nao) + var_Ito__Ko) / ((0.042999999999999997 * var_Ito__Nai) + var_Ito__Ki)) / var_Ito__FonRT; // mV
        const double var_Ito__failing = var_cell__failing; // dimensionless
        const double var_Ito__g_to_max = (var_Ito__failing == 0.0) ? 0.29999999999999999 : 0.191; // mS_per_uF
        const double var_Ito__i_to = var_Ito__g_to_max * var_Ito__r * var_Ito__t * (var_Ito__V - var_Ito__E_to); // uA_per_uF
        const double var_cell__i_to = var_Ito__i_to; // uA_per_uF
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__V = var_chaste_interface__cell__V; // mV
        const double var_IKr__rik = 1.0 / (1.0 + exp((var_IKr__V + 26.0) / 23.0)); // dimensionless
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKr__FonRT = var_cell__FonRT; // per_mV
        const double var_IKr__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IKr__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IKr__E_K = log(var_IKr__Ko / var_IKr__Ki) / var_IKr__FonRT; // mV
        const double var_IKr__i_Kr = var_IKr__g_Kr_max * var_IKr__Xr * var_IKr__rik * (var_IKr__V - var_IKr__E_K); // uA_per_uF
        const double var_cell__i_Kr = var_IKr__i_Kr; // uA_per_uF
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_IKs__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IKs__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IKs__FonRT = var_cell__FonRT; // per_mV
        const double var_IKs__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_IKs__E_Ks = log(((0.018329999999999999 * var_IKs__Nao) + var_IKs__Ko) / ((0.018329999999999999 * var_IKs__Nai) + var_IKs__Ki)) / var_IKs__FonRT; // mV
        const double var_IKs__g_Ks_max = 0.02; // mS_per_uF
        const double var_IKs__V = var_chaste_interface__cell__V; // mV
        const double var_IKs__i_Ks = var_IKs__g_Ks_max * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // uA_per_uF
        const double var_cell__i_Ks = var_IKs__i_Ks; // uA_per_uF
        const double var_IK1__V = var_chaste_interface__cell__V; // mV
        const double var_IK1_K1_gate__V = var_IK1__V; // mV
        const double var_IK1__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_IK1__FonRT = var_cell__FonRT; // per_mV
        const double var_IK1__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_IK1__E_K1 = log(var_IK1__Ko / var_IK1__Ki) / var_IK1__FonRT; // mV
        const double var_IK1_K1_gate__E_K1 = var_IK1__E_K1; // mV
        const double var_IK1_K1_gate__beta_K1 = ((3.0 * exp(0.00020000000000000001 * (var_IK1_K1_gate__V + 100.0 + (-var_IK1_K1_gate__E_K1)))) + (1.0 * exp(0.10000000000000001 * (var_IK1_K1_gate__V - (10.0 + var_IK1_K1_gate__E_K1))))) / (1.0 + exp((-0.5) * (var_IK1_K1_gate__V - var_IK1_K1_gate__E_K1))); // per_ms
        const double var_IK1_K1_gate__alpha_K1 = 0.10000000000000001 / (1.0 + exp(0.059999999999999998 * (var_IK1_K1_gate__V - (var_IK1_K1_gate__E_K1 + 200.0)))); // per_ms
        const double var_IK1_K1_gate__K1_infinity = var_IK1_K1_gate__alpha_K1 / (var_IK1_K1_gate__alpha_K1 + var_IK1_K1_gate__beta_K1); // dimensionless
        const double var_IK1__K1_infinity = var_IK1_K1_gate__K1_infinity; // dimensionless
        const double var_IK1__failing = var_cell__failing; // dimensionless
        const double var_IK1__g_K1_max = (var_IK1__failing == 0.0) ? 2.5 : 2.0; // mS_per_uF
        const double var_IK1__i_K1 = var_IK1__g_K1_max * var_IK1__K1_infinity * (var_IK1__V - var_IK1__E_K1); // uA_per_uF
        const double var_cell__i_K1 = var_IK1__i_K1; // uA_per_uF
        const double var_INaCa__K_mNa = 87.5; // mM
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INaCa__Cao = var_Ionic_concentrations__Cao; // mM
        const double var_INaCa__V = var_chaste_interface__cell__V; // mV
        const double var_INaCa__K_mCa = 1.3799999999999999; // mM
        const double var_INaCa__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INaCa__FonRT = var_cell__FonRT; // per_mV
        const double var_INaCa__failing = var_cell__failing; // dimensionless
        const double var_INaCa__K_NaCa = (var_INaCa__failing == 0.0) ? 1000.0 : 1650.0; // uA_per_uF
        const double var_INaCa__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaCa__i_NaCa = ((((((var_INaCa__K_NaCa * 1.0) / (pow(var_INaCa__K_mNa, 3.0) + pow(var_INaCa__Nao, 3.0))) * 1.0) / (var_INaCa__K_mCa + var_INaCa__Cao)) * 1.0) / (1.0 + (var_INaCa__K_sat * exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT)))) * ((exp(var_INaCa__eta * var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Nai, 3.0) * var_INaCa__Cao) - (exp((var_INaCa__eta - 1.0) * var_INaCa__V * var_INaCa__FonRT) * pow(var_INaCa__Nao, 3.0) * var_INaCa__Cai)); // uA_per_uF
        const double var_cell__i_NaCa = var_INaCa__i_NaCa; // uA_per_uF
        const double var_INaK__K_mNai = 10.0; // mM
        const double var_INaK__V = var_chaste_interface__cell__V; // mV
        const double var_INaK__FonRT = var_cell__FonRT; // per_mV
        const double var_INaK__Nao = var_Ionic_concentrations__Nao; // mM
        const double var_INaK__sigma = (1.0 / 7.0) * (exp(var_INaK__Nao / 67.299999999999997) - 1.0); // dimensionless
        const double var_INaK__f_NaK = 1.0 / (1.0 + (0.1245 * exp((-0.10000000000000001) * var_INaK__V * var_INaK__FonRT)) + (0.036499999999999998 * var_INaK__sigma * exp((-var_INaK__V) * var_INaK__FonRT))); // dimensionless
        const double var_INaK__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_INaK__K_mKo = 1.5; // mM
        const double var_INaK__Ko = var_Ionic_concentrations__Ko; // mM
        const double var_INaK__failing = var_cell__failing; // dimensionless
        const double var_INaK__I_NaK_max = (var_INaK__failing == 0.0) ? 1.3 : 0.75; // uA_per_uF
        const double var_INaK__i_NaK = (((var_INaK__I_NaK_max * var_INaK__f_NaK * 1.0) / (1.0 + pow(var_INaK__K_mNai / var_INaK__Nai, 1.5))) * var_INaK__Ko) / (var_INaK__Ko + var_INaK__K_mKo); // uA_per_uF
        const double var_cell__i_NaK = var_INaK__i_NaK; // uA_per_uF
        const double var_INab__failing = var_cell__failing; // dimensionless
        const double var_INab__g_b_Na_max = (var_INab__failing == 0.0) ? 0.001 : 0.0; // mS_per_uF
        const double var_INab__E_Na = var_INa__E_Na; // mV
        const double var_INab__V = var_chaste_interface__cell__V; // mV
        const double var_INab__i_b_Na = var_INab__g_b_Na_max * (var_INab__V - var_INab__E_Na); // uA_per_uF
        const double var_cell__i_b_Na = var_INab__i_b_Na; // uA_per_uF
        const double var_ICab__V = var_chaste_interface__cell__V; // mV
        const double var_ICab__failing = var_cell__failing; // dimensionless
        const double var_ICab__g_b_Ca_max = (var_ICab__failing == 0.0) ? 0.00084999999999999995 : 0.0012999999999999999; // mS_per_uF
        const double var_ICab__E_Ca = var_ICa__E_Ca; // mV
        const double var_ICab__i_b_Ca = var_ICab__g_b_Ca_max * (var_ICab__V - var_ICab__E_Ca); // uA_per_uF
        const double var_cell__i_b_Ca = var_ICab__i_b_Ca; // uA_per_uF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_cell__I_tot = var_cell__i_Na + var_cell__i_Ca + var_cell__i_to + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_K1 + var_cell__i_NaCa + var_cell__i_NaK + var_cell__i_b_Na + var_cell__i_b_Ca + var_cell__i_Stim; // uA_per_uF
        const double var_cell__dVdt = (-1.0) * var_cell__I_tot; // mV_per_ms
        const double var_INa_m_gate__V = var_INa__V; // mV
        const double var_INa_m_gate__alpha_m = (fabs(var_INa_m_gate__V + 47.130000000000003) > 0.001) ? ((0.32000000000000001 * (var_INa_m_gate__V + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INa_m_gate__V + 47.130000000000003)))) : 3.2000000000000002; // per_ms
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_m_gate__beta_m = 0.080000000000000002 * exp((-var_INa_m_gate__V) / 11.0); // per_ms
        const double var_INa_m_gate__d_m_d_environment__time = (var_INa_m_gate__alpha_m * (1.0 - var_INa_m_gate__m)) - (var_INa_m_gate__beta_m * var_INa_m_gate__m); // 'per millisecond'
        const double var_INa__INa_m_gate__d_m_d_environment__time = var_INa_m_gate__d_m_d_environment__time; // ___units_16
        const double var_INa_h_gate__V = var_INa__V; // mV
        const double var_INa_h_gate__alpha_h = (var_INa_h_gate__V < (-40.0)) ? (0.13500000000000001 * exp((80.0 + var_INa_h_gate__V) / (-6.7999999999999998))) : 0.0; // per_ms
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_h_gate__beta_h = (var_INa_h_gate__V < (-40.0)) ? ((3.5600000000000001 * exp(0.079000000000000001 * var_INa_h_gate__V)) + (310000.0 * exp(0.34999999999999998 * var_INa_h_gate__V))) : (1.0 / (0.13 * (1.0 + exp((-(var_INa_h_gate__V + 10.66)) / 11.1)))); // per_ms
        const double var_INa_h_gate__d_h_d_environment__time = (var_INa_h_gate__alpha_h * (1.0 - var_INa_h_gate__h)) - (var_INa_h_gate__beta_h * var_INa_h_gate__h); // 'per millisecond'
        const double var_INa__INa_h_gate__d_h_d_environment__time = var_INa_h_gate__d_h_d_environment__time; // ___units_16
        const double var_INa_j_gate__V = var_INa__V; // mV
        const double var_INa_j_gate__beta_j = (var_INa_j_gate__V < (-40.0)) ? ((0.1212 * exp((-0.01052) * var_INa_j_gate__V)) / (1.0 + exp((-0.13780000000000001) * (var_INa_j_gate__V + 40.140000000000001)))) : ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa_j_gate__V)) / (1.0 + exp((-0.10000000000000001) * (var_INa_j_gate__V + 32.0)))); // per_ms
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INa_j_gate__alpha_j = (var_INa_j_gate__V < (-40.0)) ? (((((-127140.0) * exp(0.24399999999999999 * var_INa_j_gate__V)) - (3.4740000000000003e-05 * exp((-0.043909999999999998) * var_INa_j_gate__V))) * (var_INa_j_gate__V + 37.780000000000001)) / (1.0 + exp(0.311 * (var_INa_j_gate__V + 79.230000000000004)))) : 0.0; // per_ms
        const double var_INa_j_gate__d_j_d_environment__time = (var_INa_j_gate__alpha_j * (1.0 - var_INa_j_gate__j)) - (var_INa_j_gate__beta_j * var_INa_j_gate__j); // 'per millisecond'
        const double var_INa__INa_j_gate__d_j_d_environment__time = var_INa_j_gate__d_j_d_environment__time; // ___units_16
        const double var_ICa_d_gate__d = var_ICa__d; // dimensionless
        const double var_ICa_d_gate__V = var_ICa__V; // mV
        const double var_ICa_d_gate__alpha_d = (14.985900000000001 / (16.6813 * sqrt(2.0 * M_PI))) * exp((-pow((var_ICa_d_gate__V - 22.359999999999999) / 16.6813, 2.0)) / 2.0); // per_ms
        const double var_ICa_d_gate__beta_d = 0.14710000000000001 - ((5.2999999999999998 / (14.93 * sqrt(2.0 * M_PI))) * exp((-pow((var_ICa_d_gate__V - 6.2744) / 14.93, 2.0)) / 2.0)); // per_ms
        const double var_ICa_d_gate__d_d_d_environment__time = (var_ICa_d_gate__alpha_d * (1.0 - var_ICa_d_gate__d)) - (var_ICa_d_gate__beta_d * var_ICa_d_gate__d); // 'per millisecond'
        const double var_ICa__ICa_d_gate__d_d_d_environment__time = var_ICa_d_gate__d_d_d_environment__time; // ___units_16
        const double var_ICa_f_gate__f = var_ICa__f; // dimensionless
        const double var_ICa_f_gate__V = var_ICa__V; // mV
        const double var_ICa_f_gate__alpha_f = 0.0068719999999999996 / (1.0 + exp((var_ICa_f_gate__V - 6.1546000000000003) / 6.1223000000000001)); // per_ms
        const double var_ICa_f_gate__beta_f = (((0.068699999999999997 * exp((-0.1081) * (var_ICa_f_gate__V + 9.8254999999999999))) + 0.0112) / (1.0 + exp((-0.27789999999999998) * (var_ICa_f_gate__V + 9.8254999999999999)))) + 0.00054739999999999997; // per_ms
        const double var_ICa_f_gate__d_f_d_environment__time = (var_ICa_f_gate__alpha_f * (1.0 - var_ICa_f_gate__f)) - (var_ICa_f_gate__beta_f * var_ICa_f_gate__f); // 'per millisecond'
        const double var_ICa__ICa_f_gate__d_f_d_environment__time = var_ICa_f_gate__d_f_d_environment__time; // ___units_16
        const double var_Ito_r_gate__V = var_Ito__V; // mV
        const double var_Ito_r_gate__alpha_r = (0.52659999999999996 * exp((-0.0166) * (var_Ito_r_gate__V - 42.291200000000003))) / (1.0 + exp((-0.094299999999999995) * (var_Ito_r_gate__V - 42.291200000000003))); // per_ms
        const double var_Ito_r_gate__beta_r = ((5.1860000000000002e-05 * var_Ito_r_gate__V) + (0.51490000000000002 * exp((-0.13439999999999999) * (var_Ito_r_gate__V - 5.0026999999999999)))) / (1.0 + exp((-0.1348) * (var_Ito_r_gate__V - 5.1860000000000002e-05))); // per_ms
        const double var_Ito_r_gate__r = var_Ito__r; // dimensionless
        const double var_Ito_r_gate__d_r_d_environment__time = (var_Ito_r_gate__alpha_r * (1.0 - var_Ito_r_gate__r)) - (var_Ito_r_gate__beta_r * var_Ito_r_gate__r); // 'per millisecond'
        const double var_Ito__Ito_r_gate__d_r_d_environment__time = var_Ito_r_gate__d_r_d_environment__time; // ___units_16
        const double var_Ito_t_gate__V = var_Ito__V; // mV
        const double var_Ito_t_gate__beta_t = ((0.0001215 * var_Ito_t_gate__V) + (0.076700000000000004 * exp((-1.6600000000000001e-09) * (var_Ito_t_gate__V + 34.023499999999999)))) / (1.0 + exp((-0.16039999999999999) * (var_Ito_t_gate__V + 34.023499999999999))); // per_ms
        const double var_Ito_t_gate__alpha_t = ((5.6119999999999998e-05 * var_Ito_t_gate__V) + (0.072099999999999997 * exp((-0.17299999999999999) * (var_Ito_t_gate__V + 34.253100000000003)))) / (1.0 + exp((-0.17319999999999999) * (var_Ito_t_gate__V + 34.253100000000003))); // per_ms
        const double var_Ito_t_gate__t = var_Ito__t; // dimensionless
        const double var_Ito_t_gate__d_t_d_environment__time = (var_Ito_t_gate__alpha_t * (1.0 - var_Ito_t_gate__t)) - (var_Ito_t_gate__beta_t * var_Ito_t_gate__t); // 'per millisecond'
        const double var_Ito__Ito_t_gate__d_t_d_environment__time = var_Ito_t_gate__d_t_d_environment__time; // ___units_16
        const double var_IKs_Xs_gate__V = var_IKs__V; // mV
        const double var_IKs_Xs_gate__alpha_Xs = 0.0030130000000000001 / (1.0 + exp((7.4454000000000002 - (var_IKs_Xs_gate__V + 10.0)) / 14.3171)); // per_ms
        const double var_IKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_IKs_Xs_gate__beta_Xs = 0.0058700000000000002 / (1.0 + exp((5.9500000000000002 + var_IKs_Xs_gate__V + 10.0) / 15.82)); // per_ms
        const double var_IKs_Xs_gate__d_Xs_d_environment__time = (var_IKs_Xs_gate__alpha_Xs * (1.0 - var_IKs_Xs_gate__Xs)) - (var_IKs_Xs_gate__beta_Xs * var_IKs_Xs_gate__Xs); // 'per millisecond'
        const double var_IKs__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs_Xs_gate__d_Xs_d_environment__time; // ___units_16
        const double var_IKr_Xr_gate__V = var_IKr__V; // mV
        const double var_IKr_Xr_gate__beta_Xr = (0.016 * exp(0.0016000000000000001 * (var_IKr_Xr_gate__V + 65.659999999999997))) / (1.0 + exp(0.078299999999999995 * (var_IKr_Xr_gate__V + 65.659999999999997))); // per_ms
        const double var_IKr_Xr_gate__Xr = var_IKr__Xr; // dimensionless
        const double var_IKr_Xr_gate__alpha_Xr = (0.0050000000000000001 * exp(0.00052660000000000001 * (var_IKr_Xr_gate__V + 4.0670000000000002))) / (1.0 + exp((-0.12620000000000001) * (var_IKr_Xr_gate__V + 4.0670000000000002))); // per_ms
        const double var_IKr_Xr_gate__d_Xr_d_environment__time = (var_IKr_Xr_gate__alpha_Xr * (1.0 - var_IKr_Xr_gate__Xr)) - (var_IKr_Xr_gate__beta_Xr * var_IKr_Xr_gate__Xr); // 'per millisecond'
        const double var_IKr__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr_Xr_gate__d_Xr_d_environment__time; // ___units_16
        const double var_Irel__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_Irel__OVRLDtrack2 = var_chaste_interface__Irel__OVRLDtrack2; // dimensionless
        const double var_Irel__delta_Ca_ith = 5.0000000000000004e-06; // mM
        const double var_Irel__APtrack2 = var_chaste_interface__Irel__APtrack2; // dimensionless
        const double var_Irel__Cainfluxtrack = var_chaste_interface__Irel__Cainfluxtrack; // mM
        const double var_Irel__K_mrel = 0.00080000000000000004; // mM
        const double var_Irel__G_rel_overload = 3.0; // per_ms
        const double var_Irel__G_rel_max = 22.0; // per_ms
        const double var_Irel__G_rel = (var_Irel__Cainfluxtrack > var_Irel__delta_Ca_ith) ? (((1.0 * var_Irel__G_rel_max * (var_Irel__Cainfluxtrack - var_Irel__delta_Ca_ith)) / ((var_Irel__K_mrel + var_Irel__Cainfluxtrack) - var_Irel__delta_Ca_ith)) * (1.0 - var_Irel__APtrack2) * var_Irel__APtrack2) : ((var_Irel__Cainfluxtrack <= var_Irel__delta_Ca_ith) && (var_Irel__OVRLDtrack2 > 0.0)) ? (0.0 * var_Irel__G_rel_overload * (1.0 - var_Irel__OVRLDtrack2) * var_Irel__OVRLDtrack2) : 0.0; // per_ms
        const double var_Irel__Ca_JSR = var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM
        const double var_Irel__i_rel = var_Irel__G_rel * (var_Irel__Ca_JSR - var_Irel__Cai); // mM_per_ms
        const double var_calcium_buffers_in_the_JSR__K_mCSQN = 0.80000000000000004; // mM
        const double var_Irel__K_mCSQN = var_calcium_buffers_in_the_JSR__K_mCSQN; // mM
        const double var_Irel__F = var_cell__F; // coulomb_per_millimole
        const double var_Ionic_concentrations__preplength = 100.0; // um
        const double var_Ionic_concentrations__radius = 11.0; // um
        const double var_Ionic_concentrations__volume = M_PI * var_Ionic_concentrations__preplength * pow(var_Ionic_concentrations__radius, 2.0); // fL
        const double var_Ionic_concentrations__V_myo = 0.68000000000000005 * var_Ionic_concentrations__volume; // fL
        const double var_Irel__V_myo = var_Ionic_concentrations__V_myo; // fL
        const double var_Ionic_concentrations__V_JSR = 0.0047999999999999996 * var_Ionic_concentrations__volume; // fL
        const double var_Irel__i_NaCa = var_INaCa__i_NaCa; // uA_per_uF
        const double var_Irel__i_Ca = var_ICa__i_Ca; // uA_per_uF
        const double var_Irel__i_b_Ca = var_ICab__i_b_Ca; // uA_per_uF
        const double var_Irel__dVdt = var_cell__dVdt; // mV_per_ms
        const double var_Irel__Cm = var_cell__Cm; // pF
        const double var_Irel__APtrack = var_chaste_interface__Irel__APtrack; // dimensionless
        const double var_Irel__APtrack3 = var_chaste_interface__Irel__APtrack3; // dimensionless
        const double var_Irel__OVRLDtrack = var_chaste_interface__Irel__OVRLDtrack; // dimensionless
        const double var_Irel__OVRLDtrack3 = var_chaste_interface__Irel__OVRLDtrack3; // dimensionless
        const double var_Irel__CSQNthresh = 0.69999999999999996; // mM
        const double var_Irel__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_Irel__d_APtrack_d_environment__time = (var_Irel__dVdt > 150.0) ? ((100.0 * (1.0 - var_Irel__APtrack)) - (0.5 * var_Irel__APtrack)) : ((-0.5) * var_Irel__APtrack); // 'per millisecond'
        const double var_Irel__d_APtrack2_d_environment__time = ((var_Irel__APtrack < 0.20000000000000001) && (var_Irel__APtrack > 0.17999999999999999)) ? ((100.0 * (1.0 - var_Irel__APtrack2)) - (0.5 * var_Irel__APtrack2)) : ((-0.5) * var_Irel__APtrack2); // 'per millisecond'
        const double var_Irel__d_APtrack3_d_environment__time = ((var_Irel__APtrack < 0.20000000000000001) && (var_Irel__APtrack > 0.17999999999999999)) ? ((100.0 * (1.0 - var_Irel__APtrack3)) - (0.5 * var_Irel__APtrack3)) : ((-0.01) * var_Irel__APtrack3); // 'per millisecond'
        const double var_Irel__d_Cainfluxtrack_d_environment__time = (var_Irel__APtrack > 0.20000000000000001) ? (((-var_Irel__Cm) * ((var_Irel__i_Ca - var_Irel__i_NaCa) + var_Irel__i_b_Ca)) / (2.0 * var_Irel__V_myo * var_Irel__F)) : ((var_Irel__APtrack2 > 0.01) && (var_Irel__APtrack <= 0.20000000000000001)) ? 0.0 : ((-0.5) * var_Irel__Cainfluxtrack); // 'millimole per litre per millisecond'
        const double var_Irel__d_OVRLDtrack_d_environment__time = (((1.0 / (1.0 + (var_Irel__K_mCSQN / var_Irel__Ca_JSR))) > var_Irel__CSQNthresh) && (var_Irel__OVRLDtrack3 < 0.37) && (var_Irel__APtrack3 < 0.37)) ? (0.0 * 50.0 * (1.0 - var_Irel__OVRLDtrack)) : ((-0.0) * 0.5 * var_Irel__OVRLDtrack); // 'per millisecond'
        const double var_Irel__d_OVRLDtrack2_d_environment__time = ((var_Irel__OVRLDtrack > var_Irel__Logicthresh) && (var_Irel__OVRLDtrack2 < var_Irel__Logicthresh)) ? (0.0 * 50.0 * (1.0 - var_Irel__OVRLDtrack2)) : ((-0.0) * 0.5 * var_Irel__OVRLDtrack2); // 'per millisecond'
        const double var_Irel__d_OVRLDtrack3_d_environment__time = ((var_Irel__OVRLDtrack > var_Irel__Logicthresh) && (var_Irel__OVRLDtrack3 < var_Irel__Logicthresh)) ? (0.0 * 50.0 * (1.0 - var_Irel__OVRLDtrack3)) : ((-0.0) * 0.01 * var_Irel__OVRLDtrack3); // 'per millisecond'
        const double var_Iup__failing = var_cell__failing; // dimensionless
        const double var_Iup__I_up_max = (var_Iup__failing == 0.0) ? 0.0044999999999999997 : 0.0015; // mM_per_ms
        const double var_Iup__K_mup = 0.00092000000000000003; // mM
        const double var_Iup__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_Iup__i_up = (var_Iup__I_up_max * var_Iup__Cai) / (var_Iup__Cai + var_Iup__K_mup); // mM_per_ms
        const double var_Ileak__failing = var_cell__failing; // dimensionless
        const double var_Ileak__K_leak = (var_Ileak__failing == 0.0) ? 0.00025999999999999998 : 0.00017000000000000001; // per_ms
        const double var_Ileak__Ca_NSR = var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM
        const double var_Ileak__i_leak = var_Ileak__K_leak * var_Ileak__Ca_NSR; // mM_per_ms
        const double var_Itr__tau_tr = 180.0; // ms
        const double var_Itr__Ca_JSR = var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM
        const double var_Itr__Ca_NSR = var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM
        const double var_Itr__i_tr = (1.0 * (var_Itr__Ca_NSR - var_Itr__Ca_JSR)) / var_Itr__tau_tr; // mM_per_ms
        const double var_calcium_buffers_in_the_myoplasm__K_mTn = 0.00050000000000000001; // mM
        const double var_calcium_buffers_in_the_myoplasm__K_mCMDN = 0.0023800000000000002; // mM
        const double var_calcium_buffers_in_the_myoplasm__Tn_max = 0.070000000000000007; // mM
        const double var_calcium_buffers_in_the_myoplasm__CMDN_max = 0.050000000000000003; // mM
        const double var_calcium_buffers_in_the_myoplasm__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_calcium_buffers_in_the_myoplasm__buffon = 1.0; // dimensionless
        const double var_calcium_buffers_in_the_myoplasm__Cai_bufc = 1.0 / (1.0 + (var_calcium_buffers_in_the_myoplasm__buffon * (((var_calcium_buffers_in_the_myoplasm__CMDN_max * var_calcium_buffers_in_the_myoplasm__K_mCMDN) / pow(var_calcium_buffers_in_the_myoplasm__K_mCMDN + var_calcium_buffers_in_the_myoplasm__Cai, 2.0)) + ((var_calcium_buffers_in_the_myoplasm__Tn_max * var_calcium_buffers_in_the_myoplasm__K_mTn) / pow(var_calcium_buffers_in_the_myoplasm__K_mTn + var_calcium_buffers_in_the_myoplasm__Cai, 2.0))))); // dimensionless
        const double var_calcium_buffers_in_the_JSR__CSQN_max = 10.0; // mM
        const double var_calcium_buffers_in_the_JSR__Ca_JSR = var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM
        const double var_calcium_buffers_in_the_JSR__Ca_JSR_bufc = 1.0 / (1.0 + ((var_calcium_buffers_in_the_JSR__CSQN_max * var_calcium_buffers_in_the_JSR__K_mCSQN) / pow(var_calcium_buffers_in_the_JSR__K_mCSQN + var_calcium_buffers_in_the_JSR__Ca_JSR, 2.0))); // dimensionless
        const double var_Ionic_concentrations__V_NSR = 0.055199999999999999 * var_Ionic_concentrations__volume; // fL
        const double var_Ionic_concentrations__F = var_cell__F; // coulomb_per_millimole
        const double var_Ionic_concentrations__i_Na = var_INa__i_Na; // uA_per_uF
        const double var_Ionic_concentrations__i_b_Na = var_INab__i_b_Na; // uA_per_uF
        const double var_Ionic_concentrations__i_NaCa = var_INaCa__i_NaCa; // uA_per_uF
        const double var_Ionic_concentrations__i_NaK = var_INaK__i_NaK; // uA_per_uF
        const double var_Ionic_concentrations__i_Ca = var_ICa__i_Ca; // uA_per_uF
        const double var_Ionic_concentrations__i_b_Ca = var_ICab__i_b_Ca; // uA_per_uF
        const double var_Ionic_concentrations__i_Kr = var_IKr__i_Kr; // uA_per_uF
        const double var_Ionic_concentrations__i_K1 = var_IK1__i_K1; // uA_per_uF
        const double var_Ionic_concentrations__i_Ks = var_IKs__i_Ks; // uA_per_uF
        const double var_Ionic_concentrations__i_to = var_Ito__i_to; // uA_per_uF
        const double var_Ionic_concentrations__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_Ionic_concentrations__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_Ionic_concentrations__i_Stim = var_Ionic_concentrations__i_Stim_converter / var_Ionic_concentrations__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_Ionic_concentrations__i_tr = var_Itr__i_tr; // mM_per_ms
        const double var_Ionic_concentrations__i_rel = var_Irel__i_rel; // mM_per_ms
        const double var_Ionic_concentrations__i_leak = var_Ileak__i_leak; // mM_per_ms
        const double var_Ionic_concentrations__i_up = var_Iup__i_up; // mM_per_ms
        const double var_Ionic_concentrations__Cm = var_cell__Cm; // pF
        const double var_Ionic_concentrations__Cai_bufc = var_calcium_buffers_in_the_myoplasm__Cai_bufc; // dimensionless
        const double var_Ionic_concentrations__Ca_JSR_bufc = var_calcium_buffers_in_the_JSR__Ca_JSR_bufc; // dimensionless
        const double var_Ionic_concentrations__d_Cai_d_environment__time = var_Ionic_concentrations__Cai_bufc * ((((-var_Ionic_concentrations__Cm) * ((var_Ionic_concentrations__i_Ca - (2.0 * var_Ionic_concentrations__i_NaCa)) + var_Ionic_concentrations__i_b_Ca)) / (2.0 * var_Ionic_concentrations__V_myo * var_Ionic_concentrations__F)) + ((var_Ionic_concentrations__i_rel * var_Ionic_concentrations__V_JSR) / var_Ionic_concentrations__V_myo) + (((var_Ionic_concentrations__i_leak - var_Ionic_concentrations__i_up) * var_Ionic_concentrations__V_NSR) / var_Ionic_concentrations__V_myo)); // 'millimole per litre per millisecond'
        const double var_Ionic_concentrations__d_Nai_d_environment__time = ((-1.0) * var_Ionic_concentrations__Cm * (var_Ionic_concentrations__i_Na + var_Ionic_concentrations__i_b_Na + (var_Ionic_concentrations__i_NaCa * 3.0) + (var_Ionic_concentrations__i_NaK * 3.0))) / (var_Ionic_concentrations__V_myo * var_Ionic_concentrations__F); // 'millimole per litre per millisecond'
        const double var_Ionic_concentrations__d_Ki_d_environment__time = ((-1.0) * var_Ionic_concentrations__Cm * ((var_Ionic_concentrations__i_to + var_Ionic_concentrations__i_Kr + var_Ionic_concentrations__i_K1 + var_Ionic_concentrations__i_Stim + var_Ionic_concentrations__i_Ks) - (2.0 * var_Ionic_concentrations__i_NaK))) / (var_Ionic_concentrations__V_myo * var_Ionic_concentrations__F); // 'millimole per litre per millisecond'
        const double var_Ionic_concentrations__d_Ca_JSR_d_environment__time = var_Ionic_concentrations__Ca_JSR_bufc * (var_Ionic_concentrations__i_tr - var_Ionic_concentrations__i_rel); // 'millimole per litre per millisecond'
        const double var_Ionic_concentrations__d_Ca_NSR_d_environment__time = (-1.0) * ((var_Ionic_concentrations__i_leak + ((var_Ionic_concentrations__V_JSR / var_Ionic_concentrations__V_NSR) * var_Ionic_concentrations__i_tr)) - var_Ionic_concentrations__i_up); // 'millimole per litre per millisecond'
        const double var_chaste_interface__Ionic_concentrations__d_Cai_d_environment__time = var_Ionic_concentrations__d_Cai_d_environment__time; // ___units_45
        const double var_chaste_interface__INa_m_gate__d_m_d_environment__time = var_INa__INa_m_gate__d_m_d_environment__time; // ___units_16
        const double var_chaste_interface__INa_h_gate__d_h_d_environment__time = var_INa__INa_h_gate__d_h_d_environment__time; // ___units_16
        const double var_chaste_interface__INa_j_gate__d_j_d_environment__time = var_INa__INa_j_gate__d_j_d_environment__time; // ___units_16
        const double var_chaste_interface__ICa_d_gate__d_d_d_environment__time = var_ICa__ICa_d_gate__d_d_d_environment__time; // ___units_16
        const double var_chaste_interface__ICa_f_gate__d_f_d_environment__time = var_ICa__ICa_f_gate__d_f_d_environment__time; // ___units_16
        const double var_chaste_interface__Ito_r_gate__d_r_d_environment__time = var_Ito__Ito_r_gate__d_r_d_environment__time; // ___units_16
        const double var_chaste_interface__Ito_t_gate__d_t_d_environment__time = var_Ito__Ito_t_gate__d_t_d_environment__time; // ___units_16
        const double var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time = var_IKs__IKs_Xs_gate__d_Xs_d_environment__time; // ___units_16
        const double var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time = var_IKr__IKr_Xr_gate__d_Xr_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_APtrack_d_environment__time = var_Irel__d_APtrack_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_APtrack2_d_environment__time = var_Irel__d_APtrack2_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_APtrack3_d_environment__time = var_Irel__d_APtrack3_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_Cainfluxtrack_d_environment__time = var_Irel__d_Cainfluxtrack_d_environment__time; // ___units_47
        const double var_chaste_interface__Irel__d_OVRLDtrack_d_environment__time = var_Irel__d_OVRLDtrack_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_OVRLDtrack2_d_environment__time = var_Irel__d_OVRLDtrack2_d_environment__time; // ___units_16
        const double var_chaste_interface__Irel__d_OVRLDtrack3_d_environment__time = var_Irel__d_OVRLDtrack3_d_environment__time; // ___units_16
        const double var_chaste_interface__Ionic_concentrations__d_Nai_d_environment__time = var_Ionic_concentrations__d_Nai_d_environment__time; // ___units_47
        const double var_chaste_interface__Ionic_concentrations__d_Ki_d_environment__time = var_Ionic_concentrations__d_Ki_d_environment__time; // ___units_47
        const double var_chaste_interface__Ionic_concentrations__d_Ca_JSR_d_environment__time = var_Ionic_concentrations__d_Ca_JSR_d_environment__time; // ___units_47
        const double var_chaste_interface__Ionic_concentrations__d_Ca_NSR_d_environment__time = var_Ionic_concentrations__d_Ca_NSR_d_environment__time; // ___units_47
        const double d_dt_chaste_interface__Ionic_concentrations__Cai = var_chaste_interface__Ionic_concentrations__d_Cai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__INa_m_gate__m = var_chaste_interface__INa_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa_h_gate__h = var_chaste_interface__INa_h_gate__d_h_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa_j_gate__j = var_chaste_interface__INa_j_gate__d_j_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICa_d_gate__d = var_chaste_interface__ICa_d_gate__d_d_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICa_f_gate__f = var_chaste_interface__ICa_f_gate__d_f_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito_r_gate__r = var_chaste_interface__Ito_r_gate__d_r_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito_t_gate__t = var_chaste_interface__Ito_t_gate__d_t_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs_Xs_gate__Xs = var_chaste_interface__IKs_Xs_gate__d_Xs_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKr_Xr_gate__Xr = var_chaste_interface__IKr_Xr_gate__d_Xr_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack = var_chaste_interface__Irel__d_APtrack_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack2 = var_chaste_interface__Irel__d_APtrack2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__APtrack3 = var_chaste_interface__Irel__d_APtrack3_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Cainfluxtrack = var_chaste_interface__Irel__d_Cainfluxtrack_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack = var_chaste_interface__Irel__d_OVRLDtrack_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack2 = var_chaste_interface__Irel__d_OVRLDtrack2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__OVRLDtrack3 = var_chaste_interface__Irel__d_OVRLDtrack3_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Nai = var_chaste_interface__Ionic_concentrations__d_Nai_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ki = var_chaste_interface__Ionic_concentrations__d_Ki_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ca_JSR = var_chaste_interface__Ionic_concentrations__d_Ca_JSR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ionic_concentrations__Ca_NSR = var_chaste_interface__Ionic_concentrations__d_Ca_NSR_d_environment__time; // 'millimole per litre per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_cell__d_V_d_environment__time = var_cell__dVdt; // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_environment__time = var_cell__d_V_d_environment__time; // ___units_6
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__Ionic_concentrations__Cai;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__INa_m_gate__m;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__INa_h_gate__h;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__INa_j_gate__j;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__ICa_d_gate__d;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__ICa_f_gate__f;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__Ito_r_gate__r;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__Ito_t_gate__t;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__IKs_Xs_gate__Xs;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__IKr_Xr_gate__Xr;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__Irel__APtrack;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__Irel__APtrack2;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__Irel__APtrack3;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__Irel__Cainfluxtrack;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__Irel__OVRLDtrack;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__Irel__OVRLDtrack2;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__Irel__OVRLDtrack3;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__Ionic_concentrations__Nai;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__Ionic_concentrations__Ki;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__Ionic_concentrations__Ca_JSR;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Ionic_concentrations__Ca_NSR;
    }
    
    void Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -90.7796417483135
        double var_chaste_interface__Ionic_concentrations__Cai = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 0.0002
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.000585525582501575
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.995865529216237
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.997011204496203
        double var_chaste_interface__ICa_d_gate__d = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 2.50653215966786e-10
        double var_chaste_interface__ICa_f_gate__f = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.92130376850548
        double var_chaste_interface__Ito_r_gate__r = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 1.75032478501027e-5
        double var_chaste_interface__Ito_t_gate__t = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.999897251531651
        double var_chaste_interface__IKs_Xs_gate__Xs = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.00885658064818147
        double var_chaste_interface__IKr_Xr_gate__Xr = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.000215523048438941
        double var_chaste_interface__Irel__APtrack = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: -1.372158997089e-136
        double var_chaste_interface__Irel__APtrack2 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: -7.58517896402761e-136
        double var_chaste_interface__Irel__APtrack3 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 4.82035353592764e-5
        double var_chaste_interface__Irel__Cainfluxtrack = NV_Ith_S(rY, 14);
        // Units: mM; Initial value: -7.71120176147331e-138
        double var_chaste_interface__Irel__OVRLDtrack = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Irel__OVRLDtrack2 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Irel__OVRLDtrack3 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1e-6
        double var_chaste_interface__Ionic_concentrations__Nai = NV_Ith_S(rY, 18);
        // Units: mM; Initial value: 10
        double var_chaste_interface__Ionic_concentrations__Ki = NV_Ith_S(rY, 19);
        // Units: mM; Initial value: 140
        double var_chaste_interface__Ionic_concentrations__Ca_JSR = NV_Ith_S(rY, 20);
        // Units: mM; Initial value: 2.5
        double var_chaste_interface__Ionic_concentrations__Ca_NSR = NV_Ith_S(rY, 21);
        // Units: mM; Initial value: 2.5
        
        const double var_environment__time = var_chaste_interface__environment__time; // ms
        const double var_chaste_interface__environment__fake_dt = 1.0; // ms
        const double var_cell__V = var_chaste_interface__cell__V; // mV
        const double var_cell__R = 8.3142999999999994; // joule_per_mole_kelvin
        const double var_cell__T = 310.14999999999998; // kelvin
        const double var_cell__F = 96.486699999999999; // coulomb_per_millimole
        const double var_cell__Cm = 153.40000000000001; // pF
        const double var_cell__failing = 0.0; // dimensionless
        const double var_Ionic_concentrations__Nao = 138.0; // mM
        const double var_INa__g_Na = 16.0; // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_ICa__f = var_chaste_interface__ICa_f_gate__f; // dimensionless
        const double var_ICa_f_Ca_gate__Km_Ca = 0.00059999999999999995; // mM
        const double var_ICa__d = var_chaste_interface__ICa_d_gate__d; // dimensionless
        const double var_Ionic_concentrations__Cao = 2.0; // mM
        const double var_ICa__g_Ca_max = 0.064000000000000001; // mS_per_uF
        const double var_Ito__r = var_chaste_interface__Ito_r_gate__r; // dimensionless
        const double var_Ito__t = var_chaste_interface__Ito_t_gate__t; // dimensionless
        const double var_Ionic_concentrations__Ko = 4.0; // mM
        const double var_IKr__Xr = var_chaste_interface__IKr_Xr_gate__Xr; // dimensionless
        const double var_IKr__g_Kr_max = 0.014999999999999999; // mS_per_uF
        const double var_IKs__Xs = var_chaste_interface__IKs_Xs_gate__Xs; // dimensionless
        const double var_IKs__g_Ks_max = 0.02; // mS_per_uF
        const double var_INaCa__K_mNa = 87.5; // mM
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__K_mCa = 1.3799999999999999; // mM
        const double var_INaCa__eta = 0.34999999999999998; // dimensionless
        const double var_INaK__K_mNai = 10.0; // mM
        const double var_INaK__K_mKo = 1.5; // mM
        const double var_chaste_interface__cell__stim_offset = 0.0; // millisecond
        const double var_cell__stim_offset = var_chaste_interface__cell__stim_offset; // ms
        const double var_chaste_interface__cell__stim_period = 1000.0; // millisecond
        const double var_cell__stim_period = var_chaste_interface__cell__stim_period; // ms
        const double var_chaste_interface__cell__stim_duration = 3.0; // millisecond
        const double var_cell__stim_duration = var_chaste_interface__cell__stim_duration; // ms
        const double var_cell__stim_amplitude =  -15.0; // uA_per_uF
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_ICa_d_gate__d = var_ICa__d; // dimensionless
        const double var_ICa_f_gate__f = var_ICa__f; // dimensionless
        const double var_Ito_r_gate__r = var_Ito__r; // dimensionless
        const double var_Ito_t_gate__t = var_Ito__t; // dimensionless
        const double var_IKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_IKr_Xr_gate__Xr = var_IKr__Xr; // dimensionless
        const double var_Irel__OVRLDtrack2 = var_chaste_interface__Irel__OVRLDtrack2; // dimensionless
        const double var_Irel__delta_Ca_ith = 5.0000000000000004e-06; // mM
        const double var_Irel__APtrack2 = var_chaste_interface__Irel__APtrack2; // dimensionless
        const double var_Irel__Cainfluxtrack = var_chaste_interface__Irel__Cainfluxtrack; // mM
        const double var_Irel__K_mrel = 0.00080000000000000004; // mM
        const double var_Irel__G_rel_max = 22.0; // per_ms
        const double var_calcium_buffers_in_the_JSR__K_mCSQN = 0.80000000000000004; // mM
        const double var_Ionic_concentrations__preplength = 100.0; // um
        const double var_Ionic_concentrations__radius = 11.0; // um
        const double var_Irel__APtrack = var_chaste_interface__Irel__APtrack; // dimensionless
        const double var_Irel__APtrack3 = var_chaste_interface__Irel__APtrack3; // dimensionless
        const double var_Irel__OVRLDtrack = var_chaste_interface__Irel__OVRLDtrack; // dimensionless
        const double var_Irel__OVRLDtrack3 = var_chaste_interface__Irel__OVRLDtrack3; // dimensionless
        const double var_Irel__CSQNthresh = 0.69999999999999996; // mM
        const double var_Irel__Logicthresh = 0.97999999999999998; // dimensionless
        const double var_Iup__K_mup = 0.00092000000000000003; // mM
        const double var_Itr__tau_tr = 180.0; // ms
        const double var_calcium_buffers_in_the_myoplasm__K_mTn = 0.00050000000000000001; // mM
        const double var_calcium_buffers_in_the_myoplasm__K_mCMDN = 0.0023800000000000002; // mM
        const double var_calcium_buffers_in_the_myoplasm__Tn_max = 0.070000000000000007; // mM
        const double var_calcium_buffers_in_the_myoplasm__CMDN_max = 0.050000000000000003; // mM
        const double var_calcium_buffers_in_the_myoplasm__buffon = 1.0; // dimensionless
        const double var_calcium_buffers_in_the_JSR__CSQN_max = 10.0; // mM
        const double var_Ionic_concentrations__Nai = var_chaste_interface__Ionic_concentrations__Nai; // mM
        const double var_Ionic_concentrations__Cai = var_chaste_interface__Ionic_concentrations__Cai; // mM
        const double var_Ionic_concentrations__Ki = var_chaste_interface__Ionic_concentrations__Ki; // mM
        const double var_Ionic_concentrations__Ca_JSR = var_chaste_interface__Ionic_concentrations__Ca_JSR; // mM
        const double var_Ionic_concentrations__Ca_NSR = var_chaste_interface__Ionic_concentrations__Ca_NSR; // mM
        const double var_t1 = pow(var_INa_m_gate__m, 2.0); // dimensionless
        const double var_t2 = var_t1 * var_INa_m_gate__m; // dimensionless
        const double var_t3 = var_t2 * var_INa__g_Na; // dimensionless
        const double var_t4 = var_INa_h_gate__h * var_INa_j_gate__j; // dimensionless
        const double var_t5 = var_t4 * var_t3; // dimensionless
        const double var_t6 = var_ICa__g_Ca_max * var_ICa_d_gate__d; // dimensionless
        const double var_t7 = var_ICa_f_Ca_gate__Km_Ca * var_ICa_f_gate__f; // dimensionless
        const double var_t8 = var_ICa_f_Ca_gate__Km_Ca + var_Ionic_concentrations__Cai; // dimensionless
        const double var_t9 = 1.0 / var_t8; // dimensionless
        const double var_t10 = var_t9 * var_t7; // dimensionless
        const double var_t11 = var_t10 * var_t6; // dimensionless
        const double var_t12 = var_cell__failing == 0.0; // dimensionless
        const double var_t13 = var_t12 ? 0.29999999999999999 : 0.191; // dimensionless
        const double var_t14 = var_Ito_r_gate__r * var_t13; // dimensionless
        const double var_t15 = var_Ito_t_gate__t * var_t14; // dimensionless
        const double var_t16 = var_IKr__g_Kr_max * var_IKr_Xr_gate__Xr; // dimensionless
        const double var_t19 = exp(((1.0 / 23.0) * var_cell__V) + (26.0 / 23.0)); // dimensionless
        const double var_t20 = 1.0 + var_t19; // dimensionless
        const double var_t21 = pow(var_t20, 2.0); // dimensionless
        const double var_t23 = 1.0 / var_Ionic_concentrations__Ki; // dimensionless
        const double var_t25 = log(var_t23 * var_Ionic_concentrations__Ko); // dimensionless
        const double var_t26 = 1.0 / var_cell__F; // dimensionless
        const double var_t28 = var_cell__R * var_cell__T; // dimensionless
        const double var_t29 = (var_t28 * var_t26) * var_t25; // dimensionless
        const double var_t30 = var_cell__V - var_t29; // dimensionless
        const double var_t34 = ((((1.0 / 23.0) * var_t19) * var_t30) / var_t21) * var_t16; // dimensionless
        const double var_t35 = 1.0 / var_t20; // dimensionless
        const double var_t36 = var_t35 * var_t16; // dimensionless
        const double var_t37 = pow(var_IKs_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t38 = var_t37 * var_IKs__g_Ks_max; // dimensionless
        const double var_t39 = var_t12 ? 2.5 : 2.0; // dimensionless
        const double var_t43 = exp(((0.059999999999999998 * var_cell__V) - (0.059999999999999998 * var_t29)) - 12.0); // dimensionless
        const double var_t44 = 1.0 + var_t43; // dimensionless
        const double var_t45 = pow(var_t44, 2.0); // dimensionless
        const double var_t46 = 1.0 / var_t45; // dimensionless
        const double var_t47 = var_t46 * var_t39; // dimensionless
        const double var_t48 = 1.0 / var_t44; // dimensionless
        const double var_t53 = exp(((0.00020000000000000001 * var_cell__V) + 0.02) - (0.00020000000000000001 * var_t29)); // dimensionless
        const double var_t55 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t58 = exp((var_t55 - 1.0) - (0.10000000000000001 * var_t29)); // dimensionless
        const double var_t59 = (3.0 * var_t53) + var_t58; // dimensionless
        const double var_t63 = exp(((-0.5) * var_cell__V) + (0.5 * var_t29)); // dimensionless
        const double var_t64 = 1.0 + var_t63; // dimensionless
        const double var_t65 = 1.0 / var_t64; // dimensionless
        const double var_t67 = (0.10000000000000001 * var_t48) + (var_t65 * var_t59); // dimensionless
        const double var_t68 = 1.0 / var_t67; // dimensionless
        const double var_t69 = var_t30 * var_t68; // dimensionless
        const double var_t72 = ((0.0060000000000000001 * var_t43) * var_t69) * var_t47; // dimensionless
        const double var_t73 = var_t48 * var_t39; // dimensionless
        const double var_t74 = pow(var_t67, 2.0); // dimensionless
        const double var_t76 = var_t30 / var_t74; // dimensionless
        const double var_t83 = pow(var_t64, 2.0); // dimensionless
        const double var_t85 = (1.0 / var_t83) * var_t59; // dimensionless
        const double var_t91 = ((0.10000000000000001 * (((((-0.0060000000000000001) * var_t43) * var_t46) + (var_t65 * ((0.00059999999999999995 * var_t53) + (0.10000000000000001 * var_t58)))) + ((0.5 * var_t63) * var_t85))) * var_t76) * var_t73; // dimensionless
        const double var_t92 = var_t68 * var_t73; // dimensionless
        const double var_t93 = 0.10000000000000001 * var_t92; // dimensionless
        const double var_t94 = var_t12 ? 1000.0 : 1650.0; // dimensionless
        const double var_t95 = pow(var_INaCa__K_mNa, 2.0); // dimensionless
        const double var_t97 = pow(var_Ionic_concentrations__Nao, 2.0); // dimensionless
        const double var_t98 = var_t97 * var_Ionic_concentrations__Nao; // dimensionless
        const double var_t100 = 1.0 / ((var_t95 * var_INaCa__K_mNa) + var_t98); // dimensionless
        const double var_t101 = var_t100 * var_t94; // dimensionless
        const double var_t103 = 1.0 / (var_INaCa__K_mCa + var_Ionic_concentrations__Cao); // dimensionless
        const double var_t104 = var_INaCa__eta - 1.0; // dimensionless
        const double var_t106 = 1.0 / var_cell__R; // dimensionless
        const double var_t107 = var_t106 * var_cell__F; // dimensionless
        const double var_t108 = 1.0 / var_cell__T; // dimensionless
        const double var_t109 = var_t108 * var_t107; // dimensionless
        const double var_t111 = exp((var_t109 * var_cell__V) * var_t104); // dimensionless
        const double var_t113 = 1.0 + (var_t111 * var_INaCa__K_sat); // dimensionless
        const double var_t114 = pow(var_t113, 2.0); // dimensionless
        const double var_t119 = exp((var_t109 * var_INaCa__eta) * var_cell__V); // dimensionless
        const double var_t120 = pow(var_Ionic_concentrations__Nai, 2.0); // dimensionless
        const double var_t121 = var_t120 * var_Ionic_concentrations__Nai; // dimensionless
        const double var_t124 = var_t98 * var_t111; // dimensionless
        const double var_t126 = ((var_Ionic_concentrations__Cao * var_t121) * var_t119) - (var_Ionic_concentrations__Cai * var_t124); // dimensionless
        const double var_t131 = var_t108 * var_t106; // dimensionless
        const double var_t134 = (((((((var_t111 * var_t131) * var_cell__F) * var_t104) * var_INaCa__K_sat) * var_t126) / var_t114) * var_t103) * var_t101; // dimensionless
        const double var_t135 = 1.0 / var_t113; // dimensionless
        const double var_t136 = var_t135 * var_t103; // dimensionless
        const double var_t151 = ((((((((var_Ionic_concentrations__Cao * var_t121) * var_t119) * var_t108) * var_t106) * var_cell__F) * var_INaCa__eta) - ((((((var_Ionic_concentrations__Cai * var_t98) * var_t111) * var_t108) * var_t106) * var_cell__F) * var_t104)) * var_t136) * var_t101; // dimensionless
        const double var_t152 = var_t12 ? 1.3 : 0.75; // dimensionless
        const double var_t154 = (var_t131 * var_cell__V) * var_cell__F; // dimensionless
        const double var_t156 = exp((-0.10000000000000001) * var_t154); // dimensionless
        const double var_t159 = exp(0.01485884101 * var_Ionic_concentrations__Nao); // dimensionless
        const double var_t160 = var_t159 - 1.0; // dimensionless
        const double var_t161 = exp(-var_t154); // dimensionless
        const double var_t164 = (1.0 + (0.1245 * var_t156)) + ((0.0052142857139999997 * var_t161) * var_t160); // dimensionless
        const double var_t165 = pow(var_t164, 2.0); // dimensionless
        const double var_t168 = 1.0 / var_Ionic_concentrations__Nai; // dimensionless
        const double var_t169 = var_t168 * var_INaK__K_mNai; // dimensionless
        const double var_t170 = pow(var_t169, 1.5); // dimensionless
        const double var_t171 = 1.0 + var_t170; // dimensionless
        const double var_t172 = 1.0 / var_t171; // dimensionless
        const double var_t175 = 1.0 / (var_Ionic_concentrations__Ko + var_INaK__K_mKo); // dimensionless
        const double var_t186 = (((((((((-0.012449999999999999) * var_t156) * var_t108) * var_t107) - ((((0.0052142857139999997 * var_t161) * var_t131) * var_cell__F) * var_t160)) * var_t175) * var_Ionic_concentrations__Ko) * var_t172) / var_t165) * var_t152; // dimensionless
        const double var_t187 = var_t12 ? 0.001 : 0.0; // dimensionless
        const double var_t188 = var_t12 ? 0.00084999999999999995 : 0.0012999999999999999; // dimensionless
        const double var_t189 = (((((((((((((-var_t5) - var_t11) - var_t15) + var_t34) - var_t36) - var_t38) + var_t72) + var_t91) - var_t93) + var_t134) - var_t151) + var_t186) - var_t187) - var_t188; // dimensionless
        const double var_t192 = log(var_t168 * var_Ionic_concentrations__Nao); // dimensionless
        const double var_t195 = var_cell__V - ((var_t28 * var_t26) * var_t192); // dimensionless
        const double var_t196 = var_t195 * var_t4; // dimensionless
        const double var_t203 = var_ICa__g_Ca_max * var_ICa_f_gate__f; // dimensionless
        const double var_t205 = 1.0 / var_Ionic_concentrations__Cai; // dimensionless
        const double var_t207 = log(var_t205 * var_Ionic_concentrations__Cao); // dimensionless
        const double var_t211 = var_cell__V - ((((1.0 / 2.0) * var_t28) * var_t26) * var_t207); // dimensionless
        const double var_t212 = (var_t211 * var_t9) * var_ICa_f_Ca_gate__Km_Ca; // dimensionless
        const double var_t220 = 1.0 / ((0.042999999999999997 * var_Ionic_concentrations__Nai) + var_Ionic_concentrations__Ki); // dimensionless
        const double var_t222 = log(var_t220 * ((0.042999999999999997 * var_Ionic_concentrations__Nao) + var_Ionic_concentrations__Ko)); // dimensionless
        const double var_t225 = var_cell__V - ((var_t28 * var_t26) * var_t222); // dimensionless
        const double var_t233 = 1.0 / ((0.018329999999999999 * var_Ionic_concentrations__Nai) + var_Ionic_concentrations__Ki); // dimensionless
        const double var_t235 = log(var_t233 * ((0.018329999999999999 * var_Ionic_concentrations__Nao) + var_Ionic_concentrations__Ko)); // dimensionless
        const double var_t238 = var_cell__V - ((var_t28 * var_t26) * var_t235); // dimensionless
        const double var_t245 = ((var_t28 * var_t26) * var_t168) * var_t5; // dimensionless
        const double var_t248 = ((var_t28 * var_t26) * var_t220) * var_t15; // dimensionless
        const double var_t249 = 0.042999999999999997 * var_t248; // dimensionless
        const double var_t251 = var_cell__R * var_t26; // dimensionless
        const double var_t252 = var_cell__T * var_t251; // dimensionless
        const double var_t253 = (var_t252 * var_t233) * var_t38; // dimensionless
        const double var_t254 = 0.018329999999999999 * var_t253; // dimensionless
        const double var_t255 = var_t103 * var_t101; // dimensionless
        const double var_t257 = var_Ionic_concentrations__Cao * var_t120; // dimensionless
        const double var_t259 = ((var_t257 * var_t119) * var_t135) * var_t255; // dimensionless
        const double var_t262 = (1.0 / var_t164) * var_t152; // dimensionless
        const double var_t263 = pow(var_t171, 2.0); // dimensionless
        const double var_t267 = pow(var_t169, 0.5); // dimensionless
        const double var_t272 = ((((((1.0 / var_t120) * var_INaK__K_mNai) * var_t267) * var_t175) * var_Ionic_concentrations__Ko) / var_t263) * var_t262; // dimensionless
        const double var_t275 = (var_t252 * var_t168) * var_t187; // dimensionless
        const double var_t277 = var_ICa_f_gate__f * var_t6; // dimensionless
        const double var_t278 = pow(var_t8, 2.0); // dimensionless
        const double var_t282 = ((var_t211 / var_t278) * var_ICa_f_Ca_gate__Km_Ca) * var_t277; // dimensionless
        const double var_t287 = (((((1.0 / 2.0) * var_t252) * var_t205) * var_t9) * var_t7) * var_t6; // dimensionless
        const double var_t290 = ((var_t98 * var_t111) * var_t135) * var_t255; // dimensionless
        const double var_t293 = (((1.0 / 2.0) * var_t252) * var_t205) * var_t188; // dimensionless
        const double var_t295 = var_t26 * var_t23; // dimensionless
        const double var_t296 = var_t28 * var_t295; // dimensionless
        const double var_t299 = var_t43 * var_t28; // dimensionless
        const double var_t326 = (((((-var_t248) - (var_t296 * var_t36)) - var_t253) + ((((0.0060000000000000001 * var_t299) * var_t295) * var_t69) * var_t47)) + (((0.10000000000000001 * (((((((-0.0060000000000000001) * var_t299) * var_t26) * var_t23) * var_t46) + (var_t65 * ((((0.00059999999999999995 * var_t53) * var_t28) * var_t295) + (((0.10000000000000001 * var_t58) * var_t28) * var_t295)))) + (((((0.5 * var_t63) * var_cell__T) * var_t251) * var_t23) * var_t85))) * var_t76) * var_t73)) - ((0.10000000000000001 * var_t296) * var_t92); // dimensionless
        const double var_t328 = 0.10000000000000001 * var_cell__V; // dimensionless
        const double var_t330 = exp((-var_t328) - 4.7130000000000001); // dimensionless
        const double var_t332 = 1.0 - (1.0 * var_t330); // dimensionless
        const double var_t336 = pow(var_t332, 2.0); // dimensionless
        const double var_t341 = (0.32000000000000001 / var_t332) - (((0.032000000000000001 * var_t330) / var_t336) * (var_cell__V + 47.130000000000003)); // dimensionless
        const double var_t346 = (var_cell__V <= (-47.131)) ? var_t341 : (var_cell__V <= (-47.128999999999998)) ? 0.0 : ((-47.128999999999998) < var_cell__V) ? var_t341 : NAN; // dimensionless
        const double var_t350 = exp(((-1.0) / 11.0) * var_cell__V); // dimensionless
        const double var_t354 = var_cell__V + 47.130000000000003; // dimensionless
        const double var_t355 = fabs(var_t354); // dimensionless
        const double var_t358 = exp((-var_t55) - 4.7130000000000001); // dimensionless
        const double var_t363 = (0.001 < var_t355) ? ((0.32000000000000001 / (1.0 - var_t358)) * var_t354) : 3.2000000000000002; // dimensionless
        const double var_t366 = var_cell__V < (-40.0); // dimensionless
        const double var_t369 = exp((-11.764705879999999) - (0.14705882349999999 * var_cell__V)); // dimensionless
        const double var_t372 = (-40.0) < var_cell__V; // dimensionless
        const double var_t373 = var_t366 ? ((-0.01985294118) * var_t369) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t377 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t380 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t385 = exp(((-0.090090090090000005) * var_cell__V) - 0.96036036039999995); // dimensionless
        const double var_t388 = pow(0.13 + (0.13 * var_t385), 2.0); // dimensionless
        const double var_t392 = (var_cell__V <= (-40.0)) ? ((0.28123999999999999 * var_t377) + (108500.0 * var_t380)) : var_t372 ? ((0.011711711709999999 * var_t385) / var_t388) : NAN; // dimensionless
        const double var_t395 = var_cell__V < (-40.0); // dimensionless
        const double var_t397 = var_t395 ? (0.13500000000000001 * var_t369) : 0.0; // dimensionless
        const double var_t399 = exp(0.079000000000000001 * var_cell__V); // dimensionless
        const double var_t402 = exp(0.34999999999999998 * var_cell__V); // dimensionless
        const double var_t408 = var_t395 ? ((3.5600000000000001 * var_t399) + (310000.0 * var_t402)) : (1.0 / (0.13 + (0.13 * var_t385))); // dimensionless
        const double var_t411 = exp(0.24399999999999999 * var_cell__V); // dimensionless
        const double var_t414 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t417 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t421 = exp((0.311 * var_cell__V) + 24.640530009999999); // dimensionless
        const double var_t422 = 1.0 + var_t421; // dimensionless
        const double var_t423 = 1.0 / var_t422; // dimensionless
        const double var_t427 = ((-127140.0) * var_t411) - (3.4740000000000003e-05 * var_t414); // dimensionless
        const double var_t430 = pow(var_t422, 2.0); // dimensionless
        const double var_t436 = var_t366 ? ((((var_t423 * var_t417) * (((-31022.16) * var_t411) + (1.5254334000000001e-06 * var_t414))) + (var_t423 * var_t427)) - ((((0.311 * var_t421) / var_t430) * var_t417) * var_t427)) : ((-40.0) <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t440 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t443 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919950000001); // dimensionless
        const double var_t444 = 1.0 + var_t443; // dimensionless
        const double var_t448 = pow(var_t444, 2.0); // dimensionless
        const double var_t455 = exp((-2.5349999990000002e-07) * var_cell__V); // dimensionless
        const double var_t457 = exp((-var_t328) - 3.2000000000000002); // dimensionless
        const double var_t458 = 1.0 + var_t457; // dimensionless
        const double var_t462 = pow(var_t458, 2.0); // dimensionless
        const double var_t468 = (var_cell__V <= (-40.0)) ? ((((-0.001275024) / var_t444) * var_t440) + (((0.016701359999999998 * var_t443) / var_t448) * var_t440)) : var_t372 ? ((((-7.604999998e-08) / var_t458) * var_t455) + (((0.029999999999999999 * var_t457) / var_t462) * var_t455)) : NAN; // dimensionless
        const double var_t472 = exp(0.24399999999999999 * var_cell__V); // dimensionless
        const double var_t475 = exp((-0.043909999999999998) * var_cell__V); // dimensionless
        const double var_t482 = exp((0.311 * var_cell__V) + 24.640529999999998); // dimensionless
        const double var_t486 = var_t395 ? (((1.0 / (1.0 + var_t482)) * (var_cell__V + 37.780000000000001)) * (((-127140.0) * var_t472) - (3.4740000000000003e-05 * var_t475))) : 0.0; // dimensionless
        const double var_t488 = exp((-0.01052) * var_cell__V); // dimensionless
        const double var_t491 = exp(((-0.13780000000000001) * var_cell__V) - 5.5312919999999997); // dimensionless
        const double var_t497 = exp((-2.5349999999999999e-07) * var_cell__V); // dimensionless
        const double var_t499 = exp((-var_t55) - 3.2000000000000002); // dimensionless
        const double var_t504 = var_t395 ? ((0.1212 / (1.0 + var_t491)) * var_t488) : ((0.29999999999999999 / (1.0 + var_t499)) * var_t497); // dimensionless
        const double var_t506 = pow(2.0, 1.0 / 2.0); // dimensionless
        const double var_t507 = pow(M_PI, 1.0 / 2.0); // dimensionless
        const double var_t509 = (1.0 / var_t507) * var_t506; // dimensionless
        const double var_t514 = pow((0.059947366209999998 * var_cell__V) - 1.340423108, 2.0); // dimensionless
        const double var_t516 = exp(((-1.0) / 2.0) * var_t514); // dimensionless
        const double var_t526 = pow((0.066979236440000006 * var_cell__V) - 0.4202545211, 2.0); // dimensionless
        const double var_t528 = exp(((-1.0) / 2.0) * var_t526); // dimensionless
        const double var_t541 = exp((0.16333730790000001 * var_cell__V) - 1.005275795); // dimensionless
        const double var_t542 = 1.0 + var_t541; // dimensionless
        const double var_t543 = pow(var_t542, 2.0); // dimensionless
        const double var_t551 = exp(((-0.1081) * var_cell__V) - 1.06213655); // dimensionless
        const double var_t554 = exp(((-0.27789999999999998) * var_cell__V) - 2.73050645); // dimensionless
        const double var_t555 = 1.0 + var_t554; // dimensionless
        const double var_t556 = 1.0 / var_t555; // dimensionless
        const double var_t560 = (0.068699999999999997 * var_t551) + 0.0112; // dimensionless
        const double var_t561 = pow(var_t555, 2.0); // dimensionless
        const double var_t575 = exp(((-0.0166) * var_cell__V) + 0.70203391999999998); // dimensionless
        const double var_t578 = exp(((-0.094299999999999995) * var_cell__V) + 3.9880601599999999); // dimensionless
        const double var_t579 = 1.0 + var_t578; // dimensionless
        const double var_t581 = (1.0 / var_t579) * var_t575; // dimensionless
        const double var_t582 = 1.0 - var_Ito_r_gate__r; // dimensionless
        const double var_t585 = pow(var_t579, 2.0); // dimensionless
        const double var_t593 = exp(((-0.13439999999999999) * var_cell__V) + 0.67236288); // dimensionless
        const double var_t598 = exp(((-0.1348) * var_cell__V) + 6.9907279999999998e-06); // dimensionless
        const double var_t599 = 1.0 + var_t598; // dimensionless
        const double var_t600 = 1.0 / var_t599; // dimensionless
        const double var_t605 = (5.1860000000000002e-05 * var_cell__V) + (0.51490000000000002 * var_t593); // dimensionless
        const double var_t606 = pow(var_t599, 2.0); // dimensionless
        const double var_t618 = exp(((-0.17299999999999999) * var_cell__V) - 5.9257863000000004); // dimensionless
        const double var_t623 = exp(((-0.17319999999999999) * var_cell__V) - 5.9326369200000002); // dimensionless
        const double var_t624 = 1.0 + var_t623; // dimensionless
        const double var_t625 = 1.0 / var_t624; // dimensionless
        const double var_t627 = 1.0 - var_Ito_t_gate__t; // dimensionless
        const double var_t631 = (5.6119999999999998e-05 * var_cell__V) + (0.072099999999999997 * var_t618); // dimensionless
        const double var_t632 = pow(var_t624, 2.0); // dimensionless
        const double var_t640 = exp(((-1.6600000000000001e-09) * var_cell__V) - 5.6479010000000002e-08); // dimensionless
        const double var_t645 = exp(((-0.16039999999999999) * var_cell__V) - 5.4573694000000001); // dimensionless
        const double var_t646 = 1.0 + var_t645; // dimensionless
        const double var_t647 = 1.0 / var_t646; // dimensionless
        const double var_t652 = (0.0001215 * var_cell__V) + (0.076700000000000004 * var_t640); // dimensionless
        const double var_t653 = pow(var_t646, 2.0); // dimensionless
        const double var_t665 = exp((-0.17842998930000001) - (0.069846547140000007 * var_cell__V)); // dimensionless
        const double var_t666 = 1.0 + var_t665; // dimensionless
        const double var_t667 = pow(var_t666, 2.0); // dimensionless
        const double var_t675 = exp(1.008217446 + (0.063211125160000006 * var_cell__V)); // dimensionless
        const double var_t676 = 1.0 + var_t675; // dimensionless
        const double var_t677 = pow(var_t676, 2.0); // dimensionless
        const double var_t690 = exp((0.00052660000000000001 * var_cell__V) + 0.0021416821999999999); // dimensionless
        const double var_t693 = exp(((-0.12620000000000001) * var_cell__V) - 0.51325540000000003); // dimensionless
        const double var_t694 = 1.0 + var_t693; // dimensionless
        const double var_t696 = (1.0 / var_t694) * var_t690; // dimensionless
        const double var_t697 = 1.0 - var_IKr_Xr_gate__Xr; // dimensionless
        const double var_t700 = pow(var_t694, 2.0); // dimensionless
        const double var_t708 = exp((0.0016000000000000001 * var_cell__V) + 0.105056); // dimensionless
        const double var_t711 = exp((0.078299999999999995 * var_cell__V) + 5.141178); // dimensionless
        const double var_t712 = 1.0 + var_t711; // dimensionless
        const double var_t714 = (1.0 / var_t712) * var_t708; // dimensionless
        const double var_t717 = pow(var_t712, 2.0); // dimensionless
        const double var_t728 = var_t212 * var_t277; // dimensionless
        const double var_t729 = var_t225 * var_Ito_t_gate__t; // dimensionless
        const double var_t731 = var_t30 * var_t35; // dimensionless
        const double var_t737 = (var_t126 * var_t136) * var_t101; // dimensionless
        const double var_t742 = var_t211 * var_t188; // dimensionless
        const double var_t745 = floor(var_environment__time / var_cell__stim_period); // dimensionless
        const double var_t747 = var_environment__time - (var_cell__stim_period * var_t745); // dimensionless
        const double var_t752 = ((var_cell__stim_offset <= var_t747) && (var_t747 <= (var_cell__stim_offset + var_cell__stim_duration))) ? var_cell__stim_amplitude : 0.0; // dimensionless
        const double var_t753 = (((((((((((-var_t196) * var_t3) - var_t728) - (var_t729 * var_t14)) - (var_t731 * var_t16)) - (var_t238 * var_t38)) - ((0.10000000000000001 * var_t69) * var_t73)) - var_t737) - (((var_t175 * var_Ionic_concentrations__Ko) * var_t172) * var_t262)) - (var_t195 * var_t187)) - var_t742) - var_t752; // dimensionless
        const double var_t754 = 150.0 < var_t753; // dimensionless
        const double var_t755 = var_t754 ? 0.0 : 0.0; // dimensionless
        const double var_t756 = var_t754 ? (-100.5) : (-0.5); // dimensionless
        const double var_t759 = 0.0; // dimensionless
        const double var_t762 = (var_Irel__APtrack < 0.20000000000000001) && (0.17999999999999999 < var_Irel__APtrack); // dimensionless
        const double var_t763 = var_t762 ? (-100.5) : (-0.5); // dimensionless
        const double var_t764 = var_t762 ? (-100.5) : (-0.01); // dimensionless
        const double var_t765 = 0.20000000000000001 < var_Irel__APtrack; // dimensionless
        const double var_t768 = 1.0 / M_PI; // dimensionless
        const double var_t770 = 1.0 / var_Ionic_concentrations__preplength; // dimensionless
        const double var_t771 = pow(var_Ionic_concentrations__radius, 2.0); // dimensionless
        const double var_t772 = 1.0 / var_t771; // dimensionless
        const double var_t774 = (var_t26 * var_t772) * var_t770; // dimensionless
        const double var_t779 = (0.01 < var_Irel__APtrack2) && (var_Irel__APtrack <= 0.20000000000000001); // dimensionless
        const double var_t780 = var_t765 ? (((((-0.73529411749999996) * var_t774) * var_t768) * (((var_t11 + var_t134) - var_t151) + var_t188)) * var_cell__Cm) : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t781 = var_cell__Cm * var_ICa__g_Ca_max; // dimensionless
        const double var_t784 = (var_t774 * var_t768) * var_t211; // dimensionless
        const double var_t787 = var_t765 ? ((((-0.73529411749999996) * var_t784) * var_t10) * var_t781) : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t793 = var_t765 ? ((((((-0.73529411749999996) * var_t784) * var_t9) * var_ICa_f_Ca_gate__Km_Ca) * var_ICa_d_gate__d) * var_t781) : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t794 = var_t765 ? 0.0 : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t795 = var_t765 ? 0.0 : var_t779 ? 0.0 : (-0.5); // dimensionless
        const double var_t796 = var_t94 * var_cell__Cm; // dimensionless
        const double var_t804 = var_t765 ? (((((((2.2058823520000002 * var_t774) * var_t768) * var_t257) * var_t119) * var_t136) * var_t100) * var_t796) : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t810 = var_t765 ? (((((-0.73529411749999996) * var_t774) * var_t768) * ((((-var_t282) + var_t287) + var_t290) + var_t293)) * var_cell__Cm) : var_t779 ? 0.0 : 0.0; // dimensionless
        const double var_t820 = ((var_Irel__CSQNthresh < (1.0 / (1.0 + (var_calcium_buffers_in_the_JSR__K_mCSQN / var_Ionic_concentrations__Ca_JSR)))) && (var_Irel__OVRLDtrack3 < 0.37) && (var_Irel__APtrack3 < 0.37)) ? 0.0 : 0.0; // dimensionless
        const double var_t821 = var_Irel__Logicthresh < var_Irel__OVRLDtrack; // dimensionless
        const double var_t824 = (var_t821 && (var_Irel__OVRLDtrack2 < var_Irel__Logicthresh)) ? 0.0 : 0.0; // dimensionless
        const double var_t827 = (var_t821 && (var_Irel__OVRLDtrack3 < var_Irel__Logicthresh)) ? 0.0 : 0.0; // dimensionless
        const double var_t836 = var_cell__Cm * var_INa__g_Na; // dimensionless
        const double var_t841 = (var_t774 * var_t768) * var_t195; // dimensionless
        const double var_t860 = (var_t135 * var_t103) * var_t100; // dimensionless
        const double var_t866 = var_calcium_buffers_in_the_myoplasm__K_mCMDN * var_calcium_buffers_in_the_myoplasm__CMDN_max; // dimensionless
        const double var_t867 = var_calcium_buffers_in_the_myoplasm__K_mCMDN + var_Ionic_concentrations__Cai; // dimensionless
        const double var_t868 = pow(var_t867, 2.0); // dimensionless
        const double var_t871 = var_calcium_buffers_in_the_myoplasm__K_mTn * var_calcium_buffers_in_the_myoplasm__Tn_max; // dimensionless
        const double var_t872 = var_calcium_buffers_in_the_myoplasm__K_mTn + var_Ionic_concentrations__Cai; // dimensionless
        const double var_t873 = pow(var_t872, 2.0); // dimensionless
        const double var_t878 = 1.0 + ((((1.0 / var_t868) * var_t866) + ((1.0 / var_t873) * var_t871)) * var_calcium_buffers_in_the_myoplasm__buffon); // dimensionless
        const double var_t879 = 1.0 / var_t878; // dimensionless
        const double var_t880 = var_cell__Cm * var_t879; // dimensionless
        const double var_t887 = ((var_t26 * var_t772) * var_t770) * var_t768; // dimensionless
        const double var_t894 = ((var_t774 * var_t768) * var_t211) * var_t9; // dimensionless
        const double var_t901 = var_Irel__delta_Ca_ith < var_Irel__Cainfluxtrack; // dimensionless
        const double var_t903 = var_Irel__G_rel_max * (var_Irel__Cainfluxtrack - var_Irel__delta_Ca_ith); // dimensionless
        const double var_t904 = (var_Irel__K_mrel + var_Irel__Cainfluxtrack) - var_Irel__delta_Ca_ith; // dimensionless
        const double var_t905 = 1.0 / var_t904; // dimensionless
        const double var_t908 = 1.0 - var_Irel__APtrack2; // dimensionless
        const double var_t909 = var_t908 * var_t905; // dimensionless
        const double var_t914 = (var_Irel__Cainfluxtrack <= var_Irel__delta_Ca_ith) && (0.0 < var_Irel__OVRLDtrack2); // dimensionless
        const double var_t915 = var_t901 ? ((((-var_Irel__APtrack2) * var_t905) * var_t903) + (var_t909 * var_t903)) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t917 = var_Ionic_concentrations__Ca_JSR - var_Ionic_concentrations__Cai; // dimensionless
        const double var_t923 = pow(var_t904, 2.0); // dimensionless
        const double var_t929 = var_t901 ? ((((var_Irel__APtrack2 * var_t908) * var_t905) * var_Irel__G_rel_max) - (((var_Irel__APtrack2 * var_t908) / var_t923) * var_t903)) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t933 = var_t901 ? 0.0 : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t944 = pow(var_t878, 2.0); // dimensionless
        const double var_t954 = var_t901 ? ((var_Irel__APtrack2 * var_t909) * var_t903) : var_t914 ? 0.0 : 0.0; // dimensionless
        const double var_t955 = var_t917 * var_t954; // dimensionless
        const double var_t957 = var_t12 ? 0.00025999999999999998 : 0.00017000000000000001; // dimensionless
        const double var_t960 = var_t12 ? 0.0044999999999999997 : 0.0015; // dimensionless
        const double var_t961 = var_Ionic_concentrations__Cai * var_t960; // dimensionless
        const double var_t962 = var_Ionic_concentrations__Cai + var_Iup__K_mup; // dimensionless
        const double var_t963 = 1.0 / var_t962; // dimensionless
        const double var_t984 = var_t963 * var_t960; // dimensionless
        const double var_t986 = pow(var_t962, 2.0); // dimensionless
        const double var_t988 = (1.0 / var_t986) * var_t961; // dimensionless
        const double var_t1003 = var_t13 * var_cell__Cm; // dimensionless
        const double var_t1030 = var_calcium_buffers_in_the_JSR__K_mCSQN * var_calcium_buffers_in_the_JSR__CSQN_max; // dimensionless
        const double var_t1031 = var_calcium_buffers_in_the_JSR__K_mCSQN + var_Ionic_concentrations__Ca_JSR; // dimensionless
        const double var_t1032 = pow(var_t1031, 2.0); // dimensionless
        const double var_t1035 = 1.0 + ((1.0 / var_t1032) * var_t1030); // dimensionless
        const double var_t1036 = 1.0 / var_t1035; // dimensionless
        const double var_t1044 = pow(var_t1035, 2.0); // dimensionless
        const double var_t1047 = 1.0 / var_Itr__tau_tr; // dimensionless
        const double var_t1061 = 0.086956521740000001 * var_t1047; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t189);
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * ((((-0.73529411749999996) * var_t887) * (((var_t11 + (2.0 * var_t134)) - (2.0 * var_t151)) + var_t188)) * var_t880);
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * (((1.0 - var_INa_m_gate__m) * var_t346) + ((0.0072727272729999999 * var_INa_m_gate__m) * var_t350));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * (((1.0 - var_INa_h_gate__h) * var_t373) - (var_INa_h_gate__h * var_t392));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * (((1.0 - var_INa_j_gate__j) * var_t436) - (var_INa_j_gate__j * var_t468));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * (((((0.4491826176 * (1.0 - var_ICa_d_gate__d)) * var_t516) * (((-0.0035936867160000002) * var_cell__V) + 0.080354834949999995)) * var_t509) + ((((0.17749497659999999 * var_ICa_d_gate__d) * var_t528) * (((-0.0044862181139999997) * var_cell__V) + 0.028148326929999998)) * var_t509));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * (((((-0.00112245398) * var_t541) * (1.0 - var_ICa_f_gate__f)) / var_t543) - (var_ICa_f_gate__f * ((((-0.0074264700000000001) * var_t556) * var_t551) + (((0.27789999999999998 * var_t554) / var_t561) * var_t560))));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * ((((((-0.0087415600000000006) * var_t582) * var_t581) + ((((0.049658380000000002 * var_t578) * var_t582) / var_t585) * var_t575)) - ((var_Ito_r_gate__r * var_t600) * (5.1860000000000002e-05 - (0.069202559999999996 * var_t593)))) - ((((0.1348 * var_t598) * var_Ito_r_gate__r) / var_t606) * var_t605));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((var_t627 * var_t625) * (5.6119999999999998e-05 - (0.0124733 * var_t618))) + ((((0.17319999999999999 * var_t623) * var_t627) / var_t632) * var_t631)) - ((var_Ito_t_gate__t * var_t647) * (0.0001215 - (1.27322e-10 * var_t640)))) - ((((0.16039999999999999 * var_t645) * var_Ito_t_gate__t) / var_t653) * var_t652));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * ((((0.00021044764649999999 * var_t665) * (1.0 - var_IKs_Xs_gate__Xs)) / var_t667) + (((0.00037104930470000002 * var_t675) * var_IKs_Xs_gate__Xs) / var_t677));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * (((((2.633e-06 * var_t697) * var_t696) + ((((0.00063100000000000005 * var_t693) * var_t697) / var_t700) * var_t690)) - ((2.5599999999999999e-05 * var_IKr_Xr_gate__Xr) * var_t714)) + ((((0.0012528000000000001 * var_t711) * var_IKr_Xr_gate__Xr) / var_t717) * var_t708));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * (var_t780);
        IJth(rJacobian, 18, 0) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t774) * var_t768) * ((((var_t5 + var_t187) - (3.0 * var_t134)) + (3.0 * var_t151)) - (3.0 * var_t186))) * var_cell__Cm);
        IJth(rJacobian, 19, 0) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t774) * var_t768) * (((((((var_t15 - var_t34) + var_t36) - var_t72) - var_t91) + var_t93) + var_t38) + (2.0 * var_t186))) * var_cell__Cm);
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((var_t282 - var_t287) + var_t290) - var_t293));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * ((((((-2.0) * (((((-1.0) / var_t868) / var_t867) * var_t866) - (((1.0 / var_t873) / var_t872) * var_t871))) * var_calcium_buffers_in_the_myoplasm__buffon) * ((((((((-0.73529411749999996) * var_t774) * var_t768) * ((var_t728 - (2.0 * var_t737)) + var_t742)) * var_cell__Cm) + (0.0070588235289999997 * var_t955)) + ((0.081176470589999994 * var_Ionic_concentrations__Ca_NSR) * var_t957)) - ((0.081176470589999994 * var_t963) * var_t961))) / var_t944) + (((((((((-0.73529411749999996) * var_t774) * var_t768) * ((((-var_t282) + var_t287) + (2.0 * var_t290)) + var_t293)) * var_cell__Cm) - (0.0070588235289999997 * var_t954)) - (0.081176470589999994 * var_t984)) + (0.081176470589999994 * var_t988)) * var_t879));
        IJth(rJacobian, 11, 1) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 14, 1) = var_chaste_interface__environment__fake_dt * (var_t810);
        IJth(rJacobian, 18, 1) = var_chaste_interface__environment__fake_dt * (((((4.4117647050000004 * var_t774) * var_t768) * var_t124) * var_t860) * var_t796);
        IJth(rJacobian, 20, 1) = var_chaste_interface__environment__fake_dt * (var_t954 * var_t1036);
        IJth(rJacobian, 21, 1) = var_chaste_interface__environment__fake_dt * (var_t984 - var_t988);
        IJth(rJacobian, 0, 2) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t196) * var_t1) * var_INa__g_Na));
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * ((-var_t363) - (0.080000000000000002 * var_t350));
        IJth(rJacobian, 11, 2) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 18, 2) = var_chaste_interface__environment__fake_dt * ((((((-4.4117647050000004) * var_t841) * var_INa_j_gate__j) * var_INa_h_gate__h) * var_t1) * var_t836);
        IJth(rJacobian, 0, 3) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t195) * var_INa_j_gate__j) * var_t3));
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * ((-var_t397) - var_t408);
        IJth(rJacobian, 11, 3) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 18, 3) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t841) * var_INa_j_gate__j) * var_t2) * var_t836);
        IJth(rJacobian, 0, 4) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t195) * var_INa_h_gate__h) * var_t3));
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * ((-var_t486) - var_t504);
        IJth(rJacobian, 11, 4) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 18, 4) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t841) * var_INa_h_gate__h) * var_t2) * var_t836);
        IJth(rJacobian, 0, 5) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t212) * var_t203));
        IJth(rJacobian, 1, 5) = var_chaste_interface__environment__fake_dt * (((((-0.73529411749999996) * var_t894) * var_ICa_f_Ca_gate__Km_Ca) * var_t203) * var_t880);
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (((((-0.4491826176) * var_t516) * var_t509) - 0.14710000000000001) + ((0.17749497659999999 * var_t528) * var_t509));
        IJth(rJacobian, 11, 5) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 14, 5) = var_chaste_interface__environment__fake_dt * (var_t787);
        IJth(rJacobian, 0, 6) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t212) * var_t6));
        IJth(rJacobian, 1, 6) = var_chaste_interface__environment__fake_dt * (((((-0.73529411749999996) * var_t894) * var_ICa_f_Ca_gate__Km_Ca) * var_t6) * var_t880);
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * ((((-0.0068719999999999996) / var_t542) - (var_t556 * var_t560)) - 0.00054739999999999997);
        IJth(rJacobian, 11, 6) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 14, 6) = var_chaste_interface__environment__fake_dt * (var_t793);
        IJth(rJacobian, 0, 7) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t225) * var_Ito_t_gate__t) * var_t13));
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * (((-0.52659999999999996) * var_t581) - (var_t600 * var_t605));
        IJth(rJacobian, 11, 7) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 19, 7) = var_chaste_interface__environment__fake_dt * ((((-1.4705882349999999) * var_t887) * var_t729) * var_t1003);
        IJth(rJacobian, 0, 8) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t225) * var_t14));
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * (((-var_t625) * var_t631) - (var_t647 * var_t652));
        IJth(rJacobian, 11, 8) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 19, 8) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t887) * var_t225) * var_Ito_r_gate__r) * var_t1003);
        IJth(rJacobian, 0, 9) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-2.0) * var_t238) * var_IKs_Xs_gate__Xs) * var_IKs__g_Ks_max));
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * (((-0.0030130000000000001) / var_t666) - (0.0058700000000000002 / var_t676));
        IJth(rJacobian, 11, 9) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 19, 9) = var_chaste_interface__environment__fake_dt * ((((((-2.9411764699999998) * var_t887) * var_t238) * var_IKs_Xs_gate__Xs) * var_cell__Cm) * var_IKs__g_Ks_max);
        IJth(rJacobian, 0, 10) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t30) * var_t35) * var_IKr__g_Kr_max));
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (((-0.0050000000000000001) * var_t696) - (0.016 * var_t714));
        IJth(rJacobian, 11, 10) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 19, 10) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t887) * var_t731) * var_cell__Cm) * var_IKr__g_Kr_max);
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * (var_t756);
        IJth(rJacobian, 12, 11) = var_chaste_interface__environment__fake_dt * (var_t759);
        IJth(rJacobian, 13, 11) = var_chaste_interface__environment__fake_dt * (var_t759);
        IJth(rJacobian, 14, 11) = var_chaste_interface__environment__fake_dt * (var_t794);
        IJth(rJacobian, 1, 12) = var_chaste_interface__environment__fake_dt * (((0.0070588235289999997 * var_t917) * var_t915) * var_t879);
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * (var_t763);
        IJth(rJacobian, 14, 12) = var_chaste_interface__environment__fake_dt * (var_t794);
        IJth(rJacobian, 20, 12) = var_chaste_interface__environment__fake_dt * (((-var_t917) * var_t915) * var_t1036);
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (var_t764);
        IJth(rJacobian, 15, 13) = var_chaste_interface__environment__fake_dt * (var_t820);
        IJth(rJacobian, 1, 14) = var_chaste_interface__environment__fake_dt * (((0.0070588235289999997 * var_t917) * var_t929) * var_t879);
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * (var_t795);
        IJth(rJacobian, 20, 14) = var_chaste_interface__environment__fake_dt * (((-var_t917) * var_t929) * var_t1036);
        IJth(rJacobian, 16, 15) = var_chaste_interface__environment__fake_dt * (var_t824);
        IJth(rJacobian, 17, 15) = var_chaste_interface__environment__fake_dt * (var_t827);
        IJth(rJacobian, 1, 16) = var_chaste_interface__environment__fake_dt * (((0.0070588235289999997 * var_t917) * var_t933) * var_t879);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * (var_t824);
        IJth(rJacobian, 20, 16) = var_chaste_interface__environment__fake_dt * (((-var_t917) * var_t933) * var_t1036);
        IJth(rJacobian, 15, 17) = var_chaste_interface__environment__fake_dt * (var_t820);
        IJth(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * (var_t827);
        IJth(rJacobian, 0, 18) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t245) - var_t249) - var_t254) - (3.0 * var_t259)) - (1.5 * var_t272)) - var_t275));
        IJth(rJacobian, 1, 18) = var_chaste_interface__environment__fake_dt * (((((((4.4117647050000004 * var_t887) * var_Ionic_concentrations__Cao) * var_t120) * var_t119) * var_t860) * var_t94) * var_t880);
        IJth(rJacobian, 11, 18) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 14, 18) = var_chaste_interface__environment__fake_dt * (var_t804);
        IJth(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t774) * var_t768) * (((var_t245 + var_t275) + (9.0 * var_t259)) + (4.5 * var_t272))) * var_cell__Cm);
        IJth(rJacobian, 19, 18) = var_chaste_interface__environment__fake_dt * (((((-1.4705882349999999) * var_t774) * var_t768) * ((var_t249 + var_t254) - (3.0 * var_t272))) * var_cell__Cm);
        IJth(rJacobian, 0, 19) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t326);
        IJth(rJacobian, 11, 19) = var_chaste_interface__environment__fake_dt * (var_t755);
        IJth(rJacobian, 19, 19) = var_chaste_interface__environment__fake_dt * ((((1.4705882349999999 * var_t774) * var_t768) * var_t326) * var_cell__Cm);
        IJth(rJacobian, 1, 20) = var_chaste_interface__environment__fake_dt * ((0.0070588235289999997 * var_t954) * var_t879);
        IJth(rJacobian, 15, 20) = var_chaste_interface__environment__fake_dt * (var_t820);
        IJth(rJacobian, 20, 20) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t1032) / var_t1031) * var_t1030) * ((var_t1047 * (var_Ionic_concentrations__Ca_NSR - var_Ionic_concentrations__Ca_JSR)) - var_t955)) / var_t1044) + (((-var_t1047) - var_t954) * var_t1036));
        IJth(rJacobian, 21, 20) = var_chaste_interface__environment__fake_dt * (var_t1061);
        IJth(rJacobian, 1, 21) = var_chaste_interface__environment__fake_dt * ((0.081176470589999994 * var_t957) * var_t879);
        IJth(rJacobian, 20, 21) = var_chaste_interface__environment__fake_dt * (var_t1047 * var_t1036);
        IJth(rJacobian, 21, 21) = var_chaste_interface__environment__fake_dt * ((-var_t957) - var_t1061);
    }
    
template<>
void OdeSystemInformation<Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "priebe_beuckelmann_model_1998";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-90.7796417483135);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.0002);

    // rY[2]:
    this->mVariableNames.push_back("INa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000585525582501575);

    // rY[3]:
    this->mVariableNames.push_back("INa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.995865529216237);

    // rY[4]:
    this->mVariableNames.push_back("INa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.997011204496203);

    // rY[5]:
    this->mVariableNames.push_back("ICa_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.50653215966786e-10);

    // rY[6]:
    this->mVariableNames.push_back("ICa_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.92130376850548);

    // rY[7]:
    this->mVariableNames.push_back("Ito_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.75032478501027e-5);

    // rY[8]:
    this->mVariableNames.push_back("Ito_t_gate__t");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999897251531651);

    // rY[9]:
    this->mVariableNames.push_back("IKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00885658064818147);

    // rY[10]:
    this->mVariableNames.push_back("IKr_Xr_gate__Xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.000215523048438941);

    // rY[11]:
    this->mVariableNames.push_back("Irel__APtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-1.372158997089e-136);

    // rY[12]:
    this->mVariableNames.push_back("Irel__APtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(-7.58517896402761e-136);

    // rY[13]:
    this->mVariableNames.push_back("Irel__APtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(4.82035353592764e-5);

    // rY[14]:
    this->mVariableNames.push_back("Irel__Cainfluxtrack");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(-7.71120176147331e-138);

    // rY[15]:
    this->mVariableNames.push_back("Irel__OVRLDtrack");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[16]:
    this->mVariableNames.push_back("Irel__OVRLDtrack2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[17]:
    this->mVariableNames.push_back("Irel__OVRLDtrack3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1e-6);

    // rY[18]:
    this->mVariableNames.push_back("Ionic_concentrations__Nai");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(10);

    // rY[19]:
    this->mVariableNames.push_back("Ionic_concentrations__Ki");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(140);

    // rY[20]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_JSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    // rY[21]:
    this->mVariableNames.push_back("Ionic_concentrations__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(2.5);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicpriebe_beuckelmann_model_1998FromCellMLCvode)

#endif // CHASTE_CVODE
