#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: decker_2009
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:08:33 2020
//! 
//! <autogenerated>

#include "decker_2009.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicdecker_2009FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__membrane__stim_offset = 0.0; // millisecond
        const double var_chaste_interface__membrane__stim_period = 1000.0; // millisecond
        const double var_chaste_interface__membrane__stim_duration = 0.5; // millisecond
        const double var_membrane__stim_amplitude =  -80.0; // uA_per_uF
        const double var_chaste_interface__membrane__stim_amplitude_converter = var_membrane__stim_amplitude; // uA_per_uF
        const double var_chaste_interface__membrane__stim_amplitude = var_chaste_interface__membrane__stim_amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__membrane__stim_amplitude),
                var_chaste_interface__membrane__stim_duration,
                var_chaste_interface__membrane__stim_period,
                var_chaste_interface__membrane__stim_offset
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Dynamicdecker_2009FromCellMLCvode::GetIntracellularCalciumConcentration()
    {
        return NV_Ith_S(mStateVariables, 1);
    }
    
    Dynamicdecker_2009FromCellMLCvode::Dynamicdecker_2009FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                48,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicdecker_2009FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicdecker_2009FromCellMLCvode::~Dynamicdecker_2009FromCellMLCvode()
    {
    }
    
    double Dynamicdecker_2009FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.472528
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.09945e-5
        double var_chaste_interface__IKs__O1 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.051906959485266e-5
        double var_chaste_interface__IKs__O2 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 2.372219883411999e-6
        double var_chaste_interface__ICaL__O = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 2.27419494597377e-5
        double var_chaste_interface__ICaL__O_star = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 1.350122566369778e-15
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9913109066867
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.9970771239754529
        double var_chaste_interface__INaL_mL_gate__mL = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INaL_hL_gate__hL = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.3593255076983574
        double var_chaste_interface__IKr_xr_gate__xr = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 1.235996442041028e-8
        double var_chaste_interface__Ito1_a_gate__a = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 1.773318268499115e-5
        double var_chaste_interface__Ito1_i1f_gate__i1f = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.9979722
        double var_chaste_interface__Ito1_i1s_gate__i1s = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.9874435
        double var_chaste_interface__Ito2_i2f_gate__i2f = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.9960352
        double var_chaste_interface__Irel__Irel = NV_Ith_S(rY, 37);
        // Units: mM_per_ms; Initial value: 0.00107332
        double var_chaste_interface__Ca__Ca_ss_sr = NV_Ith_S(rY, 40);
        // Units: mM; Initial value: 9.04757e-5
        double var_chaste_interface__Ca__Ca_ss_CaL = NV_Ith_S(rY, 41);
        // Units: mM; Initial value: 9.61545e-5
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 42);
        // Units: mM; Initial value: 6.935575
        double var_chaste_interface__Na__Na_ss_sr = NV_Ith_S(rY, 43);
        // Units: mM; Initial value: 6.935607
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 44);
        // Units: mM; Initial value: 20.26842
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 46);
        // Units: mM; Initial value: 145.5689
        
        const double var_model_parameters__F = 96487.0; // C_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_model_parameters__R = 8314.0; // J_per_kmole_K
        const double var_model_parameters__K_o = 5.4000000000000004; // mM
        const double var_model_parameters__Ca_o = 1.8; // mM
        const double var_model_parameters__Na_o = 140.0; // mM
        const double var_model_parameters__Cl_o = 100.0; // mM
        const double var_chaste_interface__membrane__i_Stim = 0.0;
        const double var_membrane__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
        const double var_membrane__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_membrane__i_Stim = var_membrane__i_Stim_converter / var_membrane__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_ICaL__R = var_model_parameters__R; // J_per_kmole_K
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_ICaL__gamma_Cai = 1.0; // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // C_per_mole
        const double var_ICaL__Ca_ss_CaL = var_chaste_interface__Ca__Ca_ss_CaL; // mM
        const double var_ICaL__PCa = 0.00015552; // L_per_F_ms
        const double var_ICaL__ICaL_max = (((var_ICaL__PCa * 4.0 * var_ICaL__Vm * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T)) * ((var_ICaL__gamma_Cai * var_ICaL__Ca_ss_CaL * exp((2.0 * var_ICaL__Vm * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Ca_o))) / (exp((2.0 * var_ICaL__Vm * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // uA_per_uF
        const double var_ICaL__O = var_chaste_interface__ICaL__O; // dimensionless
        const double var_ICaL__O_star = var_chaste_interface__ICaL__O_star; // dimensionless
        const double var_ICaL__ICaL = var_ICaL__ICaL_max * (var_ICaL__O + var_ICaL__O_star); // uA_per_uF
        const double var_membrane__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_INaCa__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_INaCa__Na_ss_sr = var_chaste_interface__Na__Na_ss_sr; // mM
        const double var_INaCa__Ca_ss_sr = var_chaste_interface__Ca__Ca_ss_sr; // mM
        const double var_INaCa__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INaCa__Na_o = var_model_parameters__Na_o; // mM
        const double var_INaCa__Vmax = 4.5; // uA_per_uF
        const double var_INaCa__F = var_model_parameters__F; // C_per_mole
        const double var_INaCa__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_INaCa__eta = 0.27000000000000002; // dimensionless
        const double var_INaCa__num_ss = 0.20000000000000001 * var_INaCa__Vmax * ((pow(var_INaCa__Na_ss_sr, 3.0) * var_INaCa__Ca_o * exp((var_INaCa__eta * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_ss_sr * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // mM4_uA_per_uF
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__denom_ss_4 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_ss_sr / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_ss_sr, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_ss_sr); // mM4
        const double var_INaCa__ksat = 0.32000000000000001; // dimensionless
        const double var_INaCa__denom_ss_2 = 1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))); // dimensionless
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__denom_ss_3 = (var_INaCa__KmCao * pow(var_INaCa__Na_ss_sr, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__Ca_ss_sr) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__Ca_ss_sr / var_INaCa__KmCai))); // mM4
        const double var_INaCa__KmCa_act = 0.000125; // mM
        const double var_INaCa__denom_ss_1 = 1.0 + pow(var_INaCa__KmCa_act / var_INaCa__Ca_ss_sr, 2.0); // dimensionless
        const double var_INaCa__INaCa_ss_sr = var_INaCa__num_ss / (var_INaCa__denom_ss_1 * var_INaCa__denom_ss_2 * (var_INaCa__denom_ss_3 + var_INaCa__denom_ss_4)); // uA_per_uF
        const double var_membrane__INaCa_ss_sr = var_INaCa__INaCa_ss_sr; // uA_per_uF
        const double var_IpCa__KmpCa = 0.00050000000000000001; // mM
        const double var_IpCa__gpCa = 0.057500000000000002; // uA_per_uF
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IpCa__IpCa = (var_IpCa__gpCa * var_IpCa__Ca_i) / (var_IpCa__KmpCa + var_IpCa__Ca_i); // uA_per_uF
        const double var_membrane__IpCa = var_IpCa__IpCa; // uA_per_uF
        const double var_ICab__PCab = 1.9950840000000001e-07; // L_per_F_ms
        const double var_ICab__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_ICab__F = var_model_parameters__F; // C_per_mole
        const double var_ICab__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_ICab__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_ICab__T = var_model_parameters__T; // kelvin
        const double var_ICab__gamma_Ca_o = 0.34100000000000003; // dimensionless
        const double var_ICab__R = var_model_parameters__R; // J_per_kmole_K
        const double var_ICab__gamma_Ca_i = 1.0; // dimensionless
        const double var_ICab__ICab = (((var_ICab__PCab * 4.0 * var_ICab__Vm * pow(var_ICab__F, 2.0)) / (var_ICab__R * var_ICab__T)) * ((var_ICab__gamma_Ca_i * var_ICab__Ca_i * exp((2.0 * var_ICab__Vm * var_ICab__F) / (var_ICab__R * var_ICab__T))) - (var_ICab__gamma_Ca_o * var_ICab__Ca_o))) / (exp((2.0 * var_ICab__Vm * var_ICab__F) / (var_ICab__R * var_ICab__T)) - 1.0); // uA_per_uF
        const double var_membrane__ICab = var_ICab__ICab; // uA_per_uF
        const double var_INaCa__denom_2 = 1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))); // dimensionless
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__denom_3 = (var_INaCa__KmCao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__Ca_i) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__Ca_i / var_INaCa__KmCai))); // mM4
        const double var_INaCa__denom_1 = 1.0 + pow(var_INaCa__KmCa_act / var_INaCa__Ca_i, 2.0); // dimensionless
        const double var_INaCa__num = 0.80000000000000004 * var_INaCa__Vmax * ((pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp((var_INaCa__eta * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // mM4_uA_per_uF
        const double var_INaCa__denom_4 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i); // mM4
        const double var_INaCa__INaCa = var_INaCa__num / (var_INaCa__denom_1 * var_INaCa__denom_2 * (var_INaCa__denom_3 + var_INaCa__denom_4)); // uA_per_uF
        const double var_membrane__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_membrane__caiont = (var_membrane__ICaL + var_membrane__ICab + var_membrane__IpCa) - (2.0 * (var_membrane__INaCa + var_membrane__INaCa_ss_sr)); // uA_per_uF
        const double var_INa__g_Na = 9.0749999999999993; // mS_per_uF
        const double var_INa__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // J_per_kmole_K
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__Na_o = var_model_parameters__Na_o; // mM
        const double var_reversal_potentials__F = var_model_parameters__F; // C_per_mole
        const double var_reversal_potentials__ENa = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__INa = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__Vm - var_INa__ENa); // uA_per_uF
        const double var_membrane__INa = var_INa__INa; // uA_per_uF
        const double var_INab__PNab = 3.2000000000000001e-09; // L_per_F_ms
        const double var_INab__Na_o = var_model_parameters__Na_o; // mM
        const double var_INab__F = var_model_parameters__F; // C_per_mole
        const double var_INab__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INab__T = var_model_parameters__T; // kelvin
        const double var_INab__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INab__phi = (var_INab__F * var_INab__Vm) / (var_INab__R * var_INab__T); // dimensionless
        const double var_INab__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INab__INab = (var_INab__F * var_INab__PNab * var_INab__phi * ((var_INab__Na_i * exp(var_INab__phi)) - var_INab__Na_o)) / (exp(var_INab__phi) - 1.0); // uA_per_uF
        const double var_membrane__INab = var_INab__INab; // uA_per_uF
        const double var_INaL__mL = var_chaste_interface__INaL_mL_gate__mL; // dimensionless
        const double var_INaL__ENa = var_reversal_potentials__ENa; // mV
        const double var_INaL__hL = var_chaste_interface__INaL_hL_gate__hL; // dimensionless
        const double var_INaL__gNaL = 0.0064999999999999997; // mS_per_uF
        const double var_INaL__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaL__INaL = var_INaL__gNaL * pow(var_INaL__mL, 3.0) * var_INaL__hL * (var_INaL__Vm - var_INaL__ENa); // uA_per_uF
        const double var_membrane__INaL = var_INaL__INaL; // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__K_o = var_model_parameters__K_o; // mM
        const double var_INaK__PK = var_INaK__K_o / (var_INaK__K_o + var_INaK__kmko); // dimensionless
        const double var_INaK__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaK__F = var_model_parameters__F; // C_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__sigma = 1.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INaK__V_half =  -92.0; // mV
        const double var_INaK__phi = (var_INaK__sigma * (var_INaK__Vm - var_INaK__V_half) * var_INaK__F) / (var_INaK__R * var_INaK__T); // dimensionless
        const double var_INaK__fv = 1.0 / (1.0 + exp(-var_INaK__phi)); // dimensionless
        const double var_INaK__ibarnak = 1.3999999999999999; // uA_per_uF
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmnai = 2.6000000000000001; // mM
        const double var_INaK__PNa = pow(var_INaK__Na_i / (var_INaK__Na_i + var_INaK__kmnai), 3.0); // dimensionless
        const double var_INaK__INaK = var_INaK__ibarnak * var_INaK__fv * var_INaK__PK * var_INaK__PNa; // uA_per_uF
        const double var_membrane__INaK = var_INaK__INaK; // uA_per_uF
        const double var_membrane__naiont = var_membrane__INa + (3.0 * (var_membrane__INaCa + var_membrane__INaCa_ss_sr)) + (3.0 * var_membrane__INaK) + var_membrane__INaL + var_membrane__INab; // uA_per_uF
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_model_parameters__K_o; // mM
        const double var_reversal_potentials__EK = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // mV
        const double var_Ito1__EK = var_reversal_potentials__EK; // mV
        const double var_Ito1__i1f = var_chaste_interface__Ito1_i1f_gate__i1f; // dimensionless
        const double var_Ito1__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_Ito1__rto1 = exp(var_Ito1__Vm / 550.0); // dimensionless
        const double var_Ito1__i1s = var_chaste_interface__Ito1_i1s_gate__i1s; // dimensionless
        const double var_Ito1__gto1 = 0.4975; // mS_per_uF
        const double var_Ito1__a = var_chaste_interface__Ito1_a_gate__a; // dimensionless
        const double var_Ito1__Ito1 = var_Ito1__gto1 * pow(var_Ito1__a, 3.0) * var_Ito1__i1f * var_Ito1__i1s * var_Ito1__rto1 * (var_Ito1__Vm - var_Ito1__EK); // uA_per_uF
        const double var_membrane__Ito1 = var_Ito1__Ito1; // uA_per_uF
        const double var_IKr__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKr_r_gate__Vm = var_IKr__Vm; // mV
        const double var_IKr_r_gate__r = 1.0 / (1.0 + exp((var_IKr_r_gate__Vm + 10.0) / 15.4)); // dimensionless
        const double var_IKr__r = var_IKr_r_gate__r; // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr_xr_gate__xr; // dimensionless
        const double var_IKr__K_o = var_model_parameters__K_o; // mM
        const double var_IKr__gKr_max = 0.013854200000000001; // mS_per_uF
        const double var_IKr__gKr = var_IKr__gKr_max * sqrt(var_IKr__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__IKr = var_IKr__gKr * var_IKr__xr * var_IKr__r * (var_IKr__Vm - var_IKr__EK); // uA_per_uF
        const double var_membrane__IKr = var_IKr__IKr; // uA_per_uF
        const double var_IKs__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKs__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IKs__gKs = 0.082600000000000007 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))); // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__O2 = var_chaste_interface__IKs__O2; // dimensionless
        const double var_IKs__O1 = var_chaste_interface__IKs__O1; // dimensionless
        const double var_IKs__OKs = var_IKs__O1 + var_IKs__O2; // dimensionless
        const double var_IKs__IKs = var_IKs__gKs * var_IKs__OKs * (var_IKs__Vm - var_IKs__EKs); // uA_per_uF
        const double var_membrane__IKs = var_IKs__IKs; // uA_per_uF
        const double var_IKp__gKp = 0.0027599999999999999; // mS_per_uF
        const double var_IKp__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKp__Kp = 1.0 / (1.0 + exp((7.4880000000000004 - var_IKp__Vm) / 5.9800000000000004)); // dimensionless
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__IKp = var_IKp__gKp * var_IKp__Kp * (var_IKp__Vm - var_IKp__EK); // uA_per_uF
        const double var_membrane__IKp = var_IKp__IKp; // uA_per_uF
        const double var_IK1__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IK1_K1_gate__Vm = var_IK1__Vm; // mV
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1_K1_gate__EK = var_IK1__EK; // mV
        const double var_IK1_K1_gate__beta_k1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) + 5.476))) + exp(0.061749999999999999 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) - 594.30999999999995))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) + 4.7530000000000001))); // dimensionless
        const double var_IK1_K1_gate__alpha_k1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) - 59.215000000000003))); // dimensionless
        const double var_IK1_K1_gate__K1 = var_IK1_K1_gate__alpha_k1 / (var_IK1_K1_gate__alpha_k1 + var_IK1_K1_gate__beta_k1); // dimensionless
        const double var_IK1__K1 = var_IK1_K1_gate__K1; // dimensionless
        const double var_IK1__K_o = var_model_parameters__K_o; // mM
        const double var_IK1__gK1 = 0.5 * sqrt(var_IK1__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IK1__IK1 = var_IK1__gK1 * var_IK1__K1 * (var_IK1__Vm - var_IK1__EK); // uA_per_uF
        const double var_membrane__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_membrane__kiont = var_membrane__IKr + var_membrane__IKs + var_membrane__IK1 + var_membrane__IKp + ((-2.0) * var_membrane__INaK) + var_membrane__Ito1 + var_membrane__i_Stim; // uA_per_uF
        const double var_reversal_potentials__Cl_o = var_model_parameters__Cl_o; // mM
        const double var_reversal_potentials__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_reversal_potentials__ECl = (((-var_reversal_potentials__R) * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cl_o / var_reversal_potentials__Cl_i); // mV
        const double var_IClb__ECl = var_reversal_potentials__ECl; // mV
        const double var_IClb__gClb = 0.00022499999999999999; // mS_per_uF
        const double var_IClb__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IClb__IClb = var_IClb__gClb * (var_IClb__Vm - var_IClb__ECl); // uA_per_uF
        const double var_membrane__IClb = var_IClb__IClb; // uA_per_uF
        const double var_Ito2__i2f = var_chaste_interface__Ito2_i2f_gate__i2f; // dimensionless
        const double var_Ito2__Irel = var_chaste_interface__Irel__Irel; // mM_per_ms
        const double var_Ito2__kCa_ito2 = 0.40000000000000002; // mM_per_ms
        const double var_Ito2__KCa_ito2 = 1.0 - (1.0 / (1.0 + pow(var_Ito2__Irel / var_Ito2__kCa_ito2, 2.0))); // dimensionless
        const double var_Ito2__F = var_model_parameters__F; // C_per_mole
        const double var_Ito2__zCl =  -1.0; // dimensionless
        const double var_Ito2__T = var_model_parameters__T; // kelvin
        const double var_Ito2__Cl_o = var_model_parameters__Cl_o; // mM
        const double var_Ito2__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Ito2__R = var_model_parameters__R; // J_per_kmole_K
        const double var_Ito2__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_Ito2__PCl = 8.9999999999999996e-07; // L_per_F_ms
        const double var_Ito2__Ito2_max = (((var_Ito2__PCl * pow(var_Ito2__zCl, 2.0) * var_Ito2__Vm * pow(var_Ito2__F, 2.0)) / (var_Ito2__R * var_Ito2__T)) * (var_Ito2__Cl_i - (var_Ito2__Cl_o * exp((var_Ito2__Vm * var_Ito2__F) / (var_Ito2__R * var_Ito2__T))))) / (1.0 - exp((var_Ito2__Vm * var_Ito2__F) / (var_Ito2__R * var_Ito2__T))); // uA_per_uF
        const double var_Ito2__Ito2 = var_Ito2__Ito2_max * var_Ito2__i2f * var_Ito2__KCa_ito2; // uA_per_uF
        const double var_membrane__Ito2 = var_Ito2__Ito2; // uA_per_uF
        const double var_membrane__clont = var_membrane__IClb + var_membrane__Ito2; // uA_per_uF
        const double var_chaste_interface__membrane__naiont = var_membrane__naiont; // uA_per_uF
        const double var_chaste_interface__membrane__clont = var_membrane__clont; // uA_per_uF
        const double var_chaste_interface__membrane__caiont = var_membrane__caiont; // uA_per_uF
        const double var_chaste_interface__membrane__kiont = var_membrane__kiont; // uA_per_uF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__membrane__naiont + var_chaste_interface__membrane__kiont + var_chaste_interface__membrane__caiont + var_chaste_interface__membrane__clont) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicdecker_2009FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.472528
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.09945e-5
        double var_chaste_interface__IKs__C1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.476653873938053
        double var_chaste_interface__IKs__C2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.2551771850026437
        double var_chaste_interface__IKs__C3 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.05122852186842027
        double var_chaste_interface__IKs__C4 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.004570874421666423
        double var_chaste_interface__IKs__C5 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0001529389211563687
        double var_chaste_interface__IKs__C6 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.1328281770413747
        double var_chaste_interface__IKs__C7 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.05333228495514583
        double var_chaste_interface__IKs__C8 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.007137874613383642
        double var_chaste_interface__IKs__C9 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0003184390970637536
        double var_chaste_interface__IKs__C10 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.01388061042363991
        double var_chaste_interface__IKs__C11 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.003715500164470033
        double var_chaste_interface__IKs__C12 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0002486371465457659
        double var_chaste_interface__IKs__C13 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0006446803014431032
        double var_chaste_interface__IKs__C14 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 8.628258026770862e-5
        double var_chaste_interface__IKs__C15 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.122823524761588e-5
        double var_chaste_interface__IKs__O1 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.051906959485266e-5
        double var_chaste_interface__IKs__O2 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 2.372219883411999e-6
        double var_chaste_interface__ICaL__C = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9999613782488198
        double var_chaste_interface__ICaL__O = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 2.27419494597377e-5
        double var_chaste_interface__ICaL__C_star = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 5.936477396599124e-11
        double var_chaste_interface__ICaL__O_star = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 1.350122566369778e-15
        double var_chaste_interface__ICaL__CI = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 1.587938121237188e-5
        double var_chaste_interface__ICaL__OI = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 3.611420243201921e-10
        double var_chaste_interface__ICaL__CI_star = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__ICaL__OI_star = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9913109066867
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.9970771239754529
        double var_chaste_interface__INaL_mL_gate__mL = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INaL_hL_gate__hL = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.3593255076983574
        double var_chaste_interface__IKr_xr_gate__xr = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 1.235996442041028e-8
        double var_chaste_interface__Ito1_a_gate__a = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 1.773318268499115e-5
        double var_chaste_interface__Ito1_i1f_gate__i1f = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.9979722
        double var_chaste_interface__Ito1_i1s_gate__i1s = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.9874435
        double var_chaste_interface__Ito2_i2f_gate__i2f = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.9960352
        double var_chaste_interface__Irel__Irel = NV_Ith_S(rY, 37);
        // Units: mM_per_ms; Initial value: 0.00107332
        double var_chaste_interface__Ca__Ca_JSR = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.917692717
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 39);
        // Units: mM; Initial value: 0.929835335
        double var_chaste_interface__Ca__Ca_ss_sr = NV_Ith_S(rY, 40);
        // Units: mM; Initial value: 9.04757e-5
        double var_chaste_interface__Ca__Ca_ss_CaL = NV_Ith_S(rY, 41);
        // Units: mM; Initial value: 9.61545e-5
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 42);
        // Units: mM; Initial value: 6.935575
        double var_chaste_interface__Na__Na_ss_sr = NV_Ith_S(rY, 43);
        // Units: mM; Initial value: 6.935607
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 44);
        // Units: mM; Initial value: 20.26842
        double var_chaste_interface__Cl__Cl_ss = NV_Ith_S(rY, 45);
        // Units: mM; Initial value: 20.26842
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 46);
        // Units: mM; Initial value: 145.5689
        double var_chaste_interface__CaMK_active__CaMK_trap = NV_Ith_S(rY, 47);
        // Units: dimensionless; Initial value: 0.0018861341
        
        
        // Mathematics
        double d_dt_chaste_interface__membrane__Vm;
        const double var_model_parameters__F = 96487.0; // C_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_model_parameters__R = 8314.0; // J_per_kmole_K
        const double var_model_parameters__K_o = 5.4000000000000004; // mM
        const double var_model_parameters__Ca_o = 1.8; // mM
        const double var_model_parameters__Na_o = 140.0; // mM
        const double var_model_parameters__Cl_o = 100.0; // mM
        const double var_cell_geometry__a = 0.0011000000000000001; // cm
        const double var_cell_geometry__l = 0.01; // cm
        const double var_cell_geometry__vcell = 1000.0 * M_PI * var_cell_geometry__a * var_cell_geometry__a * var_cell_geometry__l; // uL
        const double var_cell_geometry__Vmyo = var_cell_geometry__vcell * 0.67800000000000005; // uL
        const double var_cell_geometry__Vnsr = var_cell_geometry__vcell * 0.055199999999999999; // uL
        const double var_cell_geometry__Vjsr = var_cell_geometry__vcell * 0.0047999999999999996; // uL
        const double var_cell_geometry__Vss_sr = var_cell_geometry__vcell * 0.02; // uL
        const double var_cell_geometry__Vss_CaL = var_cell_geometry__vcell * 0.002; // uL
        const double var_cell_geometry__ageo = (2.0 * M_PI * var_cell_geometry__a * var_cell_geometry__a) + (2.0 * M_PI * var_cell_geometry__a * var_cell_geometry__l); // cm2
        const double var_cell_geometry__Acap = var_cell_geometry__ageo * 2.0; // cm2
        const double var_cell_geometry__F = var_model_parameters__F; // C_per_mole
        const double var_cell_geometry__AF = (1.0 * 1.0 * var_cell_geometry__Acap) / (var_cell_geometry__F * 1.0); // uF_mole_per_C
        const double var_chaste_interface__membrane__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_ICaL__T = var_model_parameters__T; // kelvin
        const double var_ICaL__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_ICaL__R = var_model_parameters__R; // J_per_kmole_K
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_ICaL__gamma_Cai = 1.0; // dimensionless
        const double var_ICaL__F = var_model_parameters__F; // C_per_mole
        const double var_ICaL__Ca_ss_CaL = var_chaste_interface__Ca__Ca_ss_CaL; // mM
        const double var_ICaL__PCa = 0.00015552; // L_per_F_ms
        const double var_ICaL__ICaL_max = (((var_ICaL__PCa * 4.0 * var_ICaL__Vm * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T)) * ((var_ICaL__gamma_Cai * var_ICaL__Ca_ss_CaL * exp((2.0 * var_ICaL__Vm * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - (var_ICaL__gamma_Cao * var_ICaL__Ca_o))) / (exp((2.0 * var_ICaL__Vm * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // uA_per_uF
        const double var_ICaL__O = var_chaste_interface__ICaL__O; // dimensionless
        const double var_ICaL__O_star = var_chaste_interface__ICaL__O_star; // dimensionless
        const double var_ICaL__ICaL = var_ICaL__ICaL_max * (var_ICaL__O + var_ICaL__O_star); // uA_per_uF
        const double var_INaCa__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaCa__T = var_model_parameters__T; // kelvin
        const double var_INaCa__Na_ss_sr = var_chaste_interface__Na__Na_ss_sr; // mM
        const double var_INaCa__Ca_ss_sr = var_chaste_interface__Ca__Ca_ss_sr; // mM
        const double var_INaCa__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INaCa__Na_o = var_model_parameters__Na_o; // mM
        const double var_INaCa__Vmax = 4.5; // uA_per_uF
        const double var_INaCa__F = var_model_parameters__F; // C_per_mole
        const double var_INaCa__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_INaCa__eta = 0.27000000000000002; // dimensionless
        const double var_INaCa__num_ss = 0.20000000000000001 * var_INaCa__Vmax * ((pow(var_INaCa__Na_ss_sr, 3.0) * var_INaCa__Ca_o * exp((var_INaCa__eta * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_ss_sr * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // mM4_uA_per_uF
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__denom_ss_4 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_ss_sr / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_ss_sr, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_ss_sr); // mM4
        const double var_INaCa__ksat = 0.32000000000000001; // dimensionless
        const double var_INaCa__denom_ss_2 = 1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))); // dimensionless
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__denom_ss_3 = (var_INaCa__KmCao * pow(var_INaCa__Na_ss_sr, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__Ca_ss_sr) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__Ca_ss_sr / var_INaCa__KmCai))); // mM4
        const double var_INaCa__KmCa_act = 0.000125; // mM
        const double var_INaCa__denom_ss_1 = 1.0 + pow(var_INaCa__KmCa_act / var_INaCa__Ca_ss_sr, 2.0); // dimensionless
        const double var_INaCa__INaCa_ss_sr = var_INaCa__num_ss / (var_INaCa__denom_ss_1 * var_INaCa__denom_ss_2 * (var_INaCa__denom_ss_3 + var_INaCa__denom_ss_4)); // uA_per_uF
        const double var_IpCa__KmpCa = 0.00050000000000000001; // mM
        const double var_IpCa__gpCa = 0.057500000000000002; // uA_per_uF
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IpCa__IpCa = (var_IpCa__gpCa * var_IpCa__Ca_i) / (var_IpCa__KmpCa + var_IpCa__Ca_i); // uA_per_uF
        const double var_ICab__PCab = 1.9950840000000001e-07; // L_per_F_ms
        const double var_ICab__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_ICab__F = var_model_parameters__F; // C_per_mole
        const double var_ICab__Ca_o = var_model_parameters__Ca_o; // mM
        const double var_ICab__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_ICab__T = var_model_parameters__T; // kelvin
        const double var_ICab__gamma_Ca_o = 0.34100000000000003; // dimensionless
        const double var_ICab__R = var_model_parameters__R; // J_per_kmole_K
        const double var_ICab__gamma_Ca_i = 1.0; // dimensionless
        const double var_ICab__ICab = (((var_ICab__PCab * 4.0 * var_ICab__Vm * pow(var_ICab__F, 2.0)) / (var_ICab__R * var_ICab__T)) * ((var_ICab__gamma_Ca_i * var_ICab__Ca_i * exp((2.0 * var_ICab__Vm * var_ICab__F) / (var_ICab__R * var_ICab__T))) - (var_ICab__gamma_Ca_o * var_ICab__Ca_o))) / (exp((2.0 * var_ICab__Vm * var_ICab__F) / (var_ICab__R * var_ICab__T)) - 1.0); // uA_per_uF
        const double var_INaCa__denom_2 = 1.0 + (var_INaCa__ksat * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))); // dimensionless
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaCa__denom_3 = (var_INaCa__KmCao * pow(var_INaCa__Na_i, 3.0)) + (pow(var_INaCa__KmNao, 3.0) * var_INaCa__Ca_i) + (pow(var_INaCa__KmNai, 3.0) * var_INaCa__Ca_o * (1.0 + (var_INaCa__Ca_i / var_INaCa__KmCai))); // mM4
        const double var_INaCa__denom_1 = 1.0 + pow(var_INaCa__KmCa_act / var_INaCa__Ca_i, 2.0); // dimensionless
        const double var_INaCa__num = 0.80000000000000004 * var_INaCa__Vmax * ((pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o * exp((var_INaCa__eta * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))) - (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i * exp(((var_INaCa__eta - 1.0) * var_INaCa__Vm * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)))); // mM4_uA_per_uF
        const double var_INaCa__denom_4 = (var_INaCa__KmCai * pow(var_INaCa__Na_o, 3.0) * (1.0 + pow(var_INaCa__Na_i / var_INaCa__KmNai, 3.0))) + (pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) + (pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i); // mM4
        const double var_INaCa__INaCa = var_INaCa__num / (var_INaCa__denom_1 * var_INaCa__denom_2 * (var_INaCa__denom_3 + var_INaCa__denom_4)); // uA_per_uF
        const double var_INa__g_Na = 9.0749999999999993; // mS_per_uF
        const double var_INa__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_reversal_potentials__T = var_model_parameters__T; // kelvin
        const double var_reversal_potentials__R = var_model_parameters__R; // J_per_kmole_K
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_reversal_potentials__Na_o = var_model_parameters__Na_o; // mM
        const double var_reversal_potentials__F = var_model_parameters__F; // C_per_mole
        const double var_reversal_potentials__ENa = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // mV
        const double var_INa__ENa = var_reversal_potentials__ENa; // mV
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INa__INa = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__Vm - var_INa__ENa); // uA_per_uF
        const double var_INab__PNab = 3.2000000000000001e-09; // L_per_F_ms
        const double var_INab__Na_o = var_model_parameters__Na_o; // mM
        const double var_INab__F = var_model_parameters__F; // C_per_mole
        const double var_INab__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INab__T = var_model_parameters__T; // kelvin
        const double var_INab__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INab__phi = (var_INab__F * var_INab__Vm) / (var_INab__R * var_INab__T); // dimensionless
        const double var_INab__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INab__INab = (var_INab__F * var_INab__PNab * var_INab__phi * ((var_INab__Na_i * exp(var_INab__phi)) - var_INab__Na_o)) / (exp(var_INab__phi) - 1.0); // uA_per_uF
        const double var_INaL__mL = var_chaste_interface__INaL_mL_gate__mL; // dimensionless
        const double var_INaL__ENa = var_reversal_potentials__ENa; // mV
        const double var_INaL__hL = var_chaste_interface__INaL_hL_gate__hL; // dimensionless
        const double var_INaL__gNaL = 0.0064999999999999997; // mS_per_uF
        const double var_INaL__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaL__INaL = var_INaL__gNaL * pow(var_INaL__mL, 3.0) * var_INaL__hL * (var_INaL__Vm - var_INaL__ENa); // uA_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__K_o = var_model_parameters__K_o; // mM
        const double var_INaK__PK = var_INaK__K_o / (var_INaK__K_o + var_INaK__kmko); // dimensionless
        const double var_INaK__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_INaK__F = var_model_parameters__F; // C_per_mole
        const double var_INaK__T = var_model_parameters__T; // kelvin
        const double var_INaK__sigma = 1.0; // dimensionless
        const double var_INaK__R = var_model_parameters__R; // J_per_kmole_K
        const double var_INaK__V_half =  -92.0; // mV
        const double var_INaK__phi = (var_INaK__sigma * (var_INaK__Vm - var_INaK__V_half) * var_INaK__F) / (var_INaK__R * var_INaK__T); // dimensionless
        const double var_INaK__fv = 1.0 / (1.0 + exp(-var_INaK__phi)); // dimensionless
        const double var_INaK__ibarnak = 1.3999999999999999; // uA_per_uF
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_INaK__kmnai = 2.6000000000000001; // mM
        const double var_INaK__PNa = pow(var_INaK__Na_i / (var_INaK__Na_i + var_INaK__kmnai), 3.0); // dimensionless
        const double var_INaK__INaK = var_INaK__ibarnak * var_INaK__fv * var_INaK__PK * var_INaK__PNa; // uA_per_uF
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // mM
        const double var_reversal_potentials__K_o = var_model_parameters__K_o; // mM
        const double var_reversal_potentials__EK = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // mV
        const double var_Ito1__EK = var_reversal_potentials__EK; // mV
        const double var_Ito1__i1f = var_chaste_interface__Ito1_i1f_gate__i1f; // dimensionless
        const double var_Ito1__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_Ito1__rto1 = exp(var_Ito1__Vm / 550.0); // dimensionless
        const double var_Ito1__i1s = var_chaste_interface__Ito1_i1s_gate__i1s; // dimensionless
        const double var_Ito1__gto1 = 0.4975; // mS_per_uF
        const double var_Ito1__a = var_chaste_interface__Ito1_a_gate__a; // dimensionless
        const double var_Ito1__Ito1 = var_Ito1__gto1 * pow(var_Ito1__a, 3.0) * var_Ito1__i1f * var_Ito1__i1s * var_Ito1__rto1 * (var_Ito1__Vm - var_Ito1__EK); // uA_per_uF
        const double var_IKr__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKr_r_gate__Vm = var_IKr__Vm; // mV
        const double var_IKr_r_gate__r = 1.0 / (1.0 + exp((var_IKr_r_gate__Vm + 10.0) / 15.4)); // dimensionless
        const double var_IKr__r = var_IKr_r_gate__r; // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr_xr_gate__xr; // dimensionless
        const double var_IKr__K_o = var_model_parameters__K_o; // mM
        const double var_IKr__gKr_max = 0.013854200000000001; // mS_per_uF
        const double var_IKr__gKr = var_IKr__gKr_max * sqrt(var_IKr__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IKr__EK = var_reversal_potentials__EK; // mV
        const double var_IKr__IKr = var_IKr__gKr * var_IKr__xr * var_IKr__r * (var_IKr__Vm - var_IKr__EK); // uA_per_uF
        const double var_IKs__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKs__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_IKs__gKs = 0.082600000000000007 * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_IKs__Ca_i, 1.3999999999999999)))); // mS_per_uF
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_reversal_potentials__EKs = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__prnak * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__prnak * var_reversal_potentials__Na_i))); // mV
        const double var_IKs__EKs = var_reversal_potentials__EKs; // mV
        const double var_IKs__O2 = var_chaste_interface__IKs__O2; // dimensionless
        const double var_IKs__O1 = var_chaste_interface__IKs__O1; // dimensionless
        const double var_IKs__OKs = var_IKs__O1 + var_IKs__O2; // dimensionless
        const double var_IKs__IKs = var_IKs__gKs * var_IKs__OKs * (var_IKs__Vm - var_IKs__EKs); // uA_per_uF
        const double var_IKp__gKp = 0.0027599999999999999; // mS_per_uF
        const double var_IKp__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IKp__Kp = 1.0 / (1.0 + exp((7.4880000000000004 - var_IKp__Vm) / 5.9800000000000004)); // dimensionless
        const double var_IKp__EK = var_reversal_potentials__EK; // mV
        const double var_IKp__IKp = var_IKp__gKp * var_IKp__Kp * (var_IKp__Vm - var_IKp__EK); // uA_per_uF
        const double var_IK1__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IK1_K1_gate__Vm = var_IK1__Vm; // mV
        const double var_IK1__EK = var_reversal_potentials__EK; // mV
        const double var_IK1_K1_gate__EK = var_IK1__EK; // mV
        const double var_IK1_K1_gate__beta_k1 = ((0.49124000000000001 * exp(0.080320000000000003 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) + 5.476))) + exp(0.061749999999999999 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) - 594.30999999999995))) / (1.0 + exp((-0.51429999999999998) * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) + 4.7530000000000001))); // dimensionless
        const double var_IK1_K1_gate__alpha_k1 = 1.02 / (1.0 + exp(0.23849999999999999 * ((var_IK1_K1_gate__Vm - var_IK1_K1_gate__EK) - 59.215000000000003))); // dimensionless
        const double var_IK1_K1_gate__K1 = var_IK1_K1_gate__alpha_k1 / (var_IK1_K1_gate__alpha_k1 + var_IK1_K1_gate__beta_k1); // dimensionless
        const double var_IK1__K1 = var_IK1_K1_gate__K1; // dimensionless
        const double var_IK1__K_o = var_model_parameters__K_o; // mM
        const double var_IK1__gK1 = 0.5 * sqrt(var_IK1__K_o / 5.4000000000000004); // mS_per_uF
        const double var_IK1__IK1 = var_IK1__gK1 * var_IK1__K1 * (var_IK1__Vm - var_IK1__EK); // uA_per_uF
        const double var_reversal_potentials__Cl_o = var_model_parameters__Cl_o; // mM
        const double var_reversal_potentials__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_reversal_potentials__ECl = (((-var_reversal_potentials__R) * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Cl_o / var_reversal_potentials__Cl_i); // mV
        const double var_IClb__ECl = var_reversal_potentials__ECl; // mV
        const double var_IClb__gClb = 0.00022499999999999999; // mS_per_uF
        const double var_IClb__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_IClb__IClb = var_IClb__gClb * (var_IClb__Vm - var_IClb__ECl); // uA_per_uF
        const double var_Ito2__i2f = var_chaste_interface__Ito2_i2f_gate__i2f; // dimensionless
        const double var_Ito2__Irel = var_chaste_interface__Irel__Irel; // mM_per_ms
        const double var_Ito2__kCa_ito2 = 0.40000000000000002; // mM_per_ms
        const double var_Ito2__KCa_ito2 = 1.0 - (1.0 / (1.0 + pow(var_Ito2__Irel / var_Ito2__kCa_ito2, 2.0))); // dimensionless
        const double var_Ito2__F = var_model_parameters__F; // C_per_mole
        const double var_Ito2__zCl =  -1.0; // dimensionless
        const double var_Ito2__T = var_model_parameters__T; // kelvin
        const double var_Ito2__Cl_o = var_model_parameters__Cl_o; // mM
        const double var_Ito2__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Ito2__R = var_model_parameters__R; // J_per_kmole_K
        const double var_Ito2__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_Ito2__PCl = 8.9999999999999996e-07; // L_per_F_ms
        const double var_Ito2__Ito2_max = (((var_Ito2__PCl * pow(var_Ito2__zCl, 2.0) * var_Ito2__Vm * pow(var_Ito2__F, 2.0)) / (var_Ito2__R * var_Ito2__T)) * (var_Ito2__Cl_i - (var_Ito2__Cl_o * exp((var_Ito2__Vm * var_Ito2__F) / (var_Ito2__R * var_Ito2__T))))) / (1.0 - exp((var_Ito2__Vm * var_Ito2__F) / (var_Ito2__R * var_Ito2__T))); // uA_per_uF
        const double var_Ito2__Ito2 = var_Ito2__Ito2_max * var_Ito2__i2f * var_Ito2__KCa_ito2; // uA_per_uF
        const double var_IKs__C1 = var_chaste_interface__IKs__C1; // dimensionless
        const double var_IKs__C2 = var_chaste_interface__IKs__C2; // dimensionless
        const double var_IKs__C3 = var_chaste_interface__IKs__C3; // dimensionless
        const double var_IKs__C4 = var_chaste_interface__IKs__C4; // dimensionless
        const double var_IKs__C5 = var_chaste_interface__IKs__C5; // dimensionless
        const double var_IKs__C6 = var_chaste_interface__IKs__C6; // dimensionless
        const double var_IKs__C7 = var_chaste_interface__IKs__C7; // dimensionless
        const double var_IKs__C8 = var_chaste_interface__IKs__C8; // dimensionless
        const double var_IKs__C9 = var_chaste_interface__IKs__C9; // dimensionless
        const double var_IKs__C10 = var_chaste_interface__IKs__C10; // dimensionless
        const double var_IKs__C11 = var_chaste_interface__IKs__C11; // dimensionless
        const double var_IKs__C12 = var_chaste_interface__IKs__C12; // dimensionless
        const double var_IKs__C13 = var_chaste_interface__IKs__C13; // dimensionless
        const double var_IKs__C14 = var_chaste_interface__IKs__C14; // dimensionless
        const double var_IKs__C15 = var_chaste_interface__IKs__C15; // dimensionless
        const double var_IKs__R = var_model_parameters__R; // J_per_kmole_K
        const double var_IKs__T = var_model_parameters__T; // kelvin
        const double var_IKs__F = var_model_parameters__F; // C_per_mole
        const double var_IKs__alpha = 0.014864 * exp((0.029877000000000001 * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__beta = 0.083986000000000005 * exp(((-0.055461000000000003) * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__delta = 0.0031172999999999999 * exp(((-0.42625000000000002) * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__gamma = 0.014600999999999999 * exp((0.24465000000000001 * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__eta = 0.07732 * exp(((-0.064726000000000006) * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__theta = 0.089538000000000006; // per_ms
        const double var_IKs__omega = 0.79405000000000003 * exp(((-0.080173999999999995) * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__psi = 0.58638000000000001 * exp((0.28205999999999998 * var_IKs__Vm * var_IKs__F) / (var_IKs__R * var_IKs__T)); // per_ms
        const double var_IKs__d_C1_d_environment__time = ((-4.0) * var_IKs__alpha * var_IKs__C1) + (var_IKs__beta * var_IKs__C2); // 'per millisecond'
        const double var_IKs__d_C2_d_environment__time = ((-((3.0 * var_IKs__alpha) + var_IKs__beta + var_IKs__gamma)) * var_IKs__C2) + (4.0 * var_IKs__alpha * var_IKs__C1) + (2.0 * var_IKs__beta * var_IKs__C3) + (var_IKs__delta * var_IKs__C6); // 'per millisecond'
        const double var_IKs__d_C3_d_environment__time = ((-((2.0 * var_IKs__alpha) + (2.0 * var_IKs__beta) + (2.0 * var_IKs__gamma))) * var_IKs__C3) + (3.0 * var_IKs__alpha * var_IKs__C2) + (3.0 * var_IKs__beta * var_IKs__C4) + (var_IKs__delta * var_IKs__C7); // 'per millisecond'
        const double var_IKs__d_C4_d_environment__time = ((-(var_IKs__alpha + (3.0 * var_IKs__beta) + (3.0 * var_IKs__gamma))) * var_IKs__C4) + (2.0 * var_IKs__alpha * var_IKs__C3) + (4.0 * var_IKs__beta * var_IKs__C5) + (var_IKs__delta * var_IKs__C8); // 'per millisecond'
        const double var_IKs__d_C5_d_environment__time = ((-((4.0 * var_IKs__beta) + (4.0 * var_IKs__gamma))) * var_IKs__C5) + (var_IKs__alpha * var_IKs__C4) + (var_IKs__delta * var_IKs__C9); // 'per millisecond'
        const double var_IKs__d_C6_d_environment__time = ((-((3.0 * var_IKs__alpha) + var_IKs__delta)) * var_IKs__C6) + (var_IKs__beta * var_IKs__C7) + (var_IKs__gamma * var_IKs__C2); // 'per millisecond'
        const double var_IKs__d_C7_d_environment__time = ((-((2.0 * var_IKs__alpha) + var_IKs__beta + var_IKs__gamma + var_IKs__delta)) * var_IKs__C7) + (3.0 * var_IKs__alpha * var_IKs__C6) + (2.0 * var_IKs__beta * var_IKs__C8) + (2.0 * var_IKs__gamma * var_IKs__C3) + (2.0 * var_IKs__delta * var_IKs__C10); // 'per millisecond'
        const double var_IKs__d_C8_d_environment__time = ((-(var_IKs__alpha + (2.0 * var_IKs__beta) + (2.0 * var_IKs__gamma) + var_IKs__delta)) * var_IKs__C8) + (2.0 * var_IKs__alpha * var_IKs__C7) + (3.0 * var_IKs__beta * var_IKs__C9) + (3.0 * var_IKs__gamma * var_IKs__C4) + (2.0 * var_IKs__delta * var_IKs__C11); // 'per millisecond'
        const double var_IKs__d_C9_d_environment__time = ((-((3.0 * var_IKs__beta) + (3.0 * var_IKs__gamma) + var_IKs__delta)) * var_IKs__C9) + (var_IKs__alpha * var_IKs__C8) + (4.0 * var_IKs__gamma * var_IKs__C5) + (2.0 * var_IKs__delta * var_IKs__C12); // 'per millisecond'
        const double var_IKs__d_C10_d_environment__time = ((-((2.0 * var_IKs__alpha) + (2.0 * var_IKs__delta))) * var_IKs__C10) + (var_IKs__beta * var_IKs__C11) + (var_IKs__gamma * var_IKs__C7); // 'per millisecond'
        const double var_IKs__d_C11_d_environment__time = ((-(var_IKs__alpha + var_IKs__beta + var_IKs__gamma + (2.0 * var_IKs__delta))) * var_IKs__C11) + (2.0 * var_IKs__alpha * var_IKs__C10) + (2.0 * var_IKs__beta * var_IKs__C12) + (2.0 * var_IKs__gamma * var_IKs__C8) + (3.0 * var_IKs__delta * var_IKs__C13); // 'per millisecond'
        const double var_IKs__d_C12_d_environment__time = ((-((2.0 * var_IKs__beta) + (2.0 * var_IKs__gamma) + (2.0 * var_IKs__delta))) * var_IKs__C12) + (var_IKs__alpha * var_IKs__C11) + (3.0 * var_IKs__gamma * var_IKs__C9) + (3.0 * var_IKs__delta * var_IKs__C14); // 'per millisecond'
        const double var_IKs__d_C13_d_environment__time = ((-(var_IKs__alpha + (3.0 * var_IKs__delta))) * var_IKs__C13) + (var_IKs__beta * var_IKs__C14) + (var_IKs__gamma * var_IKs__C11); // 'per millisecond'
        const double var_IKs__d_C14_d_environment__time = ((-(var_IKs__beta + var_IKs__gamma + (3.0 * var_IKs__delta))) * var_IKs__C14) + (var_IKs__alpha * var_IKs__C13) + (2.0 * var_IKs__gamma * var_IKs__C12) + (4.0 * var_IKs__delta * var_IKs__C15); // 'per millisecond'
        const double var_IKs__d_C15_d_environment__time = ((-((4.0 * var_IKs__delta) + var_IKs__theta)) * var_IKs__C15) + (var_IKs__gamma * var_IKs__C14) + (var_IKs__eta * var_IKs__O1); // 'per millisecond'
        const double var_IKs__d_O1_d_environment__time = ((-(var_IKs__eta + var_IKs__psi)) * var_IKs__O1) + (var_IKs__omega * var_IKs__O2) + (var_IKs__theta * var_IKs__C15); // 'per millisecond'
        const double var_IKs__d_O2_d_environment__time = ((-var_IKs__omega) * var_IKs__O2) + (var_IKs__psi * var_IKs__O1); // 'per millisecond'
        const double var_ICaL__C = var_chaste_interface__ICaL__C; // dimensionless
        const double var_ICaL__C_star = var_chaste_interface__ICaL__C_star; // dimensionless
        const double var_ICaL__CI = var_chaste_interface__ICaL__CI; // dimensionless
        const double var_ICaL__OI = var_chaste_interface__ICaL__OI; // dimensionless
        const double var_ICaL__CI_star = var_chaste_interface__ICaL__CI_star; // dimensionless
        const double var_ICaL__OI_star = var_chaste_interface__ICaL__OI_star; // dimensionless
        const double var_ICaL__ACT_tau = 0.58999999999999997 + ((0.80000000000000004 * exp(0.051999999999999998 * (var_ICaL__Vm + 13.0))) / (1.0 + exp(0.13200000000000001 * (var_ICaL__Vm + 13.0)))); // ms
        const double var_ICaL__IV_tau = 1.0 / ((1.0 / (24.827999999999999 * (1.0 + exp((var_ICaL__Vm + 49.100000000000001) / 10.349)))) + (1.0 / (30.553000000000001 * (1.0 + exp((-(var_ICaL__Vm + 0.21299999999999999)) / 10.807))))); // ms
        const double var_ICaL__IV_beta_infinity_star = 25.0 - (17.5 / (1.0 + pow(0.0030000000000000001 / var_ICaL__Ca_ss_CaL, 4.0))); // dimensionless
        const double var_ICaL__IV_beta_star = 1.0 / (var_ICaL__IV_beta_infinity_star * (1.0 + exp((-(var_ICaL__Vm + 0.21299999999999999)) / 10.807))); // dimensionless
        const double var_ICaL__IV_tau_star = 1.0 / ((1.0 / (24.827999999999999 * (1.0 + exp((var_ICaL__Vm + 49.100000000000001) / 10.349)))) + var_ICaL__IV_beta_star); // ms
        const double var_ICaL__ACT_infinity = 1.0 / (1.0 + exp((-(var_ICaL__Vm - 13.56)) / 9.4499999999999993)); // dimensionless
        const double var_ICaL__IV_infinity = ((1.0 / (1.0 + exp((var_ICaL__Vm + 17.5) / 3.0))) + 0.25) / 1.25; // dimensionless
        const double var_ICaL__IV_infinity_star = ((1.0 / (1.0 + exp((var_ICaL__Vm + 17.5) / 3.0))) + 0.0001) / 1.0001; // dimensionless
        const double var_ICaL__alpha = var_ICaL__ACT_infinity / var_ICaL__ACT_tau; // per_ms
        const double var_ICaL__beta = (1.0 - var_ICaL__ACT_infinity) / var_ICaL__ACT_tau; // per_ms
        const double var_ICaL__delta = 3.0 / (1.0 + pow(0.0030000000000000001 / var_ICaL__Ca_ss_CaL, 4.0)); // per_ms
        const double var_ICaL__x = var_ICaL__IV_infinity / var_ICaL__IV_tau; // per_ms
        const double var_ICaL__y = (1.0 - var_ICaL__IV_infinity) / var_ICaL__IV_tau; // per_ms
        const double var_ICaL__theta = 1.0; // per_ms
        const double var_ICaL__y_star = (1.0 - var_ICaL__IV_infinity_star) / var_ICaL__IV_tau_star; // per_ms
        const double var_ICaL__x_star = var_ICaL__IV_infinity_star / var_ICaL__IV_tau_star; // per_ms
        const double var_ICaL__theta_I = 9.9999999999999995e-07; // per_ms
        const double var_ICaL__delta_I = (var_ICaL__theta_I * var_ICaL__x * var_ICaL__y_star * var_ICaL__delta) / (var_ICaL__y * var_ICaL__x_star * var_ICaL__theta); // per_ms
        const double var_ICaL__d_C_d_environment__time = ((-(var_ICaL__alpha + var_ICaL__delta + var_ICaL__y)) * var_ICaL__C) + (var_ICaL__beta * var_ICaL__O) + (var_ICaL__theta * var_ICaL__C_star) + (var_ICaL__x * var_ICaL__CI); // 'per millisecond'
        const double var_ICaL__d_O_d_environment__time = ((-(var_ICaL__beta + var_ICaL__delta + var_ICaL__y)) * var_ICaL__O) + (var_ICaL__alpha * var_ICaL__C) + (var_ICaL__theta * var_ICaL__O_star) + (var_ICaL__x * var_ICaL__OI); // 'per millisecond'
        const double var_ICaL__d_C_star_d_environment__time = ((-(var_ICaL__alpha + var_ICaL__theta + var_ICaL__y_star)) * var_ICaL__C_star) + (var_ICaL__delta * var_ICaL__C) + (var_ICaL__beta * var_ICaL__O_star) + (var_ICaL__x_star * var_ICaL__CI_star); // 'per millisecond'
        const double var_ICaL__d_O_star_d_environment__time = ((-(var_ICaL__beta + var_ICaL__theta + var_ICaL__y_star)) * var_ICaL__O_star) + (var_ICaL__delta * var_ICaL__O) + (var_ICaL__alpha * var_ICaL__C_star) + (var_ICaL__x_star * var_ICaL__OI_star); // 'per millisecond'
        const double var_ICaL__d_CI_d_environment__time = ((-(var_ICaL__alpha + var_ICaL__delta_I + var_ICaL__x)) * var_ICaL__CI) + (var_ICaL__y * var_ICaL__C) + (var_ICaL__theta_I * var_ICaL__CI_star) + (var_ICaL__beta * var_ICaL__OI); // 'per millisecond'
        const double var_ICaL__d_OI_d_environment__time = ((-(var_ICaL__beta + var_ICaL__delta_I + var_ICaL__x)) * var_ICaL__OI) + (var_ICaL__y * var_ICaL__O) + (var_ICaL__theta_I * var_ICaL__OI_star) + (var_ICaL__alpha * var_ICaL__CI); // 'per millisecond'
        const double var_ICaL__d_CI_star_d_environment__time = ((-(var_ICaL__alpha + var_ICaL__theta_I + var_ICaL__x_star)) * var_ICaL__CI_star) + (var_ICaL__delta_I * var_ICaL__CI) + (var_ICaL__y_star * var_ICaL__C_star) + (var_ICaL__beta * var_ICaL__OI_star); // 'per millisecond'
        const double var_ICaL__d_OI_star_d_environment__time = ((-(var_ICaL__beta + var_ICaL__theta_I + var_ICaL__x_star)) * var_ICaL__OI_star) + (var_ICaL__delta_I * var_ICaL__OI) + (var_ICaL__y_star * var_ICaL__O_star) + (var_ICaL__alpha * var_ICaL__CI_star); // 'per millisecond'
        const double var_INa_m_gate__Vm = var_INa__Vm; // mV
        const double var_INa_m_gate__am = (0.32000000000000001 * (var_INa_m_gate__Vm + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INa_m_gate__Vm + 47.130000000000003))); // per_ms
        const double var_INa_m_gate__bm = 0.080000000000000002 * exp((-var_INa_m_gate__Vm) / 11.0); // per_ms
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_m_gate__d_m_d_environment__time = (var_INa_m_gate__am * (1.0 - var_INa_m_gate__m)) - (var_INa_m_gate__bm * var_INa_m_gate__m); // 'per millisecond'
        const double var_INa__INa_m_gate__d_m_d_environment__time = var_INa_m_gate__d_m_d_environment__time; // ___units_19
        const double var_INa_h_gate__Vm = var_INa__Vm; // mV
        const double var_INa_h_gate__bh = (var_INa_h_gate__Vm >= (-40.0)) ? (1.0 / (0.13 * (1.0 + exp((var_INa_h_gate__Vm + 10.66) / (-11.1))))) : ((3.5600000000000001 * exp(0.079000000000000001 * var_INa_h_gate__Vm)) + (310000.0 * exp(0.34999999999999998 * var_INa_h_gate__Vm))); // per_ms
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_h_gate__ah = (var_INa_h_gate__Vm >= (-40.0)) ? 0.0 : (0.13500000000000001 * exp((80.0 + var_INa_h_gate__Vm) / (-6.7999999999999998))); // per_ms
        const double var_INa_h_gate__d_h_d_environment__time = (var_INa_h_gate__ah * (1.0 - var_INa_h_gate__h)) - (var_INa_h_gate__bh * var_INa_h_gate__h); // 'per millisecond'
        const double var_INa__INa_h_gate__d_h_d_environment__time = var_INa_h_gate__d_h_d_environment__time; // ___units_19
        const double var_INa_j_gate__Vm = var_INa__Vm; // mV
        const double var_INa_j_gate__aj = (var_INa_j_gate__Vm >= (-40.0)) ? 0.0 : (((((-127140.0) * exp(0.24440000000000001 * var_INa_j_gate__Vm)) - (6.9480000000000006e-05 * exp((-0.043909999999999998) * var_INa_j_gate__Vm))) * (var_INa_j_gate__Vm + 37.780000000000001)) / (1.0 + exp(0.311 * (var_INa_j_gate__Vm + 79.230000000000004)))); // per_ms
        const double var_INa_j_gate__bj = (var_INa_j_gate__Vm >= (-40.0)) ? ((0.29999999999999999 * exp((-2.5349999999999999e-07) * var_INa_j_gate__Vm)) / (1.0 + exp((-0.10000000000000001) * (var_INa_j_gate__Vm + 32.0)))) : ((0.1212 * exp((-0.01052) * var_INa_j_gate__Vm)) / (1.0 + exp((-0.13780000000000001) * (var_INa_j_gate__Vm + 40.140000000000001)))); // per_ms
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INa_j_gate__d_j_d_environment__time = (var_INa_j_gate__aj * (1.0 - var_INa_j_gate__j)) - (var_INa_j_gate__bj * var_INa_j_gate__j); // 'per millisecond'
        const double var_INa__INa_j_gate__d_j_d_environment__time = var_INa_j_gate__d_j_d_environment__time; // ___units_19
        const double var_INaL_mL_gate__Vm = var_INaL__Vm; // mV
        const double var_INaL_mL_gate__amL = (0.32000000000000001 * (var_INaL_mL_gate__Vm + 47.130000000000003)) / (1.0 - exp((-0.10000000000000001) * (var_INaL_mL_gate__Vm + 47.130000000000003))); // per_ms
        const double var_INaL_mL_gate__bmL = 0.080000000000000002 * exp((-var_INaL_mL_gate__Vm) / 11.0); // per_ms
        const double var_INaL_mL_gate__mL = var_INaL__mL; // dimensionless
        const double var_INaL_mL_gate__d_mL_d_environment__time = (var_INaL_mL_gate__amL * (1.0 - var_INaL_mL_gate__mL)) - (var_INaL_mL_gate__bmL * var_INaL_mL_gate__mL); // 'per millisecond'
        const double var_INaL__INaL_mL_gate__d_mL_d_environment__time = var_INaL_mL_gate__d_mL_d_environment__time; // ___units_19
        const double var_INaL_hL_gate__tau_hL = 600.0; // ms
        const double var_INaL_hL_gate__Vm = var_INaL__Vm; // mV
        const double var_INaL_hL_gate__hL_infinity = 1.0 / (1.0 + exp((var_INaL_hL_gate__Vm + 91.0) / 6.0999999999999996)); // dimensionless
        const double var_INaL_hL_gate__hL = var_INaL__hL; // dimensionless
        const double var_INaL_hL_gate__d_hL_d_environment__time = (var_INaL_hL_gate__hL_infinity - var_INaL_hL_gate__hL) / var_INaL_hL_gate__tau_hL; // 'per millisecond'
        const double var_INaL__INaL_hL_gate__d_hL_d_environment__time = var_INaL_hL_gate__d_hL_d_environment__time; // ___units_19
        const double var_CT_Na_Cl__ENa = var_reversal_potentials__ENa; // mV
        const double var_CT_Na_Cl__ECl = var_reversal_potentials__ECl; // mV
        const double var_CT_Na_Cl__CT_Na_Cl_max = 2.4610800000000002e-05; // mM_per_ms
        const double var_CT_Na_Cl__CT_Na_Cl = (var_CT_Na_Cl__CT_Na_Cl_max * pow(var_CT_Na_Cl__ENa - var_CT_Na_Cl__ECl, 4.0)) / (pow(var_CT_Na_Cl__ENa - var_CT_Na_Cl__ECl, 4.0) + pow(87.825100000000006, 4.0)); // mM_per_ms
        const double var_CT_K_Cl__ECl = var_reversal_potentials__ECl; // mV
        const double var_CT_K_Cl__EK = var_reversal_potentials__EK; // mV
        const double var_CT_K_Cl__CT_K_Cl_max = 1.77e-05; // mM_per_ms
        const double var_CT_K_Cl__CT_K_Cl = (var_CT_K_Cl__CT_K_Cl_max * (var_CT_K_Cl__EK - var_CT_K_Cl__ECl)) / ((var_CT_K_Cl__EK + 87.825100000000006) - var_CT_K_Cl__ECl); // mM_per_ms
        const double var_IKr_xr_gate__xr = var_IKr__xr; // dimensionless
        const double var_IKr_xr_gate__Vm = var_IKr__Vm; // mV
        const double var_IKr_xr_gate__tau_xr = 1.0 / (((0.00059999999999999995 * (var_IKr_xr_gate__Vm - 1.7383999999999999)) / (1.0 - exp((-0.13600000000000001) * (var_IKr_xr_gate__Vm - 1.7383999999999999)))) + ((0.00029999999999999997 * (var_IKr_xr_gate__Vm + 38.360799999999998)) / (exp(0.1522 * (var_IKr_xr_gate__Vm + 38.360799999999998)) - 1.0))); // ms
        const double var_IKr_xr_gate__xr_infinity = 1.0 / (1.0 + exp((-(var_IKr_xr_gate__Vm + 10.085000000000001)) / 4.25)); // dimensionless
        const double var_IKr_xr_gate__d_xr_d_environment__time = (var_IKr_xr_gate__xr_infinity - var_IKr_xr_gate__xr) / var_IKr_xr_gate__tau_xr; // 'per millisecond'
        const double var_IKr__IKr_xr_gate__d_xr_d_environment__time = var_IKr_xr_gate__d_xr_d_environment__time; // ___units_19
        const double var_Ito1_a_gate__a = var_Ito1__a; // dimensionless
        const double var_Ito1_a_gate__Vm = var_Ito1__Vm; // mV
        const double var_Ito1_a_gate__a_infinity = 1.0 / (1.0 + exp((var_Ito1_a_gate__Vm + 9.4369999999999994) / (-7.133))); // dimensionless
        const double var_Ito1_a_gate__beta_a = 3.5 / (1.0 + exp((var_Ito1_a_gate__Vm + 100.0) / 29.381399999999999)); // per_ms
        const double var_Ito1_a_gate__alpha_a = 1.0 / (1.2089000000000001 * (1.0 + exp((var_Ito1_a_gate__Vm - 18.4099) / (-29.381399999999999)))); // per_ms
        const double var_Ito1_a_gate__tau_a = 1.0 / (var_Ito1_a_gate__alpha_a + var_Ito1_a_gate__beta_a); // ms
        const double var_Ito1_a_gate__d_a_d_environment__time = (var_Ito1_a_gate__a_infinity - var_Ito1_a_gate__a) / var_Ito1_a_gate__tau_a; // 'per millisecond'
        const double var_Ito1__Ito1_a_gate__d_a_d_environment__time = var_Ito1_a_gate__d_a_d_environment__time; // ___units_19
        const double var_Ito1_i1f_gate__i1f = var_Ito1__i1f; // dimensionless
        const double var_Ito1_i1f_gate__Vm = var_Ito1__Vm; // mV
        const double var_Ito1_i1f_gate__beta_i1f = 1.0 / (9.7952999999999992 * (1.0 + exp((var_Ito1_i1f_gate__Vm + 19.0) / (-9.0)))); // per_ms
        const double var_Ito1_i1f_gate__alpha_i1f = 0.025000000000000001 / (1.0 + exp((var_Ito1_i1f_gate__Vm + 58.0) / 5.0)); // per_ms
        const double var_Ito1_i1f_gate__d_i1f_d_environment__time = (var_Ito1_i1f_gate__alpha_i1f * (1.0 - var_Ito1_i1f_gate__i1f)) - (var_Ito1_i1f_gate__beta_i1f * var_Ito1_i1f_gate__i1f); // 'per millisecond'
        const double var_Ito1__Ito1_i1f_gate__d_i1f_d_environment__time = var_Ito1_i1f_gate__d_i1f_d_environment__time; // ___units_19
        const double var_Ito1_i1s_gate__i1s = var_Ito1__i1s; // dimensionless
        const double var_Ito1_i1s_gate__Vm = var_Ito1__Vm; // mV
        const double var_Ito1_i1s_gate__beta_i1s = 1.0 / (9.7952999999999992 * (1.0 + exp((var_Ito1_i1s_gate__Vm + 19.0) / (-9.0)))); // per_ms
        const double var_Ito1_i1s_gate__alpha_i1s = 1.0 / (250.0 * (1.0 + exp((var_Ito1_i1s_gate__Vm + 60.0) / 5.0))); // per_ms
        const double var_Ito1_i1s_gate__d_i1s_d_environment__time = (var_Ito1_i1s_gate__alpha_i1s * (1.0 - var_Ito1_i1s_gate__i1s)) - (var_Ito1_i1s_gate__beta_i1s * var_Ito1_i1s_gate__i1s); // 'per millisecond'
        const double var_Ito1__Ito1_i1s_gate__d_i1s_d_environment__time = var_Ito1_i1s_gate__d_i1s_d_environment__time; // ___units_19
        const double var_Ito2_i2f_gate__i2f = var_Ito2__i2f; // dimensionless
        const double var_Ito2_i2f_gate__tau_i2f = 8.0; // ms
        const double var_Ito2_i2f_gate__Vm = var_Ito2__Vm; // mV
        const double var_Ito2_i2f_gate__alpha_i2f = 0.025000000000000001 / (1.0 + exp((var_Ito2_i2f_gate__Vm + 58.0) / 5.0)); // per_ms
        const double var_Ito2_i2f_gate__beta_i2f = 1.0 / (5.0 * (1.0 + exp((var_Ito2_i2f_gate__Vm + 19.0) / (-9.0)))); // per_ms
        const double var_Ito2_i2f_gate__i2f_infinity = var_Ito2_i2f_gate__alpha_i2f / (var_Ito2_i2f_gate__alpha_i2f + var_Ito2_i2f_gate__beta_i2f); // dimensionless
        const double var_Ito2_i2f_gate__d_i2f_d_environment__time = (var_Ito2_i2f_gate__i2f_infinity - var_Ito2_i2f_gate__i2f) / var_Ito2_i2f_gate__tau_i2f; // 'per millisecond'
        const double var_Ito2__Ito2_i2f_gate__d_i2f_d_environment__time = var_Ito2_i2f_gate__d_i2f_d_environment__time; // ___units_19
        const double var_Irel__Irel = var_chaste_interface__Irel__Irel; // mM_per_ms
        const double var_Irel__Krel_infinity = 1.0; // mM
        const double var_Irel__kappa = 0.1125; // mM_per_uA_per_uF_per_ms_per_ms
        const double var_Irel__beta_0 = 4.75; // ms
        const double var_Irel__delta_beta_0 = 1.0; // dimensionless
        const double var_CaMK_active__CaMK_0 = 0.050000000000000003; // dimensionless
        const double var_CaMK_active__Km = 0.0015; // mM
        const double var_CaMK_active__CaMK_trap = var_chaste_interface__CaMK_active__CaMK_trap; // dimensionless
        const double var_CaMK_active__Ca_ss_sr = var_chaste_interface__Ca__Ca_ss_sr; // mM
        const double var_CaMK_active__CaMK_active = ((var_CaMK_active__CaMK_0 * (1.0 - var_CaMK_active__CaMK_trap)) / (1.0 + (var_CaMK_active__Km / var_CaMK_active__Ca_ss_sr))) + var_CaMK_active__CaMK_trap; // dimensionless
        const double var_Irel__CaMK_active = var_CaMK_active__CaMK_active; // dimensionless
        const double var_Irel__K_beta = 0.28000000000000003; // mM
        const double var_Irel__h_beta = 10.0; // dimensionless
        const double var_Irel__delta_beta_CaMK = var_Irel__delta_beta_0 / (1.0 + pow(var_Irel__K_beta / (1.0 * var_Irel__CaMK_active), var_Irel__h_beta)); // dimensionless
        const double var_Irel__beta_tau = var_Irel__beta_0 * (1.0 + var_Irel__delta_beta_CaMK); // ms
        const double var_Irel__alpha_rel = var_Irel__beta_tau * var_Irel__kappa; // mM_per_uA_per_uF_per_ms
        const double var_Irel__Ca_JSR = var_chaste_interface__Ca__Ca_JSR; // mM
        const double var_Irel__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_Irel__h_rel = 8.0; // dimensionless
        const double var_Irel__rel_infinity = (var_Irel__ICaL * var_Irel__alpha_rel) / (1.0 + pow(var_Irel__Krel_infinity / var_Irel__Ca_JSR, var_Irel__h_rel)); // mM_per_ms
        const double var_Irel__Krel_tau = 0.0123; // mM
        const double var_Irel__tau_rel = var_Irel__beta_tau / (1.0 + (var_Irel__Krel_tau / var_Irel__Ca_JSR)); // ms
        const double var_Irel__d_Irel_d_environment__time = (-(var_Irel__rel_infinity + var_Irel__Irel)) / var_Irel__tau_rel; // 'mM per millisecond per ms'
        const double var_Iup__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Iup__iupbar = 0.0043750000000000004; // mM_per_ms
        const double var_Iup__delta_kmPLB_bar = 0.00017000000000000001; // mM
        const double var_Iup__CaMK_active = var_CaMK_active__CaMK_active; // dimensionless
        const double var_Iup__kmCaMK = 0.14999999999999999; // mM
        const double var_Iup__delta_kmPLB = (var_Iup__delta_kmPLB_bar * var_Iup__CaMK_active * 1.0) / (var_Iup__kmCaMK + (var_Iup__CaMK_active * 1.0)); // mM
        const double var_Iup__kmup = 0.00092000000000000003; // mM
        const double var_Iup__delta_iupCaMK_bar = 0.75; // dimensionless
        const double var_Iup__delta_iupCaMK = (var_Iup__delta_iupCaMK_bar * var_Iup__CaMK_active * 1.0) / (var_Iup__kmCaMK + (var_Iup__CaMK_active * 1.0)); // dimensionless
        const double var_Iup__Iup = ((var_Iup__delta_iupCaMK + 1.0) * var_Iup__iupbar * var_Iup__Ca_i) / ((var_Iup__Ca_i + var_Iup__kmup) - var_Iup__delta_kmPLB); // mM_per_ms
        const double var_Ileak__nsrbar = 15.0; // mM
        const double var_Ileak__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // mM
        const double var_Ileak__Ileak = (0.0043750000000000004 / var_Ileak__nsrbar) * var_Ileak__Ca_NSR; // mM_per_ms
        const double var_Itr__Ca_JSR = var_chaste_interface__Ca__Ca_JSR; // mM
        const double var_Itr__tautr = 25.0; // ms
        const double var_Itr__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // mM
        const double var_Itr__Itr = (var_Itr__Ca_NSR - var_Itr__Ca_JSR) / var_Itr__tautr; // mM_per_ms
        const double var_Ca__Ca_JSR = var_chaste_interface__Ca__Ca_JSR; // mM
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Ca__Ca_ss_sr = var_chaste_interface__Ca__Ca_ss_sr; // mM
        const double var_Ca__Ca_ss_CaL = var_chaste_interface__Ca__Ca_ss_CaL; // mM
        const double var_Ca__tau_diff = 0.20000000000000001; // ms
        const double var_Ca__tau_diff_ss = 2.0; // ms
        const double var_Ca__Idiff = (var_Ca__Ca_ss_sr - var_Ca__Ca_i) / var_Ca__tau_diff; // mM_per_ms
        const double var_Ca__Idiff_ss = (var_Ca__Ca_ss_sr - var_Ca__Ca_ss_CaL) / var_Ca__tau_diff_ss; // mM_per_ms
        const double var_Ca__trpn_bar = 0.070000000000000007; // mM
        const double var_Ca__km_trpn = 0.00050000000000000001; // mM
        const double var_Ca__km_cmdn = 0.0023800000000000002; // mM
        const double var_Ca__cmdn_bar = 0.050000000000000003; // mM
        const double var_Ca__bmyo = 1.0 / (1.0 + ((var_Ca__cmdn_bar * var_Ca__km_cmdn) / pow(var_Ca__Ca_i + var_Ca__km_cmdn, 2.0)) + ((var_Ca__km_trpn * var_Ca__trpn_bar) / pow(var_Ca__Ca_i + var_Ca__km_trpn, 2.0))); // dimensionless
        const double var_Ca__KmBSL = 0.0086999999999999994; // mM
        const double var_Ca__BSRmax = 0.047; // mM
        const double var_Ca__BSLmax = 1.1240000000000001; // mM
        const double var_Ca__KmBSR = 0.00087000000000000001; // mM
        const double var_Ca__bss = 1.0 / (1.0 + ((var_Ca__BSRmax * var_Ca__KmBSR) / pow(var_Ca__KmBSR + var_Ca__Ca_ss_CaL, 2.0)) + ((var_Ca__BSLmax * var_Ca__KmBSL) / pow(var_Ca__KmBSL + var_Ca__Ca_ss_CaL, 2.0))); // dimensionless
        const double var_Ca__bss_sr = 1.0 / (1.0 + ((var_Ca__BSRmax * var_Ca__KmBSR) / pow(var_Ca__KmBSR + var_Ca__Ca_ss_sr, 2.0)) + ((var_Ca__BSLmax * var_Ca__KmBSL) / pow(var_Ca__KmBSL + var_Ca__Ca_ss_sr, 2.0))); // dimensionless
        const double var_Ca__kmcsqn = 0.80000000000000004; // mM
        const double var_Ca__csqnbar = 10.0; // mM
        const double var_Ca__bcsqn = 1.0 / (1.0 + ((var_Ca__kmcsqn * var_Ca__csqnbar) / pow(var_Ca__Ca_JSR + var_Ca__kmcsqn, 2.0))); // dimensionless
        const double var_Ca__AF = var_cell_geometry__AF; // uF_mole_per_C
        const double var_Ca__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_Ca__INaCa_ss_sr = var_INaCa__INaCa_ss_sr; // uA_per_uF
        const double var_Ca__ICaL = var_ICaL__ICaL; // uA_per_uF
        const double var_Ca__ICab = var_ICab__ICab; // uA_per_uF
        const double var_Ca__IpCa = var_IpCa__IpCa; // uA_per_uF
        const double var_Ca__Vmyo = var_cell_geometry__Vmyo; // uL
        const double var_Ca__Vss_sr = var_cell_geometry__Vss_sr; // uL
        const double var_Ca__Vss_CaL = var_cell_geometry__Vss_CaL; // uL
        const double var_Ca__Vnsr = var_cell_geometry__Vnsr; // uL
        const double var_Ca__Vjsr = var_cell_geometry__Vjsr; // uL
        const double var_Ca__Iup = var_Iup__Iup; // mM_per_ms
        const double var_Ca__Itr = var_Itr__Itr; // mM_per_ms
        const double var_Ca__Ileak = var_Ileak__Ileak; // mM_per_ms
        const double var_Ca__Irel = var_chaste_interface__Irel__Irel; // mM_per_ms
        const double var_Ca__d_Ca_i_d_environment__time = var_Ca__bmyo * ((((-((var_Ca__ICab + var_Ca__IpCa) - (2.0 * var_Ca__INaCa))) * var_Ca__AF) / (var_Ca__Vmyo * 2.0)) + (((var_Ca__Ileak - var_Ca__Iup) * var_Ca__Vnsr) / var_Ca__Vmyo) + ((var_Ca__Idiff * var_Ca__Vss_CaL) / var_Ca__Vmyo)); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_JSR_d_environment__time = var_Ca__bcsqn * (var_Ca__Itr - var_Ca__Irel); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_NSR_d_environment__time = var_Ca__Iup - (var_Ca__Ileak + ((var_Ca__Itr * var_Ca__Vjsr) / var_Ca__Vnsr)); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_ss_sr_d_environment__time = var_Ca__bss_sr * (-((var_Ca__Idiff + var_Ca__Idiff_ss) - (((2.0 * var_Ca__INaCa_ss_sr * var_Ca__AF) / (2.0 * var_Ca__Vss_sr)) + ((var_Ca__Irel * var_Ca__Vjsr) / var_Ca__Vss_sr)))); // 'millimole per litre per millisecond'
        const double var_Ca__d_Ca_ss_CaL_d_environment__time = var_Ca__bss * (-(((var_Ca__ICaL * var_Ca__AF) / (2.0 * var_Ca__Vss_CaL)) - ((var_Ca__Idiff_ss * var_Ca__Vss_sr) / var_Ca__Vss_CaL))); // 'millimole per litre per millisecond'
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_Na__Na_ss_sr = var_chaste_interface__Na__Na_ss_sr; // mM
        const double var_Na__tau_diff = var_Ca__tau_diff; // ms
        const double var_Na__Idiff_Na = (var_Na__Na_ss_sr - var_Na__Na_i) / var_Na__tau_diff; // mM_per_ms
        const double var_Na__AF = var_cell_geometry__AF; // uF_mole_per_C
        const double var_Na__INaCa = var_INaCa__INaCa; // uA_per_uF
        const double var_Na__INaCa_ss_sr = var_INaCa__INaCa_ss_sr; // uA_per_uF
        const double var_Na__INaK = var_INaK__INaK; // uA_per_uF
        const double var_Na__INa = var_INa__INa; // uA_per_uF
        const double var_Na__INaL = var_INaL__INaL; // uA_per_uF
        const double var_Na__INab = var_INab__INab; // uA_per_uF
        const double var_Na__Vmyo = var_cell_geometry__Vmyo; // uL
        const double var_Na__Vss_sr = var_cell_geometry__Vss_sr; // uL
        const double var_Na__CT_Na_Cl = var_CT_Na_Cl__CT_Na_Cl; // mM_per_ms
        const double var_Na__d_Na_i_d_environment__time = -(((((3.0 * var_Na__INaCa) + (3.0 * var_Na__INaK) + var_Na__INa + var_Na__INaL + var_Na__INab) * var_Na__AF) / var_Na__Vmyo) - (var_Na__CT_Na_Cl + ((var_Na__Idiff_Na * var_Na__Vss_sr) / var_Na__Vmyo))); // 'millimole per litre per millisecond'
        const double var_Na__d_Na_ss_sr_d_environment__time = -(((3.0 * var_Na__INaCa_ss_sr * var_Na__AF) / var_Na__Vss_sr) + var_Na__Idiff_Na); // 'millimole per litre per millisecond'
        const double var_Cl__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_Cl__Cl_ss = var_chaste_interface__Cl__Cl_ss; // mM
        const double var_Cl__tau_diff = var_Ca__tau_diff; // ms
        const double var_Cl__Idiff_Cl = (var_Cl__Cl_ss - var_Cl__Cl_i) / var_Cl__tau_diff; // mM_per_ms
        const double var_Cl__AF = var_cell_geometry__AF; // uF_mole_per_C
        const double var_Cl__Ito2 = var_Ito2__Ito2; // uA_per_uF
        const double var_Cl__IClb = var_IClb__IClb; // uA_per_uF
        const double var_Cl__Vmyo = var_cell_geometry__Vmyo; // uL
        const double var_Cl__Vss_sr = var_cell_geometry__Vss_sr; // uL
        const double var_Cl__CT_Na_Cl = var_CT_Na_Cl__CT_Na_Cl; // mM_per_ms
        const double var_Cl__CT_K_Cl = var_CT_K_Cl__CT_K_Cl; // mM_per_ms
        const double var_Cl__d_Cl_i_d_environment__time = -(((var_Cl__IClb * var_Cl__AF) / ((-1.0) * var_Cl__Vmyo)) - (var_Cl__CT_Na_Cl + var_Cl__CT_K_Cl + ((var_Cl__Idiff_Cl * var_Cl__Vss_sr) / var_Cl__Vmyo))); // 'millimole per litre per millisecond'
        const double var_Cl__d_Cl_ss_d_environment__time = -(((var_Cl__Ito2 * var_Cl__AF) / ((-1.0) * var_Cl__Vss_sr)) + var_Cl__Idiff_Cl); // 'millimole per litre per millisecond'
        const double var_K__AF = var_cell_geometry__AF; // uF_mole_per_C
        const double var_K__IKs = var_IKs__IKs; // uA_per_uF
        const double var_K__IKr = var_IKr__IKr; // uA_per_uF
        const double var_K__IK1 = var_IK1__IK1; // uA_per_uF
        const double var_K__Ito1 = var_Ito1__Ito1; // uA_per_uF
        const double var_K__IKp = var_IKp__IKp; // uA_per_uF
        const double var_K__INaK = var_INaK__INaK; // uA_per_uF
        const double var_K__I_stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
        const double var_K__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_K__I_stim = var_K__I_stim_converter / var_K__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
        const double var_K__Vmyo = var_cell_geometry__Vmyo; // uL
        const double var_K__CT_K_Cl = var_CT_K_Cl__CT_K_Cl; // mM_per_ms
        const double var_K__d_K_i_d_environment__time = -(((((var_K__IKs + var_K__IKr + var_K__IK1 + var_K__Ito1 + var_K__IKp + var_K__I_stim) - (2.0 * var_K__INaK)) * var_K__AF) / var_K__Vmyo) - var_K__CT_K_Cl); // 'millimole per litre per millisecond'
        const double var_CaMK_active__alpha_CaMK = 0.050000000000000003; // per_ms
        const double var_CaMK_active__beta_CaMK = 0.00068000000000000005; // per_ms
        const double var_CaMK_active__d_CaMK_trap_d_environment__time = (var_CaMK_active__alpha_CaMK * var_CaMK_active__CaMK_active * (var_CaMK_active__CaMK_active - var_CaMK_active__CaMK_trap)) - (var_CaMK_active__beta_CaMK * var_CaMK_active__CaMK_trap); // 'per millisecond'
        const double var_chaste_interface__Ca__d_Ca_i_d_environment__time = var_Ca__d_Ca_i_d_environment__time; // ___units_85
        const double var_chaste_interface__IKs__d_C1_d_environment__time = var_IKs__d_C1_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C2_d_environment__time = var_IKs__d_C2_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C3_d_environment__time = var_IKs__d_C3_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C4_d_environment__time = var_IKs__d_C4_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C5_d_environment__time = var_IKs__d_C5_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C6_d_environment__time = var_IKs__d_C6_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C7_d_environment__time = var_IKs__d_C7_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C8_d_environment__time = var_IKs__d_C8_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C9_d_environment__time = var_IKs__d_C9_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C10_d_environment__time = var_IKs__d_C10_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C11_d_environment__time = var_IKs__d_C11_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C12_d_environment__time = var_IKs__d_C12_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C13_d_environment__time = var_IKs__d_C13_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C14_d_environment__time = var_IKs__d_C14_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_C15_d_environment__time = var_IKs__d_C15_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_O1_d_environment__time = var_IKs__d_O1_d_environment__time; // ___units_19
        const double var_chaste_interface__IKs__d_O2_d_environment__time = var_IKs__d_O2_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_C_d_environment__time = var_ICaL__d_C_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_O_d_environment__time = var_ICaL__d_O_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_C_star_d_environment__time = var_ICaL__d_C_star_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_O_star_d_environment__time = var_ICaL__d_O_star_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_CI_d_environment__time = var_ICaL__d_CI_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_OI_d_environment__time = var_ICaL__d_OI_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_CI_star_d_environment__time = var_ICaL__d_CI_star_d_environment__time; // ___units_19
        const double var_chaste_interface__ICaL__d_OI_star_d_environment__time = var_ICaL__d_OI_star_d_environment__time; // ___units_19
        const double var_chaste_interface__INa_m_gate__d_m_d_environment__time = var_INa__INa_m_gate__d_m_d_environment__time; // ___units_19
        const double var_chaste_interface__INa_h_gate__d_h_d_environment__time = var_INa__INa_h_gate__d_h_d_environment__time; // ___units_19
        const double var_chaste_interface__INa_j_gate__d_j_d_environment__time = var_INa__INa_j_gate__d_j_d_environment__time; // ___units_19
        const double var_chaste_interface__INaL_mL_gate__d_mL_d_environment__time = var_INaL__INaL_mL_gate__d_mL_d_environment__time; // ___units_19
        const double var_chaste_interface__INaL_hL_gate__d_hL_d_environment__time = var_INaL__INaL_hL_gate__d_hL_d_environment__time; // ___units_19
        const double var_chaste_interface__IKr_xr_gate__d_xr_d_environment__time = var_IKr__IKr_xr_gate__d_xr_d_environment__time; // ___units_19
        const double var_chaste_interface__Ito1_a_gate__d_a_d_environment__time = var_Ito1__Ito1_a_gate__d_a_d_environment__time; // ___units_19
        const double var_chaste_interface__Ito1_i1f_gate__d_i1f_d_environment__time = var_Ito1__Ito1_i1f_gate__d_i1f_d_environment__time; // ___units_19
        const double var_chaste_interface__Ito1_i1s_gate__d_i1s_d_environment__time = var_Ito1__Ito1_i1s_gate__d_i1s_d_environment__time; // ___units_19
        const double var_chaste_interface__Ito2_i2f_gate__d_i2f_d_environment__time = var_Ito2__Ito2_i2f_gate__d_i2f_d_environment__time; // ___units_19
        const double var_chaste_interface__Irel__d_Irel_d_environment__time = var_Irel__d_Irel_d_environment__time; // ___units_87
        const double var_chaste_interface__Ca__d_Ca_JSR_d_environment__time = var_Ca__d_Ca_JSR_d_environment__time; // ___units_88
        const double var_chaste_interface__Ca__d_Ca_NSR_d_environment__time = var_Ca__d_Ca_NSR_d_environment__time; // ___units_88
        const double var_chaste_interface__Ca__d_Ca_ss_sr_d_environment__time = var_Ca__d_Ca_ss_sr_d_environment__time; // ___units_88
        const double var_chaste_interface__Ca__d_Ca_ss_CaL_d_environment__time = var_Ca__d_Ca_ss_CaL_d_environment__time; // ___units_88
        const double var_chaste_interface__Na__d_Na_i_d_environment__time = var_Na__d_Na_i_d_environment__time; // ___units_88
        const double var_chaste_interface__Na__d_Na_ss_sr_d_environment__time = var_Na__d_Na_ss_sr_d_environment__time; // ___units_88
        const double var_chaste_interface__Cl__d_Cl_i_d_environment__time = var_Cl__d_Cl_i_d_environment__time; // ___units_88
        const double var_chaste_interface__Cl__d_Cl_ss_d_environment__time = var_Cl__d_Cl_ss_d_environment__time; // ___units_88
        const double var_chaste_interface__K__d_K_i_d_environment__time = var_K__d_K_i_d_environment__time; // ___units_88
        const double var_chaste_interface__CaMK_active__d_CaMK_trap_d_environment__time = var_CaMK_active__d_CaMK_trap_d_environment__time; // ___units_19
        const double d_dt_chaste_interface__Ca__Ca_i = var_chaste_interface__Ca__d_Ca_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__IKs__C1 = var_chaste_interface__IKs__d_C1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C2 = var_chaste_interface__IKs__d_C2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C3 = var_chaste_interface__IKs__d_C3_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C4 = var_chaste_interface__IKs__d_C4_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C5 = var_chaste_interface__IKs__d_C5_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C6 = var_chaste_interface__IKs__d_C6_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C7 = var_chaste_interface__IKs__d_C7_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C8 = var_chaste_interface__IKs__d_C8_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C9 = var_chaste_interface__IKs__d_C9_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C10 = var_chaste_interface__IKs__d_C10_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C11 = var_chaste_interface__IKs__d_C11_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C12 = var_chaste_interface__IKs__d_C12_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C13 = var_chaste_interface__IKs__d_C13_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C14 = var_chaste_interface__IKs__d_C14_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__C15 = var_chaste_interface__IKs__d_C15_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__O1 = var_chaste_interface__IKs__d_O1_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKs__O2 = var_chaste_interface__IKs__d_O2_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__C = var_chaste_interface__ICaL__d_C_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__O = var_chaste_interface__ICaL__d_O_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__C_star = var_chaste_interface__ICaL__d_C_star_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__O_star = var_chaste_interface__ICaL__d_O_star_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__CI = var_chaste_interface__ICaL__d_CI_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__OI = var_chaste_interface__ICaL__d_OI_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__CI_star = var_chaste_interface__ICaL__d_CI_star_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__ICaL__OI_star = var_chaste_interface__ICaL__d_OI_star_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa_m_gate__m = var_chaste_interface__INa_m_gate__d_m_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa_h_gate__h = var_chaste_interface__INa_h_gate__d_h_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INa_j_gate__j = var_chaste_interface__INa_j_gate__d_j_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INaL_mL_gate__mL = var_chaste_interface__INaL_mL_gate__d_mL_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__INaL_hL_gate__hL = var_chaste_interface__INaL_hL_gate__d_hL_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__IKr_xr_gate__xr = var_chaste_interface__IKr_xr_gate__d_xr_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito1_a_gate__a = var_chaste_interface__Ito1_a_gate__d_a_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito1_i1f_gate__i1f = var_chaste_interface__Ito1_i1f_gate__d_i1f_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito1_i1s_gate__i1s = var_chaste_interface__Ito1_i1s_gate__d_i1s_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Ito2_i2f_gate__i2f = var_chaste_interface__Ito2_i2f_gate__d_i2f_d_environment__time; // 'per millisecond'
        const double d_dt_chaste_interface__Irel__Irel = var_chaste_interface__Irel__d_Irel_d_environment__time; // 'mM per millisecond per ms'
        const double d_dt_chaste_interface__Ca__Ca_JSR = var_chaste_interface__Ca__d_Ca_JSR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_NSR = var_chaste_interface__Ca__d_Ca_NSR_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_ss_sr = var_chaste_interface__Ca__d_Ca_ss_sr_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Ca__Ca_ss_CaL = var_chaste_interface__Ca__d_Ca_ss_CaL_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na__Na_i = var_chaste_interface__Na__d_Na_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Na__Na_ss_sr = var_chaste_interface__Na__d_Na_ss_sr_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Cl__Cl_i = var_chaste_interface__Cl__d_Cl_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__Cl__Cl_ss = var_chaste_interface__Cl__d_Cl_ss_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__K__K_i = var_chaste_interface__K__d_K_i_d_environment__time; // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__CaMK_active__CaMK_trap = var_chaste_interface__CaMK_active__d_CaMK_trap_d_environment__time; // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__membrane__Vm = 0.0;
        }
        else
        {
            const double var_membrane__i_Stim_converter = var_chaste_interface__membrane__i_Stim; // uA_per_cm2
            const double var_membrane__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_membrane__i_Stim = var_membrane__i_Stim_converter / var_membrane__chaste_interface__chaste_membrane_capacitance; // uA_per_uF
            const double var_membrane__ICaL = var_ICaL__ICaL; // uA_per_uF
            const double var_membrane__INaCa_ss_sr = var_INaCa__INaCa_ss_sr; // uA_per_uF
            const double var_membrane__IpCa = var_IpCa__IpCa; // uA_per_uF
            const double var_membrane__ICab = var_ICab__ICab; // uA_per_uF
            const double var_membrane__INaCa = var_INaCa__INaCa; // uA_per_uF
            const double var_membrane__caiont = (var_membrane__ICaL + var_membrane__ICab + var_membrane__IpCa) - (2.0 * (var_membrane__INaCa + var_membrane__INaCa_ss_sr)); // uA_per_uF
            const double var_membrane__INa = var_INa__INa; // uA_per_uF
            const double var_membrane__INab = var_INab__INab; // uA_per_uF
            const double var_membrane__INaL = var_INaL__INaL; // uA_per_uF
            const double var_membrane__INaK = var_INaK__INaK; // uA_per_uF
            const double var_membrane__naiont = var_membrane__INa + (3.0 * (var_membrane__INaCa + var_membrane__INaCa_ss_sr)) + (3.0 * var_membrane__INaK) + var_membrane__INaL + var_membrane__INab; // uA_per_uF
            const double var_membrane__Ito1 = var_Ito1__Ito1; // uA_per_uF
            const double var_membrane__IKr = var_IKr__IKr; // uA_per_uF
            const double var_membrane__IKs = var_IKs__IKs; // uA_per_uF
            const double var_membrane__IKp = var_IKp__IKp; // uA_per_uF
            const double var_membrane__IK1 = var_IK1__IK1; // uA_per_uF
            const double var_membrane__kiont = var_membrane__IKr + var_membrane__IKs + var_membrane__IK1 + var_membrane__IKp + ((-2.0) * var_membrane__INaK) + var_membrane__Ito1 + var_membrane__i_Stim; // uA_per_uF
            const double var_membrane__IClb = var_IClb__IClb; // uA_per_uF
            const double var_membrane__Ito2 = var_Ito2__Ito2; // uA_per_uF
            const double var_membrane__clont = var_membrane__IClb + var_membrane__Ito2; // uA_per_uF
            const double var_membrane__d_Vm_d_environment__time = -(var_membrane__naiont + var_membrane__kiont + var_membrane__caiont + var_membrane__clont); // 'millivolt per millisecond'
            const double var_chaste_interface__membrane__d_Vm_d_environment__time = var_membrane__d_Vm_d_environment__time; // ___units_13
            d_dt_chaste_interface__membrane__Vm = var_chaste_interface__membrane__d_Vm_d_environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__membrane__Vm;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__Ca__Ca_i;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__IKs__C1;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__IKs__C2;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__IKs__C3;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__IKs__C4;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__IKs__C5;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__IKs__C6;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__IKs__C7;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__IKs__C8;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__IKs__C9;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__IKs__C10;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__IKs__C11;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__IKs__C12;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__IKs__C13;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__IKs__C14;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__IKs__C15;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__IKs__O1;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__IKs__O2;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__ICaL__C;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__ICaL__O;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__ICaL__C_star;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__ICaL__O_star;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__ICaL__CI;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__ICaL__OI;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__ICaL__CI_star;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__ICaL__OI_star;
        NV_Ith_S(rDY, 27) = d_dt_chaste_interface__INa_m_gate__m;
        NV_Ith_S(rDY, 28) = d_dt_chaste_interface__INa_h_gate__h;
        NV_Ith_S(rDY, 29) = d_dt_chaste_interface__INa_j_gate__j;
        NV_Ith_S(rDY, 30) = d_dt_chaste_interface__INaL_mL_gate__mL;
        NV_Ith_S(rDY, 31) = d_dt_chaste_interface__INaL_hL_gate__hL;
        NV_Ith_S(rDY, 32) = d_dt_chaste_interface__IKr_xr_gate__xr;
        NV_Ith_S(rDY, 33) = d_dt_chaste_interface__Ito1_a_gate__a;
        NV_Ith_S(rDY, 34) = d_dt_chaste_interface__Ito1_i1f_gate__i1f;
        NV_Ith_S(rDY, 35) = d_dt_chaste_interface__Ito1_i1s_gate__i1s;
        NV_Ith_S(rDY, 36) = d_dt_chaste_interface__Ito2_i2f_gate__i2f;
        NV_Ith_S(rDY, 37) = d_dt_chaste_interface__Irel__Irel;
        NV_Ith_S(rDY, 38) = d_dt_chaste_interface__Ca__Ca_JSR;
        NV_Ith_S(rDY, 39) = d_dt_chaste_interface__Ca__Ca_NSR;
        NV_Ith_S(rDY, 40) = d_dt_chaste_interface__Ca__Ca_ss_sr;
        NV_Ith_S(rDY, 41) = d_dt_chaste_interface__Ca__Ca_ss_CaL;
        NV_Ith_S(rDY, 42) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 43) = d_dt_chaste_interface__Na__Na_ss_sr;
        NV_Ith_S(rDY, 44) = d_dt_chaste_interface__Cl__Cl_i;
        NV_Ith_S(rDY, 45) = d_dt_chaste_interface__Cl__Cl_ss;
        NV_Ith_S(rDY, 46) = d_dt_chaste_interface__K__K_i;
        NV_Ith_S(rDY, 47) = d_dt_chaste_interface__CaMK_active__CaMK_trap;
    }
    
    void Dynamicdecker_2009FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -87.472528
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 1);
        // Units: millimolar; Initial value: 7.09945e-5
        double var_chaste_interface__IKs__C1 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.476653873938053
        double var_chaste_interface__IKs__C2 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.2551771850026437
        double var_chaste_interface__IKs__C3 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.05122852186842027
        double var_chaste_interface__IKs__C4 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.004570874421666423
        double var_chaste_interface__IKs__C5 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0.0001529389211563687
        double var_chaste_interface__IKs__C6 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0.1328281770413747
        double var_chaste_interface__IKs__C7 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0.05333228495514583
        double var_chaste_interface__IKs__C8 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0.007137874613383642
        double var_chaste_interface__IKs__C9 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0.0003184390970637536
        double var_chaste_interface__IKs__C10 = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.01388061042363991
        double var_chaste_interface__IKs__C11 = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 0.003715500164470033
        double var_chaste_interface__IKs__C12 = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 0.0002486371465457659
        double var_chaste_interface__IKs__C13 = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.0006446803014431032
        double var_chaste_interface__IKs__C14 = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 8.628258026770862e-5
        double var_chaste_interface__IKs__C15 = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 1.122823524761588e-5
        double var_chaste_interface__IKs__O1 = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 1.051906959485266e-5
        double var_chaste_interface__IKs__O2 = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 2.372219883411999e-6
        double var_chaste_interface__ICaL__C = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9999613782488198
        double var_chaste_interface__ICaL__O = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 2.27419494597377e-5
        double var_chaste_interface__ICaL__C_star = NV_Ith_S(rY, 21);
        // Units: dimensionless; Initial value: 5.936477396599124e-11
        double var_chaste_interface__ICaL__O_star = NV_Ith_S(rY, 22);
        // Units: dimensionless; Initial value: 1.350122566369778e-15
        double var_chaste_interface__ICaL__CI = NV_Ith_S(rY, 23);
        // Units: dimensionless; Initial value: 1.587938121237188e-5
        double var_chaste_interface__ICaL__OI = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 3.611420243201921e-10
        double var_chaste_interface__ICaL__CI_star = NV_Ith_S(rY, 25);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__ICaL__OI_star = NV_Ith_S(rY, 26);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__INa_m_gate__m = NV_Ith_S(rY, 27);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INa_h_gate__h = NV_Ith_S(rY, 28);
        // Units: dimensionless; Initial value: 0.9913109066867
        double var_chaste_interface__INa_j_gate__j = NV_Ith_S(rY, 29);
        // Units: dimensionless; Initial value: 0.9970771239754529
        double var_chaste_interface__INaL_mL_gate__mL = NV_Ith_S(rY, 30);
        // Units: dimensionless; Initial value: 0.001022252813581797
        double var_chaste_interface__INaL_hL_gate__hL = NV_Ith_S(rY, 31);
        // Units: dimensionless; Initial value: 0.3593255076983574
        double var_chaste_interface__IKr_xr_gate__xr = NV_Ith_S(rY, 32);
        // Units: dimensionless; Initial value: 1.235996442041028e-8
        double var_chaste_interface__Ito1_a_gate__a = NV_Ith_S(rY, 33);
        // Units: dimensionless; Initial value: 1.773318268499115e-5
        double var_chaste_interface__Ito1_i1f_gate__i1f = NV_Ith_S(rY, 34);
        // Units: dimensionless; Initial value: 0.9979722
        double var_chaste_interface__Ito1_i1s_gate__i1s = NV_Ith_S(rY, 35);
        // Units: dimensionless; Initial value: 0.9874435
        double var_chaste_interface__Ito2_i2f_gate__i2f = NV_Ith_S(rY, 36);
        // Units: dimensionless; Initial value: 0.9960352
        double var_chaste_interface__Irel__Irel = NV_Ith_S(rY, 37);
        // Units: mM_per_ms; Initial value: 0.00107332
        double var_chaste_interface__Ca__Ca_JSR = NV_Ith_S(rY, 38);
        // Units: mM; Initial value: 0.917692717
        double var_chaste_interface__Ca__Ca_NSR = NV_Ith_S(rY, 39);
        // Units: mM; Initial value: 0.929835335
        double var_chaste_interface__Ca__Ca_ss_sr = NV_Ith_S(rY, 40);
        // Units: mM; Initial value: 9.04757e-5
        double var_chaste_interface__Ca__Ca_ss_CaL = NV_Ith_S(rY, 41);
        // Units: mM; Initial value: 9.61545e-5
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 42);
        // Units: mM; Initial value: 6.935575
        double var_chaste_interface__Na__Na_ss_sr = NV_Ith_S(rY, 43);
        // Units: mM; Initial value: 6.935607
        double var_chaste_interface__Cl__Cl_i = NV_Ith_S(rY, 44);
        // Units: mM; Initial value: 20.26842
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 46);
        // Units: mM; Initial value: 145.5689
        double var_chaste_interface__CaMK_active__CaMK_trap = NV_Ith_S(rY, 47);
        // Units: dimensionless; Initial value: 0.0018861341
        
        const double var_chaste_interface__environment__fake_dt = 1.0; // ms
        const double var_model_parameters__F = 96487.0; // C_per_mole
        const double var_model_parameters__T = 310.0; // kelvin
        const double var_model_parameters__R = 8314.0; // J_per_kmole_K
        const double var_model_parameters__K_o = 5.4000000000000004; // mM
        const double var_model_parameters__Ca_o = 1.8; // mM
        const double var_model_parameters__Na_o = 140.0; // mM
        const double var_model_parameters__Cl_o = 100.0; // mM
        const double var_cell_geometry__a = 0.0011000000000000001; // cm
        const double var_cell_geometry__l = 0.01; // cm
        const double var_membrane__Vm = var_chaste_interface__membrane__Vm; // mV
        const double var_ICaL__gamma_Cao = 0.34100000000000003; // dimensionless
        const double var_ICaL__gamma_Cai = 1.0; // dimensionless
        const double var_ICaL__PCa = 0.00015552; // L_per_F_ms
        const double var_ICaL__O = var_chaste_interface__ICaL__O; // dimensionless
        const double var_ICaL__O_star = var_chaste_interface__ICaL__O_star; // dimensionless
        const double var_INaCa__Vmax = 4.5; // uA_per_uF
        const double var_INaCa__eta = 0.27000000000000002; // dimensionless
        const double var_INaCa__KmNai = 12.300000000000001; // mM
        const double var_INaCa__KmCai = 0.0035999999999999999; // mM
        const double var_INaCa__ksat = 0.32000000000000001; // dimensionless
        const double var_INaCa__KmNao = 87.5; // mM
        const double var_INaCa__KmCao = 1.3; // mM
        const double var_INaCa__KmCa_act = 0.000125; // mM
        const double var_IpCa__KmpCa = 0.00050000000000000001; // mM
        const double var_IpCa__gpCa = 0.057500000000000002; // uA_per_uF
        const double var_ICab__PCab = 1.9950840000000001e-07; // L_per_F_ms
        const double var_ICab__gamma_Ca_o = 0.34100000000000003; // dimensionless
        const double var_ICab__gamma_Ca_i = 1.0; // dimensionless
        const double var_INa__g_Na = 9.0749999999999993; // mS_per_uF
        const double var_INa__m = var_chaste_interface__INa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__INa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__INa_h_gate__h; // dimensionless
        const double var_INab__PNab = 3.2000000000000001e-09; // L_per_F_ms
        const double var_INaL__mL = var_chaste_interface__INaL_mL_gate__mL; // dimensionless
        const double var_INaL__hL = var_chaste_interface__INaL_hL_gate__hL; // dimensionless
        const double var_INaL__gNaL = 0.0064999999999999997; // mS_per_uF
        const double var_INaK__kmko = 1.5; // mM
        const double var_INaK__sigma = 1.0; // dimensionless
        const double var_INaK__V_half =  -92.0; // mV
        const double var_INaK__ibarnak = 1.3999999999999999; // uA_per_uF
        const double var_INaK__kmnai = 2.6000000000000001; // mM
        const double var_Ito1__i1f = var_chaste_interface__Ito1_i1f_gate__i1f; // dimensionless
        const double var_Ito1__i1s = var_chaste_interface__Ito1_i1s_gate__i1s; // dimensionless
        const double var_Ito1__gto1 = 0.4975; // mS_per_uF
        const double var_Ito1__a = var_chaste_interface__Ito1_a_gate__a; // dimensionless
        const double var_IKr__xr = var_chaste_interface__IKr_xr_gate__xr; // dimensionless
        const double var_IKr__gKr_max = 0.013854200000000001; // mS_per_uF
        const double var_reversal_potentials__prnak = 0.018329999999999999; // dimensionless
        const double var_IKs__O2 = var_chaste_interface__IKs__O2; // dimensionless
        const double var_IKs__O1 = var_chaste_interface__IKs__O1; // dimensionless
        const double var_IKp__gKp = 0.0027599999999999999; // mS_per_uF
        const double var_IClb__gClb = 0.00022499999999999999; // mS_per_uF
        const double var_Ito2__i2f = var_chaste_interface__Ito2_i2f_gate__i2f; // dimensionless
        const double var_Ito2__kCa_ito2 = 0.40000000000000002; // mM_per_ms
        const double var_Ito2__zCl =  -1.0; // dimensionless
        const double var_Ito2__PCl = 8.9999999999999996e-07; // L_per_F_ms
        const double var_IKs__C1 = var_chaste_interface__IKs__C1; // dimensionless
        const double var_IKs__C2 = var_chaste_interface__IKs__C2; // dimensionless
        const double var_IKs__C3 = var_chaste_interface__IKs__C3; // dimensionless
        const double var_IKs__C4 = var_chaste_interface__IKs__C4; // dimensionless
        const double var_IKs__C5 = var_chaste_interface__IKs__C5; // dimensionless
        const double var_IKs__C6 = var_chaste_interface__IKs__C6; // dimensionless
        const double var_IKs__C7 = var_chaste_interface__IKs__C7; // dimensionless
        const double var_IKs__C8 = var_chaste_interface__IKs__C8; // dimensionless
        const double var_IKs__C9 = var_chaste_interface__IKs__C9; // dimensionless
        const double var_IKs__C10 = var_chaste_interface__IKs__C10; // dimensionless
        const double var_IKs__C11 = var_chaste_interface__IKs__C11; // dimensionless
        const double var_IKs__C12 = var_chaste_interface__IKs__C12; // dimensionless
        const double var_IKs__C13 = var_chaste_interface__IKs__C13; // dimensionless
        const double var_IKs__C14 = var_chaste_interface__IKs__C14; // dimensionless
        const double var_IKs__C15 = var_chaste_interface__IKs__C15; // dimensionless
        const double var_ICaL__C = var_chaste_interface__ICaL__C; // dimensionless
        const double var_ICaL__C_star = var_chaste_interface__ICaL__C_star; // dimensionless
        const double var_ICaL__CI = var_chaste_interface__ICaL__CI; // dimensionless
        const double var_ICaL__OI = var_chaste_interface__ICaL__OI; // dimensionless
        const double var_ICaL__CI_star = var_chaste_interface__ICaL__CI_star; // dimensionless
        const double var_ICaL__OI_star = var_chaste_interface__ICaL__OI_star; // dimensionless
        const double var_ICaL__theta = 1.0; // per_ms
        const double var_ICaL__theta_I = 9.9999999999999995e-07; // per_ms
        const double var_INa_m_gate__m = var_INa__m; // dimensionless
        const double var_INa_h_gate__h = var_INa__h; // dimensionless
        const double var_INa_j_gate__j = var_INa__j; // dimensionless
        const double var_INaL_mL_gate__mL = var_INaL__mL; // dimensionless
        const double var_INaL_hL_gate__tau_hL = 600.0; // ms
        const double var_INaL_hL_gate__hL = var_INaL__hL; // dimensionless
        const double var_CT_Na_Cl__CT_Na_Cl_max = 2.4610800000000002e-05; // mM_per_ms
        const double var_CT_K_Cl__CT_K_Cl_max = 1.77e-05; // mM_per_ms
        const double var_IKr_xr_gate__xr = var_IKr__xr; // dimensionless
        const double var_Ito1_a_gate__a = var_Ito1__a; // dimensionless
        const double var_Ito1_i1f_gate__i1f = var_Ito1__i1f; // dimensionless
        const double var_Ito1_i1s_gate__i1s = var_Ito1__i1s; // dimensionless
        const double var_Ito2_i2f_gate__i2f = var_Ito2__i2f; // dimensionless
        const double var_Ito2_i2f_gate__tau_i2f = 8.0; // ms
        const double var_Irel__Irel = var_chaste_interface__Irel__Irel; // mM_per_ms
        const double var_Irel__Krel_infinity = 1.0; // mM
        const double var_Irel__kappa = 0.1125; // mM_per_uA_per_uF_per_ms_per_ms
        const double var_Irel__beta_0 = 4.75; // ms
        const double var_Irel__delta_beta_0 = 1.0; // dimensionless
        const double var_CaMK_active__CaMK_0 = 0.050000000000000003; // dimensionless
        const double var_CaMK_active__Km = 0.0015; // mM
        const double var_CaMK_active__CaMK_trap = var_chaste_interface__CaMK_active__CaMK_trap; // dimensionless
        const double var_Irel__K_beta = 0.28000000000000003; // mM
        const double var_Irel__h_beta = 10.0; // dimensionless
        const double var_Irel__h_rel = 8.0; // dimensionless
        const double var_Irel__Krel_tau = 0.0123; // mM
        const double var_Iup__iupbar = 0.0043750000000000004; // mM_per_ms
        const double var_Iup__delta_kmPLB_bar = 0.00017000000000000001; // mM
        const double var_Iup__kmCaMK = 0.14999999999999999; // mM
        const double var_Iup__kmup = 0.00092000000000000003; // mM
        const double var_Iup__delta_iupCaMK_bar = 0.75; // dimensionless
        const double var_Ileak__nsrbar = 15.0; // mM
        const double var_Itr__tautr = 25.0; // ms
        const double var_Ca__Ca_JSR = var_chaste_interface__Ca__Ca_JSR; // mM
        const double var_Ca__Ca_NSR = var_chaste_interface__Ca__Ca_NSR; // mM
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // mM
        const double var_Ca__Ca_ss_sr = var_chaste_interface__Ca__Ca_ss_sr; // mM
        const double var_Ca__Ca_ss_CaL = var_chaste_interface__Ca__Ca_ss_CaL; // mM
        const double var_Ca__tau_diff = 0.20000000000000001; // ms
        const double var_Ca__tau_diff_ss = 2.0; // ms
        const double var_Ca__trpn_bar = 0.070000000000000007; // mM
        const double var_Ca__km_trpn = 0.00050000000000000001; // mM
        const double var_Ca__km_cmdn = 0.0023800000000000002; // mM
        const double var_Ca__cmdn_bar = 0.050000000000000003; // mM
        const double var_Ca__KmBSL = 0.0086999999999999994; // mM
        const double var_Ca__BSRmax = 0.047; // mM
        const double var_Ca__BSLmax = 1.1240000000000001; // mM
        const double var_Ca__KmBSR = 0.00087000000000000001; // mM
        const double var_Ca__kmcsqn = 0.80000000000000004; // mM
        const double var_Ca__csqnbar = 10.0; // mM
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // mM
        const double var_Na__Na_ss_sr = var_chaste_interface__Na__Na_ss_sr; // mM
        const double var_Cl__Cl_i = var_chaste_interface__Cl__Cl_i; // mM
        const double var_K__K_i = var_chaste_interface__K__K_i; // mM
        const double var_CaMK_active__alpha_CaMK = 0.050000000000000003; // per_ms
        const double var_CaMK_active__beta_CaMK = 0.00068000000000000005; // per_ms
        const double var_t1 = pow(var_Ito1_a_gate__a, 2.0); // dimensionless
        const double var_t3 = (var_Ito1__gto1 * var_t1) * var_Ito1_a_gate__a; // dimensionless
        const double var_t6 = exp((1.0 / 550.0) * var_membrane__Vm); // dimensionless
        const double var_t8 = var_model_parameters__R * var_model_parameters__T; // dimensionless
        const double var_t9 = 1.0 / var_model_parameters__F; // dimensionless
        const double var_t10 = 1.0 / var_K__K_i; // dimensionless
        const double var_t12 = log(var_model_parameters__K_o * var_t10); // dimensionless
        const double var_t14 = (var_t8 * var_t9) * var_t12; // dimensionless
        const double var_t15 = var_membrane__Vm - var_t14; // dimensionless
        const double var_t16 = (var_Ito1_i1s_gate__i1s * var_t6) * var_t15; // dimensionless
        const double var_t18 = (((1.0 / 550.0) * var_t3) * var_Ito1_i1f_gate__i1f) * var_t16; // dimensionless
        const double var_t19 = pow(var_model_parameters__F, 2.0); // dimensionless
        const double var_t20 = var_t19 * var_INab__PNab; // dimensionless
        const double var_t21 = 1.0 / var_model_parameters__R; // dimensionless
        const double var_t23 = 1.0 / var_model_parameters__T; // dimensionless
        const double var_t24 = var_membrane__Vm * var_model_parameters__F; // dimensionless
        const double var_t25 = var_t21 * var_t23; // dimensionless
        const double var_t26 = var_t24 * var_t25; // dimensionless
        const double var_t27 = exp(var_t26); // dimensionless
        const double var_t29 = (var_Na__Na_i * var_t27) - var_model_parameters__Na_o; // dimensionless
        const double var_t31 = var_t27 - 1.0; // dimensionless
        const double var_t32 = 1.0 / var_t31; // dimensionless
        const double var_t34 = (((var_t20 * var_t21) * var_t23) * var_t29) * var_t32; // dimensionless
        const double var_t39 = exp(2.0 * var_t26); // dimensionless
        const double var_t42 = ((var_ICab__gamma_Ca_i * var_Ca__Ca_i) * var_t39) - (var_ICab__gamma_Ca_o * var_model_parameters__Ca_o); // dimensionless
        const double var_t44 = var_t39 - 1.0; // dimensionless
        const double var_t45 = 1.0 / var_t44; // dimensionless
        const double var_t48 = (((((4.0 * var_ICab__PCab) * var_t19) * var_t21) * var_t23) * var_t42) * var_t45; // dimensionless
        const double var_t49 = var_Ito1_i1f_gate__i1f * var_Ito1_i1s_gate__i1s; // dimensionless
        const double var_t50 = var_t49 * var_t6; // dimensionless
        const double var_t51 = var_t3 * var_t50; // dimensionless
        const double var_t52 = var_ICaL__PCa * var_t19; // dimensionless
        const double var_t54 = var_ICaL__gamma_Cai * var_Ca__Ca_ss_CaL; // dimensionless
        const double var_t57 = (var_t54 * var_t39) - (var_ICaL__gamma_Cao * var_model_parameters__Ca_o); // dimensionless
        const double var_t58 = var_t23 * var_t57; // dimensionless
        const double var_t59 = var_ICaL__O + var_ICaL__O_star; // dimensionless
        const double var_t60 = var_t45 * var_t59; // dimensionless
        const double var_t66 = exp(1.252173913 - (0.16722408029999999 * var_membrane__Vm)); // dimensionless
        const double var_t67 = 1.0 + var_t66; // dimensionless
        const double var_t69 = var_IKp__gKp / var_t67; // dimensionless
        const double var_t70 = 1.0 / var_Ca__Ca_i; // dimensionless
        const double var_t71 = pow(var_t70, 1.3999999999999999); // dimensionless
        const double var_t73 = 1.0 + (6.481821026e-07 * var_t71); // dimensionless
        const double var_t76 = 0.082600000000000007 + (0.04956 / var_t73); // dimensionless
        const double var_t77 = var_IKs__O1 + var_IKs__O2; // dimensionless
        const double var_t78 = var_t76 * var_t77; // dimensionless
        const double var_t79 = pow(var_t67, 2.0); // dimensionless
        const double var_t84 = (((0.16722408029999999 * var_IKp__gKp) / var_t79) * var_t15) * var_t66; // dimensionless
        const double var_t85 = pow(var_INa_m_gate__m, 2.0); // dimensionless
        const double var_t87 = (var_INa__g_Na * var_t85) * var_INa_m_gate__m; // dimensionless
        const double var_t88 = var_INa_h_gate__h * var_INa_j_gate__j; // dimensionless
        const double var_t89 = var_t87 * var_t88; // dimensionless
        const double var_t90 = pow(var_model_parameters__K_o, 1.0 / 2.0); // dimensionless
        const double var_t91 = var_IKr__gKr_max * var_t90; // dimensionless
        const double var_t94 = exp((0.064935064939999995 * var_membrane__Vm) + 0.64935064939999998); // dimensionless
        const double var_t95 = 1.0 + var_t94; // dimensionless
        const double var_t96 = 1.0 / var_t95; // dimensionless
        const double var_t98 = (var_t91 * var_IKr_xr_gate__xr) * var_t96; // dimensionless
        const double var_t99 = 0.43033148290000001 * var_t98; // dimensionless
        const double var_t100 = pow(var_INaL_mL_gate__mL, 2.0); // dimensionless
        const double var_t102 = (var_INaL__gNaL * var_t100) * var_INaL_mL_gate__mL; // dimensionless
        const double var_t103 = var_t102 * var_INaL_hL_gate__hL; // dimensionless
        const double var_t107 = exp(((0.23849999999999999 * var_membrane__Vm) - (0.23849999999999999 * var_t14)) - 14.1227775); // dimensionless
        const double var_t108 = 1.0 + var_t107; // dimensionless
        const double var_t109 = 1.0 / var_t108; // dimensionless
        const double var_t110 = var_t90 * var_t109; // dimensionless
        const double var_t115 = exp(((0.080320000000000003 * var_membrane__Vm) - (0.080320000000000003 * var_t14)) + 0.43983232); // dimensionless
        const double var_t120 = exp(((0.061749999999999999 * var_membrane__Vm) - (0.061749999999999999 * var_t14)) - 36.698642499999998); // dimensionless
        const double var_t121 = (0.49124000000000001 * var_t115) + var_t120; // dimensionless
        const double var_t125 = exp((((-0.51429999999999998) * var_membrane__Vm) + (0.51429999999999998 * var_t14)) - 2.4444678999999998); // dimensionless
        const double var_t126 = 1.0 + var_t125; // dimensionless
        const double var_t127 = 1.0 / var_t126; // dimensionless
        const double var_t129 = (1.02 * var_t109) + (var_t121 * var_t127); // dimensionless
        const double var_t130 = 1.0 / var_t129; // dimensionless
        const double var_t131 = var_t110 * var_t130; // dimensionless
        const double var_t132 = 0.21946905620000001 * var_t131; // dimensionless
        const double var_t134 = pow(var_t95, 2.0); // dimensionless
        const double var_t139 = ((((0.027943602790000001 * var_t91) * var_IKr_xr_gate__xr) / var_t134) * var_t15) * var_t94; // dimensionless
        const double var_t140 = pow(var_Na__Na_i, 2.0); // dimensionless
        const double var_t141 = var_t140 * var_Na__Na_i; // dimensionless
        const double var_t142 = var_t141 * var_model_parameters__Ca_o; // dimensionless
        const double var_t144 = var_model_parameters__F * var_t21; // dimensionless
        const double var_t146 = var_t144 * var_t23; // dimensionless
        const double var_t148 = exp((var_INaCa__eta * var_membrane__Vm) * var_t146); // dimensionless
        const double var_t150 = (var_t144 * var_t23) * var_t148; // dimensionless
        const double var_t152 = pow(var_model_parameters__Na_o, 2.0); // dimensionless
        const double var_t153 = var_t152 * var_model_parameters__Na_o; // dimensionless
        const double var_t154 = var_t153 * var_Ca__Ca_i; // dimensionless
        const double var_t155 = var_INaCa__eta - 1.0; // dimensionless
        const double var_t159 = exp((var_t155 * var_membrane__Vm) * var_t146); // dimensionless
        const double var_t160 = var_t23 * var_t159; // dimensionless
        const double var_t161 = var_t144 * var_t160; // dimensionless
        const double var_t165 = pow(var_INaCa__KmCa_act, 2.0); // dimensionless
        const double var_t166 = pow(var_Ca__Ca_i, 2.0); // dimensionless
        const double var_t167 = 1.0 / var_t166; // dimensionless
        const double var_t169 = 1.0 + (var_t165 * var_t167); // dimensionless
        const double var_t170 = 1.0 / var_t169; // dimensionless
        const double var_t172 = 1.0 + (var_INaCa__ksat * var_t159); // dimensionless
        const double var_t173 = 1.0 / var_t172; // dimensionless
        const double var_t176 = pow(var_INaCa__KmNao, 2.0); // dimensionless
        const double var_t177 = var_t176 * var_INaCa__KmNao; // dimensionless
        const double var_t179 = pow(var_INaCa__KmNai, 2.0); // dimensionless
        const double var_t180 = var_t179 * var_INaCa__KmNai; // dimensionless
        const double var_t181 = var_t180 * var_model_parameters__Ca_o; // dimensionless
        const double var_t182 = 1.0 / var_INaCa__KmCai; // dimensionless
        const double var_t186 = var_INaCa__KmCai * var_t153; // dimensionless
        const double var_t187 = 1.0 / var_t180; // dimensionless
        const double var_t191 = (((((var_INaCa__KmCao * var_t141) + (var_t177 * var_Ca__Ca_i)) + (var_t181 * (1.0 + (var_Ca__Ca_i * var_t182)))) + (var_t186 * (1.0 + (var_t141 * var_t187)))) + var_t142) + var_t154; // dimensionless
        const double var_t192 = 1.0 / var_t191; // dimensionless
        const double var_t193 = (var_t170 * var_t173) * var_t192; // dimensionless
        const double var_t194 = (var_INaCa__Vmax * (((var_t142 * var_INaCa__eta) * var_t150) - ((var_t154 * var_t155) * var_t161))) * var_t193; // dimensionless
        const double var_t196 = ((((((((((((((-var_t18) - var_t34) - var_t48) - var_t51) - ((((4.0 * var_t52) * var_t21) * var_t58) * var_t60)) - var_t69) - var_IClb__gClb) - var_t78) - var_t84) - var_t89) - var_t99) - var_t103) - var_t132) + var_t139) - (0.80000000000000004 * var_t194); // dimensionless
        const double var_t197 = pow(var_t129, 2.0); // dimensionless
        const double var_t199 = (1.0 / var_t197) * var_t15; // dimensionless
        const double var_t200 = pow(var_t108, 2.0); // dimensionless
        const double var_t201 = 1.0 / var_t200; // dimensionless
        const double var_t208 = pow(var_t126, 2.0); // dimensionless
        const double var_t210 = var_t121 / var_t208; // dimensionless
        const double var_t216 = ((0.21946905620000001 * var_t110) * var_t199) * (((((-0.24326999999999999) * var_t201) * var_t107) + (((0.039456396800000001 * var_t115) + (0.061749999999999999 * var_t120)) * var_t127)) + ((0.51429999999999998 * var_t210) * var_t125)); // dimensionless
        const double var_t217 = var_t90 * var_t201; // dimensionless
        const double var_t218 = var_t130 * var_t15; // dimensionless
        const double var_t221 = ((0.052343369899999999 * var_t217) * var_t218) * var_t107; // dimensionless
        const double var_t222 = pow(var_Na__Na_ss_sr, 2.0); // dimensionless
        const double var_t223 = var_t222 * var_Na__Na_ss_sr; // dimensionless
        const double var_t224 = var_t223 * var_model_parameters__Ca_o; // dimensionless
        const double var_t227 = var_t153 * var_Ca__Ca_ss_sr; // dimensionless
        const double var_t232 = pow(var_Ca__Ca_ss_sr, 2.0); // dimensionless
        const double var_t233 = 1.0 / var_t232; // dimensionless
        const double var_t235 = 1.0 + (var_t165 * var_t233); // dimensionless
        const double var_t236 = 1.0 / var_t235; // dimensionless
        const double var_t237 = var_t236 * var_t173; // dimensionless
        const double var_t246 = (((((var_INaCa__KmCao * var_t223) + (var_t177 * var_Ca__Ca_ss_sr)) + (var_t181 * (1.0 + (var_Ca__Ca_ss_sr * var_t182)))) + (var_t186 * (1.0 + (var_t223 * var_t187)))) + var_t224) + var_t227; // dimensionless
        const double var_t247 = 1.0 / var_t246; // dimensionless
        const double var_t248 = var_t237 * var_t247; // dimensionless
        const double var_t249 = (var_INaCa__Vmax * (((var_t224 * var_INaCa__eta) * var_t150) - ((var_t227 * var_t155) * var_t161))) * var_t248; // dimensionless
        const double var_t254 = var_INaCa__Vmax * ((var_t142 * var_t148) - (var_t154 * var_t159)); // dimensionless
        const double var_t255 = pow(var_t172, 2.0); // dimensionless
        const double var_t256 = 1.0 / var_t255; // dimensionless
        const double var_t263 = (((var_INaCa__ksat * var_t155) * var_model_parameters__F) * var_t25) * var_t159; // dimensionless
        const double var_t264 = (((var_t254 * var_t170) * var_t256) * var_t192) * var_t263; // dimensionless
        const double var_t266 = pow(var_Ito2__zCl, 2.0); // dimensionless
        const double var_t267 = var_Ito2__PCl * var_t266; // dimensionless
        const double var_t268 = var_t19 * var_t21; // dimensionless
        const double var_t271 = var_Cl__Cl_i - (var_model_parameters__Cl_o * var_t27); // dimensionless
        const double var_t273 = (-1.0) / var_t31; // dimensionless
        const double var_t275 = pow(var_Irel__Irel, 2.0); // dimensionless
        const double var_t276 = pow(var_Ito2__kCa_ito2, 2.0); // dimensionless
        const double var_t277 = 1.0 / var_t276; // dimensionless
        const double var_t279 = 1.0 + (var_t275 * var_t277); // dimensionless
        const double var_t281 = 1.0 - (1.0 / var_t279); // dimensionless
        const double var_t282 = (var_t273 * var_Ito2_i2f_gate__i2f) * var_t281; // dimensionless
        const double var_t285 = var_ICaL__PCa * var_membrane__Vm; // dimensionless
        const double var_t286 = var_t19 * var_model_parameters__F; // dimensionless
        const double var_t287 = pow(var_model_parameters__R, 2.0); // dimensionless
        const double var_t288 = 1.0 / var_t287; // dimensionless
        const double var_t289 = var_t286 * var_t288; // dimensionless
        const double var_t290 = pow(var_model_parameters__T, 2.0); // dimensionless
        const double var_t291 = 1.0 / var_t290; // dimensionless
        const double var_t294 = var_t39 * var_t45; // dimensionless
        const double var_t295 = var_t294 * var_t59; // dimensionless
        const double var_t301 = pow(var_t44, 2.0); // dimensionless
        const double var_t302 = 1.0 / var_t301; // dimensionless
        const double var_t303 = var_t302 * var_t59; // dimensionless
        const double var_t308 = var_ICab__PCab * var_membrane__Vm; // dimensionless
        const double var_t309 = var_t308 * var_t289; // dimensionless
        const double var_t315 = (((((8.0 * var_t309) * var_t291) * var_ICab__gamma_Ca_i) * var_Ca__Ca_i) * var_t39) * var_t45; // dimensionless
        const double var_t318 = ((var_t286 * var_INab__PNab) * var_membrane__Vm) * var_t288; // dimensionless
        const double var_t320 = pow(var_t31, 2.0); // dimensionless
        const double var_t321 = 1.0 / var_t320; // dimensionless
        const double var_t324 = (((var_t318 * var_t291) * var_t29) * var_t321) * var_t27; // dimensionless
        const double var_t326 = var_t27 * var_t32; // dimensionless
        const double var_t328 = ((var_t318 * var_t291) * var_Na__Na_i) * var_t326; // dimensionless
        const double var_t332 = exp(((-var_INaK__sigma) * (var_membrane__Vm - var_INaK__V_half)) * var_t146); // dimensionless
        const double var_t333 = 1.0 + var_t332; // dimensionless
        const double var_t334 = pow(var_t333, 2.0); // dimensionless
        const double var_t338 = 1.0 / (var_model_parameters__K_o + var_INaK__kmko); // dimensionless
        const double var_t342 = var_Na__Na_i + var_INaK__kmnai; // dimensionless
        const double var_t343 = pow(var_t342, 2.0); // dimensionless
        const double var_t345 = (1.0 / var_t343) / var_t342; // dimensionless
        const double var_t350 = ((((((((var_INaK__ibarnak / var_t334) * var_model_parameters__K_o) * var_t338) * var_t141) * var_t345) * var_INaK__sigma) * var_model_parameters__F) * var_t25) * var_t332; // dimensionless
        const double var_t354 = var_INaCa__Vmax * ((var_t224 * var_t148) - (var_t227 * var_t159)); // dimensionless
        const double var_t362 = ((var_t267 * var_membrane__Vm) * var_t286) * var_t288; // dimensionless
        const double var_t363 = var_t291 * var_t271; // dimensionless
        const double var_t365 = var_Ito2_i2f_gate__i2f * var_t281; // dimensionless
        const double var_t369 = var_t291 * var_model_parameters__Cl_o; // dimensionless
        const double var_t377 = ((((8.0 * var_t309) * var_t291) * var_t42) * var_t302) * var_t39; // dimensionless
        const double var_t378 = (((((((((((((var_t216 + var_t221) - (0.20000000000000001 * var_t249)) + (0.80000000000000004 * var_t264)) - ((((var_t267 * var_t268) * var_t23) * var_t271) * var_t282)) - (((((8.0 * var_t285) * var_t289) * var_t291) * var_t54) * var_t295)) + ((((((8.0 * var_t285) * var_t289) * var_t291) * var_t57) * var_t303) * var_t39)) - var_t315) + var_t324) - var_t328) - var_t350) + (((((0.20000000000000001 * var_t354) * var_t236) * var_t256) * var_t247) * var_t263)) - ((((var_t362 * var_t363) * var_t321) * var_t365) * var_t27)) + (((var_t362 * var_t369) * var_t27) * var_t282)) + var_t377; // dimensionless
        const double var_t384 = 1.0 / (var_K__K_i + (var_reversal_potentials__prnak * var_Na__Na_i)); // dimensionless
        const double var_t386 = log((var_model_parameters__K_o + (var_reversal_potentials__prnak * var_model_parameters__Na_o)) * var_t384); // dimensionless
        const double var_t389 = var_membrane__Vm - ((var_t8 * var_t9) * var_t386); // dimensionless
        const double var_t390 = var_t76 * var_t389; // dimensionless
        const double var_t391 = var_t285 * var_t19; // dimensionless
        const double var_t392 = var_t57 * var_t45; // dimensionless
        const double var_t394 = (var_t391 * var_t25) * var_t392; // dimensionless
        const double var_t395 = 4.0 * var_t394; // dimensionless
        const double var_t397 = 1.0 / var_Na__Na_i; // dimensionless
        const double var_t399 = log(var_model_parameters__Na_o * var_t397); // dimensionless
        const double var_t401 = (var_t8 * var_t9) * var_t399; // dimensionless
        const double var_t402 = var_membrane__Vm - var_t401; // dimensionless
        const double var_t404 = ((var_INa__g_Na * var_t85) * var_t88) * var_t402; // dimensionless
        const double var_t407 = (var_t87 * var_INa_j_gate__j) * var_t402; // dimensionless
        const double var_t409 = (var_t87 * var_INa_h_gate__h) * var_t402; // dimensionless
        const double var_t412 = ((var_INaL__gNaL * var_t100) * var_INaL_hL_gate__hL) * var_t402; // dimensionless
        const double var_t416 = (var_t91 * var_t96) * var_t15; // dimensionless
        const double var_t418 = var_Ito1__gto1 * var_t1; // dimensionless
        const double var_t422 = var_t3 * var_t16; // dimensionless
        const double var_t425 = ((var_t3 * var_Ito1_i1f_gate__i1f) * var_t6) * var_t15; // dimensionless
        const double var_t427 = (var_t267 * var_membrane__Vm) * var_t19; // dimensionless
        const double var_t428 = var_t271 * var_t273; // dimensionless
        const double var_t429 = var_t428 * var_t281; // dimensionless
        const double var_t432 = var_t267 * var_membrane__Vm; // dimensionless
        const double var_t433 = var_t268 * var_t23; // dimensionless
        const double var_t436 = pow(var_t279, 2.0); // dimensionless
        const double var_t437 = 1.0 / var_t436; // dimensionless
        const double var_t443 = var_INaCa__Vmax * var_t153; // dimensionless
        const double var_t444 = var_t443 * var_t159; // dimensionless
        const double var_t445 = var_t444 * var_t193; // dimensionless
        const double var_t447 = pow(var_t169, 2.0); // dimensionless
        const double var_t450 = var_t173 * var_t192; // dimensionless
        const double var_t455 = ((((var_t254 / var_t447) * var_t450) * var_t165) / var_t166) / var_Ca__Ca_i; // dimensionless
        const double var_t457 = var_t254 * var_t170; // dimensionless
        const double var_t458 = pow(var_t191, 2.0); // dimensionless
        const double var_t460 = var_t173 / var_t458; // dimensionless
        const double var_t462 = (var_t177 + (var_t181 * var_t182)) + var_t153; // dimensionless
        const double var_t464 = (var_t457 * var_t460) * var_t462; // dimensionless
        const double var_t466 = pow(var_t73, 2.0); // dimensionless
        const double var_t468 = pow(var_t70, 0.40000000000000002); // dimensionless
        const double var_t472 = ((((1.0 / var_t466) * var_t468) * var_t167) * var_t77) * var_t389; // dimensionless
        const double var_t478 = ((((4.0 * var_t308) * var_t268) * var_t23) * var_ICab__gamma_Ca_i) * var_t294; // dimensionless
        const double var_t479 = var_IpCa__KmpCa + var_Ca__Ca_i; // dimensionless
        const double var_t480 = 1.0 / var_t479; // dimensionless
        const double var_t481 = var_IpCa__gpCa * var_t480; // dimensionless
        const double var_t482 = var_IpCa__gpCa * var_Ca__Ca_i; // dimensionless
        const double var_t483 = pow(var_t479, 2.0); // dimensionless
        const double var_t485 = var_t482 / var_t483; // dimensionless
        const double var_t489 = pow(var_t235, 2.0); // dimensionless
        const double var_t491 = var_t354 / var_t489; // dimensionless
        const double var_t492 = var_t173 * var_t247; // dimensionless
        const double var_t494 = (1.0 / var_t232) / var_Ca__Ca_ss_sr; // dimensionless
        const double var_t499 = var_t354 * var_t236; // dimensionless
        const double var_t500 = pow(var_t246, 2.0); // dimensionless
        const double var_t501 = 1.0 / var_t500; // dimensionless
        const double var_t502 = var_t173 * var_t501; // dimensionless
        const double var_t507 = var_t285 * var_t268; // dimensionless
        const double var_t513 = (var_t8 * var_t9) * var_t397; // dimensionless
        const double var_t514 = var_t89 * var_t513; // dimensionless
        const double var_t519 = ((((var_INaCa__Vmax * var_t140) * var_model_parameters__Ca_o) * var_t148) * var_t170) * var_t450; // dimensionless
        const double var_t527 = ((3.0 * var_t457) * var_t460) * (((var_INaCa__KmCao * var_t140) + ((var_t186 * var_t140) * var_t187)) + (var_t140 * var_model_parameters__Ca_o)); // dimensionless
        const double var_t531 = (var_INaK__ibarnak / var_t333) * var_model_parameters__K_o; // dimensionless
        const double var_t534 = ((var_t531 * var_t338) * var_t140) * var_t345; // dimensionless
        const double var_t537 = pow(var_t343, 2.0); // dimensionless
        const double var_t540 = ((var_t531 * var_t338) * var_t141) / var_t537; // dimensionless
        const double var_t542 = var_t103 * var_t513; // dimensionless
        const double var_t545 = ((var_t20 * var_membrane__Vm) * var_t25) * var_t326; // dimensionless
        const double var_t546 = var_t78 * var_model_parameters__R; // dimensionless
        const double var_t547 = var_model_parameters__T * var_t9; // dimensionless
        const double var_t550 = ((var_t546 * var_t547) * var_t384) * var_reversal_potentials__prnak; // dimensionless
        const double var_t553 = (var_INaCa__Vmax * var_t222) * var_model_parameters__Ca_o; // dimensionless
        const double var_t554 = var_t148 * var_t236; // dimensionless
        const double var_t562 = ((var_INaCa__KmCao * var_t222) + ((var_t186 * var_t222) * var_t187)) + (var_t222 * var_model_parameters__Ca_o); // dimensionless
        const double var_t567 = var_IClb__gClb * var_model_parameters__R; // dimensionless
        const double var_t568 = 1.0 / var_Cl__Cl_i; // dimensionless
        const double var_t574 = var_t9 * var_t10; // dimensionless
        const double var_t575 = var_t8 * var_t574; // dimensionless
        const double var_t581 = var_t574 * var_t107; // dimensionless
        const double var_t609 = var_t547 * var_t10; // dimensionless
        const double var_t615 = ((((((((-0.43033148290000001) * var_t98) * var_t575) - ((var_t546 * var_t547) * var_t384)) + ((((0.052343369899999999 * var_t217) * var_t218) * var_t8) * var_t581)) + (((0.21946905620000001 * var_t110) * var_t199) * (((((((-0.24326999999999999) * var_t201) * var_model_parameters__R) * var_model_parameters__T) * var_t581) + (((((0.039456396800000001 * var_t8) * var_t574) * var_t115) + (((0.061749999999999999 * var_t8) * var_t574) * var_t120)) * var_t127)) + (((((0.51429999999999998 * var_t210) * var_model_parameters__R) * var_t547) * var_t10) * var_t125)))) - ((0.21946905620000001 * var_t131) * var_t575)) - ((var_t69 * var_model_parameters__R) * var_t609)) - ((((var_t3 * var_t49) * var_t6) * var_model_parameters__R) * var_t609); // dimensionless
        const double var_t617 = exp(0.029877000000000001 * var_t26); // dimensionless
        const double var_t618 = var_t23 * var_t617; // dimensionless
        const double var_t621 = ((0.001776366912 * var_t144) * var_t618) * var_IKs__C1; // dimensionless
        const double var_t623 = exp((-0.055461000000000003) * var_t26); // dimensionless
        const double var_t624 = var_t23 * var_t623; // dimensionless
        const double var_t629 = 0.059456000000000002 * var_t617; // dimensionless
        const double var_t630 = 0.083986000000000005 * var_t623; // dimensionless
        const double var_t631 = var_t144 * var_t618; // dimensionless
        const double var_t632 = 0.0013322751840000001 * var_t631; // dimensionless
        const double var_t633 = var_t144 * var_t624; // dimensionless
        const double var_t634 = 0.0046579475460000004 * var_t633; // dimensionless
        const double var_t636 = exp(0.24465000000000001 * var_t26); // dimensionless
        const double var_t637 = var_t23 * var_t636; // dimensionless
        const double var_t638 = var_t144 * var_t637; // dimensionless
        const double var_t639 = 0.0035721346499999998 * var_t638; // dimensionless
        const double var_t646 = exp((-0.42625000000000002) * var_t26); // dimensionless
        const double var_t647 = var_t23 * var_t646; // dimensionless
        const double var_t652 = 0.044592 * var_t617; // dimensionless
        const double var_t653 = 0.014600999999999999 * var_t636; // dimensionless
        const double var_t655 = 0.16797200000000001 * var_t623; // dimensionless
        const double var_t656 = 0.0031172999999999999 * var_t646; // dimensionless
        const double var_t657 = 0.00088818345599999998 * var_t631; // dimensionless
        const double var_t658 = 0.0093158950920000008 * var_t633; // dimensionless
        const double var_t659 = 0.0071442692999999996 * var_t638; // dimensionless
        const double var_t672 = 0.029728000000000001 * var_t617; // dimensionless
        const double var_t673 = 0.029201999999999999 * var_t636; // dimensionless
        const double var_t675 = 0.25195800000000002 * var_t623; // dimensionless
        const double var_t676 = 0.00044409172799999999 * var_t631; // dimensionless
        const double var_t677 = 0.013973842639999999 * var_t633; // dimensionless
        const double var_t678 = 0.01071640395 * var_t638; // dimensionless
        const double var_t691 = 0.014864 * var_t617; // dimensionless
        const double var_t692 = 0.043803000000000002 * var_t636; // dimensionless
        const double var_t694 = 0.33594400000000002 * var_t623; // dimensionless
        const double var_t706 = 0.058403999999999998 * var_t636; // dimensionless
        const double var_t708 = var_t144 * var_t647; // dimensionless
        const double var_t709 = 0.0013287491250000001 * var_t708; // dimensionless
        const double var_t736 = 0.0062345999999999999 * var_t646; // dimensionless
        const double var_t766 = 0.0026574982500000002 * var_t708; // dimensionless
        const double var_t793 = 0.0093518999999999998 * var_t646; // dimensionless
        const double var_t807 = 0.0039862473749999999 * var_t708; // dimensionless
        const double var_t828 = ((0.0053149965000000004 * var_t144) * var_t647) * var_IKs__C15; // dimensionless
        const double var_t831 = 0.0124692 * var_t646; // dimensionless
        const double var_t836 = exp((-0.064726000000000006) * var_t26); // dimensionless
        const double var_t837 = var_t23 * var_t836; // dimensionless
        const double var_t843 = 0.07732 * var_t836; // dimensionless
        const double var_t847 = exp(0.28205999999999998 * var_t26); // dimensionless
        const double var_t848 = var_t23 * var_t847; // dimensionless
        const double var_t854 = exp((-0.080173999999999995) * var_t26); // dimensionless
        const double var_t858 = (((0.063662164699999996 * var_t144) * var_t23) * var_t854) * var_IKs__O2; // dimensionless
        const double var_t860 = 0.58638000000000001 * var_t847; // dimensionless
        const double var_t862 = 0.79405000000000003 * var_t854; // dimensionless
        const double var_t869 = exp(((-0.10582010579999999) * var_membrane__Vm) + 1.4349206350000001); // dimensionless
        const double var_t870 = 1.0 + var_t869; // dimensionless
        const double var_t871 = pow(var_t870, 2.0); // dimensionless
        const double var_t872 = 1.0 / var_t871; // dimensionless
        const double var_t875 = exp((0.051999999999999998 * var_membrane__Vm) + 0.67600000000000005); // dimensionless
        const double var_t878 = exp((0.13200000000000001 * var_membrane__Vm) + 1.716); // dimensionless
        const double var_t879 = 1.0 + var_t878; // dimensionless
        const double var_t881 = var_t875 / var_t879; // dimensionless
        const double var_t883 = 0.58999999999999997 + (0.80000000000000004 * var_t881); // dimensionless
        const double var_t884 = 1.0 / var_t883; // dimensionless
        const double var_t885 = var_t872 * var_t884; // dimensionless
        const double var_t887 = (0.10582010579999999 * var_t885) * var_t869; // dimensionless
        const double var_t888 = 1.0 / var_t870; // dimensionless
        const double var_t889 = pow(var_t883, 2.0); // dimensionless
        const double var_t890 = 1.0 / var_t889; // dimensionless
        const double var_t891 = var_t888 * var_t890; // dimensionless
        const double var_t893 = pow(var_t879, 2.0); // dimensionless
        const double var_t898 = (0.041599999999999998 * var_t881) - (((0.1056 * var_t875) / var_t893) * var_t878); // dimensionless
        const double var_t899 = var_t891 * var_t898; // dimensionless
        const double var_t902 = exp(((1.0 / 3.0) * var_membrane__Vm) + 5.8333333329999997); // dimensionless
        const double var_t903 = 1.0 + var_t902; // dimensionless
        const double var_t904 = pow(var_t903, 2.0); // dimensionless
        const double var_t905 = 1.0 / var_t904; // dimensionless
        const double var_t906 = var_t905 * var_t902; // dimensionless
        const double var_t909 = exp((0.0966276935 * var_membrane__Vm) + 4.7444197509999997); // dimensionless
        const double var_t911 = 24.827999999999999 + (24.827999999999999 * var_t909); // dimensionless
        const double var_t912 = 1.0 / var_t911; // dimensionless
        const double var_t915 = exp(((-0.092532617750000004) * var_membrane__Vm) - 0.019709447580000001); // dimensionless
        const double var_t917 = 30.553000000000001 + (30.553000000000001 * var_t915); // dimensionless
        const double var_t919 = var_t912 + (1.0 / var_t917); // dimensionless
        const double var_t921 = (0.2666666667 * var_t906) * var_t919; // dimensionless
        const double var_t922 = 1.0 / var_t903; // dimensionless
        const double var_t923 = 0.80000000000000004 * var_t922; // dimensionless
        const double var_t924 = 0.80000000000000004 - var_t923; // dimensionless
        const double var_t925 = pow(var_t911, 2.0); // dimensionless
        const double var_t928 = (2.3990723740000002 / var_t925) * var_t909; // dimensionless
        const double var_t929 = pow(var_t917, 2.0); // dimensionless
        const double var_t933 = (-var_t928) + ((2.8271490699999999 / var_t929) * var_t915); // dimensionless
        const double var_t934 = var_t924 * var_t933; // dimensionless
        const double var_t937 = var_t872 * var_t869; // dimensionless
        const double var_t941 = 1.0 - var_t888; // dimensionless
        const double var_t942 = var_t941 * var_t890; // dimensionless
        const double var_t948 = var_t923 + 0.20000000000000001; // dimensionless
        const double var_t949 = var_t948 * var_t933; // dimensionless
        const double var_t952 = var_t888 * var_t884; // dimensionless
        const double var_t953 = pow(var_Ca__Ca_ss_CaL, 2.0); // dimensionless
        const double var_t954 = pow(var_t953, 2.0); // dimensionless
        const double var_t957 = 1.0 + (8.1000000000000005e-11 / var_t954); // dimensionless
        const double var_t958 = 1.0 / var_t957; // dimensionless
        const double var_t959 = 3.0 * var_t958; // dimensionless
        const double var_t960 = var_t924 * var_t919; // dimensionless
        const double var_t962 = var_t941 * var_t884; // dimensionless
        const double var_t963 = var_t948 * var_t919; // dimensionless
        const double var_t964 = pow(var_t957, 2.0); // dimensionless
        const double var_t965 = 1.0 / var_t964; // dimensionless
        const double var_t967 = (1.0 / var_t954) / var_Ca__Ca_ss_CaL; // dimensionless
        const double var_t968 = var_t965 * var_t967; // dimensionless
        const double var_t970 = (9.7199999999999995e-10 * var_t968) * var_ICaL__C; // dimensionless
        const double var_t971 = var_t942 * var_t898; // dimensionless
        const double var_t986 = (9.7199999999999995e-10 * var_t968) * var_ICaL__O; // dimensionless
        const double var_t988 = 25.0 - (17.5 * var_t958); // dimensionless
        const double var_t989 = 1.0 / var_t988; // dimensionless
        const double var_t990 = 1.0 + var_t915; // dimensionless
        const double var_t991 = 1.0 / var_t990; // dimensionless
        const double var_t993 = var_t912 + (var_t989 * var_t991); // dimensionless
        const double var_t995 = (0.33330000329999998 * var_t906) * var_t993; // dimensionless
        const double var_t996 = 0.99990000999999995 * var_t922; // dimensionless
        const double var_t997 = 0.99990000999999995 - var_t996; // dimensionless
        const double var_t998 = pow(var_t990, 2.0); // dimensionless
        const double var_t1003 = (-var_t928) + (((0.092532617750000004 * var_t989) / var_t998) * var_t915); // dimensionless
        const double var_t1004 = var_t997 * var_t1003; // dimensionless
        const double var_t1015 = var_t996 + 9.9990001000000006e-05; // dimensionless
        const double var_t1016 = var_t1015 * var_t1003; // dimensionless
        const double var_t1019 = var_t997 * var_t993; // dimensionless
        const double var_t1021 = var_t1015 * var_t993; // dimensionless
        const double var_t1022 = pow(var_t988, 2.0); // dimensionless
        const double var_t1023 = 1.0 / var_t1022; // dimensionless
        const double var_t1025 = (var_t997 * var_t1023) * var_t991; // dimensionless
        const double var_t1028 = ((5.6699999999999997e-09 * var_t1025) * var_t968) * var_ICaL__C_star; // dimensionless
        const double var_t1030 = (var_t1015 * var_t1023) * var_t991; // dimensionless
        const double var_t1033 = ((5.6699999999999997e-09 * var_t1030) * var_t968) * var_ICaL__CI_star; // dimensionless
        const double var_t1050 = ((5.6699999999999997e-09 * var_t1025) * var_t968) * var_ICaL__O_star; // dimensionless
        const double var_t1053 = ((5.6699999999999997e-09 * var_t1030) * var_t968) * var_ICaL__OI_star; // dimensionless
        const double var_t1057 = ((var_ICaL__theta_I * var_t905) * var_t902) * var_t997; // dimensionless
        const double var_t1058 = 1.0 / var_t924; // dimensionless
        const double var_t1059 = var_t958 * var_t1058; // dimensionless
        const double var_t1060 = 1.0 / var_t1015; // dimensionless
        const double var_t1061 = 1.0 / var_ICaL__theta; // dimensionless
        const double var_t1062 = var_t1060 * var_t1061; // dimensionless
        const double var_t1063 = var_t1059 * var_t1062; // dimensionless
        const double var_t1065 = (0.80000000010000005 * var_t1057) * var_t1063; // dimensionless
        const double var_t1066 = var_ICaL__theta_I * var_t948; // dimensionless
        const double var_t1067 = var_t1066 * var_t906; // dimensionless
        const double var_t1069 = (0.99990000990000005 * var_t1067) * var_t1063; // dimensionless
        const double var_t1070 = var_t997 * var_t958; // dimensionless
        const double var_t1071 = var_t1066 * var_t1070; // dimensionless
        const double var_t1072 = pow(var_t924, 2.0); // dimensionless
        const double var_t1073 = 1.0 / var_t1072; // dimensionless
        const double var_t1076 = (var_t1061 * var_t905) * var_t902; // dimensionless
        const double var_t1079 = (((0.80000000010000005 * var_t1071) * var_t1073) * var_t1060) * var_t1076; // dimensionless
        const double var_t1080 = pow(var_t1015, 2.0); // dimensionless
        const double var_t1081 = 1.0 / var_t1080; // dimensionless
        const double var_t1085 = (((0.99990000990000005 * var_t1071) * var_t1058) * var_t1081) * var_t1076; // dimensionless
        const double var_t1100 = ((3.0 * var_t1066) * var_t997) * var_t1063; // dimensionless
        const double var_t1103 = (var_t1066 * var_t997) * var_t965; // dimensionless
        const double var_t1104 = var_t1058 * var_t1060; // dimensionless
        const double var_t1105 = var_t1061 * var_t967; // dimensionless
        const double var_t1109 = (((9.7199999999999995e-10 * var_t1103) * var_t1104) * var_t1105) * var_ICaL__CI; // dimensionless
        const double var_t1126 = (((9.7199999999999995e-10 * var_t1103) * var_t1104) * var_t1105) * var_ICaL__OI; // dimensionless
        const double var_t1130 = (var_t1059 * var_t1062) * var_ICaL__CI; // dimensionless
        const double var_t1136 = (var_t1066 * var_t1070) * var_t1073; // dimensionless
        const double var_t1138 = (var_ICaL__CI * var_t905) * var_t902; // dimensionless
        const double var_t1143 = (var_t1066 * var_t1070) * var_t1058; // dimensionless
        const double var_t1144 = var_t1081 * var_t1061; // dimensionless
        const double var_t1163 = (var_t1059 * var_t1062) * var_ICaL__OI; // dimensionless
        const double var_t1169 = (var_ICaL__OI * var_t905) * var_t902; // dimensionless
        const double var_t1188 = 0.10000000000000001 * var_membrane__Vm; // dimensionless
        const double var_t1190 = exp((-var_t1188) - 4.7130000000000001); // dimensionless
        const double var_t1191 = 1.0 - var_t1190; // dimensionless
        const double var_t1192 = 1.0 / var_t1191; // dimensionless
        const double var_t1193 = 1.0 - var_INa_m_gate__m; // dimensionless
        const double var_t1196 = var_membrane__Vm + 47.130000000000003; // dimensionless
        const double var_t1197 = pow(var_t1191, 2.0); // dimensionless
        const double var_t1199 = var_t1196 / var_t1197; // dimensionless
        const double var_t1204 = exp(((-1.0) / 11.0) * var_membrane__Vm); // dimensionless
        const double var_t1211 = (((-0.32000000000000001) * var_t1196) * var_t1192) - (0.080000000000000002 * var_t1204); // dimensionless
        const double var_t1212 = var_membrane__Vm < (-40.0); // dimensionless
        const double var_t1215 = exp((-11.764705879999999) - (0.14705882349999999 * var_membrane__Vm)); // dimensionless
        const double var_t1218 = (-40.0) < var_membrane__Vm; // dimensionless
        const double var_t1219 = var_t1212 ? ((-0.01985294118) * var_t1215) : ((-40.0) <= var_membrane__Vm) ? 0.0 : NAN; // dimensionless
        const double var_t1223 = exp(0.079000000000000001 * var_membrane__Vm); // dimensionless
        const double var_t1226 = exp(0.34999999999999998 * var_membrane__Vm); // dimensionless
        const double var_t1231 = exp(((-0.090090090090000005) * var_membrane__Vm) - 0.96036036039999995); // dimensionless
        const double var_t1234 = pow(0.13 + (0.13 * var_t1231), 2.0); // dimensionless
        const double var_t1238 = (var_membrane__Vm <= (-40.0)) ? ((0.28123999999999999 * var_t1223) + (108500.0 * var_t1226)) : var_t1218 ? ((0.011711711709999999 / var_t1234) * var_t1231) : NAN; // dimensionless
        const double var_t1241 = (-40.0) <= var_membrane__Vm; // dimensionless
        const double var_t1243 = var_t1241 ? 0.0 : (0.13500000000000001 * var_t1215); // dimensionless
        const double var_t1248 = exp(0.079000000000000001 * var_membrane__Vm); // dimensionless
        const double var_t1251 = exp(0.34999999999999998 * var_membrane__Vm); // dimensionless
        const double var_t1254 = var_t1241 ? (1.0 / (0.13 + (0.13 * var_t1231))) : ((3.5600000000000001 * var_t1248) + (310000.0 * var_t1251)); // dimensionless
        const double var_t1257 = exp(0.24440000000000001 * var_membrane__Vm); // dimensionless
        const double var_t1260 = exp((-0.043909999999999998) * var_membrane__Vm); // dimensionless
        const double var_t1263 = var_membrane__Vm + 37.780000000000001; // dimensionless
        const double var_t1267 = exp((0.311 * var_membrane__Vm) + 24.640530009999999); // dimensionless
        const double var_t1268 = 1.0 + var_t1267; // dimensionless
        const double var_t1269 = 1.0 / var_t1268; // dimensionless
        const double var_t1273 = ((-127140.0) * var_t1257) - (6.9479999990000002e-05 * var_t1260); // dimensionless
        const double var_t1276 = pow(var_t1268, 2.0); // dimensionless
        const double var_t1282 = var_t1212 ? (((((((-31073.016) * var_t1257) + (3.0508668000000001e-06 * var_t1260)) * var_t1263) * var_t1269) + (var_t1273 * var_t1269)) - ((((0.311 * var_t1273) * var_t1263) / var_t1276) * var_t1267)) : ((-40.0) <= var_membrane__Vm) ? 0.0 : NAN; // dimensionless
        const double var_t1286 = exp((-0.01052) * var_membrane__Vm); // dimensionless
        const double var_t1289 = exp(((-0.13780000000000001) * var_membrane__Vm) - 5.5312919950000001); // dimensionless
        const double var_t1290 = 1.0 + var_t1289; // dimensionless
        const double var_t1294 = pow(var_t1290, 2.0); // dimensionless
        const double var_t1301 = exp((-2.5349999990000002e-07) * var_membrane__Vm); // dimensionless
        const double var_t1304 = exp(((-0.10000000000000001) * var_membrane__Vm) - 3.2000000000000002); // dimensionless
        const double var_t1305 = 1.0 + var_t1304; // dimensionless
        const double var_t1309 = pow(var_t1305, 2.0); // dimensionless
        const double var_t1315 = (var_membrane__Vm <= (-40.0)) ? ((((-0.001275024) * var_t1286) / var_t1290) + (((0.016701359999999998 * var_t1286) / var_t1294) * var_t1289)) : var_t1218 ? ((((-7.604999998e-08) * var_t1301) / var_t1305) + (((0.029999999999999999 * var_t1301) / var_t1309) * var_t1304)) : NAN; // dimensionless
        const double var_t1319 = exp(0.24440000000000001 * var_membrane__Vm); // dimensionless
        const double var_t1322 = exp((-0.043909999999999998) * var_membrane__Vm); // dimensionless
        const double var_t1329 = exp((0.311 * var_membrane__Vm) + 24.640529999999998); // dimensionless
        const double var_t1333 = var_t1241 ? 0.0 : (((((-127140.0) * var_t1319) - (6.9480000000000006e-05 * var_t1322)) * (var_membrane__Vm + 37.780000000000001)) / (1.0 + var_t1329)); // dimensionless
        const double var_t1335 = exp((-2.5349999999999999e-07) * var_membrane__Vm); // dimensionless
        const double var_t1337 = exp((-var_t1188) - 3.2000000000000002); // dimensionless
        const double var_t1343 = exp((-0.01052) * var_membrane__Vm); // dimensionless
        const double var_t1346 = exp(((-0.13780000000000001) * var_membrane__Vm) - 5.5312919999999997); // dimensionless
        const double var_t1351 = var_t1241 ? ((0.29999999999999999 * var_t1335) / (1.0 + var_t1337)) : ((0.1212 * var_t1343) / (1.0 + var_t1346)); // dimensionless
        const double var_t1353 = 1.0 - var_INaL_mL_gate__mL; // dimensionless
        const double var_t1364 = exp((0.16393442620000001 * var_membrane__Vm) + 14.918032780000001); // dimensionless
        const double var_t1366 = pow(1.0 + var_t1364, 2.0); // dimensionless
        const double var_t1369 = 1.0 / var_INaL_hL_gate__tau_hL; // dimensionless
        const double var_t1374 = exp(((-0.23529411759999999) * var_membrane__Vm) - 2.3729411759999999); // dimensionless
        const double var_t1375 = 1.0 + var_t1374; // dimensionless
        const double var_t1376 = pow(var_t1375, 2.0); // dimensionless
        const double var_t1379 = var_membrane__Vm - 1.7383999999999999; // dimensionless
        const double var_t1382 = exp(((-0.13600000000000001) * var_membrane__Vm) + 0.2364224); // dimensionless
        const double var_t1383 = 1.0 - var_t1382; // dimensionless
        const double var_t1384 = 1.0 / var_t1383; // dimensionless
        const double var_t1387 = var_membrane__Vm + 38.360799999999998; // dimensionless
        const double var_t1390 = exp((0.1522 * var_membrane__Vm) + 5.8385137599999997); // dimensionless
        const double var_t1391 = var_t1390 - 1.0; // dimensionless
        const double var_t1392 = 1.0 / var_t1391; // dimensionless
        const double var_t1395 = ((0.00059999999999999995 * var_t1379) * var_t1384) + ((0.00029999999999999997 * var_t1387) * var_t1392); // dimensionless
        const double var_t1401 = pow(var_t1383, 2.0); // dimensionless
        const double var_t1407 = pow(var_t1391, 2.0); // dimensionless
        const double var_t1417 = exp(((-0.14019346699999999) * var_membrane__Vm) - 1.3230057479999999); // dimensionless
        const double var_t1418 = 1.0 + var_t1417; // dimensionless
        const double var_t1419 = pow(var_t1418, 2.0); // dimensionless
        const double var_t1422 = 0.034035137880000003 * var_membrane__Vm; // dimensionless
        const double var_t1424 = exp((-var_t1422) + 0.62658348490000004); // dimensionless
        const double var_t1426 = 1.2089000000000001 + (1.2089000000000001 * var_t1424); // dimensionless
        const double var_t1429 = exp(var_t1422 + 3.4035137880000002); // dimensionless
        const double var_t1430 = 1.0 + var_t1429; // dimensionless
        const double var_t1433 = (1.0 / var_t1426) + (3.5 / var_t1430); // dimensionless
        const double var_t1438 = pow(var_t1426, 2.0); // dimensionless
        const double var_t1442 = pow(var_t1430, 2.0); // dimensionless
        const double var_t1449 = (1.0 / 5.0) * var_membrane__Vm; // dimensionless
        const double var_t1451 = exp(var_t1449 + (58.0 / 5.0)); // dimensionless
        const double var_t1452 = 1.0 + var_t1451; // dimensionless
        const double var_t1453 = pow(var_t1452, 2.0); // dimensionless
        const double var_t1454 = 1.0 / var_t1453; // dimensionless
        const double var_t1461 = exp((((-1.0) / 9.0) * var_membrane__Vm) - (19.0 / 9.0)); // dimensionless
        const double var_t1463 = 9.7952999999999992 + (9.7952999999999992 * var_t1461); // dimensionless
        const double var_t1464 = pow(var_t1463, 2.0); // dimensionless
        const double var_t1465 = 1.0 / var_t1464; // dimensionless
        const double var_t1470 = 1.0 / var_t1452; // dimensionless
        const double var_t1471 = 0.025000000000000001 * var_t1470; // dimensionless
        const double var_t1472 = 1.0 / var_t1463; // dimensionless
        const double var_t1475 = exp(var_t1449 + 12.0); // dimensionless
        const double var_t1476 = 1.0 + var_t1475; // dimensionless
        const double var_t1489 = 1.0 + var_t1461; // dimensionless
        const double var_t1491 = var_t1471 + ((1.0 / 5.0) / var_t1489); // dimensionless
        const double var_t1496 = pow(var_t1491, 2.0); // dimensionless
        const double var_t1509 = 1.0 / var_Ito2_i2f_gate__tau_i2f; // dimensionless
        const double var_t1511 = var_t25 * var_t57; // dimensionless
        const double var_t1514 = 1.0 - var_CaMK_active__CaMK_trap; // dimensionless
        const double var_t1515 = var_CaMK_active__CaMK_0 * var_t1514; // dimensionless
        const double var_t1518 = 1.0 + (var_CaMK_active__Km / var_Ca__Ca_ss_sr); // dimensionless
        const double var_t1519 = 1.0 / var_t1518; // dimensionless
        const double var_t1520 = var_t1515 * var_t1519; // dimensionless
        const double var_t1521 = var_t1520 + var_CaMK_active__CaMK_trap; // dimensionless
        const double var_t1522 = 1.0 / var_t1521; // dimensionless
        const double var_t1524 = pow(var_Irel__K_beta * var_t1522, var_Irel__h_beta); // dimensionless
        const double var_t1525 = 1.0 + var_t1524; // dimensionless
        const double var_t1528 = 1.0 + (var_Irel__delta_beta_0 / var_t1525); // dimensionless
        const double var_t1529 = var_t1528 * var_Irel__kappa; // dimensionless
        const double var_t1530 = 1.0 / var_Ca__Ca_JSR; // dimensionless
        const double var_t1532 = pow(var_Irel__Krel_infinity * var_t1530, var_Irel__h_rel); // dimensionless
        const double var_t1533 = 1.0 + var_t1532; // dimensionless
        const double var_t1534 = 1.0 / var_t1533; // dimensionless
        const double var_t1536 = ((var_t60 * var_Irel__beta_0) * var_t1529) * var_t1534; // dimensionless
        const double var_t1539 = var_t285 * var_t286; // dimensionless
        const double var_t1540 = var_t288 * var_t291; // dimensionless
        const double var_t1541 = var_t1540 * var_t54; // dimensionless
        const double var_t1544 = var_Irel__kappa * var_t1534; // dimensionless
        const double var_t1549 = var_t1540 * var_t57; // dimensionless
        const double var_t1558 = 1.0 / var_Irel__beta_0; // dimensionless
        const double var_t1560 = 1.0 / var_t1528; // dimensionless
        const double var_t1562 = 1.0 + (var_Irel__Krel_tau * var_t1530); // dimensionless
        const double var_t1565 = var_t285 * var_t433; // dimensionless
        const double var_t1566 = var_t1544 * var_t1562; // dimensionless
        const double var_t1569 = ((4.0 * var_t1565) * var_t392) * var_t1566; // dimensionless
        const double var_t1573 = pow(var_t1533, 2.0); // dimensionless
        const double var_t1586 = (((((-4.0) * var_t391) * var_t1511) * var_t1536) - var_Irel__Irel) * var_t1558; // dimensionless
        const double var_t1588 = pow(var_Ca__Ca_JSR, 2.0); // dimensionless
        const double var_t1594 = pow(var_t1525, 2.0); // dimensionless
        const double var_t1595 = 1.0 / var_t1594; // dimensionless
        const double var_t1600 = var_Irel__h_beta * var_t1522; // dimensionless
        const double var_t1601 = pow(var_t1518, 2.0); // dimensionless
        const double var_t1602 = 1.0 / var_t1601; // dimensionless
        const double var_t1605 = var_CaMK_active__Km * var_t233; // dimensionless
        const double var_t1608 = (var_t1534 * var_t1560) * var_t1562; // dimensionless
        const double var_t1613 = pow(var_t1528, 2.0); // dimensionless
        const double var_t1614 = 1.0 / var_t1613; // dimensionless
        const double var_t1617 = var_t1595 * var_t1524; // dimensionless
        const double var_t1622 = (var_t1514 * var_t1602) * var_t1605; // dimensionless
        const double var_t1626 = var_t25 * var_ICaL__gamma_Cai; // dimensionless
        const double var_t1635 = var_CaMK_active__CaMK_0 * var_t1519; // dimensionless
        const double var_t1636 = (-var_t1635) + 1.0; // dimensionless
        const double var_t1649 = var_Ca__kmcsqn * var_Ca__csqnbar; // dimensionless
        const double var_t1650 = var_Ca__Ca_JSR + var_Ca__kmcsqn; // dimensionless
        const double var_t1651 = pow(var_t1650, 2.0); // dimensionless
        const double var_t1654 = 1.0 + (var_t1649 / var_t1651); // dimensionless
        const double var_t1655 = 1.0 / var_t1654; // dimensionless
        const double var_t1656 = pow(var_t1654, 2.0); // dimensionless
        const double var_t1659 = 1.0 / var_Itr__tautr; // dimensionless
        const double var_t1668 = var_t1655 * var_t1659; // dimensionless
        const double var_t1670 = 0.086956521740000001 * var_t1659; // dimensionless
        const double var_t1671 = 1.0 / var_Ileak__nsrbar; // dimensionless
        const double var_t1674 = var_Iup__delta_iupCaMK_bar * var_t1521; // dimensionless
        const double var_t1675 = (var_Iup__kmCaMK + var_t1520) + var_CaMK_active__CaMK_trap; // dimensionless
        const double var_t1676 = 1.0 / var_t1675; // dimensionless
        const double var_t1679 = ((var_t1674 * var_t1676) + 1.0) * var_Iup__iupbar; // dimensionless
        const double var_t1680 = var_Iup__delta_kmPLB_bar * var_t1521; // dimensionless
        const double var_t1682 = (var_Ca__Ca_i + var_Iup__kmup) - (var_t1680 * var_t1676); // dimensionless
        const double var_t1683 = 1.0 / var_t1682; // dimensionless
        const double var_t1684 = var_t1679 * var_t1683; // dimensionless
        const double var_t1685 = pow(var_t1682, 2.0); // dimensionless
        const double var_t1687 = var_Ca__Ca_i / var_t1685; // dimensionless
        const double var_t1688 = var_t1679 * var_t1687; // dimensionless
        const double var_t1694 = ((var_t1602 * var_CaMK_active__Km) * var_t233) * var_t1676; // dimensionless
        const double var_t1696 = pow(var_t1675, 2.0); // dimensionless
        const double var_t1697 = 1.0 / var_t1696; // dimensionless
        const double var_t1698 = var_t1697 * var_CaMK_active__CaMK_0; // dimensionless
        const double var_t1703 = var_Ca__Ca_i * var_t1683; // dimensionless
        const double var_t1704 = (((((var_Iup__delta_iupCaMK_bar * var_CaMK_active__CaMK_0) * var_t1514) * var_t1694) - ((var_t1674 * var_t1698) * var_t1622)) * var_Iup__iupbar) * var_t1703; // dimensionless
        const double var_t1712 = (var_t1679 * var_t1687) * (((((-var_Iup__delta_kmPLB_bar) * var_CaMK_active__CaMK_0) * var_t1514) * var_t1694) + ((var_t1680 * var_t1698) * var_t1622)); // dimensionless
        const double var_t1716 = var_t1697 * var_t1636; // dimensionless
        const double var_t1720 = ((((var_Iup__delta_iupCaMK_bar * var_t1636) * var_t1676) - (var_t1674 * var_t1716)) * var_Iup__iupbar) * var_t1703; // dimensionless
        const double var_t1726 = (var_t1679 * var_t1687) * ((((-var_Iup__delta_kmPLB_bar) * var_t1636) * var_t1676) + (var_t1680 * var_t1716)); // dimensionless
        const double var_t1728 = var_Ca__cmdn_bar * var_Ca__km_cmdn; // dimensionless
        const double var_t1729 = var_Ca__Ca_i + var_Ca__km_cmdn; // dimensionless
        const double var_t1730 = pow(var_t1729, 2.0); // dimensionless
        const double var_t1733 = var_Ca__km_trpn * var_Ca__trpn_bar; // dimensionless
        const double var_t1734 = var_Ca__Ca_i + var_Ca__km_trpn; // dimensionless
        const double var_t1735 = pow(var_t1734, 2.0); // dimensionless
        const double var_t1738 = (1.0 + (var_t1728 / var_t1730)) + (var_t1733 / var_t1735); // dimensionless
        const double var_t1739 = 1.0 / var_t1738; // dimensionless
        const double var_t1744 = pow(var_cell_geometry__a, 2.0); // dimensionless
        const double var_t1748 = (M_PI * var_t1744) + ((M_PI * var_cell_geometry__a) * var_cell_geometry__l); // dimensionless
        const double var_t1750 = 1.0 / M_PI; // dimensionless
        const double var_t1751 = var_t9 * var_t1750; // dimensionless
        const double var_t1752 = 1.0 / var_t1744; // dimensionless
        const double var_t1753 = 1.0 / var_cell_geometry__l; // dimensionless
        const double var_t1754 = var_t1752 * var_t1753; // dimensionless
        const double var_t1755 = var_t1751 * var_t1754; // dimensionless
        const double var_t1760 = pow(var_t1738, 2.0); // dimensionless
        const double var_t1773 = var_t1750 * var_t1752; // dimensionless
        const double var_t1774 = var_t1773 * var_t1753; // dimensionless
        const double var_t1782 = 1.0 / var_Ca__tau_diff; // dimensionless
        const double var_t1783 = (var_Ca__Ca_ss_sr - var_Ca__Ca_i) * var_t1782; // dimensionless
        const double var_t1805 = 0.0029498525069999999 * var_t1782; // dimensionless
        const double var_t1824 = var_Ca__BSRmax * var_Ca__KmBSR; // dimensionless
        const double var_t1825 = var_Ca__KmBSR + var_Ca__Ca_ss_sr; // dimensionless
        const double var_t1826 = pow(var_t1825, 2.0); // dimensionless
        const double var_t1829 = var_Ca__BSLmax * var_Ca__KmBSL; // dimensionless
        const double var_t1830 = var_Ca__KmBSL + var_Ca__Ca_ss_sr; // dimensionless
        const double var_t1831 = pow(var_t1830, 2.0); // dimensionless
        const double var_t1834 = (1.0 + (var_t1824 / var_t1826)) + (var_t1829 / var_t1831); // dimensionless
        const double var_t1835 = 1.0 / var_t1834; // dimensionless
        const double var_t1836 = (4.0 * var_t1748) * var_t9; // dimensionless
        const double var_t1837 = var_t1836 * var_t1774; // dimensionless
        const double var_t1838 = var_t249 * var_t1837; // dimensionless
        const double var_t1841 = (4.0 * var_t1748) * var_t1750; // dimensionless
        const double var_t1848 = (((((((var_t499 * var_t256) * var_t247) * var_t1841) * var_t1754) * var_INaCa__ksat) * var_t155) * var_t21) * var_t160; // dimensionless
        const double var_t1854 = pow(var_t1834, 2.0); // dimensionless
        const double var_t1857 = 1.0 / var_Ca__tau_diff_ss; // dimensionless
        const double var_t1858 = (var_Ca__Ca_ss_sr - var_Ca__Ca_ss_CaL) * var_t1857; // dimensionless
        const double var_t1878 = (((4.0 * var_t247) * var_t1748) * var_t9) * var_t1774; // dimensionless
        const double var_t1879 = (((var_t443 * var_t159) * var_t236) * var_t173) * var_t1878; // dimensionless
        const double var_t1887 = (((((((4.0 * var_t491) * var_t492) * var_t1748) * var_t1751) * var_t1752) * var_t1753) * var_t165) * var_t494; // dimensionless
        const double var_t1890 = (var_t354 * var_t237) * var_t501; // dimensionless
        const double var_t1891 = var_t1836 * var_t1750; // dimensionless
        const double var_t1894 = ((var_t1890 * var_t1891) * var_t1754) * var_t462; // dimensionless
        const double var_t1902 = ((var_t553 * var_t554) * var_t173) * var_t1878; // dimensionless
        const double var_t1906 = (((3.0 * var_t1890) * var_t1891) * var_t1754) * var_t562; // dimensionless
        const double var_t1910 = var_Ca__KmBSR + var_Ca__Ca_ss_CaL; // dimensionless
        const double var_t1911 = pow(var_t1910, 2.0); // dimensionless
        const double var_t1914 = var_Ca__KmBSL + var_Ca__Ca_ss_CaL; // dimensionless
        const double var_t1915 = pow(var_t1914, 2.0); // dimensionless
        const double var_t1918 = (1.0 + (var_t1824 / var_t1911)) + (var_t1829 / var_t1915); // dimensionless
        const double var_t1919 = 1.0 / var_t1918; // dimensionless
        const double var_t1923 = ((4.0 * var_t60) * var_t1748) * var_t1774; // dimensionless
        const double var_t1927 = var_t1841 * var_t1754; // dimensionless
        const double var_t1928 = var_t295 * var_t1927; // dimensionless
        const double var_t1946 = ((((((4.0 * var_t1919) * var_ICaL__PCa) * var_membrane__Vm) * var_t146) * var_t392) * var_t1748) * var_t1774; // dimensionless
        const double var_t1949 = pow(var_t1918, 2.0); // dimensionless
        const double var_t1951 = var_t285 * var_model_parameters__F; // dimensionless
        const double var_t2011 = log(var_model_parameters__Cl_o * var_t568); // dimensionless
        const double var_t2013 = (var_t8 * var_t9) * var_t2011; // dimensionless
        const double var_t2014 = var_t401 + var_t2013; // dimensionless
        const double var_t2015 = pow(var_t2014, 2.0); // dimensionless
        const double var_t2016 = var_t2015 * var_t2014; // dimensionless
        const double var_t2018 = pow(var_t2015, 2.0); // dimensionless
        const double var_t2019 = var_t2018 + 59494197.640000001; // dimensionless
        const double var_t2021 = (var_CT_Na_Cl__CT_Na_Cl_max * var_t2016) / var_t2019; // dimensionless
        const double var_t2022 = var_t2021 * var_t513; // dimensionless
        const double var_t2026 = pow(var_t2019, 2.0); // dimensionless
        const double var_t2028 = ((var_CT_Na_Cl__CT_Na_Cl_max * var_t2018) * var_t2016) / var_t2026; // dimensionless
        const double var_t2029 = var_t2028 * var_t513; // dimensionless
        const double var_t2031 = 0.02949852507 * var_t1782; // dimensionless
        const double var_t2033 = var_t9 * var_t568; // dimensionless
        const double var_t2034 = var_t8 * var_t2033; // dimensionless
        const double var_t2035 = var_t2021 * var_t2034; // dimensionless
        const double var_t2036 = var_t2028 * var_t2034; // dimensionless
        const double var_t2063 = (var_CT_K_Cl__CT_K_Cl_max * var_model_parameters__R) * var_model_parameters__T; // dimensionless
        const double var_t2064 = (var_t14 + 87.825100000000006) + var_t2013; // dimensionless
        const double var_t2065 = 1.0 / var_t2064; // dimensionless
        const double var_t2067 = (var_t2063 * var_t2033) * var_t2065; // dimensionless
        const double var_t2070 = pow(var_t2064, 2.0); // dimensionless
        const double var_t2072 = (var_CT_K_Cl__CT_K_Cl_max * (var_t14 + var_t2013)) / var_t2070; // dimensionless
        const double var_t2073 = var_t2072 * var_t2034; // dimensionless
        const double var_t2076 = (var_t2063 * var_t574) * var_t2065; // dimensionless
        const double var_t2077 = var_t2072 * var_t575; // dimensionless
        const double var_t2082 = var_t282 * var_t1927; // dimensionless
        const double var_t2085 = var_t19 * var_t288; // dimensionless
        const double var_t2104 = var_t432 * var_t146; // dimensionless
        const double var_t2121 = ((((((((((-var_t139) + var_t99) + var_t78) - var_t221) - var_t216) + var_t132) + var_t84) + var_t69) - (2.0 * var_t350)) + var_t18) + var_t51; // dimensionless
        const double var_t2128 = ((0.0058997050159999998 * var_t390) * var_t1748) * var_t1755; // dimensionless
        const double var_t2156 = pow(var_CaMK_active__CaMK_0, 2.0); // dimensionless
        const double var_t2158 = pow(var_t1514, 2.0); // dimensionless
        const double var_t2165 = var_CaMK_active__alpha_CaMK * var_t1521; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (var_t196 + var_t378));
        IJth(rJacobian, 1, 0) = var_chaste_interface__environment__fake_dt * ((((0.0029498525079999999 * var_t1739) * (((((-var_t48) - var_t315) + var_t377) + (1.6000000000000001 * var_t194)) - (1.6000000000000001 * var_t264))) * var_t1748) * var_t1755);
        IJth(rJacobian, 2, 0) = var_chaste_interface__environment__fake_dt * ((-var_t621) - (((0.0046579475460000004 * var_t144) * var_t624) * var_IKs__C2));
        IJth(rJacobian, 3, 0) = var_chaste_interface__environment__fake_dt * (((((((-var_t632) + var_t634) - var_t639) * var_IKs__C2) + var_t621) - (((0.0093158950920000008 * var_t144) * var_t624) * var_IKs__C3)) - (((0.0013287491250000001 * var_t144) * var_t647) * var_IKs__C6));
        IJth(rJacobian, 4, 0) = var_chaste_interface__environment__fake_dt * (((((((-var_t657) + var_t658) - var_t659) * var_IKs__C3) + (((0.0013322751840000001 * var_t144) * var_t618) * var_IKs__C2)) - (((0.013973842639999999 * var_t144) * var_t624) * var_IKs__C4)) - (((0.0013287491250000001 * var_t144) * var_t647) * var_IKs__C7));
        IJth(rJacobian, 5, 0) = var_chaste_interface__environment__fake_dt * (((((((-var_t676) + var_t677) - var_t678) * var_IKs__C4) + (((0.00088818345599999998 * var_t144) * var_t618) * var_IKs__C3)) - (((0.01863179018 * var_t144) * var_t624) * var_IKs__C5)) - (((0.0013287491250000001 * var_t144) * var_t647) * var_IKs__C8));
        IJth(rJacobian, 6, 0) = var_chaste_interface__environment__fake_dt * (((((0.01863179018 * var_t633) - (0.014288538599999999 * var_t638)) * var_IKs__C5) + (((0.00044409172799999999 * var_t144) * var_t618) * var_IKs__C4)) - (((0.0013287491250000001 * var_t144) * var_t647) * var_IKs__C9));
        IJth(rJacobian, 7, 0) = var_chaste_interface__environment__fake_dt * (((((-var_t632) + var_t709) * var_IKs__C6) - (((0.0046579475460000004 * var_t144) * var_t624) * var_IKs__C7)) + (((0.0035721346499999998 * var_t144) * var_t637) * var_IKs__C2));
        IJth(rJacobian, 8, 0) = var_chaste_interface__environment__fake_dt * (((((((((-var_t657) + var_t634) - var_t639) + var_t709) * var_IKs__C7) + (((0.0013322751840000001 * var_t144) * var_t618) * var_IKs__C6)) - (((0.0093158950920000008 * var_t144) * var_t624) * var_IKs__C8)) + (((0.0071442692999999996 * var_t144) * var_t637) * var_IKs__C3)) - (((0.0026574982500000002 * var_t144) * var_t647) * var_IKs__C10));
        IJth(rJacobian, 9, 0) = var_chaste_interface__environment__fake_dt * (((((((((-var_t676) + var_t658) - var_t659) + var_t709) * var_IKs__C8) + (((0.00088818345599999998 * var_t144) * var_t618) * var_IKs__C7)) - (((0.013973842639999999 * var_t144) * var_t624) * var_IKs__C9)) + (((0.01071640395 * var_t144) * var_t637) * var_IKs__C4)) - (((0.0026574982500000002 * var_t144) * var_t647) * var_IKs__C11));
        IJth(rJacobian, 10, 0) = var_chaste_interface__environment__fake_dt * ((((((var_t677 - var_t678) + var_t709) * var_IKs__C9) + (((0.00044409172799999999 * var_t144) * var_t618) * var_IKs__C8)) + (((0.014288538599999999 * var_t144) * var_t637) * var_IKs__C5)) - (((0.0026574982500000002 * var_t144) * var_t647) * var_IKs__C12));
        IJth(rJacobian, 11, 0) = var_chaste_interface__environment__fake_dt * (((((-var_t657) + var_t766) * var_IKs__C10) - (((0.0046579475460000004 * var_t144) * var_t624) * var_IKs__C11)) + (((0.0035721346499999998 * var_t144) * var_t637) * var_IKs__C7));
        IJth(rJacobian, 12, 0) = var_chaste_interface__environment__fake_dt * (((((((((-var_t676) + var_t634) - var_t639) + var_t766) * var_IKs__C11) + (((0.00088818345599999998 * var_t144) * var_t618) * var_IKs__C10)) - (((0.0093158950920000008 * var_t144) * var_t624) * var_IKs__C12)) + (((0.0071442692999999996 * var_t144) * var_t637) * var_IKs__C8)) - (((0.0039862473749999999 * var_t144) * var_t647) * var_IKs__C13));
        IJth(rJacobian, 13, 0) = var_chaste_interface__environment__fake_dt * ((((((var_t658 - var_t659) + var_t766) * var_IKs__C12) + (((0.00044409172799999999 * var_t144) * var_t618) * var_IKs__C11)) + (((0.01071640395 * var_t144) * var_t637) * var_IKs__C9)) - (((0.0039862473749999999 * var_t144) * var_t647) * var_IKs__C14));
        IJth(rJacobian, 14, 0) = var_chaste_interface__environment__fake_dt * (((((-var_t676) + var_t807) * var_IKs__C13) - (((0.0046579475460000004 * var_t144) * var_t624) * var_IKs__C14)) + (((0.0035721346499999998 * var_t144) * var_t637) * var_IKs__C11));
        IJth(rJacobian, 15, 0) = var_chaste_interface__environment__fake_dt * ((((((var_t634 - var_t639) + var_t807) * var_IKs__C14) + (((0.00044409172799999999 * var_t144) * var_t618) * var_IKs__C13)) + (((0.0071442692999999996 * var_t144) * var_t637) * var_IKs__C12)) - var_t828);
        IJth(rJacobian, 16, 0) = var_chaste_interface__environment__fake_dt * ((var_t828 + (((0.0035721346499999998 * var_t144) * var_t637) * var_IKs__C14)) - (((0.0050046143199999997 * var_t144) * var_t837) * var_IKs__O1));
        IJth(rJacobian, 17, 0) = var_chaste_interface__environment__fake_dt * (((((0.0050046143199999997 * var_t144) * var_t837) - ((0.16539434280000001 * var_t144) * var_t848)) * var_IKs__O1) - var_t858);
        IJth(rJacobian, 18, 0) = var_chaste_interface__environment__fake_dt * (var_t858 + (((0.16539434280000001 * var_t144) * var_t848) * var_IKs__O1));
        IJth(rJacobian, 19, 0) = var_chaste_interface__environment__fake_dt * (((((((((-var_t887) + var_t899) - var_t921) - var_t934) * var_ICaL__C) - (((0.10582010579999999 * var_t937) * var_t884) * var_ICaL__O)) - ((var_t942 * var_ICaL__O) * var_t898)) - (((0.2666666667 * var_t906) * var_t919) * var_ICaL__CI)) + (var_t949 * var_ICaL__CI));
        IJth(rJacobian, 20, 0) = var_chaste_interface__environment__fake_dt * ((((((((var_t887 + var_t971) - var_t921) - var_t934) * var_ICaL__O) + (((0.10582010579999999 * var_t885) * var_ICaL__C) * var_t869)) - ((var_t891 * var_ICaL__C) * var_t898)) - (((0.2666666667 * var_t906) * var_t919) * var_ICaL__OI)) + (var_t949 * var_ICaL__OI));
        IJth(rJacobian, 21, 0) = var_chaste_interface__environment__fake_dt * (((((((((-var_t887) + var_t899) - var_t995) - var_t1004) * var_ICaL__C_star) - (((0.10582010579999999 * var_t937) * var_t884) * var_ICaL__O_star)) - ((var_t942 * var_ICaL__O_star) * var_t898)) - (((0.33330000329999998 * var_t906) * var_t993) * var_ICaL__CI_star)) + (var_t1016 * var_ICaL__CI_star));
        IJth(rJacobian, 22, 0) = var_chaste_interface__environment__fake_dt * ((((((((var_t887 + var_t971) - var_t995) - var_t1004) * var_ICaL__O_star) + (((0.10582010579999999 * var_t885) * var_ICaL__C_star) * var_t869)) - ((var_t891 * var_ICaL__C_star) * var_t898)) - (((0.33330000329999998 * var_t906) * var_t993) * var_ICaL__OI_star)) + (var_t1016 * var_ICaL__OI_star));
        IJth(rJacobian, 23, 0) = var_chaste_interface__environment__fake_dt * (((((((((((((-var_t887) + var_t899) + var_t1065) - var_t1069) + var_t1079) - var_t1085) + var_t921) - var_t949) * var_ICaL__CI) + (((0.2666666667 * var_t906) * var_t919) * var_ICaL__C)) + (var_t934 * var_ICaL__C)) - (((0.10582010579999999 * var_t937) * var_t884) * var_ICaL__OI)) - ((var_t942 * var_ICaL__OI) * var_t898));
        IJth(rJacobian, 24, 0) = var_chaste_interface__environment__fake_dt * ((((((((((((var_t887 + var_t971) + var_t1065) - var_t1069) + var_t1079) - var_t1085) + var_t921) - var_t949) * var_ICaL__OI) + (((0.2666666667 * var_t906) * var_t919) * var_ICaL__O)) + (var_t934 * var_ICaL__O)) + (((0.10582010579999999 * var_t885) * var_ICaL__CI) * var_t869)) - ((var_t891 * var_ICaL__CI) * var_t898));
        IJth(rJacobian, 25, 0) = var_chaste_interface__environment__fake_dt * (((((((((((((-var_t887) + var_t899) + var_t995) - var_t1016) * var_ICaL__CI_star) - ((0.80000000010000005 * var_t1057) * var_t1130)) + ((0.99990000990000005 * var_t1067) * var_t1130)) - (((0.80000000010000005 * var_t1136) * var_t1062) * var_t1138)) + (((0.99990000990000005 * var_t1143) * var_t1144) * var_t1138)) + (((0.33330000329999998 * var_t906) * var_t993) * var_ICaL__C_star)) + (var_t1004 * var_ICaL__C_star)) - (((0.10582010579999999 * var_t937) * var_t884) * var_ICaL__OI_star)) - ((var_t942 * var_ICaL__OI_star) * var_t898));
        IJth(rJacobian, 26, 0) = var_chaste_interface__environment__fake_dt * ((((((((((((var_t887 + var_t971) + var_t995) - var_t1016) * var_ICaL__OI_star) - ((0.80000000010000005 * var_t1057) * var_t1163)) + ((0.99990000990000005 * var_t1067) * var_t1163)) - (((0.80000000010000005 * var_t1136) * var_t1062) * var_t1169)) + (((0.99990000990000005 * var_t1143) * var_t1144) * var_t1169)) + (((0.33330000329999998 * var_t906) * var_t993) * var_ICaL__O_star)) + (var_t1004 * var_ICaL__O_star)) + (((0.10582010579999999 * var_t885) * var_ICaL__CI_star) * var_t869)) - ((var_t891 * var_ICaL__CI_star) * var_t898));
        IJth(rJacobian, 27, 0) = var_chaste_interface__environment__fake_dt * ((((0.32000000000000001 * var_t1192) * var_t1193) - (((0.032000000000000001 * var_t1199) * var_t1193) * var_t1190)) + ((0.0072727272729999999 * var_t1204) * var_INa_m_gate__m));
        IJth(rJacobian, 28, 0) = var_chaste_interface__environment__fake_dt * ((var_t1219 * (1.0 - var_INa_h_gate__h)) - (var_t1238 * var_INa_h_gate__h));
        IJth(rJacobian, 29, 0) = var_chaste_interface__environment__fake_dt * ((var_t1282 * (1.0 - var_INa_j_gate__j)) - (var_t1315 * var_INa_j_gate__j));
        IJth(rJacobian, 30, 0) = var_chaste_interface__environment__fake_dt * ((((0.32000000000000001 * var_t1192) * var_t1353) - (((0.032000000000000001 * var_t1199) * var_t1353) * var_t1190)) + ((0.0072727272729999999 * var_t1204) * var_INaL_mL_gate__mL));
        IJth(rJacobian, 31, 0) = var_chaste_interface__environment__fake_dt * ((((-0.16393442620000001) / var_t1366) * var_t1364) * var_t1369);
        IJth(rJacobian, 32, 0) = var_chaste_interface__environment__fake_dt * ((((0.23529411759999999 / var_t1376) * var_t1374) * var_t1395) + (((1.0 / var_t1375) - var_IKr_xr_gate__xr) * ((((0.00059999999999999995 * var_t1384) - (((8.1600000000000005e-05 * var_t1379) / var_t1401) * var_t1382)) + (0.00029999999999999997 * var_t1392)) - (((4.566e-05 * var_t1387) / var_t1407) * var_t1390))));
        IJth(rJacobian, 33, 0) = var_chaste_interface__environment__fake_dt * ((((0.14019346699999999 / var_t1419) * var_t1417) * var_t1433) + (((1.0 / var_t1418) - var_Ito1_a_gate__a) * (((0.041145078180000003 / var_t1438) * var_t1424) - ((0.1191229826 / var_t1442) * var_t1429))));
        IJth(rJacobian, 34, 0) = var_chaste_interface__environment__fake_dt * (((((-0.0050000000000000001) * var_t1454) * (1.0 - var_Ito1_i1f_gate__i1f)) * var_t1451) - (((1.0883666670000001 * var_t1465) * var_Ito1_i1f_gate__i1f) * var_t1461));
        IJth(rJacobian, 35, 0) = var_chaste_interface__environment__fake_dt * ((((((-1.0) / 1250.0) / pow(var_t1476, 2.0)) * (1.0 - var_Ito1_i1s_gate__i1s)) * var_t1475) - (((1.0883666670000001 * var_t1465) * var_Ito1_i1s_gate__i1s) * var_t1461));
        IJth(rJacobian, 36, 0) = var_chaste_interface__environment__fake_dt * ((((((-0.0050000000000000001) * var_t1454) / var_t1491) * var_t1451) - (((0.025000000000000001 * var_t1470) / var_t1496) * ((((-0.0050000000000000001) * var_t1454) * var_t1451) + (((1.0 / 45.0) / pow(var_t1489, 2.0)) * var_t1461)))) * var_t1509);
        IJth(rJacobian, 37, 0) = var_chaste_interface__environment__fake_dt * (((((((((-4.0) * var_t52) * var_t1511) * var_t1536) - ((((((8.0 * var_t1539) * var_t1541) * var_t295) * var_Irel__beta_0) * var_t1528) * var_t1544)) + (((((((8.0 * var_t1539) * var_t1549) * var_t303) * var_Irel__beta_0) * var_t1529) * var_t1534) * var_t39)) * var_t1558) * var_t1560) * var_t1562);
        IJth(rJacobian, 40, 0) = var_chaste_interface__environment__fake_dt * (var_t1835 * ((0.01 * var_t1838) - (0.01 * var_t1848)));
        IJth(rJacobian, 41, 0) = var_chaste_interface__environment__fake_dt * (var_t1919 * (((((((-1.0) * var_ICaL__PCa) * var_model_parameters__F) * var_t1511) * var_t1923) - (((2.0 * var_t391) * var_t1541) * var_t1928)) + (((((((8.0 * var_t391) * var_t1549) * var_t303) * var_t1748) * var_t1773) * var_t1753) * var_t39)));
        IJth(rJacobian, 42, 0) = var_chaste_interface__environment__fake_dt * (((((-0.0058997050159999998) * ((((((((2.3999999999999999 * var_t194) - (2.3999999999999999 * var_t264)) + (3.0 * var_t350)) + var_t89) + var_t103) + var_t34) + var_t328) - var_t324)) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 43, 0) = var_chaste_interface__environment__fake_dt * (((-0.029999999999999999) * var_t1838) + (0.029999999999999999 * var_t1848));
        IJth(rJacobian, 44, 0) = var_chaste_interface__environment__fake_dt * ((((0.0058997050159999998 * var_IClb__gClb) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 45, 0) = var_chaste_interface__environment__fake_dt * (((((((0.050000000000000003 * var_t267) * var_model_parameters__F) * var_t25) * var_t271) * var_t2082) - (((((((0.050000000000000003 * var_t432) * var_t2085) * var_t369) * var_t27) * var_t273) * var_t365) * var_t1927)) + ((((((((((0.20000000000000001 * var_t432) * var_t2085) * var_t363) * var_t321) * var_Ito2_i2f_gate__i2f) * var_t281) * var_t1748) * var_t1773) * var_t1753) * var_t27));
        IJth(rJacobian, 46, 0) = var_chaste_interface__environment__fake_dt * (((((-0.0058997050159999998) * var_t2121) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 0, 1) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((((0.80000000000000004 * var_t445) - (1.6000000000000001 * var_t455)) + (0.80000000000000004 * var_t464)) - (4.4973467000000002e-08 * var_t472)) - var_t478) - var_t481) + var_t485));
        IJth(rJacobian, 1, 1) = var_chaste_interface__environment__fake_dt * (((((-2.0) / var_t1760) * (((((((0.0029498525079999999 * ((((((((-4.0) * var_t308) * var_t19) * var_t25) * var_t42) * var_t45) - (var_t482 * var_t480)) + ((1.6000000000000001 * var_t254) * var_t193))) * var_t1748) * var_t9) * var_t1774) + ((0.00035619469020000002 * var_t1671) * var_Ca__Ca_NSR)) - ((0.081415929200000001 * var_t1679) * var_t1703)) + (0.0029498525069999999 * var_t1783))) * ((((-var_t1728) / var_t1730) / var_t1729) - ((var_t1733 / var_t1735) / var_t1734))) + (var_t1739 * (((((((0.0029498525079999999 * ((((((-var_t478) - var_t481) + var_t485) - (1.6000000000000001 * var_t445)) + (3.2000000000000002 * var_t455)) - (1.6000000000000001 * var_t464))) * var_t1748) * var_t9) * var_t1774) - (0.081415929200000001 * var_t1684)) + (0.081415929200000001 * var_t1688)) - var_t1805)));
        IJth(rJacobian, 39, 1) = var_chaste_interface__environment__fake_dt * (var_t1684 - var_t1688);
        IJth(rJacobian, 40, 1) = var_chaste_interface__environment__fake_dt * (var_t1835 * var_t1782);
        IJth(rJacobian, 42, 1) = var_chaste_interface__environment__fake_dt * (((((-0.0058997050159999998) * ((((-2.3999999999999999) * var_t445) + (4.7999999999999998 * var_t455)) - (2.3999999999999999 * var_t464))) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 46, 1) = var_chaste_interface__environment__fake_dt * (((-6.6332547209999995e-11) * var_t472) * var_t1837);
        IJth(rJacobian, 2, 2) = var_chaste_interface__environment__fake_dt * (-var_t629);
        IJth(rJacobian, 3, 2) = var_chaste_interface__environment__fake_dt * (var_t629);
        IJth(rJacobian, 2, 3) = var_chaste_interface__environment__fake_dt * (var_t630);
        IJth(rJacobian, 3, 3) = var_chaste_interface__environment__fake_dt * (((-var_t652) - var_t630) - var_t653);
        IJth(rJacobian, 4, 3) = var_chaste_interface__environment__fake_dt * (var_t652);
        IJth(rJacobian, 7, 3) = var_chaste_interface__environment__fake_dt * (var_t653);
        IJth(rJacobian, 3, 4) = var_chaste_interface__environment__fake_dt * (var_t655);
        IJth(rJacobian, 4, 4) = var_chaste_interface__environment__fake_dt * (((-var_t672) - var_t655) - var_t673);
        IJth(rJacobian, 5, 4) = var_chaste_interface__environment__fake_dt * (var_t672);
        IJth(rJacobian, 8, 4) = var_chaste_interface__environment__fake_dt * (var_t673);
        IJth(rJacobian, 4, 5) = var_chaste_interface__environment__fake_dt * (var_t675);
        IJth(rJacobian, 5, 5) = var_chaste_interface__environment__fake_dt * (((-var_t691) - var_t675) - var_t692);
        IJth(rJacobian, 6, 5) = var_chaste_interface__environment__fake_dt * (var_t691);
        IJth(rJacobian, 9, 5) = var_chaste_interface__environment__fake_dt * (var_t692);
        IJth(rJacobian, 5, 6) = var_chaste_interface__environment__fake_dt * (var_t694);
        IJth(rJacobian, 6, 6) = var_chaste_interface__environment__fake_dt * ((-var_t694) - var_t706);
        IJth(rJacobian, 10, 6) = var_chaste_interface__environment__fake_dt * (var_t706);
        IJth(rJacobian, 3, 7) = var_chaste_interface__environment__fake_dt * (var_t656);
        IJth(rJacobian, 7, 7) = var_chaste_interface__environment__fake_dt * ((-var_t652) - var_t656);
        IJth(rJacobian, 8, 7) = var_chaste_interface__environment__fake_dt * (var_t652);
        IJth(rJacobian, 4, 8) = var_chaste_interface__environment__fake_dt * (var_t656);
        IJth(rJacobian, 7, 8) = var_chaste_interface__environment__fake_dt * (var_t630);
        IJth(rJacobian, 8, 8) = var_chaste_interface__environment__fake_dt * ((((-var_t672) - var_t630) - var_t653) - var_t656);
        IJth(rJacobian, 9, 8) = var_chaste_interface__environment__fake_dt * (var_t672);
        IJth(rJacobian, 11, 8) = var_chaste_interface__environment__fake_dt * (var_t653);
        IJth(rJacobian, 5, 9) = var_chaste_interface__environment__fake_dt * (var_t656);
        IJth(rJacobian, 8, 9) = var_chaste_interface__environment__fake_dt * (var_t655);
        IJth(rJacobian, 9, 9) = var_chaste_interface__environment__fake_dt * ((((-var_t691) - var_t655) - var_t673) - var_t656);
        IJth(rJacobian, 10, 9) = var_chaste_interface__environment__fake_dt * (var_t691);
        IJth(rJacobian, 12, 9) = var_chaste_interface__environment__fake_dt * (var_t673);
        IJth(rJacobian, 6, 10) = var_chaste_interface__environment__fake_dt * (var_t656);
        IJth(rJacobian, 9, 10) = var_chaste_interface__environment__fake_dt * (var_t675);
        IJth(rJacobian, 10, 10) = var_chaste_interface__environment__fake_dt * (((-var_t675) - var_t692) - var_t656);
        IJth(rJacobian, 13, 10) = var_chaste_interface__environment__fake_dt * (var_t692);
        IJth(rJacobian, 8, 11) = var_chaste_interface__environment__fake_dt * (var_t736);
        IJth(rJacobian, 11, 11) = var_chaste_interface__environment__fake_dt * ((-var_t672) - var_t736);
        IJth(rJacobian, 12, 11) = var_chaste_interface__environment__fake_dt * (var_t672);
        IJth(rJacobian, 9, 12) = var_chaste_interface__environment__fake_dt * (var_t736);
        IJth(rJacobian, 11, 12) = var_chaste_interface__environment__fake_dt * (var_t630);
        IJth(rJacobian, 12, 12) = var_chaste_interface__environment__fake_dt * ((((-var_t691) - var_t630) - var_t653) - var_t736);
        IJth(rJacobian, 13, 12) = var_chaste_interface__environment__fake_dt * (var_t691);
        IJth(rJacobian, 14, 12) = var_chaste_interface__environment__fake_dt * (var_t653);
        IJth(rJacobian, 10, 13) = var_chaste_interface__environment__fake_dt * (var_t736);
        IJth(rJacobian, 12, 13) = var_chaste_interface__environment__fake_dt * (var_t655);
        IJth(rJacobian, 13, 13) = var_chaste_interface__environment__fake_dt * (((-var_t655) - var_t673) - var_t736);
        IJth(rJacobian, 15, 13) = var_chaste_interface__environment__fake_dt * (var_t673);
        IJth(rJacobian, 12, 14) = var_chaste_interface__environment__fake_dt * (var_t793);
        IJth(rJacobian, 14, 14) = var_chaste_interface__environment__fake_dt * ((-var_t691) - var_t793);
        IJth(rJacobian, 15, 14) = var_chaste_interface__environment__fake_dt * (var_t691);
        IJth(rJacobian, 13, 15) = var_chaste_interface__environment__fake_dt * (var_t793);
        IJth(rJacobian, 14, 15) = var_chaste_interface__environment__fake_dt * (var_t630);
        IJth(rJacobian, 15, 15) = var_chaste_interface__environment__fake_dt * (((-var_t630) - var_t653) - var_t793);
        IJth(rJacobian, 16, 15) = var_chaste_interface__environment__fake_dt * (var_t653);
        IJth(rJacobian, 15, 16) = var_chaste_interface__environment__fake_dt * (var_t831);
        IJth(rJacobian, 16, 16) = var_chaste_interface__environment__fake_dt * ((-var_t831) - 0.089538000000000006);
        IJth(rJacobian, 17, 16) = var_chaste_interface__environment__fake_dt * (0.089538000000000006);
        IJth(rJacobian, 0, 17) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t390));
        IJth(rJacobian, 16, 17) = var_chaste_interface__environment__fake_dt * (var_t843);
        IJth(rJacobian, 17, 17) = var_chaste_interface__environment__fake_dt * ((-var_t843) - var_t860);
        IJth(rJacobian, 18, 17) = var_chaste_interface__environment__fake_dt * (var_t860);
        IJth(rJacobian, 46, 17) = var_chaste_interface__environment__fake_dt * (-var_t2128);
        IJth(rJacobian, 0, 18) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t390));
        IJth(rJacobian, 17, 18) = var_chaste_interface__environment__fake_dt * (var_t862);
        IJth(rJacobian, 18, 18) = var_chaste_interface__environment__fake_dt * (-var_t862);
        IJth(rJacobian, 46, 18) = var_chaste_interface__environment__fake_dt * (-var_t2128);
        IJth(rJacobian, 19, 19) = var_chaste_interface__environment__fake_dt * (((-var_t952) - var_t959) - var_t960);
        IJth(rJacobian, 20, 19) = var_chaste_interface__environment__fake_dt * (var_t952);
        IJth(rJacobian, 21, 19) = var_chaste_interface__environment__fake_dt * (var_t959);
        IJth(rJacobian, 23, 19) = var_chaste_interface__environment__fake_dt * (var_t960);
        IJth(rJacobian, 0, 20) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t395));
        IJth(rJacobian, 19, 20) = var_chaste_interface__environment__fake_dt * (var_t962);
        IJth(rJacobian, 20, 20) = var_chaste_interface__environment__fake_dt * (((-var_t962) - var_t959) - var_t960);
        IJth(rJacobian, 22, 20) = var_chaste_interface__environment__fake_dt * (var_t959);
        IJth(rJacobian, 24, 20) = var_chaste_interface__environment__fake_dt * (var_t960);
        IJth(rJacobian, 37, 20) = var_chaste_interface__environment__fake_dt * (-var_t1569);
        IJth(rJacobian, 41, 20) = var_chaste_interface__environment__fake_dt * (-var_t1946);
        IJth(rJacobian, 19, 21) = var_chaste_interface__environment__fake_dt * (var_ICaL__theta);
        IJth(rJacobian, 21, 21) = var_chaste_interface__environment__fake_dt * (((-var_t952) - var_ICaL__theta) - var_t1019);
        IJth(rJacobian, 22, 21) = var_chaste_interface__environment__fake_dt * (var_t952);
        IJth(rJacobian, 25, 21) = var_chaste_interface__environment__fake_dt * (var_t1019);
        IJth(rJacobian, 0, 22) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t395));
        IJth(rJacobian, 20, 22) = var_chaste_interface__environment__fake_dt * (var_ICaL__theta);
        IJth(rJacobian, 21, 22) = var_chaste_interface__environment__fake_dt * (var_t962);
        IJth(rJacobian, 22, 22) = var_chaste_interface__environment__fake_dt * (((-var_t962) - var_ICaL__theta) - var_t1019);
        IJth(rJacobian, 26, 22) = var_chaste_interface__environment__fake_dt * (var_t1019);
        IJth(rJacobian, 37, 22) = var_chaste_interface__environment__fake_dt * (-var_t1569);
        IJth(rJacobian, 41, 22) = var_chaste_interface__environment__fake_dt * (-var_t1946);
        IJth(rJacobian, 19, 23) = var_chaste_interface__environment__fake_dt * (var_t963);
        IJth(rJacobian, 23, 23) = var_chaste_interface__environment__fake_dt * (((-var_t952) - var_t1100) - var_t963);
        IJth(rJacobian, 24, 23) = var_chaste_interface__environment__fake_dt * (var_t952);
        IJth(rJacobian, 25, 23) = var_chaste_interface__environment__fake_dt * (var_t1100);
        IJth(rJacobian, 20, 24) = var_chaste_interface__environment__fake_dt * (var_t963);
        IJth(rJacobian, 23, 24) = var_chaste_interface__environment__fake_dt * (var_t962);
        IJth(rJacobian, 24, 24) = var_chaste_interface__environment__fake_dt * (((-var_t962) - var_t1100) - var_t963);
        IJth(rJacobian, 26, 24) = var_chaste_interface__environment__fake_dt * (var_t1100);
        IJth(rJacobian, 21, 25) = var_chaste_interface__environment__fake_dt * (var_t1021);
        IJth(rJacobian, 23, 25) = var_chaste_interface__environment__fake_dt * (var_ICaL__theta_I);
        IJth(rJacobian, 25, 25) = var_chaste_interface__environment__fake_dt * (((-var_t952) - var_ICaL__theta_I) - var_t1021);
        IJth(rJacobian, 26, 25) = var_chaste_interface__environment__fake_dt * (var_t952);
        IJth(rJacobian, 22, 26) = var_chaste_interface__environment__fake_dt * (var_t1021);
        IJth(rJacobian, 24, 26) = var_chaste_interface__environment__fake_dt * (var_ICaL__theta_I);
        IJth(rJacobian, 25, 26) = var_chaste_interface__environment__fake_dt * (var_t962);
        IJth(rJacobian, 26, 26) = var_chaste_interface__environment__fake_dt * (((-var_t962) - var_ICaL__theta_I) - var_t1021);
        IJth(rJacobian, 0, 27) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-3.0) * var_t404));
        IJth(rJacobian, 27, 27) = var_chaste_interface__environment__fake_dt * (var_t1211);
        IJth(rJacobian, 42, 27) = var_chaste_interface__environment__fake_dt * (((-0.0044247787620000003) * var_t404) * var_t1837);
        IJth(rJacobian, 0, 28) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t407));
        IJth(rJacobian, 28, 28) = var_chaste_interface__environment__fake_dt * ((-var_t1243) - var_t1254);
        IJth(rJacobian, 42, 28) = var_chaste_interface__environment__fake_dt * (((-0.001474926254) * var_t407) * var_t1837);
        IJth(rJacobian, 0, 29) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t409));
        IJth(rJacobian, 29, 29) = var_chaste_interface__environment__fake_dt * ((-var_t1333) - var_t1351);
        IJth(rJacobian, 42, 29) = var_chaste_interface__environment__fake_dt * (((-0.001474926254) * var_t409) * var_t1837);
        IJth(rJacobian, 0, 30) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-3.0) * var_t412));
        IJth(rJacobian, 30, 30) = var_chaste_interface__environment__fake_dt * (var_t1211);
        IJth(rJacobian, 42, 30) = var_chaste_interface__environment__fake_dt * (((-0.0044247787620000003) * var_t412) * var_t1837);
        IJth(rJacobian, 0, 31) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-var_t102) * var_t402));
        IJth(rJacobian, 31, 31) = var_chaste_interface__environment__fake_dt * (-var_t1369);
        IJth(rJacobian, 42, 31) = var_chaste_interface__environment__fake_dt * (((((-0.0058997050159999998) * var_t102) * var_t402) * var_t1748) * var_t1755);
        IJth(rJacobian, 0, 32) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-0.43033148290000001) * var_t416));
        IJth(rJacobian, 32, 32) = var_chaste_interface__environment__fake_dt * (-var_t1395);
        IJth(rJacobian, 46, 32) = var_chaste_interface__environment__fake_dt * (((-0.00063470720210000002) * var_t416) * var_t1837);
        IJth(rJacobian, 0, 33) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t418) * var_Ito1_i1f_gate__i1f) * var_t16));
        IJth(rJacobian, 33, 33) = var_chaste_interface__environment__fake_dt * (-var_t1433);
        IJth(rJacobian, 46, 33) = var_chaste_interface__environment__fake_dt * (((((((-0.017699115049999999) * var_t418) * var_t50) * var_t15) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 0, 34) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t422));
        IJth(rJacobian, 34, 34) = var_chaste_interface__environment__fake_dt * ((-var_t1471) - var_t1472);
        IJth(rJacobian, 46, 34) = var_chaste_interface__environment__fake_dt * (((-0.001474926254) * var_t422) * var_t1837);
        IJth(rJacobian, 0, 35) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t425));
        IJth(rJacobian, 35, 35) = var_chaste_interface__environment__fake_dt * ((((-1.0) / 250.0) / var_t1476) - var_t1472);
        IJth(rJacobian, 46, 35) = var_chaste_interface__environment__fake_dt * (((-0.001474926254) * var_t425) * var_t1837);
        IJth(rJacobian, 0, 36) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t427) * var_t25) * var_t429));
        IJth(rJacobian, 36, 36) = var_chaste_interface__environment__fake_dt * (-var_t1509);
        IJth(rJacobian, 45, 36) = var_chaste_interface__environment__fake_dt * (((0.050000000000000003 * var_t2104) * var_t429) * var_t1927);
        IJth(rJacobian, 0, 37) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-2.0) * var_t432) * var_t433) * var_t428) * var_Ito2_i2f_gate__i2f) * var_t437) * var_Irel__Irel) * var_t277));
        IJth(rJacobian, 37, 37) = var_chaste_interface__environment__fake_dt * (((-var_t1558) * var_t1560) * var_t1562);
        IJth(rJacobian, 38, 37) = var_chaste_interface__environment__fake_dt * (-var_t1655);
        IJth(rJacobian, 40, 37) = var_chaste_interface__environment__fake_dt * (0.23999999999999999 * var_t1835);
        IJth(rJacobian, 45, 37) = var_chaste_interface__environment__fake_dt * (((((((((0.10000000000000001 * var_t267) * var_t24) * var_t25) * var_t428) * var_Ito2_i2f_gate__i2f) * var_t437) * var_Irel__Irel) * var_t277) * var_t1927);
        IJth(rJacobian, 37, 38) = var_chaste_interface__environment__fake_dt * ((((((((((-4.0) * var_t394) * var_t59) * var_Irel__kappa) / var_t1573) * var_t1532) * var_Irel__h_rel) * var_t1530) * var_t1562) - (((var_t1586 * var_t1560) * var_Irel__Krel_tau) / var_t1588));
        IJth(rJacobian, 38, 38) = var_chaste_interface__environment__fake_dt * ((((((2.0 / var_t1656) * (((var_Ca__Ca_NSR - var_Ca__Ca_JSR) * var_t1659) - var_Irel__Irel)) * var_t1649) / var_t1651) / var_t1650) - var_t1668);
        IJth(rJacobian, 39, 38) = var_chaste_interface__environment__fake_dt * (var_t1670);
        IJth(rJacobian, 1, 39) = var_chaste_interface__environment__fake_dt * ((0.00035619469020000002 * var_t1739) * var_t1671);
        IJth(rJacobian, 38, 39) = var_chaste_interface__environment__fake_dt * (var_t1668);
        IJth(rJacobian, 39, 39) = var_chaste_interface__environment__fake_dt * (((-0.0043750000000000004) * var_t1671) - var_t1670);
        IJth(rJacobian, 0, 40) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((0.20000000000000001 * var_t444) * var_t248) - ((((0.40000000000000002 * var_t491) * var_t492) * var_t165) * var_t494)) + (((0.20000000000000001 * var_t499) * var_t502) * var_t462)));
        IJth(rJacobian, 1, 40) = var_chaste_interface__environment__fake_dt * (var_t1739 * ((((-0.081415929200000001) * var_t1704) + (0.081415929200000001 * var_t1712)) + var_t1805));
        IJth(rJacobian, 37, 40) = var_chaste_interface__environment__fake_dt * ((((((((((((((-4.0) * var_t1565) * var_t392) * var_t59) * var_Irel__delta_beta_0) * var_t1595) * var_t1524) * var_t1600) * var_t1515) * var_t1602) * var_t1605) * var_Irel__kappa) * var_t1608) - (((((((var_t1586 * var_t1614) * var_t1562) * var_Irel__delta_beta_0) * var_t1617) * var_t1600) * var_CaMK_active__CaMK_0) * var_t1622));
        IJth(rJacobian, 39, 40) = var_chaste_interface__environment__fake_dt * (var_t1704 - var_t1712);
        IJth(rJacobian, 40, 40) = var_chaste_interface__environment__fake_dt * (((((-2.0) / var_t1854) * ((((-var_t1783) - var_t1858) + (((0.01 * var_t354) * var_t248) * var_t1837)) + (0.23999999999999999 * var_Irel__Irel))) * ((((-var_t1824) / var_t1826) / var_t1825) - ((var_t1829 / var_t1831) / var_t1830))) + (var_t1835 * (((((-var_t1782) - var_t1857) - (0.01 * var_t1879)) + (0.02 * var_t1887)) - (0.01 * var_t1894))));
        IJth(rJacobian, 41, 40) = var_chaste_interface__environment__fake_dt * ((10.0 * var_t1919) * var_t1857);
        IJth(rJacobian, 43, 40) = var_chaste_interface__environment__fake_dt * (((0.029999999999999999 * var_t1879) - (0.059999999999999998 * var_t1887)) + (0.029999999999999999 * var_t1894));
        IJth(rJacobian, 47, 40) = var_chaste_interface__environment__fake_dt * (((((((var_CaMK_active__alpha_CaMK * var_t2156) * var_t2158) / var_t1601) / var_t1518) * var_CaMK_active__Km) * var_t233) + ((var_t2165 * var_CaMK_active__CaMK_0) * var_t1622));
        IJth(rJacobian, 0, 41) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-4.0) * var_t507) * var_t23) * var_ICaL__gamma_Cai) * var_t295));
        IJth(rJacobian, 19, 41) = var_chaste_interface__environment__fake_dt * (-var_t970);
        IJth(rJacobian, 20, 41) = var_chaste_interface__environment__fake_dt * (-var_t986);
        IJth(rJacobian, 21, 41) = var_chaste_interface__environment__fake_dt * (((-var_t1028) + var_t970) + var_t1033);
        IJth(rJacobian, 22, 41) = var_chaste_interface__environment__fake_dt * (((-var_t1050) + var_t986) + var_t1053);
        IJth(rJacobian, 23, 41) = var_chaste_interface__environment__fake_dt * (-var_t1109);
        IJth(rJacobian, 24, 41) = var_chaste_interface__environment__fake_dt * (-var_t1126);
        IJth(rJacobian, 25, 41) = var_chaste_interface__environment__fake_dt * (((-var_t1033) + var_t1109) + var_t1028);
        IJth(rJacobian, 26, 41) = var_chaste_interface__environment__fake_dt * (((-var_t1053) + var_t1126) + var_t1050);
        IJth(rJacobian, 37, 41) = var_chaste_interface__environment__fake_dt * (((((-4.0) * var_t391) * var_t1626) * var_t295) * var_t1566);
        IJth(rJacobian, 40, 41) = var_chaste_interface__environment__fake_dt * (var_t1835 * var_t1857);
        IJth(rJacobian, 41, 41) = var_chaste_interface__environment__fake_dt * (((((-2.0) / var_t1949) * (((((-1.0) * var_t1951) * var_t1511) * var_t1923) + (10.0 * var_t1858))) * ((((-var_t1824) / var_t1911) / var_t1910) - ((var_t1829 / var_t1915) / var_t1914))) + (var_t1919 * (((((-1.0) * var_t1951) * var_t1626) * var_t1928) - (10.0 * var_t1857))));
        IJth(rJacobian, 0, 42) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((((-var_t514) - (2.3999999999999999 * var_t519)) + (0.80000000000000004 * var_t527)) - (3.0 * var_t534)) + (3.0 * var_t540)) - var_t542) - var_t545) - var_t550));
        IJth(rJacobian, 1, 42) = var_chaste_interface__environment__fake_dt * ((((0.0029498525079999999 * var_t1739) * ((4.7999999999999998 * var_t519) - (1.6000000000000001 * var_t527))) * var_t1748) * var_t1755);
        IJth(rJacobian, 42, 42) = var_chaste_interface__environment__fake_dt * ((((((((-0.0058997050159999998) * (((((((7.2000000000000002 * var_t519) - (2.3999999999999999 * var_t527)) + (9.0 * var_t534)) - (9.0 * var_t540)) + var_t514) + var_t542) + var_t545)) * var_t1748) * var_t9) * var_t1774) - (4.0 * var_t2022)) + (4.0 * var_t2029)) - var_t2031);
        IJth(rJacobian, 43, 42) = var_chaste_interface__environment__fake_dt * (var_t1782);
        IJth(rJacobian, 44, 42) = var_chaste_interface__environment__fake_dt * (((-4.0) * var_t2022) + (4.0 * var_t2029));
        IJth(rJacobian, 46, 42) = var_chaste_interface__environment__fake_dt * (((((-0.0058997050159999998) * ((var_t550 - (6.0 * var_t534)) + (6.0 * var_t540))) * var_t1748) * var_t9) * var_t1774);
        IJth(rJacobian, 0, 43) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((((-0.59999999999999998) * var_t553) * var_t554) * var_t492) + (((0.59999999999999998 * var_t499) * var_t502) * var_t562)));
        IJth(rJacobian, 40, 43) = var_chaste_interface__environment__fake_dt * (var_t1835 * ((0.029999999999999999 * var_t1902) - (0.01 * var_t1906)));
        IJth(rJacobian, 42, 43) = var_chaste_interface__environment__fake_dt * (var_t2031);
        IJth(rJacobian, 43, 43) = var_chaste_interface__environment__fake_dt * ((((-0.089999999999999997) * var_t1902) + (0.029999999999999999 * var_t1906)) - var_t1782);
        IJth(rJacobian, 0, 44) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((var_t567 * var_t547) * var_t568) - ((var_t427 * var_t25) * var_t282)));
        IJth(rJacobian, 42, 44) = var_chaste_interface__environment__fake_dt * (((-4.0) * var_t2035) + (4.0 * var_t2036));
        IJth(rJacobian, 44, 44) = var_chaste_interface__environment__fake_dt * ((((((((((((-0.0058997050159999998) * var_t567) * var_model_parameters__T) / var_t19) * var_t568) * var_t1748) * var_t1774) - (4.0 * var_t2035)) + (4.0 * var_t2036)) - var_t2067) + var_t2073) - var_t2031);
        IJth(rJacobian, 45, 44) = var_chaste_interface__environment__fake_dt * (((0.050000000000000003 * var_t2104) * var_t2082) + var_t1782);
        IJth(rJacobian, 46, 44) = var_chaste_interface__environment__fake_dt * ((-var_t2067) + var_t2073);
        IJth(rJacobian, 44, 45) = var_chaste_interface__environment__fake_dt * (var_t2031);
        IJth(rJacobian, 45, 45) = var_chaste_interface__environment__fake_dt * (-var_t1782);
        IJth(rJacobian, 0, 46) = var_chaste_interface__environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t615);
        IJth(rJacobian, 44, 46) = var_chaste_interface__environment__fake_dt * ((-var_t2076) + var_t2077);
        IJth(rJacobian, 46, 46) = var_chaste_interface__environment__fake_dt * ((((((0.0058997050159999998 * var_t615) * var_t1748) * var_t9) * var_t1774) - var_t2076) + var_t2077);
        IJth(rJacobian, 1, 47) = var_chaste_interface__environment__fake_dt * (var_t1739 * (((-0.081415929200000001) * var_t1720) + (0.081415929200000001 * var_t1726)));
        IJth(rJacobian, 37, 47) = var_chaste_interface__environment__fake_dt * (((((((((((-4.0) * var_t507) * var_t58) * var_t60) * var_Irel__delta_beta_0) * var_t1617) * var_t1600) * var_t1636) * var_Irel__kappa) * var_t1608) - ((((((var_t1586 * var_t1614) * var_t1562) * var_Irel__delta_beta_0) * var_t1617) * var_t1600) * var_t1636));
        IJth(rJacobian, 39, 47) = var_chaste_interface__environment__fake_dt * (var_t1720 - var_t1726);
        IJth(rJacobian, 47, 47) = var_chaste_interface__environment__fake_dt * ((((var_CaMK_active__alpha_CaMK * var_t1636) * var_t1520) - (var_t2165 * var_t1635)) - var_CaMK_active__beta_CaMK);
    }
    
template<>
void OdeSystemInformation<Dynamicdecker_2009FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "decker_2009";
    this->mFreeVariableName = "environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-87.472528);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.09945e-5);

    // rY[2]:
    this->mVariableNames.push_back("IKs__C1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.476653873938053);

    // rY[3]:
    this->mVariableNames.push_back("IKs__C2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.2551771850026437);

    // rY[4]:
    this->mVariableNames.push_back("IKs__C3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.05122852186842027);

    // rY[5]:
    this->mVariableNames.push_back("IKs__C4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.004570874421666423);

    // rY[6]:
    this->mVariableNames.push_back("IKs__C5");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0001529389211563687);

    // rY[7]:
    this->mVariableNames.push_back("IKs__C6");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.1328281770413747);

    // rY[8]:
    this->mVariableNames.push_back("IKs__C7");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.05333228495514583);

    // rY[9]:
    this->mVariableNames.push_back("IKs__C8");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.007137874613383642);

    // rY[10]:
    this->mVariableNames.push_back("IKs__C9");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0003184390970637536);

    // rY[11]:
    this->mVariableNames.push_back("IKs__C10");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.01388061042363991);

    // rY[12]:
    this->mVariableNames.push_back("IKs__C11");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.003715500164470033);

    // rY[13]:
    this->mVariableNames.push_back("IKs__C12");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0002486371465457659);

    // rY[14]:
    this->mVariableNames.push_back("IKs__C13");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0006446803014431032);

    // rY[15]:
    this->mVariableNames.push_back("IKs__C14");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.628258026770862e-5);

    // rY[16]:
    this->mVariableNames.push_back("IKs__C15");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.122823524761588e-5);

    // rY[17]:
    this->mVariableNames.push_back("IKs__O1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.051906959485266e-5);

    // rY[18]:
    this->mVariableNames.push_back("IKs__O2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.372219883411999e-6);

    // rY[19]:
    this->mVariableNames.push_back("ICaL__C");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999613782488198);

    // rY[20]:
    this->mVariableNames.push_back("ICaL__O");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.27419494597377e-5);

    // rY[21]:
    this->mVariableNames.push_back("ICaL__C_star");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.936477396599124e-11);

    // rY[22]:
    this->mVariableNames.push_back("ICaL__O_star");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.350122566369778e-15);

    // rY[23]:
    this->mVariableNames.push_back("ICaL__CI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.587938121237188e-5);

    // rY[24]:
    this->mVariableNames.push_back("ICaL__OI");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.611420243201921e-10);

    // rY[25]:
    this->mVariableNames.push_back("ICaL__CI_star");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[26]:
    this->mVariableNames.push_back("ICaL__OI_star");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[27]:
    this->mVariableNames.push_back("INa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001022252813581797);

    // rY[28]:
    this->mVariableNames.push_back("INa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9913109066867);

    // rY[29]:
    this->mVariableNames.push_back("INa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9970771239754529);

    // rY[30]:
    this->mVariableNames.push_back("INaL_mL_gate__mL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.001022252813581797);

    // rY[31]:
    this->mVariableNames.push_back("INaL_hL_gate__hL");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.3593255076983574);

    // rY[32]:
    this->mVariableNames.push_back("IKr_xr_gate__xr");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.235996442041028e-8);

    // rY[33]:
    this->mVariableNames.push_back("Ito1_a_gate__a");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.773318268499115e-5);

    // rY[34]:
    this->mVariableNames.push_back("Ito1_i1f_gate__i1f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9979722);

    // rY[35]:
    this->mVariableNames.push_back("Ito1_i1s_gate__i1s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9874435);

    // rY[36]:
    this->mVariableNames.push_back("Ito2_i2f_gate__i2f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9960352);

    // rY[37]:
    this->mVariableNames.push_back("Irel__Irel");
    this->mVariableUnits.push_back("mM_per_ms");
    this->mInitialConditions.push_back(0.00107332);

    // rY[38]:
    this->mVariableNames.push_back("Ca__Ca_JSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.917692717);

    // rY[39]:
    this->mVariableNames.push_back("Ca__Ca_NSR");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(0.929835335);

    // rY[40]:
    this->mVariableNames.push_back("Ca__Ca_ss_sr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(9.04757e-5);

    // rY[41]:
    this->mVariableNames.push_back("Ca__Ca_ss_CaL");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(9.61545e-5);

    // rY[42]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(6.935575);

    // rY[43]:
    this->mVariableNames.push_back("Na__Na_ss_sr");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(6.935607);

    // rY[44]:
    this->mVariableNames.push_back("Cl__Cl_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(20.26842);

    // rY[45]:
    this->mVariableNames.push_back("Cl__Cl_ss");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(20.26842);

    // rY[46]:
    this->mVariableNames.push_back("K__K_i");
    this->mVariableUnits.push_back("mM");
    this->mInitialConditions.push_back(145.5689);

    // rY[47]:
    this->mVariableNames.push_back("CaMK_active__CaMK_trap");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0018861341);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicdecker_2009FromCellMLCvode)

#endif // CHASTE_CVODE
