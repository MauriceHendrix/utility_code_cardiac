#ifdef CHASTE_CVODE
//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: fink_noble_giles_model_2008
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Feb 18 17:09:32 2020
//! 
//! <autogenerated>

#include "fink_noble_giles_model_2008.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Dynamicfink_noble_giles_model_2008FromCellMLCvode::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__cell__i_Stim_Start = 10.0; // millisecond
        const double var_cell__i_Stim_Amplitude =  -52.0; // nanoA_per_nanoF
        const double var_chaste_interface__cell__i_Stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__cell__i_Stim_PulseDuration = 1.0; // millisecond
        const double var_chaste_interface__cell__i_Stim_Amplitude_converter = var_cell__i_Stim_Amplitude; // nanoA_per_nanoF
        const double var_chaste_interface__cell__i_Stim_Amplitude = var_chaste_interface__cell__i_Stim_Amplitude_converter * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__cell__i_Stim_Amplitude),
                var_chaste_interface__cell__i_Stim_PulseDuration,
                var_chaste_interface__cell__i_Stim_Period,
                var_chaste_interface__cell__i_Stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    Dynamicfink_noble_giles_model_2008FromCellMLCvode::Dynamicfink_noble_giles_model_2008FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCvodeCell(
                pOdeSolver,
                27,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Dynamicfink_noble_giles_model_2008FromCellMLCvode>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        mUseAnalyticJacobian = true;
        mHasAnalyticJacobian = true;
    }
    
    Dynamicfink_noble_giles_model_2008FromCellMLCvode::~Dynamicfink_noble_giles_model_2008FromCellMLCvode()
    {
    }
    
    double Dynamicfink_noble_giles_model_2008FromCellMLCvode::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        N_Vector rY;
        bool made_new_cvode_vector = false;
        if (!pStateVariables)
        {
            rY = rGetStateVariables();
        }
        else
        {
            made_new_cvode_vector = true;
            rY = MakeNVector(*pStateVariables);
        }
        
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.45
        double var_chaste_interface__iKr_Markov__Or4 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.014
        double var_chaste_interface__iKs_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00303
        double var_chaste_interface__ito_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__ito_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.11e-8
        double var_chaste_interface__iNa_m_gate__m = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00132
        double var_chaste_interface__iNa_h_gate__h = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.7768
        double var_chaste_interface__iNa_j_gate__j = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7766
        double var_chaste_interface__iCaL_d_gate__d = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.06e-6
        double var_chaste_interface__iCaL_f_gate__f = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__iCaL_f2_gate__f2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9995
        double var_chaste_interface__iCaL_fCass_gate__fCass = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 1.092e-4
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 1.893e-4
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 7.940167
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 141.0167
        
        const double var_Environment__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_Environment__T = 310.0; // kelvin
        const double var_Environment__F = 96485.341499999995; // coulomb_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // millimolar
        const double var_Environment__Ca_o = 2.0; // millimolar
        const double var_Environment__Na_o = 140.0; // millimolar
        const double var_iK1_rectification__phi = 0.88380000000000003; // dimensionless
        const double var_iK1_rectification__fac = 1.0648; // dimensionless
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // millimolar
        const double var_reversal_potentials__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_reversal_potentials__T = var_Environment__T; // kelvin
        const double var_reversal_potentials__F = var_Environment__F; // coulomb_per_mole
        const double var_reversal_potentials__K_o = var_Environment__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_iK1_rectification__E_K = var_IK1__E_K; // millivolt
        const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
        const double var_iK1_rectification__V = var_IK1__V; // millivolt
        const double var_iK1_rectification__KbMg = 0.45000000000000001 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 20.0); // millimolar
        const double var_iK1_rectification__Mg_Buf = 0.0356; // millimolar
        const double var_iK1_rectification__temp = 1.0 + (var_iK1_rectification__Mg_Buf / var_iK1_rectification__KbMg); // dimensionless
        const double var_iK1_rectification__KiMg = 2.7999999999999998 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 180.0); // millimolar
        const double var_iK1_rectification__SPM = 0.0014613; // millimolar
        const double var_iK1_rectification__Kd1SPM = 0.00069999999999999999 * exp((-((var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K)) + (8.0 * var_iK1_rectification__Mg_Buf))) / 4.7999999999999998); // millimolar
        const double var_iK1_rectification__rec1 = (var_iK1_rectification__temp * var_iK1_rectification__temp) / ((var_iK1_rectification__SPM / var_iK1_rectification__Kd1SPM) + (var_iK1_rectification__Mg_Buf / var_iK1_rectification__KiMg) + (var_iK1_rectification__temp * var_iK1_rectification__temp * var_iK1_rectification__temp)); // dimensionless
        const double var_iK1_rectification__Kd2SPM = 0.040000000000000001 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 9.0999999999999996); // millimolar
        const double var_iK1_rectification__rec2 = 1.0 / (1.0 + (var_iK1_rectification__SPM / var_iK1_rectification__Kd2SPM)); // dimensionless
        const double var_iK1_rectification__xK1_inf = (var_iK1_rectification__phi * var_iK1_rectification__rec1) + ((1.0 - var_iK1_rectification__phi) * var_iK1_rectification__rec2); // dimensionless
        const double var_IK1__xK1_inf = var_iK1_rectification__xK1_inf; // dimensionless
        const double var_IK1__T = var_Environment__T; // kelvin
        const double var_IK1__K_o = var_Environment__K_o; // millimolar
        const double var_IK1__g_K1_0 = 0.68210000000000004; // microS_per_nanoF
        const double var_IK1__i_K1 = var_IK1__g_K1_0 * ((var_IK1__T / 35.0) - (55.0 / 7.0)) * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__xK1_inf * (var_IK1__V - var_IK1__E_K); // nanoA_per_nanoF
        const double var_cell__i_K1 = var_IK1__i_K1; // nanoA_per_nanoF
        const double var_Ito__r = var_chaste_interface__ito_r_gate__r; // dimensionless
        const double var_Ito__s = var_chaste_interface__ito_s_gate__s; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // millivolt
        const double var_Ito__g_to = 0.20000000000000001; // microS_per_nanoF
        const double var_Ito__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Ito__i_to = var_Ito__g_to * var_Ito__r * var_Ito__s * (var_Ito__V - var_Ito__E_K); // nanoA_per_nanoF
        const double var_cell__i_to = var_Ito__i_to; // nanoA_per_nanoF
        const double var_IKr__K_o = var_Environment__K_o; // millimolar
        const double var_IKr__g_Kr_0 = 0.024; // microS_per_nanoF
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKr__Or4 = var_chaste_interface__iKr_Markov__Or4; // dimensionless
        const double var_IKr__T = var_Environment__T; // kelvin
        const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKr__i_Kr = var_IKr__g_Kr_0 * ((var_IKr__T / 35.0) - (55.0 / 7.0)) * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__Or4 * (var_IKr__V - var_IKr__E_K); // nanoA_per_nanoF
        const double var_cell__i_Kr = var_IKr__i_Kr; // nanoA_per_nanoF
        const double var_IKs__g_Ks = 0.039199999999999999; // microS_per_nanoF
        const double var_IKs__Xs = var_chaste_interface__iKs_Xs_gate__Xs; // dimensionless
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_IKs__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__i_Ks = var_IKs__g_Ks * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // nanoA_per_nanoF
        const double var_cell__i_Ks = var_IKs__i_Ks; // nanoA_per_nanoF
        const double var_ICaL__T = var_Environment__T; // kelvin
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__f2 = var_chaste_interface__iCaL_f2_gate__f2; // dimensionless
        const double var_ICaL__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_ICaL__f = var_chaste_interface__iCaL_f_gate__f; // dimensionless
        const double var_ICaL__z = 2.0; // dimensionless
        const double var_ICaL__d = var_chaste_interface__iCaL_d_gate__d; // dimensionless
        const double var_ICaL__F = var_Environment__F; // coulomb_per_mole
        const double var_ICaL__g_CaL = 2.0000000000000002e-05; // litre_per_farad_millisecond
        const double var_ICaL__fCass = var_chaste_interface__iCaL_fCass_gate__fCass; // dimensionless
        const double var_ICaL__Ca_ss = var_chaste_interface__Ca__Ca_ss; // millimolar
        const double var_ICaL__i_CaL = (((var_ICaL__g_CaL * var_ICaL__d * var_ICaL__f * var_ICaL__f2 * var_ICaL__fCass * pow(var_ICaL__z, 2.0) * (var_ICaL__V - 15.0) * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T)) * ((0.25 * var_ICaL__Ca_ss * exp((2.0 * (var_ICaL__V - 15.0) * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - var_ICaL__Ca_o)) / (exp((2.0 * (var_ICaL__V - 15.0) * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // nanoA_per_nanoF
        const double var_cell__i_CaL = var_ICaL__i_CaL; // nanoA_per_nanoF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_INaK__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_INaK__P_NaK = 1.2969999999999999; // nanoA_per_nanoF
        const double var_INaK__F = var_Environment__F; // coulomb_per_mole
        const double var_INaK__T = var_Environment__T; // kelvin
        const double var_INaK__K_o = var_Environment__K_o; // millimolar
        const double var_INaK__K_mNa = 40.0; // millimolar
        const double var_INaK__K_mk = 1.0; // millimolar
        const double var_INaK__i_NaK = ((((var_INaK__P_NaK * var_INaK__K_o) / (var_INaK__K_o + var_INaK__K_mk)) * var_INaK__Na_i) / (var_INaK__Na_i + var_INaK__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.035299999999999998 * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // nanoA_per_nanoF
        const double var_cell__i_NaK = var_INaK__i_NaK; // nanoA_per_nanoF
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_INa__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_INa__g_Na = 11.0; // microS_per_nanoF
        const double var_INa__m = var_chaste_interface__iNa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__iNa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__iNa_h_gate__h; // dimensionless
        const double var_INa__i_Na = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__V - var_INa__E_Na); // nanoA_per_nanoF
        const double var_cell__i_Na = var_INa__i_Na; // nanoA_per_nanoF
        const double var_INab__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_INab__g_bna = 0.00029; // microS_per_nanoF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_b_Na = var_INab__g_bna * (var_INab__V - var_INab__E_Na); // nanoA_per_nanoF
        const double var_cell__i_b_Na = var_INab__i_b_Na; // nanoA_per_nanoF
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__Km_Ca = 1.3799999999999999; // millimolar
        const double var_INaCa__T = var_Environment__T; // kelvin
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_INaCa__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_INaCa__Na_o = var_Environment__Na_o; // millimolar
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_INaCa__alpha = 2.5; // dimensionless
        const double var_INaCa__K_NaCa = 200.0; // nanoA_per_nanoF
        const double var_INaCa__F = var_Environment__F; // coulomb_per_mole
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_INaCa__Km_Nai = 87.5; // millimolar
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_INaCa__i_NaCa = (var_INaCa__K_NaCa * ((exp((var_INaCa__gamma * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) - (exp(((var_INaCa__gamma - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i * var_INaCa__alpha))) / ((pow(var_INaCa__Km_Nai, 3.0) + pow(var_INaCa__Na_o, 3.0)) * (var_INaCa__Km_Ca + var_INaCa__Ca_o) * (1.0 + (var_INaCa__K_sat * exp(((var_INaCa__gamma - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))))); // nanoA_per_nanoF
        const double var_cell__i_NaCa = var_INaCa__i_NaCa; // nanoA_per_nanoF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_ICab__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_ICab__g_bca = 0.00047360000000000002; // microS_per_nanoF
        const double var_ICab__i_b_Ca = var_ICab__g_bca * (var_ICab__V - var_ICab__E_Ca); // nanoA_per_nanoF
        const double var_cell__i_b_Ca = var_ICab__i_b_Ca; // nanoA_per_nanoF
        const double var_IpK__V = var_chaste_interface__cell__V; // millivolt
        const double var_IpK__g_pK = 0.0097300000000000008; // microS_per_nanoF
        const double var_IpK__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IpK__i_p_K = (var_IpK__g_pK * (var_IpK__V - var_IpK__E_K)) / (1.0 + exp((25.0 - var_IpK__V) / 5.9800000000000004)); // nanoA_per_nanoF
        const double var_cell__i_p_K = var_IpK__i_p_K; // nanoA_per_nanoF
        const double var_IpCa__g_pCa = 0.061899999999999997; // nanoA_per_nanoF
        const double var_IpCa__K_pCa = 0.00050000000000000001; // millimolar
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_IpCa__i_p_Ca = (var_IpCa__g_pCa * var_IpCa__Ca_i) / (var_IpCa__Ca_i + var_IpCa__K_pCa); // nanoA_per_nanoF
        const double var_cell__i_p_Ca = var_IpCa__i_p_Ca; // nanoA_per_nanoF
        const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_chaste_interface__cell__i_Stim = 0.0;
        const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // nanoA_per_nanoF
        const double var_cell__i_tot = var_cell__i_K1 + var_cell__i_to + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_CaL + var_cell__i_NaK + var_cell__i_Na + var_cell__i_b_Na + var_cell__i_NaCa + var_cell__i_b_Ca + var_cell__i_p_K + var_cell__i_p_Ca + var_cell__i_Stim; // nanoA_per_nanoF
        const double var_chaste_interface__cell__i_tot = var_cell__i_tot; // nanoA_per_nanoF
        const double var_chaste_interface__i_ionic = (var_chaste_interface__cell__i_tot) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        if (made_new_cvode_vector)
        {
            DeleteVector(rY);
        }
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Dynamicfink_noble_giles_model_2008FromCellMLCvode::EvaluateYDerivatives(double var_chaste_interface__Environment__time, const N_Vector rY, N_Vector rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.45
        double var_chaste_interface__iKr_Markov__Cr1 = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.9786
        double var_chaste_interface__iKr_Markov__Cr2 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0031
        double var_chaste_interface__iKr_Markov__Cr3 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.0029
        double var_chaste_interface__iKr_Markov__Or4 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.014
        double var_chaste_interface__iKr_Markov__Ir5 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0014
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr3 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BIr5 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKs_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00303
        double var_chaste_interface__ito_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__ito_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.11e-8
        double var_chaste_interface__iNa_m_gate__m = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00132
        double var_chaste_interface__iNa_h_gate__h = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.7768
        double var_chaste_interface__iNa_j_gate__j = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7766
        double var_chaste_interface__iCaL_d_gate__d = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.06e-6
        double var_chaste_interface__iCaL_f_gate__f = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__iCaL_f2_gate__f2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9995
        double var_chaste_interface__iCaL_fCass_gate__fCass = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 1.092e-4
        double var_chaste_interface__Ca__Ca_SR = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 2.7656
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 1.893e-4
        double var_chaste_interface__Irel__R_prime = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.9864
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 7.940167
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 141.0167
        
        
        // Mathematics
        double d_dt_chaste_interface__cell__V;
        const double var_Environment__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_Environment__T = 310.0; // kelvin
        const double var_Environment__F = 96485.341499999995; // coulomb_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // millimolar
        const double var_Environment__Ca_o = 2.0; // millimolar
        const double var_Environment__Na_o = 140.0; // millimolar
        const double var_cell__Cm = 0.115; // nanoF
        const double var_cell__Vol_c = 0.016403999999999998; // nanolitre
        const double var_iK1_rectification__phi = 0.88380000000000003; // dimensionless
        const double var_iK1_rectification__fac = 1.0648; // dimensionless
        const double var_reversal_potentials__K_i = var_chaste_interface__K__K_i; // millimolar
        const double var_reversal_potentials__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_reversal_potentials__T = var_Environment__T; // kelvin
        const double var_reversal_potentials__F = var_Environment__F; // coulomb_per_mole
        const double var_reversal_potentials__K_o = var_Environment__K_o; // millimolar
        const double var_reversal_potentials__E_K = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__K_o / var_reversal_potentials__K_i); // millivolt
        const double var_IK1__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_iK1_rectification__E_K = var_IK1__E_K; // millivolt
        const double var_IK1__V = var_chaste_interface__cell__V; // millivolt
        const double var_iK1_rectification__V = var_IK1__V; // millivolt
        const double var_iK1_rectification__KbMg = 0.45000000000000001 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 20.0); // millimolar
        const double var_iK1_rectification__Mg_Buf = 0.0356; // millimolar
        const double var_iK1_rectification__temp = 1.0 + (var_iK1_rectification__Mg_Buf / var_iK1_rectification__KbMg); // dimensionless
        const double var_iK1_rectification__KiMg = 2.7999999999999998 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 180.0); // millimolar
        const double var_iK1_rectification__SPM = 0.0014613; // millimolar
        const double var_iK1_rectification__Kd1SPM = 0.00069999999999999999 * exp((-((var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K)) + (8.0 * var_iK1_rectification__Mg_Buf))) / 4.7999999999999998); // millimolar
        const double var_iK1_rectification__rec1 = (var_iK1_rectification__temp * var_iK1_rectification__temp) / ((var_iK1_rectification__SPM / var_iK1_rectification__Kd1SPM) + (var_iK1_rectification__Mg_Buf / var_iK1_rectification__KiMg) + (var_iK1_rectification__temp * var_iK1_rectification__temp * var_iK1_rectification__temp)); // dimensionless
        const double var_iK1_rectification__Kd2SPM = 0.040000000000000001 * exp((-(var_iK1_rectification__V - (var_iK1_rectification__fac * var_iK1_rectification__E_K))) / 9.0999999999999996); // millimolar
        const double var_iK1_rectification__rec2 = 1.0 / (1.0 + (var_iK1_rectification__SPM / var_iK1_rectification__Kd2SPM)); // dimensionless
        const double var_iK1_rectification__xK1_inf = (var_iK1_rectification__phi * var_iK1_rectification__rec1) + ((1.0 - var_iK1_rectification__phi) * var_iK1_rectification__rec2); // dimensionless
        const double var_IK1__xK1_inf = var_iK1_rectification__xK1_inf; // dimensionless
        const double var_IK1__T = var_Environment__T; // kelvin
        const double var_IK1__K_o = var_Environment__K_o; // millimolar
        const double var_IK1__g_K1_0 = 0.68210000000000004; // microS_per_nanoF
        const double var_IK1__i_K1 = var_IK1__g_K1_0 * ((var_IK1__T / 35.0) - (55.0 / 7.0)) * sqrt(var_IK1__K_o / 5.4000000000000004) * var_IK1__xK1_inf * (var_IK1__V - var_IK1__E_K); // nanoA_per_nanoF
        const double var_Ito__r = var_chaste_interface__ito_r_gate__r; // dimensionless
        const double var_Ito__s = var_chaste_interface__ito_s_gate__s; // dimensionless
        const double var_Ito__V = var_chaste_interface__cell__V; // millivolt
        const double var_Ito__g_to = 0.20000000000000001; // microS_per_nanoF
        const double var_Ito__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_Ito__i_to = var_Ito__g_to * var_Ito__r * var_Ito__s * (var_Ito__V - var_Ito__E_K); // nanoA_per_nanoF
        const double var_IKr__K_o = var_Environment__K_o; // millimolar
        const double var_IKr__g_Kr_0 = 0.024; // microS_per_nanoF
        const double var_IKr__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKr__Or4 = var_chaste_interface__iKr_Markov__Or4; // dimensionless
        const double var_IKr__T = var_Environment__T; // kelvin
        const double var_IKr__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IKr__i_Kr = var_IKr__g_Kr_0 * ((var_IKr__T / 35.0) - (55.0 / 7.0)) * sqrt(var_IKr__K_o / 5.4000000000000004) * var_IKr__Or4 * (var_IKr__V - var_IKr__E_K); // nanoA_per_nanoF
        const double var_IKs__g_Ks = 0.039199999999999999; // microS_per_nanoF
        const double var_IKs__Xs = var_chaste_interface__iKs_Xs_gate__Xs; // dimensionless
        const double var_reversal_potentials__Na_o = var_Environment__Na_o; // millimolar
        const double var_reversal_potentials__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_reversal_potentials__E_Ks = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log((var_reversal_potentials__K_o + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_o)) / (var_reversal_potentials__K_i + (var_reversal_potentials__P_kna * var_reversal_potentials__Na_i))); // millivolt
        const double var_IKs__E_Ks = var_reversal_potentials__E_Ks; // millivolt
        const double var_IKs__V = var_chaste_interface__cell__V; // millivolt
        const double var_IKs__i_Ks = var_IKs__g_Ks * pow(var_IKs__Xs, 2.0) * (var_IKs__V - var_IKs__E_Ks); // nanoA_per_nanoF
        const double var_ICaL__T = var_Environment__T; // kelvin
        const double var_ICaL__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_ICaL__V = var_chaste_interface__cell__V; // millivolt
        const double var_ICaL__f2 = var_chaste_interface__iCaL_f2_gate__f2; // dimensionless
        const double var_ICaL__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_ICaL__f = var_chaste_interface__iCaL_f_gate__f; // dimensionless
        const double var_ICaL__z = 2.0; // dimensionless
        const double var_ICaL__d = var_chaste_interface__iCaL_d_gate__d; // dimensionless
        const double var_ICaL__F = var_Environment__F; // coulomb_per_mole
        const double var_ICaL__g_CaL = 2.0000000000000002e-05; // litre_per_farad_millisecond
        const double var_ICaL__fCass = var_chaste_interface__iCaL_fCass_gate__fCass; // dimensionless
        const double var_ICaL__Ca_ss = var_chaste_interface__Ca__Ca_ss; // millimolar
        const double var_ICaL__i_CaL = (((var_ICaL__g_CaL * var_ICaL__d * var_ICaL__f * var_ICaL__f2 * var_ICaL__fCass * pow(var_ICaL__z, 2.0) * (var_ICaL__V - 15.0) * pow(var_ICaL__F, 2.0)) / (var_ICaL__R * var_ICaL__T)) * ((0.25 * var_ICaL__Ca_ss * exp((2.0 * (var_ICaL__V - 15.0) * var_ICaL__F) / (var_ICaL__R * var_ICaL__T))) - var_ICaL__Ca_o)) / (exp((2.0 * (var_ICaL__V - 15.0) * var_ICaL__F) / (var_ICaL__R * var_ICaL__T)) - 1.0); // nanoA_per_nanoF
        const double var_INaK__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaK__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_INaK__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_INaK__P_NaK = 1.2969999999999999; // nanoA_per_nanoF
        const double var_INaK__F = var_Environment__F; // coulomb_per_mole
        const double var_INaK__T = var_Environment__T; // kelvin
        const double var_INaK__K_o = var_Environment__K_o; // millimolar
        const double var_INaK__K_mNa = 40.0; // millimolar
        const double var_INaK__K_mk = 1.0; // millimolar
        const double var_INaK__i_NaK = ((((var_INaK__P_NaK * var_INaK__K_o) / (var_INaK__K_o + var_INaK__K_mk)) * var_INaK__Na_i) / (var_INaK__Na_i + var_INaK__K_mNa)) / (1.0 + (0.1245 * exp(((-0.10000000000000001) * var_INaK__V * var_INaK__F) / (var_INaK__R * var_INaK__T))) + (0.035299999999999998 * exp(((-var_INaK__V) * var_INaK__F) / (var_INaK__R * var_INaK__T)))); // nanoA_per_nanoF
        const double var_INa__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__E_Na = ((var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Na_o / var_reversal_potentials__Na_i); // millivolt
        const double var_INa__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_INa__g_Na = 11.0; // microS_per_nanoF
        const double var_INa__m = var_chaste_interface__iNa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__iNa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__iNa_h_gate__h; // dimensionless
        const double var_INa__i_Na = var_INa__g_Na * pow(var_INa__m, 3.0) * var_INa__h * var_INa__j * (var_INa__V - var_INa__E_Na); // nanoA_per_nanoF
        const double var_INab__E_Na = var_reversal_potentials__E_Na; // millivolt
        const double var_INab__g_bna = 0.00029; // microS_per_nanoF
        const double var_INab__V = var_chaste_interface__cell__V; // millivolt
        const double var_INab__i_b_Na = var_INab__g_bna * (var_INab__V - var_INab__E_Na); // nanoA_per_nanoF
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__Km_Ca = 1.3799999999999999; // millimolar
        const double var_INaCa__T = var_Environment__T; // kelvin
        const double var_INaCa__V = var_chaste_interface__cell__V; // millivolt
        const double var_INaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_INaCa__R = var_Environment__R; // millijoule_per_mole_kelvin
        const double var_INaCa__Na_o = var_Environment__Na_o; // millimolar
        const double var_INaCa__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_INaCa__alpha = 2.5; // dimensionless
        const double var_INaCa__K_NaCa = 200.0; // nanoA_per_nanoF
        const double var_INaCa__F = var_Environment__F; // coulomb_per_mole
        const double var_INaCa__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_INaCa__Km_Nai = 87.5; // millimolar
        const double var_INaCa__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_INaCa__i_NaCa = (var_INaCa__K_NaCa * ((exp((var_INaCa__gamma * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_i, 3.0) * var_INaCa__Ca_o) - (exp(((var_INaCa__gamma - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T)) * pow(var_INaCa__Na_o, 3.0) * var_INaCa__Ca_i * var_INaCa__alpha))) / ((pow(var_INaCa__Km_Nai, 3.0) + pow(var_INaCa__Na_o, 3.0)) * (var_INaCa__Km_Ca + var_INaCa__Ca_o) * (1.0 + (var_INaCa__K_sat * exp(((var_INaCa__gamma - 1.0) * var_INaCa__V * var_INaCa__F) / (var_INaCa__R * var_INaCa__T))))); // nanoA_per_nanoF
        const double var_ICab__V = var_chaste_interface__cell__V; // millivolt
        const double var_reversal_potentials__Ca_o = var_Environment__Ca_o; // millimolar
        const double var_reversal_potentials__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_reversal_potentials__E_Ca = ((0.5 * var_reversal_potentials__R * var_reversal_potentials__T) / var_reversal_potentials__F) * log(var_reversal_potentials__Ca_o / var_reversal_potentials__Ca_i); // millivolt
        const double var_ICab__E_Ca = var_reversal_potentials__E_Ca; // millivolt
        const double var_ICab__g_bca = 0.00047360000000000002; // microS_per_nanoF
        const double var_ICab__i_b_Ca = var_ICab__g_bca * (var_ICab__V - var_ICab__E_Ca); // nanoA_per_nanoF
        const double var_IpK__V = var_chaste_interface__cell__V; // millivolt
        const double var_IpK__g_pK = 0.0097300000000000008; // microS_per_nanoF
        const double var_IpK__E_K = var_reversal_potentials__E_K; // millivolt
        const double var_IpK__i_p_K = (var_IpK__g_pK * (var_IpK__V - var_IpK__E_K)) / (1.0 + exp((25.0 - var_IpK__V) / 5.9800000000000004)); // nanoA_per_nanoF
        const double var_IpCa__g_pCa = 0.061899999999999997; // nanoA_per_nanoF
        const double var_IpCa__K_pCa = 0.00050000000000000001; // millimolar
        const double var_IpCa__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_IpCa__i_p_Ca = (var_IpCa__g_pCa * var_IpCa__Ca_i) / (var_IpCa__Ca_i + var_IpCa__K_pCa); // nanoA_per_nanoF
        const double var_chaste_interface__cell__i_Stim = GetIntracellularAreaStimulus(var_chaste_interface__Environment__time);
        const double var_iKr_Markov__T_Base = 310.0; // kelvin
        const double var_iKr_Markov__T = var_IKr__T; // kelvin
        const double var_iKr_Markov__V = var_IKr__V; // millivolt
        const double var_iKr_Markov__beta_xr1 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(13.688000000000001 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * (((-0.060299999999999999) * var_iKr_Markov__V) - 15.707000000000001))); // per_millisecond
        const double var_IKr__Cr1 = var_chaste_interface__iKr_Markov__Cr1; // dimensionless
        const double var_iKr_Markov__Cr1 = var_IKr__Cr1; // dimensionless
        const double var_IKr__Cr2 = var_chaste_interface__iKr_Markov__Cr2; // dimensionless
        const double var_iKr_Markov__Cr2 = var_IKr__Cr2; // dimensionless
        const double var_iKr_Markov__alpha_xr1 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(24.335000000000001 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * ((0.0112 * var_iKr_Markov__V) - 25.914000000000001))); // per_millisecond
        const double var_iKr_Markov__d_Cr1_d_Environment__time = (var_iKr_Markov__beta_xr1 * var_iKr_Markov__Cr2) - (var_iKr_Markov__alpha_xr1 * var_iKr_Markov__Cr1); // per_millisecond
        const double var_IKr__iKr_Markov__d_Cr1_d_Environment__time = var_iKr_Markov__d_Cr1_d_Environment__time; // per_millisecond
        const double var_IKr__Cr3 = var_chaste_interface__iKr_Markov__Cr3; // dimensionless
        const double var_iKr_Markov__Cr3 = var_IKr__Cr3; // dimensionless
        const double var_iKr_Markov__beta_xr2 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(13.193 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * ((0.0 * var_iKr_Markov__V) - 15.707000000000001))); // per_millisecond
        const double var_iKr_Markov__alpha_xr2 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(22.745999999999999 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * ((0.0 * var_iKr_Markov__V) - 25.914000000000001))); // per_millisecond
        const double var_iKr_Markov__d_Cr2_d_Environment__time = ((var_iKr_Markov__alpha_xr1 * var_iKr_Markov__Cr1) + (var_iKr_Markov__beta_xr2 * var_iKr_Markov__Cr3)) - ((var_iKr_Markov__alpha_xr2 + var_iKr_Markov__beta_xr1) * var_iKr_Markov__Cr2); // per_millisecond
        const double var_IKr__iKr_Markov__d_Cr2_d_Environment__time = var_iKr_Markov__d_Cr2_d_Environment__time; // per_millisecond
        const double var_iKr_Markov__alpha_xr3 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(22.097999999999999 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * ((0.036499999999999998 * var_iKr_Markov__V) - 25.914000000000001))); // per_millisecond
        const double var_iKr_Markov__beta_xr3 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(7.3129999999999997 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * (((-0.039899999999999998) * var_iKr_Markov__V) - 15.707000000000001))); // per_millisecond
        const double var_iKr_Markov__Or4 = var_IKr__Or4; // dimensionless
        const double var_iKr_Markov__d_Cr3_d_Environment__time = ((var_iKr_Markov__alpha_xr2 * var_iKr_Markov__Cr2) + (var_iKr_Markov__beta_xr3 * var_iKr_Markov__Or4)) - ((var_iKr_Markov__alpha_xr3 + var_iKr_Markov__beta_xr2) * var_iKr_Markov__Cr3); // per_millisecond
        const double var_IKr__iKr_Markov__d_Cr3_d_Environment__time = var_iKr_Markov__d_Cr3_d_Environment__time; // per_millisecond
        const double var_IKr__Ir5 = var_chaste_interface__iKr_Markov__Ir5; // dimensionless
        const double var_iKr_Markov__Ir5 = var_IKr__Ir5; // dimensionless
        const double var_iKr_Markov__K_o = var_IKr__K_o; // millimolar
        const double var_iKr_Markov__alpha_xr4 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(30.015999999999998 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * ((0.0223 * var_iKr_Markov__V) - 30.888000000000002))) * pow(5.4000000000000004 / var_iKr_Markov__K_o, 0.40000000000000002); // per_millisecond
        const double var_iKr_Markov_Sotalol_block__kDiss = 0.00125; // per_millisecond
        const double var_IKr__BOr4 = var_chaste_interface__iKr_Markov_Sotalol_block__BOr4; // dimensionless
        const double var_iKr_Markov__BOr4 = var_IKr__BOr4; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BOr4 = var_iKr_Markov__BOr4; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BtoO = var_iKr_Markov_Sotalol_block__BOr4 * var_iKr_Markov_Sotalol_block__kDiss; // per_millisecond
        const double var_iKr_Markov__BtoO = var_iKr_Markov_Sotalol_block__BtoO; // per_millisecond
        const double var_IKr__O = var_chaste_interface__iKr_Markov__Or4; // dimensionless
        const double var_iKr_Markov__O = var_IKr__O; // dimensionless
        const double var_iKr_Markov_Sotalol_block__O = var_iKr_Markov__O; // dimensionless
        const double var_iKr_Markov_Sotalol_block__Sotalol_mM = 0.0; // millimolar
        const double var_iKr_Markov_Sotalol_block__kBinding = 0.0050000000000000001; // per_millimolar_per_millisecond
        const double var_iKr_Markov_Sotalol_block__OtoB = var_iKr_Markov_Sotalol_block__O * var_iKr_Markov_Sotalol_block__Sotalol_mM * var_iKr_Markov_Sotalol_block__kBinding; // per_millisecond
        const double var_iKr_Markov__OtoB = var_iKr_Markov_Sotalol_block__OtoB; // per_millisecond
        const double var_iKr_Markov__beta_xr4 = ((1.0 * var_iKr_Markov__T) / var_iKr_Markov__T_Base) * exp(30.061 + ((var_iKr_Markov__T_Base / var_iKr_Markov__T) * (((-0.031199999999999999) * var_iKr_Markov__V) - 33.243000000000002))); // per_millisecond
        const double var_iKr_Markov__d_Or4_d_Environment__time = ((((var_iKr_Markov__alpha_xr3 * var_iKr_Markov__Cr3) + (var_iKr_Markov__beta_xr4 * var_iKr_Markov__Ir5)) - ((var_iKr_Markov__alpha_xr4 + var_iKr_Markov__beta_xr3) * var_iKr_Markov__Or4)) - var_iKr_Markov__OtoB) + var_iKr_Markov__BtoO; // per_millisecond
        const double var_IKr__iKr_Markov__d_Or4_d_Environment__time = var_iKr_Markov__d_Or4_d_Environment__time; // per_millisecond
        const double var_iKr_Markov__d_Ir5_d_Environment__time = (var_iKr_Markov__alpha_xr4 * var_iKr_Markov__Or4) - (var_iKr_Markov__beta_xr4 * var_iKr_Markov__Ir5); // per_millisecond
        const double var_IKr__iKr_Markov__d_Ir5_d_Environment__time = var_iKr_Markov__d_Ir5_d_Environment__time; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__beta_xr1 = var_iKr_Markov__beta_xr1; // per_millisecond
        const double var_IKr__BCr1 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr1; // dimensionless
        const double var_iKr_Markov__BCr1 = var_IKr__BCr1; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr1 = var_iKr_Markov__BCr1; // dimensionless
        const double var_iKr_Markov_Sotalol_block__alpha_xr1 = var_iKr_Markov__alpha_xr1; // per_millisecond
        const double var_IKr__BCr2 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr2; // dimensionless
        const double var_iKr_Markov__BCr2 = var_IKr__BCr2; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr2 = var_iKr_Markov__BCr2; // dimensionless
        const double var_iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time = (var_iKr_Markov_Sotalol_block__beta_xr1 * var_iKr_Markov_Sotalol_block__BCr2) - (var_iKr_Markov_Sotalol_block__alpha_xr1 * var_iKr_Markov_Sotalol_block__BCr1); // per_millisecond
        const double var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time = var_iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time; // per_millisecond
        const double var_IKr__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time = var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__alpha_xr2 = var_iKr_Markov__alpha_xr2; // per_millisecond
        const double var_IKr__BCr3 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr3; // dimensionless
        const double var_iKr_Markov__BCr3 = var_IKr__BCr3; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr3 = var_iKr_Markov__BCr3; // dimensionless
        const double var_iKr_Markov_Sotalol_block__beta_xr2 = var_iKr_Markov__beta_xr2; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time = ((var_iKr_Markov_Sotalol_block__alpha_xr1 * var_iKr_Markov_Sotalol_block__BCr1) + (var_iKr_Markov_Sotalol_block__beta_xr2 * var_iKr_Markov_Sotalol_block__BCr3)) - ((var_iKr_Markov_Sotalol_block__alpha_xr2 + var_iKr_Markov_Sotalol_block__beta_xr1) * var_iKr_Markov_Sotalol_block__BCr2); // per_millisecond
        const double var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time = var_iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time; // per_millisecond
        const double var_IKr__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time = var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__beta_xr3 = var_iKr_Markov__beta_xr3; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__alpha_xr3 = var_iKr_Markov__alpha_xr3; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time = ((var_iKr_Markov_Sotalol_block__alpha_xr2 * var_iKr_Markov_Sotalol_block__BCr2) + (var_iKr_Markov_Sotalol_block__beta_xr3 * var_iKr_Markov_Sotalol_block__BOr4)) - ((var_iKr_Markov_Sotalol_block__alpha_xr3 + var_iKr_Markov_Sotalol_block__beta_xr2) * var_iKr_Markov_Sotalol_block__BCr3); // per_millisecond
        const double var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time = var_iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time; // per_millisecond
        const double var_IKr__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time = var_iKr_Markov__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__alpha_xr4 = var_iKr_Markov__alpha_xr4; // per_millisecond
        const double var_IKr__BIr5 = var_chaste_interface__iKr_Markov_Sotalol_block__BIr5; // dimensionless
        const double var_iKr_Markov__BIr5 = var_IKr__BIr5; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BIr5 = var_iKr_Markov__BIr5; // dimensionless
        const double var_iKr_Markov_Sotalol_block__beta_xr4 = var_iKr_Markov__beta_xr4; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time = ((((var_iKr_Markov_Sotalol_block__alpha_xr3 * var_iKr_Markov_Sotalol_block__BCr3) + (var_iKr_Markov_Sotalol_block__beta_xr4 * var_iKr_Markov_Sotalol_block__BIr5)) - ((var_iKr_Markov_Sotalol_block__alpha_xr4 + var_iKr_Markov_Sotalol_block__beta_xr3) * var_iKr_Markov_Sotalol_block__BOr4)) + var_iKr_Markov_Sotalol_block__OtoB) - var_iKr_Markov_Sotalol_block__BtoO; // per_millisecond
        const double var_iKr_Markov__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time = var_iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time; // per_millisecond
        const double var_IKr__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time = var_iKr_Markov__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time; // per_millisecond
        const double var_iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time = (var_iKr_Markov_Sotalol_block__alpha_xr4 * var_iKr_Markov_Sotalol_block__BOr4) - (var_iKr_Markov_Sotalol_block__beta_xr4 * var_iKr_Markov_Sotalol_block__BIr5); // per_millisecond
        const double var_iKr_Markov__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time = var_iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time; // per_millisecond
        const double var_IKr__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time = var_iKr_Markov__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time; // per_millisecond
        const double var_iKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_iKs_Xs_gate__V = var_IKs__V; // millivolt
        const double var_iKs_Xs_gate__alpha_xs = 1400.0 / sqrt(1.0 + exp((5.0 - var_iKs_Xs_gate__V) / 6.0)); // dimensionless
        const double var_iKs_Xs_gate__beta_xs = 1.0 / (1.0 + exp((var_iKs_Xs_gate__V - 35.0) / 15.0)); // dimensionless
        const double var_iKs_Xs_gate__tau_xs = (1.0 * var_iKs_Xs_gate__alpha_xs * var_iKs_Xs_gate__beta_xs) + 80.0; // millisecond
        const double var_iKs_Xs_gate__xs_inf = 1.0 / (1.0 + exp(((-5.0) - var_iKs_Xs_gate__V) / 14.0)); // dimensionless
        const double var_iKs_Xs_gate__d_Xs_d_Environment__time = (var_iKs_Xs_gate__xs_inf - var_iKs_Xs_gate__Xs) / var_iKs_Xs_gate__tau_xs; // per_millisecond
        const double var_IKs__iKs_Xs_gate__d_Xs_d_Environment__time = var_iKs_Xs_gate__d_Xs_d_Environment__time; // per_millisecond
        const double var_ito_s_gate__V = var_Ito__V; // millivolt
        const double var_ito_s_gate__tau_s = (85.0 * exp((-pow(var_ito_s_gate__V + 45.0, 2.0)) / 320.0)) + (5.0 / (1.0 + exp((var_ito_s_gate__V - 20.0) / 5.0))) + 3.0; // millisecond
        const double var_ito_s_gate__s_inf = 1.0 / (1.0 + exp((var_ito_s_gate__V + 20.0) / 5.0)); // dimensionless
        const double var_ito_s_gate__s = var_Ito__s; // dimensionless
        const double var_ito_s_gate__d_s_d_Environment__time = (var_ito_s_gate__s_inf - var_ito_s_gate__s) / var_ito_s_gate__tau_s; // per_millisecond
        const double var_Ito__ito_s_gate__d_s_d_Environment__time = var_ito_s_gate__d_s_d_Environment__time; // per_millisecond
        const double var_ito_r_gate__V = var_Ito__V; // millivolt
        const double var_ito_r_gate__r_inf = 1.0 / (1.0 + exp((20.0 - var_ito_r_gate__V) / 6.0)); // dimensionless
        const double var_ito_r_gate__tau_r = (9.5 * exp((-pow(var_ito_r_gate__V + 40.0, 2.0)) / 1800.0)) + 0.80000000000000004; // millisecond
        const double var_ito_r_gate__r = var_Ito__r; // dimensionless
        const double var_ito_r_gate__d_r_d_Environment__time = (var_ito_r_gate__r_inf - var_ito_r_gate__r) / var_ito_r_gate__tau_r; // per_millisecond
        const double var_Ito__ito_r_gate__d_r_d_Environment__time = var_ito_r_gate__d_r_d_Environment__time; // per_millisecond
        const double var_INa__shift_INa_inact = 0.0; // millivolt
        const double var_iNa_m_gate__m = var_INa__m; // dimensionless
        const double var_iNa_m_gate__V = var_INa__V; // millivolt
        const double var_iNa_m_gate__alpha_m = 1.0 / (1.0 + exp(((-60.0) - var_iNa_m_gate__V) / 5.0)); // dimensionless
        const double var_iNa_m_gate__beta_m = (0.10000000000000001 / (1.0 + exp((var_iNa_m_gate__V + 35.0) / 5.0))) + (0.10000000000000001 / (1.0 + exp((var_iNa_m_gate__V - 50.0) / 200.0))); // dimensionless
        const double var_iNa_m_gate__tau_m = 1.0 * var_iNa_m_gate__alpha_m * var_iNa_m_gate__beta_m; // millisecond
        const double var_iNa_m_gate__m_inf = 1.0 / pow(1.0 + exp(((-56.859999999999999) - var_iNa_m_gate__V) / 9.0299999999999994), 2.0); // dimensionless
        const double var_iNa_m_gate__d_m_d_Environment__time = (var_iNa_m_gate__m_inf - var_iNa_m_gate__m) / var_iNa_m_gate__tau_m; // per_millisecond
        const double var_INa__iNa_m_gate__d_m_d_Environment__time = var_iNa_m_gate__d_m_d_Environment__time; // per_millisecond
        const double var_iNa_h_gate__V = var_INa__V; // millivolt
        const double var_iNa_h_gate__shift_INa_inact = var_INa__shift_INa_inact; // millivolt
        const double var_iNa_h_gate__alpha_h = (var_iNa_h_gate__V < ((-40.0) + var_iNa_h_gate__shift_INa_inact)) ? (0.057000000000000002 * exp((-((var_iNa_h_gate__V + 80.0) - var_iNa_h_gate__shift_INa_inact)) / 6.7999999999999998)) : 0.0; // per_millisecond
        const double var_iNa_h_gate__beta_h = (var_iNa_h_gate__V < ((-40.0) + var_iNa_h_gate__shift_INa_inact)) ? ((2.7000000000000002 * exp(0.079000000000000001 * (var_iNa_h_gate__V - var_iNa_h_gate__shift_INa_inact))) + (310000.0 * exp(0.34849999999999998 * (var_iNa_h_gate__V - var_iNa_h_gate__shift_INa_inact)))) : (0.77000000000000002 / (0.13 * (1.0 + exp(((var_iNa_h_gate__V + 10.66) - var_iNa_h_gate__shift_INa_inact) / (-11.1))))); // per_millisecond
        const double var_iNa_h_gate__tau_h = 1.0 / (var_iNa_h_gate__alpha_h + var_iNa_h_gate__beta_h); // millisecond
        const double var_iNa_h_gate__h = var_INa__h; // dimensionless
        const double var_iNa_h_gate__h_inf = 1.0 / pow(1.0 + exp(((var_iNa_h_gate__V + 71.549999999999997) - var_iNa_h_gate__shift_INa_inact) / 7.4299999999999997), 2.0); // dimensionless
        const double var_iNa_h_gate__d_h_d_Environment__time = (var_iNa_h_gate__h_inf - var_iNa_h_gate__h) / var_iNa_h_gate__tau_h; // per_millisecond
        const double var_INa__iNa_h_gate__d_h_d_Environment__time = var_iNa_h_gate__d_h_d_Environment__time; // per_millisecond
        const double var_iNa_j_gate__shift_INa_inact = var_INa__shift_INa_inact; // millivolt
        const double var_iNa_j_gate__V = var_INa__V; // millivolt
        const double var_iNa_j_gate__beta_j = (var_iNa_j_gate__V < ((-40.0) + var_iNa_j_gate__shift_INa_inact)) ? ((0.024240000000000001 * exp((-0.01052) * (var_iNa_j_gate__V - var_iNa_j_gate__shift_INa_inact))) / (1.0 + exp((-0.13780000000000001) * ((var_iNa_j_gate__V + 40.140000000000001) - var_iNa_j_gate__shift_INa_inact)))) : ((0.59999999999999998 * exp(0.057000000000000002 * (var_iNa_j_gate__V - var_iNa_j_gate__shift_INa_inact))) / (1.0 + exp((-0.10000000000000001) * ((var_iNa_j_gate__V + 32.0) - var_iNa_j_gate__shift_INa_inact)))); // per_millisecond
        const double var_iNa_j_gate__alpha_j = (var_iNa_j_gate__V < ((-40.0) + var_iNa_j_gate__shift_INa_inact)) ? ((((((-25428.0) * exp(0.24440000000000001 * (var_iNa_j_gate__V - var_iNa_j_gate__shift_INa_inact))) - (6.9480000000000002e-06 * exp((-0.043909999999999998) * (var_iNa_j_gate__V - var_iNa_j_gate__shift_INa_inact)))) * (var_iNa_j_gate__V + 37.780000000000001)) / 1.0) / (1.0 + exp(0.311 * ((var_iNa_j_gate__V + 79.230000000000004) - var_iNa_j_gate__shift_INa_inact)))) : 0.0; // per_millisecond
        const double var_iNa_j_gate__tau_j = 1.0 / (var_iNa_j_gate__alpha_j + var_iNa_j_gate__beta_j); // millisecond
        const double var_iNa_j_gate__j = var_INa__j; // dimensionless
        const double var_iNa_j_gate__j_inf = 1.0 / pow(1.0 + exp(((var_iNa_j_gate__V + 71.549999999999997) - var_iNa_j_gate__shift_INa_inact) / 7.4299999999999997), 2.0); // dimensionless
        const double var_iNa_j_gate__d_j_d_Environment__time = (var_iNa_j_gate__j_inf - var_iNa_j_gate__j) / var_iNa_j_gate__tau_j; // per_millisecond
        const double var_INa__iNa_j_gate__d_j_d_Environment__time = var_iNa_j_gate__d_j_d_Environment__time; // per_millisecond
        const double var_iCaL_d_gate__V = var_ICaL__V; // millivolt
        const double var_iCaL_d_gate__d_inf_shift = 5.0; // millivolt
        const double var_iCaL_d_gate__d_inf = 1.0 / (1.0 + exp((var_iCaL_d_gate__d_inf_shift - var_iCaL_d_gate__V) / 7.5)); // dimensionless
        const double var_iCaL_d_gate__d = var_ICaL__d; // dimensionless
        const double var_iCaL_d_gate__beta_d = 1.3999999999999999 / (1.0 + exp((var_iCaL_d_gate__V + 5.0) / 5.0)); // dimensionless
        const double var_iCaL_d_gate__gamma_d = 1.0 / (1.0 + exp((50.0 - var_iCaL_d_gate__V) / 20.0)); // millisecond
        const double var_iCaL_d_gate__alpha_d = (1.3999999999999999 / (1.0 + exp(((-35.0) - var_iCaL_d_gate__V) / 13.0))) + 0.25; // dimensionless
        const double var_iCaL_d_gate__tau_d = (1.0 * var_iCaL_d_gate__alpha_d * var_iCaL_d_gate__beta_d) + var_iCaL_d_gate__gamma_d; // millisecond
        const double var_iCaL_d_gate__d_d_d_Environment__time = (var_iCaL_d_gate__d_inf - var_iCaL_d_gate__d) / var_iCaL_d_gate__tau_d; // per_millisecond
        const double var_ICaL__iCaL_d_gate__d_d_d_Environment__time = var_iCaL_d_gate__d_d_d_Environment__time; // per_millisecond
        const double var_iCaL_f_gate__V = var_ICaL__V; // millivolt
        const double var_iCaL_f_gate__f_inf = 1.0 / (1.0 + exp((var_iCaL_f_gate__V + 20.0) / 7.0)); // dimensionless
        const double var_iCaL_f_gate__f = var_ICaL__f; // dimensionless
        const double var_iCaL_f_gate__tau_f = ((1102.5 * exp((-pow(var_iCaL_f_gate__V + 27.0, 2.0)) / 225.0)) + (200.0 / (1.0 + exp((13.0 - var_iCaL_f_gate__V) / 10.0))) + (180.0 / (1.0 + exp((var_iCaL_f_gate__V + 30.0) / 10.0))) + 20.0) / 4.0; // millisecond
        const double var_iCaL_f_gate__d_f_d_Environment__time = (var_iCaL_f_gate__f_inf - var_iCaL_f_gate__f) / var_iCaL_f_gate__tau_f; // per_millisecond
        const double var_ICaL__iCaL_f_gate__d_f_d_Environment__time = var_iCaL_f_gate__d_f_d_Environment__time; // per_millisecond
        const double var_iCaL_f2_gate__V = var_ICaL__V; // millivolt
        const double var_iCaL_f2_gate__tau_f2 = ((562.0 * exp((-pow(var_iCaL_f2_gate__V + 27.0, 2.0)) / 240.0)) + (31.0 / (1.0 + exp((25.0 - var_iCaL_f2_gate__V) / 10.0))) + (80.0 / (1.0 + exp((var_iCaL_f2_gate__V + 30.0) / 10.0)))) / 2.0; // millisecond
        const double var_iCaL_f2_gate__f2 = var_ICaL__f2; // dimensionless
        const double var_iCaL_f2_gate__f2_inf = (0.75 / (1.0 + exp((var_iCaL_f2_gate__V + 35.0) / 7.0))) + 0.25; // dimensionless
        const double var_iCaL_f2_gate__d_f2_d_Environment__time = (var_iCaL_f2_gate__f2_inf - var_iCaL_f2_gate__f2) / var_iCaL_f2_gate__tau_f2; // per_millisecond
        const double var_ICaL__iCaL_f2_gate__d_f2_d_Environment__time = var_iCaL_f2_gate__d_f2_d_Environment__time; // per_millisecond
        const double var_iCaL_fCass_gate__Ca_ss = var_ICaL__Ca_ss; // millimolar
        const double var_iCaL_fCass_gate__fCass_inf = (0.40000000000000002 / (1.0 + pow(var_iCaL_fCass_gate__Ca_ss / 0.050000000000000003, 2.0))) + 0.59999999999999998; // dimensionless
        const double var_iCaL_fCass_gate__fCass = var_ICaL__fCass; // dimensionless
        const double var_iCaL_fCass_gate__tau_fCass = (80.0 / (1.0 + pow(var_iCaL_fCass_gate__Ca_ss / 0.050000000000000003, 2.0))) + 2.0; // millisecond
        const double var_iCaL_fCass_gate__d_fCass_d_Environment__time = (var_iCaL_fCass_gate__fCass_inf - var_iCaL_fCass_gate__fCass) / var_iCaL_fCass_gate__tau_fCass; // per_millisecond
        const double var_ICaL__iCaL_fCass_gate__d_fCass_d_Environment__time = var_iCaL_fCass_gate__d_fCass_d_Environment__time; // per_millisecond
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_Ca__Ca_SR = var_chaste_interface__Ca__Ca_SR; // millimolar
        const double var_Ca__Ca_ss = var_chaste_interface__Ca__Ca_ss; // millimolar
        const double var_Ca_buffer__Buf_c = 0.20000000000000001; // millimolar
        const double var_Ca_buffer__K_buf_c = 0.001; // millimolar
        const double var_Ca_buffer__Ca_i = var_Ca__Ca_i; // millimolar
        const double var_Ca_buffer__Ca_i_bufc = 1.0 / (1.0 + ((var_Ca_buffer__Buf_c * var_Ca_buffer__K_buf_c) / pow(var_Ca_buffer__Ca_i + var_Ca_buffer__K_buf_c, 2.0))); // dimensionless
        const double var_Ca__Ca_i_bufc = var_Ca_buffer__Ca_i_bufc; // dimensionless
        const double var_Ca_buffer__Buf_sr = 10.0; // millimolar
        const double var_Ca_buffer__Ca_SR = var_Ca__Ca_SR; // millimolar
        const double var_Ca_buffer__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_Ca_buffer__Ca_sr_bufsr = 1.0 / (1.0 + ((var_Ca_buffer__Buf_sr * var_Ca_buffer__K_buf_sr) / pow(var_Ca_buffer__Ca_SR + var_Ca_buffer__K_buf_sr, 2.0))); // dimensionless
        const double var_Ca__Ca_sr_bufsr = var_Ca_buffer__Ca_sr_bufsr; // dimensionless
        const double var_Ca_buffer__Buf_ss = 0.40000000000000002; // millimolar
        const double var_Ca_buffer__Ca_ss = var_Ca__Ca_ss; // millimolar
        const double var_Ca_buffer__K_buf_ss = 0.00025000000000000001; // millimolar
        const double var_Ca_buffer__Ca_ss_bufss = 1.0 / (1.0 + ((var_Ca_buffer__Buf_ss * var_Ca_buffer__K_buf_ss) / pow(var_Ca_buffer__Ca_ss + var_Ca_buffer__K_buf_ss, 2.0))); // dimensionless
        const double var_Ca__Ca_ss_bufss = var_Ca_buffer__Ca_ss_bufss; // dimensionless
        const double var_Ca__V_sr = 0.0010939999999999999; // nanolitre
        const double var_Ca__V_ss = 5.4679999999999998e-05; // nanolitre
        const double var_Ca__Vol_c = var_cell__Vol_c; // nanolitre
        const double var_Ca__F = var_Environment__F; // coulomb_per_mole
        const double var_Ca__Cm = var_cell__Cm; // nanoF
        const double var_Ca__i_CaL = var_ICaL__i_CaL; // nanoA_per_nanoF
        const double var_Ca__i_NaCa = var_INaCa__i_NaCa; // nanoA_per_nanoF
        const double var_Ca__i_p_Ca = var_IpCa__i_p_Ca; // nanoA_per_nanoF
        const double var_Ca__i_b_Ca = var_ICab__i_b_Ca; // nanoA_per_nanoF
        const double var_Irel__min_sr = 1.0; // dimensionless
        const double var_Irel__Ca_SR = var_Ca__Ca_SR; // millimolar
        const double var_Irel__EC = 1.5; // millimolar
        const double var_Irel__max_sr = 2.5; // dimensionless
        const double var_Irel__kcasr = var_Irel__max_sr - ((var_Irel__max_sr - var_Irel__min_sr) / (1.0 + pow(var_Irel__EC / var_Irel__Ca_SR, 2.0))); // dimensionless
        const double var_Irel__k1_prime = 0.14999999999999999; // per_millimolar2_per_millisecond
        const double var_Irel__k1 = var_Irel__k1_prime / var_Irel__kcasr; // per_millimolar2_per_millisecond
        const double var_Irel__Ca_ss = var_Ca__Ca_ss; // millimolar
        const double var_Irel__k3 = 0.059999999999999998; // per_millisecond
        const double var_Ca__R_prime = var_chaste_interface__Irel__R_prime; // dimensionless
        const double var_Irel__R_prime = var_Ca__R_prime; // dimensionless
        const double var_Irel__O = (var_Irel__k1 * pow(var_Irel__Ca_ss, 2.0) * var_Irel__R_prime) / (var_Irel__k3 + (var_Irel__k1 * pow(var_Irel__Ca_ss, 2.0))); // dimensionless
        const double var_Irel__Vol_rel = 0.30599999999999999; // per_millisecond
        const double var_Irel__i_rel = var_Irel__Vol_rel * var_Irel__O * (var_Irel__Ca_SR - var_Irel__Ca_ss); // millimolar_per_millisecond
        const double var_Ca__i_rel = var_Irel__i_rel; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__Vmax_up = 0.0063749999999999996; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__K_up = 0.00025000000000000001; // millimolar
        const double var_Ileak_Iup_Ixfer__Ca_i = var_Ca__Ca_i; // millimolar
        const double var_Ileak_Iup_Ixfer__i_up = var_Ileak_Iup_Ixfer__Vmax_up / (1.0 + (pow(var_Ileak_Iup_Ixfer__K_up, 2.0) / pow(var_Ileak_Iup_Ixfer__Ca_i, 2.0))); // millimolar_per_millisecond
        const double var_Ca__i_up = var_Ileak_Iup_Ixfer__i_up; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__Vol_leak = 0.00036000000000000002; // per_millisecond
        const double var_Ileak_Iup_Ixfer__Ca_SR = var_Ca__Ca_SR; // millimolar
        const double var_Ileak_Iup_Ixfer__i_leak = var_Ileak_Iup_Ixfer__Vol_leak * (var_Ileak_Iup_Ixfer__Ca_SR - var_Ileak_Iup_Ixfer__Ca_i); // millimolar_per_millisecond
        const double var_Ca__i_leak = var_Ileak_Iup_Ixfer__i_leak; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__Ca_ss = var_Ca__Ca_ss; // millimolar
        const double var_Ileak_Iup_Ixfer__Vol_xfer = 0.0038; // per_millisecond
        const double var_Ileak_Iup_Ixfer__i_xfer = var_Ileak_Iup_Ixfer__Vol_xfer * (var_Ileak_Iup_Ixfer__Ca_ss - var_Ileak_Iup_Ixfer__Ca_i); // millimolar_per_millisecond
        const double var_Ca__i_xfer = var_Ileak_Iup_Ixfer__i_xfer; // millimolar_per_millisecond
        const double var_Ca__d_Ca_i_d_Environment__time = var_Ca__Ca_i_bufc * (((((var_Ca__i_leak - var_Ca__i_up) * var_Ca__V_sr) / var_Ca__Vol_c) + var_Ca__i_xfer) - ((((var_Ca__i_b_Ca + var_Ca__i_p_Ca) - (2.0 * var_Ca__i_NaCa)) * var_Ca__Cm) / (2.0 * var_Ca__Vol_c * var_Ca__F))); // millimolar_per_millisecond
        const double var_Ca__d_Ca_SR_d_Environment__time = var_Ca__Ca_sr_bufsr * (var_Ca__i_up - (var_Ca__i_rel + var_Ca__i_leak)); // millimolar_per_millisecond
        const double var_Ca__d_Ca_ss_d_Environment__time = var_Ca__Ca_ss_bufss * (((((-var_Ca__i_CaL) * var_Ca__Cm) / (2.0 * var_Ca__V_ss * var_Ca__F)) + ((var_Ca__i_rel * var_Ca__V_sr) / var_Ca__V_ss)) - ((var_Ca__i_xfer * var_Ca__Vol_c) / var_Ca__V_ss)); // millimolar_per_millisecond
        const double var_Irel__k2_prime = 0.044999999999999998; // per_millimolar_per_millisecond
        const double var_Irel__k2 = var_Irel__k2_prime * var_Irel__kcasr; // per_millimolar_per_millisecond
        const double var_Irel__k4 = 0.0050000000000000001; // per_millisecond
        const double var_Irel__d_R_prime_d_Environment__time = ((-var_Irel__k2) * var_Irel__Ca_ss * var_Irel__R_prime) + (var_Irel__k4 * (1.0 - var_Irel__R_prime)); // per_millisecond
        const double var_Ca__Irel__d_R_prime_d_Environment__time = var_Irel__d_R_prime_d_Environment__time; // per_millisecond
        const double var_Na__F = var_Environment__F; // coulomb_per_mole
        const double var_Na__Cm = var_cell__Cm; // nanoF
        const double var_Na__Vol_c = var_cell__Vol_c; // nanolitre
        const double var_Na__i_Na = var_INa__i_Na; // nanoA_per_nanoF
        const double var_Na__i_NaCa = var_INaCa__i_NaCa; // nanoA_per_nanoF
        const double var_Na__i_NaK = var_INaK__i_NaK; // nanoA_per_nanoF
        const double var_Na__i_b_Na = var_INab__i_b_Na; // nanoA_per_nanoF
        const double var_Na__d_Na_i_d_Environment__time = ((-(var_Na__i_Na + var_Na__i_b_Na + (3.0 * var_Na__i_NaK) + (3.0 * var_Na__i_NaCa))) * var_Na__Cm) / (var_Na__Vol_c * var_Na__F); // millimolar_per_millisecond
        const double var_K__F = var_Environment__F; // coulomb_per_mole
        const double var_K__Cm = var_cell__Cm; // nanoF
        const double var_K__Vol_c = var_cell__Vol_c; // nanolitre
        const double var_K__i_K1 = var_IK1__i_K1; // nanoA_per_nanoF
        const double var_K__i_to = var_Ito__i_to; // nanoA_per_nanoF
        const double var_K__i_NaK = var_INaK__i_NaK; // nanoA_per_nanoF
        const double var_K__i_Kr = var_IKr__i_Kr; // nanoA_per_nanoF
        const double var_K__i_Ks = var_IKs__i_Ks; // nanoA_per_nanoF
        const double var_K__i_p_K = var_IpK__i_p_K; // nanoA_per_nanoF
        const double var_K__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
        const double var_K__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
        const double var_K__i_Stim = var_K__i_Stim_converter / var_K__chaste_interface__chaste_membrane_capacitance; // nanoA_per_nanoF
        const double var_K__d_K_i_d_Environment__time = ((-((var_K__i_K1 + var_K__i_to + var_K__i_Kr + var_K__i_Ks + var_K__i_p_K + var_K__i_Stim) - (2.0 * var_K__i_NaK))) / (var_K__Vol_c * var_K__F)) * var_K__Cm; // millimolar_per_millisecond
        const double var_chaste_interface__iKr_Markov__d_Cr1_d_Environment__time = var_IKr__iKr_Markov__d_Cr1_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov__d_Cr2_d_Environment__time = var_IKr__iKr_Markov__d_Cr2_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov__d_Cr3_d_Environment__time = var_IKr__iKr_Markov__d_Cr3_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov__d_Or4_d_Environment__time = var_IKr__iKr_Markov__d_Or4_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov__d_Ir5_d_Environment__time = var_IKr__iKr_Markov__d_Ir5_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time = var_IKr__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time = var_IKr__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time = var_IKr__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time = var_IKr__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time = var_IKr__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iKs_Xs_gate__d_Xs_d_Environment__time = var_IKs__iKs_Xs_gate__d_Xs_d_Environment__time; // per_millisecond
        const double var_chaste_interface__ito_s_gate__d_s_d_Environment__time = var_Ito__ito_s_gate__d_s_d_Environment__time; // per_millisecond
        const double var_chaste_interface__ito_r_gate__d_r_d_Environment__time = var_Ito__ito_r_gate__d_r_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iNa_m_gate__d_m_d_Environment__time = var_INa__iNa_m_gate__d_m_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iNa_h_gate__d_h_d_Environment__time = var_INa__iNa_h_gate__d_h_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iNa_j_gate__d_j_d_Environment__time = var_INa__iNa_j_gate__d_j_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iCaL_d_gate__d_d_d_Environment__time = var_ICaL__iCaL_d_gate__d_d_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iCaL_f_gate__d_f_d_Environment__time = var_ICaL__iCaL_f_gate__d_f_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iCaL_f2_gate__d_f2_d_Environment__time = var_ICaL__iCaL_f2_gate__d_f2_d_Environment__time; // per_millisecond
        const double var_chaste_interface__iCaL_fCass_gate__d_fCass_d_Environment__time = var_ICaL__iCaL_fCass_gate__d_fCass_d_Environment__time; // per_millisecond
        const double var_chaste_interface__Ca__d_Ca_i_d_Environment__time = var_Ca__d_Ca_i_d_Environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca__d_Ca_SR_d_Environment__time = var_Ca__d_Ca_SR_d_Environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Ca__d_Ca_ss_d_Environment__time = var_Ca__d_Ca_ss_d_Environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__Irel__d_R_prime_d_Environment__time = var_Ca__Irel__d_R_prime_d_Environment__time; // per_millisecond
        const double var_chaste_interface__Na__d_Na_i_d_Environment__time = var_Na__d_Na_i_d_Environment__time; // millimolar_per_millisecond
        const double var_chaste_interface__K__d_K_i_d_Environment__time = var_K__d_K_i_d_Environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__iKr_Markov__Cr1 = var_chaste_interface__iKr_Markov__d_Cr1_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov__Cr2 = var_chaste_interface__iKr_Markov__d_Cr2_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov__Cr3 = var_chaste_interface__iKr_Markov__d_Cr3_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov__Or4 = var_chaste_interface__iKr_Markov__d_Or4_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov__Ir5 = var_chaste_interface__iKr_Markov__d_Ir5_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr1 = var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr1_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr2 = var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr2_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr3 = var_chaste_interface__iKr_Markov_Sotalol_block__d_BCr3_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov_Sotalol_block__BOr4 = var_chaste_interface__iKr_Markov_Sotalol_block__d_BOr4_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKr_Markov_Sotalol_block__BIr5 = var_chaste_interface__iKr_Markov_Sotalol_block__d_BIr5_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iKs_Xs_gate__Xs = var_chaste_interface__iKs_Xs_gate__d_Xs_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__ito_s_gate__s = var_chaste_interface__ito_s_gate__d_s_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__ito_r_gate__r = var_chaste_interface__ito_r_gate__d_r_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iNa_m_gate__m = var_chaste_interface__iNa_m_gate__d_m_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iNa_h_gate__h = var_chaste_interface__iNa_h_gate__d_h_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iNa_j_gate__j = var_chaste_interface__iNa_j_gate__d_j_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iCaL_d_gate__d = var_chaste_interface__iCaL_d_gate__d_d_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iCaL_f_gate__f = var_chaste_interface__iCaL_f_gate__d_f_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iCaL_f2_gate__f2 = var_chaste_interface__iCaL_f2_gate__d_f2_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__iCaL_fCass_gate__fCass = var_chaste_interface__iCaL_fCass_gate__d_fCass_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__Ca__Ca_i = var_chaste_interface__Ca__d_Ca_i_d_Environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__Ca__Ca_SR = var_chaste_interface__Ca__d_Ca_SR_d_Environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__Ca__Ca_ss = var_chaste_interface__Ca__d_Ca_ss_d_Environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__Irel__R_prime = var_chaste_interface__Irel__d_R_prime_d_Environment__time; // per_millisecond
        const double d_dt_chaste_interface__Na__Na_i = var_chaste_interface__Na__d_Na_i_d_Environment__time; // millimolar_per_millisecond
        const double d_dt_chaste_interface__K__K_i = var_chaste_interface__K__d_K_i_d_Environment__time; // millimolar_per_millisecond
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__cell__V = 0.0;
        }
        else
        {
            const double var_cell__i_K1 = var_IK1__i_K1; // nanoA_per_nanoF
            const double var_cell__i_to = var_Ito__i_to; // nanoA_per_nanoF
            const double var_cell__i_Kr = var_IKr__i_Kr; // nanoA_per_nanoF
            const double var_cell__i_Ks = var_IKs__i_Ks; // nanoA_per_nanoF
            const double var_cell__i_CaL = var_ICaL__i_CaL; // nanoA_per_nanoF
            const double var_cell__i_NaK = var_INaK__i_NaK; // nanoA_per_nanoF
            const double var_cell__i_Na = var_INa__i_Na; // nanoA_per_nanoF
            const double var_cell__i_b_Na = var_INab__i_b_Na; // nanoA_per_nanoF
            const double var_cell__i_NaCa = var_INaCa__i_NaCa; // nanoA_per_nanoF
            const double var_cell__i_b_Ca = var_ICab__i_b_Ca; // nanoA_per_nanoF
            const double var_cell__i_p_K = var_IpK__i_p_K; // nanoA_per_nanoF
            const double var_cell__i_p_Ca = var_IpCa__i_p_Ca; // nanoA_per_nanoF
            const double var_cell__chaste_interface__chaste_membrane_capacitance = HeartConfig::Instance()->GetCapacitance(); // uF_per_cm2
            const double var_cell__i_Stim_converter = var_chaste_interface__cell__i_Stim; // uA_per_cm2
            const double var_cell__i_Stim = var_cell__i_Stim_converter / var_cell__chaste_interface__chaste_membrane_capacitance; // nanoA_per_nanoF
            const double var_cell__i_tot = var_cell__i_K1 + var_cell__i_to + var_cell__i_Kr + var_cell__i_Ks + var_cell__i_CaL + var_cell__i_NaK + var_cell__i_Na + var_cell__i_b_Na + var_cell__i_NaCa + var_cell__i_b_Ca + var_cell__i_p_K + var_cell__i_p_Ca + var_cell__i_Stim; // nanoA_per_nanoF
            const double var_cell__d_V_d_Environment__time = -var_cell__i_tot; // 'millivolt per millisecond'
            const double var_chaste_interface__cell__d_V_d_Environment__time = var_cell__d_V_d_Environment__time; // ___units_2
            d_dt_chaste_interface__cell__V = var_chaste_interface__cell__d_V_d_Environment__time; // 'millivolt per millisecond'
        }
        
        NV_Ith_S(rDY, 0) = d_dt_chaste_interface__cell__V;
        NV_Ith_S(rDY, 1) = d_dt_chaste_interface__iKr_Markov__Cr1;
        NV_Ith_S(rDY, 2) = d_dt_chaste_interface__iKr_Markov__Cr2;
        NV_Ith_S(rDY, 3) = d_dt_chaste_interface__iKr_Markov__Cr3;
        NV_Ith_S(rDY, 4) = d_dt_chaste_interface__iKr_Markov__Or4;
        NV_Ith_S(rDY, 5) = d_dt_chaste_interface__iKr_Markov__Ir5;
        NV_Ith_S(rDY, 6) = d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr1;
        NV_Ith_S(rDY, 7) = d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr2;
        NV_Ith_S(rDY, 8) = d_dt_chaste_interface__iKr_Markov_Sotalol_block__BCr3;
        NV_Ith_S(rDY, 9) = d_dt_chaste_interface__iKr_Markov_Sotalol_block__BOr4;
        NV_Ith_S(rDY, 10) = d_dt_chaste_interface__iKr_Markov_Sotalol_block__BIr5;
        NV_Ith_S(rDY, 11) = d_dt_chaste_interface__iKs_Xs_gate__Xs;
        NV_Ith_S(rDY, 12) = d_dt_chaste_interface__ito_s_gate__s;
        NV_Ith_S(rDY, 13) = d_dt_chaste_interface__ito_r_gate__r;
        NV_Ith_S(rDY, 14) = d_dt_chaste_interface__iNa_m_gate__m;
        NV_Ith_S(rDY, 15) = d_dt_chaste_interface__iNa_h_gate__h;
        NV_Ith_S(rDY, 16) = d_dt_chaste_interface__iNa_j_gate__j;
        NV_Ith_S(rDY, 17) = d_dt_chaste_interface__iCaL_d_gate__d;
        NV_Ith_S(rDY, 18) = d_dt_chaste_interface__iCaL_f_gate__f;
        NV_Ith_S(rDY, 19) = d_dt_chaste_interface__iCaL_f2_gate__f2;
        NV_Ith_S(rDY, 20) = d_dt_chaste_interface__iCaL_fCass_gate__fCass;
        NV_Ith_S(rDY, 21) = d_dt_chaste_interface__Ca__Ca_i;
        NV_Ith_S(rDY, 22) = d_dt_chaste_interface__Ca__Ca_SR;
        NV_Ith_S(rDY, 23) = d_dt_chaste_interface__Ca__Ca_ss;
        NV_Ith_S(rDY, 24) = d_dt_chaste_interface__Irel__R_prime;
        NV_Ith_S(rDY, 25) = d_dt_chaste_interface__Na__Na_i;
        NV_Ith_S(rDY, 26) = d_dt_chaste_interface__K__K_i;
    }
    
    void Dynamicfink_noble_giles_model_2008FromCellMLCvode::EvaluateAnalyticJacobian(double var_chaste_interface__Environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3)
    {
        double var_chaste_interface__cell__V = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : NV_Ith_S(rY, 0));
        // Units: millivolt; Initial value: -86.45
        double var_chaste_interface__iKr_Markov__Cr1 = NV_Ith_S(rY, 1);
        // Units: dimensionless; Initial value: 0.9786
        double var_chaste_interface__iKr_Markov__Cr2 = NV_Ith_S(rY, 2);
        // Units: dimensionless; Initial value: 0.0031
        double var_chaste_interface__iKr_Markov__Cr3 = NV_Ith_S(rY, 3);
        // Units: dimensionless; Initial value: 0.0029
        double var_chaste_interface__iKr_Markov__Or4 = NV_Ith_S(rY, 4);
        // Units: dimensionless; Initial value: 0.014
        double var_chaste_interface__iKr_Markov__Ir5 = NV_Ith_S(rY, 5);
        // Units: dimensionless; Initial value: 0.0014
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr1 = NV_Ith_S(rY, 6);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr2 = NV_Ith_S(rY, 7);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BCr3 = NV_Ith_S(rY, 8);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BOr4 = NV_Ith_S(rY, 9);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKr_Markov_Sotalol_block__BIr5 = NV_Ith_S(rY, 10);
        // Units: dimensionless; Initial value: 0
        double var_chaste_interface__iKs_Xs_gate__Xs = NV_Ith_S(rY, 11);
        // Units: dimensionless; Initial value: 0.00303
        double var_chaste_interface__ito_s_gate__s = NV_Ith_S(rY, 12);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__ito_r_gate__r = NV_Ith_S(rY, 13);
        // Units: dimensionless; Initial value: 2.11e-8
        double var_chaste_interface__iNa_m_gate__m = NV_Ith_S(rY, 14);
        // Units: dimensionless; Initial value: 0.00132
        double var_chaste_interface__iNa_h_gate__h = NV_Ith_S(rY, 15);
        // Units: dimensionless; Initial value: 0.7768
        double var_chaste_interface__iNa_j_gate__j = NV_Ith_S(rY, 16);
        // Units: dimensionless; Initial value: 0.7766
        double var_chaste_interface__iCaL_d_gate__d = NV_Ith_S(rY, 17);
        // Units: dimensionless; Initial value: 5.06e-6
        double var_chaste_interface__iCaL_f_gate__f = NV_Ith_S(rY, 18);
        // Units: dimensionless; Initial value: 0.9999
        double var_chaste_interface__iCaL_f2_gate__f2 = NV_Ith_S(rY, 19);
        // Units: dimensionless; Initial value: 0.9995
        double var_chaste_interface__iCaL_fCass_gate__fCass = NV_Ith_S(rY, 20);
        // Units: dimensionless; Initial value: 1
        double var_chaste_interface__Ca__Ca_i = NV_Ith_S(rY, 21);
        // Units: millimolar; Initial value: 1.092e-4
        double var_chaste_interface__Ca__Ca_SR = NV_Ith_S(rY, 22);
        // Units: millimolar; Initial value: 2.7656
        double var_chaste_interface__Ca__Ca_ss = NV_Ith_S(rY, 23);
        // Units: millimolar; Initial value: 1.893e-4
        double var_chaste_interface__Irel__R_prime = NV_Ith_S(rY, 24);
        // Units: dimensionless; Initial value: 0.9864
        double var_chaste_interface__Na__Na_i = NV_Ith_S(rY, 25);
        // Units: millimolar; Initial value: 7.940167
        double var_chaste_interface__K__K_i = NV_Ith_S(rY, 26);
        // Units: millimolar; Initial value: 141.0167
        
        const double var_Environment__R = 8314.4719999999998; // millijoule_per_mole_kelvin
        const double var_Environment__T = 310.0; // kelvin
        const double var_Environment__F = 96485.341499999995; // coulomb_per_mole
        const double var_Environment__K_o = 5.4000000000000004; // millimolar
        const double var_Environment__Ca_o = 2.0; // millimolar
        const double var_Environment__Na_o = 140.0; // millimolar
        const double var_chaste_interface__Environment__fake_dt = 1.0; // millisecond
        const double var_cell__V = var_chaste_interface__cell__V; // millivolt
        const double var_cell__Cm = 0.115; // nanoF
        const double var_cell__Vol_c = 0.016403999999999998; // nanolitre
        const double var_iK1_rectification__phi = 0.88380000000000003; // dimensionless
        const double var_iK1_rectification__fac = 1.0648; // dimensionless
        const double var_iK1_rectification__Mg_Buf = 0.0356; // millimolar
        const double var_iK1_rectification__SPM = 0.0014613; // millimolar
        const double var_IK1__g_K1_0 = 0.68210000000000004; // microS_per_nanoF
        const double var_Ito__r = var_chaste_interface__ito_r_gate__r; // dimensionless
        const double var_Ito__s = var_chaste_interface__ito_s_gate__s; // dimensionless
        const double var_Ito__g_to = 0.20000000000000001; // microS_per_nanoF
        const double var_IKr__g_Kr_0 = 0.024; // microS_per_nanoF
        const double var_IKr__Or4 = var_chaste_interface__iKr_Markov__Or4; // dimensionless
        const double var_IKs__g_Ks = 0.039199999999999999; // microS_per_nanoF
        const double var_IKs__Xs = var_chaste_interface__iKs_Xs_gate__Xs; // dimensionless
        const double var_reversal_potentials__P_kna = 0.029999999999999999; // dimensionless
        const double var_ICaL__f2 = var_chaste_interface__iCaL_f2_gate__f2; // dimensionless
        const double var_ICaL__f = var_chaste_interface__iCaL_f_gate__f; // dimensionless
        const double var_ICaL__z = 2.0; // dimensionless
        const double var_ICaL__d = var_chaste_interface__iCaL_d_gate__d; // dimensionless
        const double var_ICaL__g_CaL = 2.0000000000000002e-05; // litre_per_farad_millisecond
        const double var_ICaL__fCass = var_chaste_interface__iCaL_fCass_gate__fCass; // dimensionless
        const double var_INaK__P_NaK = 1.2969999999999999; // nanoA_per_nanoF
        const double var_INaK__K_mNa = 40.0; // millimolar
        const double var_INaK__K_mk = 1.0; // millimolar
        const double var_INa__g_Na = 11.0; // microS_per_nanoF
        const double var_INa__m = var_chaste_interface__iNa_m_gate__m; // dimensionless
        const double var_INa__j = var_chaste_interface__iNa_j_gate__j; // dimensionless
        const double var_INa__h = var_chaste_interface__iNa_h_gate__h; // dimensionless
        const double var_INab__g_bna = 0.00029; // microS_per_nanoF
        const double var_INaCa__K_sat = 0.10000000000000001; // dimensionless
        const double var_INaCa__Km_Ca = 1.3799999999999999; // millimolar
        const double var_INaCa__gamma = 0.34999999999999998; // dimensionless
        const double var_INaCa__alpha = 2.5; // dimensionless
        const double var_INaCa__K_NaCa = 200.0; // nanoA_per_nanoF
        const double var_INaCa__Km_Nai = 87.5; // millimolar
        const double var_ICab__g_bca = 0.00047360000000000002; // microS_per_nanoF
        const double var_IpK__g_pK = 0.0097300000000000008; // microS_per_nanoF
        const double var_IpCa__g_pCa = 0.061899999999999997; // nanoA_per_nanoF
        const double var_IpCa__K_pCa = 0.00050000000000000001; // millimolar
        const double var_iKr_Markov__T_Base = 310.0; // kelvin
        const double var_IKr__Cr1 = var_chaste_interface__iKr_Markov__Cr1; // dimensionless
        const double var_iKr_Markov__Cr1 = var_IKr__Cr1; // dimensionless
        const double var_IKr__Cr2 = var_chaste_interface__iKr_Markov__Cr2; // dimensionless
        const double var_iKr_Markov__Cr2 = var_IKr__Cr2; // dimensionless
        const double var_IKr__Cr3 = var_chaste_interface__iKr_Markov__Cr3; // dimensionless
        const double var_iKr_Markov__Cr3 = var_IKr__Cr3; // dimensionless
        const double var_iKr_Markov__Or4 = var_IKr__Or4; // dimensionless
        const double var_IKr__Ir5 = var_chaste_interface__iKr_Markov__Ir5; // dimensionless
        const double var_iKr_Markov__Ir5 = var_IKr__Ir5; // dimensionless
        const double var_iKr_Markov_Sotalol_block__kDiss = 0.00125; // per_millisecond
        const double var_IKr__BOr4 = var_chaste_interface__iKr_Markov_Sotalol_block__BOr4; // dimensionless
        const double var_iKr_Markov__BOr4 = var_IKr__BOr4; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BOr4 = var_iKr_Markov__BOr4; // dimensionless
        const double var_iKr_Markov_Sotalol_block__Sotalol_mM = 0.0; // millimolar
        const double var_iKr_Markov_Sotalol_block__kBinding = 0.0050000000000000001; // per_millimolar_per_millisecond
        const double var_IKr__BCr1 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr1; // dimensionless
        const double var_iKr_Markov__BCr1 = var_IKr__BCr1; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr1 = var_iKr_Markov__BCr1; // dimensionless
        const double var_IKr__BCr2 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr2; // dimensionless
        const double var_iKr_Markov__BCr2 = var_IKr__BCr2; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr2 = var_iKr_Markov__BCr2; // dimensionless
        const double var_IKr__BCr3 = var_chaste_interface__iKr_Markov_Sotalol_block__BCr3; // dimensionless
        const double var_iKr_Markov__BCr3 = var_IKr__BCr3; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BCr3 = var_iKr_Markov__BCr3; // dimensionless
        const double var_IKr__BIr5 = var_chaste_interface__iKr_Markov_Sotalol_block__BIr5; // dimensionless
        const double var_iKr_Markov__BIr5 = var_IKr__BIr5; // dimensionless
        const double var_iKr_Markov_Sotalol_block__BIr5 = var_iKr_Markov__BIr5; // dimensionless
        const double var_iKs_Xs_gate__Xs = var_IKs__Xs; // dimensionless
        const double var_ito_s_gate__s = var_Ito__s; // dimensionless
        const double var_ito_r_gate__r = var_Ito__r; // dimensionless
        const double var_INa__shift_INa_inact = 0.0; // millivolt
        const double var_iNa_m_gate__m = var_INa__m; // dimensionless
        const double var_iNa_h_gate__h = var_INa__h; // dimensionless
        const double var_iNa_j_gate__j = var_INa__j; // dimensionless
        const double var_iCaL_d_gate__d_inf_shift = 5.0; // millivolt
        const double var_iCaL_d_gate__d = var_ICaL__d; // dimensionless
        const double var_iCaL_f_gate__f = var_ICaL__f; // dimensionless
        const double var_iCaL_f2_gate__f2 = var_ICaL__f2; // dimensionless
        const double var_iCaL_fCass_gate__fCass = var_ICaL__fCass; // dimensionless
        const double var_Ca__Ca_i = var_chaste_interface__Ca__Ca_i; // millimolar
        const double var_Ca__Ca_SR = var_chaste_interface__Ca__Ca_SR; // millimolar
        const double var_Ca__Ca_ss = var_chaste_interface__Ca__Ca_ss; // millimolar
        const double var_Ca_buffer__Buf_c = 0.20000000000000001; // millimolar
        const double var_Ca_buffer__K_buf_c = 0.001; // millimolar
        const double var_Ca_buffer__Buf_sr = 10.0; // millimolar
        const double var_Ca_buffer__K_buf_sr = 0.29999999999999999; // millimolar
        const double var_Ca_buffer__Buf_ss = 0.40000000000000002; // millimolar
        const double var_Ca_buffer__K_buf_ss = 0.00025000000000000001; // millimolar
        const double var_Ca__V_sr = 0.0010939999999999999; // nanolitre
        const double var_Ca__V_ss = 5.4679999999999998e-05; // nanolitre
        const double var_Irel__min_sr = 1.0; // dimensionless
        const double var_Irel__EC = 1.5; // millimolar
        const double var_Irel__max_sr = 2.5; // dimensionless
        const double var_Irel__k1_prime = 0.14999999999999999; // per_millimolar2_per_millisecond
        const double var_Irel__k3 = 0.059999999999999998; // per_millisecond
        const double var_Ca__R_prime = var_chaste_interface__Irel__R_prime; // dimensionless
        const double var_Irel__R_prime = var_Ca__R_prime; // dimensionless
        const double var_Irel__Vol_rel = 0.30599999999999999; // per_millisecond
        const double var_Ileak_Iup_Ixfer__Vmax_up = 0.0063749999999999996; // millimolar_per_millisecond
        const double var_Ileak_Iup_Ixfer__K_up = 0.00025000000000000001; // millimolar
        const double var_Ileak_Iup_Ixfer__Vol_leak = 0.00036000000000000002; // per_millisecond
        const double var_Ileak_Iup_Ixfer__Vol_xfer = 0.0038; // per_millisecond
        const double var_Irel__k2_prime = 0.044999999999999998; // per_millimolar_per_millisecond
        const double var_Irel__k4 = 0.0050000000000000001; // per_millisecond
        const double var_Na__Na_i = var_chaste_interface__Na__Na_i; // millimolar
        const double var_K__K_i = var_chaste_interface__K__K_i; // millimolar
        const double var_t2 = ((1.0 / 35.0) * var_Environment__T) - (55.0 / 7.0); // dimensionless
        const double var_t3 = var_IK1__g_K1_0 * var_t2; // dimensionless
        const double var_t4 = pow(var_Environment__K_o, 1.0 / 2.0); // dimensionless
        const double var_t5 = var_iK1_rectification__fac * var_Environment__R; // dimensionless
        const double var_t6 = 1.0 / var_Environment__F; // dimensionless
        const double var_t7 = var_Environment__T * var_t6; // dimensionless
        const double var_t8 = 1.0 / var_K__K_i; // dimensionless
        const double var_t10 = log(var_Environment__K_o * var_t8); // dimensionless
        const double var_t12 = (var_t5 * var_t7) * var_t10; // dimensionless
        const double var_t13 = (-var_cell__V) + var_t12; // dimensionless
        const double var_t14 = exp((1.0 / 20.0) * var_t13); // dimensionless
        const double var_t15 = 1.0 / var_t14; // dimensionless
        const double var_t18 = 1.0 + ((2.2222222220000001 * var_iK1_rectification__Mg_Buf) * var_t15); // dimensionless
        const double var_t24 = exp((((-0.20833333330000001) * var_cell__V) + (0.20833333330000001 * var_t12)) - (1.666666666 * var_iK1_rectification__Mg_Buf)); // dimensionless
        const double var_t26 = var_iK1_rectification__SPM / var_t24; // dimensionless
        const double var_t28 = exp((1.0 / 180.0) * var_t13); // dimensionless
        const double var_t30 = var_iK1_rectification__Mg_Buf / var_t28; // dimensionless
        const double var_t32 = pow(var_t18, 2.0); // dimensionless
        const double var_t34 = ((1428.5714290000001 * var_t26) + (0.35714285709999999 * var_t30)) + (var_t32 * var_t18); // dimensionless
        const double var_t35 = 1.0 / var_t34; // dimensionless
        const double var_t38 = (((var_iK1_rectification__phi * var_t18) * var_t35) * var_iK1_rectification__Mg_Buf) * var_t15; // dimensionless
        const double var_t40 = var_iK1_rectification__phi * var_t32; // dimensionless
        const double var_t41 = pow(var_t34, 2.0); // dimensionless
        const double var_t42 = 1.0 / var_t41; // dimensionless
        const double var_t45 = var_t32 * var_iK1_rectification__Mg_Buf; // dimensionless
        const double var_t51 = 1.0 - var_iK1_rectification__phi; // dimensionless
        const double var_t55 = exp(((-0.1098901099) * var_cell__V) + (0.1098901099 * var_t12)); // dimensionless
        const double var_t57 = var_iK1_rectification__SPM / var_t55; // dimensionless
        const double var_t59 = 1.0 + (25.0 * var_t57); // dimensionless
        const double var_t60 = pow(var_t59, 2.0); // dimensionless
        const double var_t63 = (var_t51 / var_t60) * var_t57; // dimensionless
        const double var_t67 = var_Environment__R * var_Environment__T; // dimensionless
        const double var_t70 = var_cell__V - ((var_t67 * var_t6) * var_t10); // dimensionless
        const double var_t73 = (((0.43033148290000001 * var_t3) * var_t4) * (((0.22222222220000001 * var_t38) - ((var_t40 * var_t42) * (((297.61904770000001 * var_t26) + (0.0019841269840000001 * var_t30)) + ((0.33333333329999998 * var_t45) * var_t15)))) - (2.7472527480000002 * var_t63))) * var_t70; // dimensionless
        const double var_t79 = (var_t3 * var_t4) * ((var_t40 * var_t35) + (var_t51 / var_t59)); // dimensionless
        const double var_t80 = 0.43033148290000001 * var_t79; // dimensionless
        const double var_t81 = var_Ito__g_to * var_ito_r_gate__r; // dimensionless
        const double var_t82 = var_t81 * var_ito_s_gate__s; // dimensionless
        const double var_t83 = var_IKr__g_Kr_0 * var_t2; // dimensionless
        const double var_t85 = (var_t83 * var_t4) * var_iKr_Markov__Or4; // dimensionless
        const double var_t86 = 0.43033148290000001 * var_t85; // dimensionless
        const double var_t87 = pow(var_iKs_Xs_gate__Xs, 2.0); // dimensionless
        const double var_t88 = var_IKs__g_Ks * var_t87; // dimensionless
        const double var_t89 = var_ICaL__g_CaL * var_iCaL_d_gate__d; // dimensionless
        const double var_t90 = var_iCaL_f_gate__f * var_iCaL_f2_gate__f2; // dimensionless
        const double var_t93 = pow(var_ICaL__z, 2.0); // dimensionless
        const double var_t94 = pow(var_Environment__F, 2.0); // dimensionless
        const double var_t96 = 1.0 / var_Environment__R; // dimensionless
        const double var_t98 = 1.0 / var_Environment__T; // dimensionless
        const double var_t99 = var_cell__V - 15.0; // dimensionless
        const double var_t101 = var_t96 * var_t98; // dimensionless
        const double var_t104 = exp(((2.0 * var_t99) * var_Environment__F) * var_t101); // dimensionless
        const double var_t107 = ((0.25 * var_Ca__Ca_ss) * var_t104) - var_Environment__Ca_o; // dimensionless
        const double var_t109 = var_t104 - 1.0; // dimensionless
        const double var_t110 = 1.0 / var_t109; // dimensionless
        const double var_t111 = (var_t98 * var_t107) * var_t110; // dimensionless
        const double var_t114 = var_t89 * var_iCaL_f_gate__f; // dimensionless
        const double var_t115 = var_iCaL_f2_gate__f2 * var_iCaL_fCass_gate__fCass; // dimensionless
        const double var_t116 = var_t115 * var_t93; // dimensionless
        const double var_t117 = var_t114 * var_t116; // dimensionless
        const double var_t120 = pow(var_Environment__R, 2.0); // dimensionless
        const double var_t121 = 1.0 / var_t120; // dimensionless
        const double var_t122 = ((var_t99 * var_t94) * var_Environment__F) * var_t121; // dimensionless
        const double var_t123 = pow(var_Environment__T, 2.0); // dimensionless
        const double var_t124 = 1.0 / var_t123; // dimensionless
        const double var_t125 = var_t124 * var_Ca__Ca_ss; // dimensionless
        const double var_t126 = var_t104 * var_t110; // dimensionless
        const double var_t131 = var_t124 * var_t107; // dimensionless
        const double var_t132 = pow(var_t109, 2.0); // dimensionless
        const double var_t133 = 1.0 / var_t132; // dimensionless
        const double var_t139 = var_INaK__P_NaK * var_Environment__K_o; // dimensionless
        const double var_t141 = 1.0 / (var_Environment__K_o + var_INaK__K_mk); // dimensionless
        const double var_t142 = var_t139 * var_t141; // dimensionless
        const double var_t143 = var_Na__Na_i + var_INaK__K_mNa; // dimensionless
        const double var_t144 = 1.0 / var_t143; // dimensionless
        const double var_t147 = (var_cell__V * var_Environment__F) * var_t101; // dimensionless
        const double var_t149 = exp((-0.10000000000000001) * var_t147); // dimensionless
        const double var_t151 = exp(-var_t147); // dimensionless
        const double var_t153 = (1.0 + (0.1245 * var_t149)) + (0.035299999999999998 * var_t151); // dimensionless
        const double var_t154 = pow(var_t153, 2.0); // dimensionless
        const double var_t156 = var_Environment__F * var_t96; // dimensionless
        const double var_t166 = (((var_t142 * var_Na__Na_i) * var_t144) / var_t154) * (((((-0.012449999999999999) * var_t156) * var_t98) * var_t149) - (((0.035299999999999998 * var_t156) * var_t98) * var_t151)); // dimensionless
        const double var_t167 = pow(var_iNa_m_gate__m, 2.0); // dimensionless
        const double var_t169 = (var_INa__g_Na * var_t167) * var_iNa_m_gate__m; // dimensionless
        const double var_t170 = var_iNa_h_gate__h * var_iNa_j_gate__j; // dimensionless
        const double var_t171 = var_t169 * var_t170; // dimensionless
        const double var_t175 = var_t156 * var_t98; // dimensionless
        const double var_t177 = exp((var_INaCa__gamma * var_cell__V) * var_t175); // dimensionless
        const double var_t179 = pow(var_Na__Na_i, 2.0); // dimensionless
        const double var_t180 = var_t179 * var_Na__Na_i; // dimensionless
        const double var_t184 = var_INaCa__gamma - 1.0; // dimensionless
        const double var_t189 = exp((var_t184 * var_cell__V) * var_t175); // dimensionless
        const double var_t190 = pow(var_Environment__Na_o, 2.0); // dimensionless
        const double var_t191 = var_t190 * var_Environment__Na_o; // dimensionless
        const double var_t194 = ((var_t189 * var_t191) * var_Ca__Ca_i) * var_INaCa__alpha; // dimensionless
        const double var_t198 = pow(var_INaCa__Km_Nai, 2.0); // dimensionless
        const double var_t201 = 1.0 / ((var_t198 * var_INaCa__Km_Nai) + var_t191); // dimensionless
        const double var_t203 = 1.0 / (var_INaCa__Km_Ca + var_Environment__Ca_o); // dimensionless
        const double var_t204 = var_t201 * var_t203; // dimensionless
        const double var_t206 = 1.0 + (var_INaCa__K_sat * var_t189); // dimensionless
        const double var_t207 = 1.0 / var_t206; // dimensionless
        const double var_t208 = var_t204 * var_t207; // dimensionless
        const double var_t209 = (var_INaCa__K_NaCa * (((((((var_INaCa__gamma * var_Environment__F) * var_t96) * var_t98) * var_t177) * var_t180) * var_Environment__Ca_o) - (((var_t184 * var_Environment__F) * var_t101) * var_t194))) * var_t208; // dimensionless
        const double var_t213 = var_INaCa__K_NaCa * (((var_t177 * var_t180) * var_Environment__Ca_o) - var_t194); // dimensionless
        const double var_t214 = pow(var_t206, 2.0); // dimensionless
        const double var_t222 = ((((((var_t213 * var_t204) / var_t214) * var_INaCa__K_sat) * var_t184) * var_Environment__F) * var_t101) * var_t189; // dimensionless
        const double var_t225 = exp(4.1806020080000001 - (0.16722408029999999 * var_cell__V)); // dimensionless
        const double var_t226 = 1.0 + var_t225; // dimensionless
        const double var_t227 = 1.0 / var_t226; // dimensionless
        const double var_t228 = var_IpK__g_pK * var_t227; // dimensionless
        const double var_t230 = pow(var_t226, 2.0); // dimensionless
        const double var_t234 = (((0.16722408029999999 * var_IpK__g_pK) * var_t70) / var_t230) * var_t225; // dimensionless
        const double var_t235 = (((((((((((((((-var_t73) - var_t80) - var_t82) - var_t86) - var_t88) - ((((((var_t89 * var_t90) * var_iCaL_fCass_gate__fCass) * var_t93) * var_t94) * var_t96) * var_t111)) - ((((0.5 * var_t117) * var_t122) * var_t125) * var_t126)) + (((((2.0 * var_t117) * var_t122) * var_t131) * var_t133) * var_t104)) + var_t166) - var_t171) - var_INab__g_bna) - var_t209) + var_t222) - var_ICab__g_bca) - var_t228) - var_t234; // dimensionless
        const double var_t244 = 1.0 / (var_K__K_i + (var_reversal_potentials__P_kna * var_Na__Na_i)); // dimensionless
        const double var_t246 = log((var_Environment__K_o + (var_reversal_potentials__P_kna * var_Environment__Na_o)) * var_t244); // dimensionless
        const double var_t250 = (var_IKs__g_Ks * var_iKs_Xs_gate__Xs) * (var_cell__V - ((var_t67 * var_t6) * var_t246)); // dimensionless
        const double var_t252 = var_t81 * var_t70; // dimensionless
        const double var_t254 = (var_Ito__g_to * var_ito_s_gate__s) * var_t70; // dimensionless
        const double var_t255 = var_INa__g_Na * var_t167; // dimensionless
        const double var_t256 = 1.0 / var_Na__Na_i; // dimensionless
        const double var_t258 = log(var_Environment__Na_o * var_t256); // dimensionless
        const double var_t261 = var_cell__V - ((var_t67 * var_t6) * var_t258); // dimensionless
        const double var_t272 = (var_t99 * var_t94) * var_t96; // dimensionless
        const double var_t273 = var_t272 * var_t111; // dimensionless
        const double var_t277 = var_iCaL_f_gate__f * var_iCaL_fCass_gate__fCass; // dimensionless
        const double var_t284 = var_INaCa__K_NaCa * var_t189; // dimensionless
        const double var_t287 = var_t203 * var_t207; // dimensionless
        const double var_t289 = (((var_t284 * var_t191) * var_INaCa__alpha) * var_t201) * var_t287; // dimensionless
        const double var_t291 = 1.0 / var_Ca__Ca_i; // dimensionless
        const double var_t294 = (((0.5 * var_ICab__g_bca) * var_Environment__R) * var_t7) * var_t291; // dimensionless
        const double var_t295 = var_Ca__Ca_i + var_IpCa__K_pCa; // dimensionless
        const double var_t296 = 1.0 / var_t295; // dimensionless
        const double var_t297 = var_IpCa__g_pCa * var_t296; // dimensionless
        const double var_t298 = var_IpCa__g_pCa * var_Ca__Ca_i; // dimensionless
        const double var_t299 = pow(var_t295, 2.0); // dimensionless
        const double var_t301 = var_t298 / var_t299; // dimensionless
        const double var_t308 = var_t88 * var_Environment__R; // dimensionless
        const double var_t311 = ((var_t308 * var_t7) * var_t244) * var_reversal_potentials__P_kna; // dimensionless
        const double var_t313 = 1.0 / var_t153; // dimensionless
        const double var_t315 = ((var_t139 * var_t141) * var_t144) * var_t313; // dimensionless
        const double var_t316 = pow(var_t143, 2.0); // dimensionless
        const double var_t320 = ((var_t142 * var_Na__Na_i) / var_t316) * var_t313; // dimensionless
        const double var_t323 = ((var_t171 * var_t67) * var_t6) * var_t256; // dimensionless
        const double var_t326 = ((var_INab__g_bna * var_Environment__R) * var_t7) * var_t256; // dimensionless
        const double var_t331 = ((((var_INaCa__K_NaCa * var_t177) * var_t179) * var_Environment__Ca_o) * var_t201) * var_t287; // dimensionless
        const double var_t335 = (var_t5 * var_t7) * var_t8; // dimensionless
        const double var_t339 = var_t6 * var_t8; // dimensionless
        const double var_t340 = var_t67 * var_t339; // dimensionless
        const double var_t371 = (((((((((-0.43033148290000001) * var_t3) * var_t4) * ((((0.22222222220000001 * var_t38) * var_t335) - ((var_t40 * var_t42) * (((((297.61904770000001 * var_t26) * var_iK1_rectification__fac) * var_t340) + (((0.0019841269840000001 * var_t30) * var_iK1_rectification__fac) * var_t340)) + ((((0.33333333329999998 * var_t45) * var_t15) * var_iK1_rectification__fac) * var_t340)))) - ((2.7472527480000002 * var_t63) * var_t335))) * var_t70) - ((0.43033148290000001 * var_t79) * var_t340)) - (var_t82 * var_t340)) - ((0.43033148290000001 * var_t85) * var_t340)) - ((var_t308 * var_t7) * var_t244)) - ((((var_IpK__g_pK * var_Environment__R) * var_Environment__T) * var_t339) * var_t227); // dimensionless
        const double var_t372 = var_iKr_Markov__T_Base * var_t98; // dimensionless
        const double var_t377 = exp(13.688000000000001 + (var_t372 * (((-0.060299999999999999) * var_cell__V) - 15.707000000000001))); // dimensionless
        const double var_t384 = exp(24.335000000000001 + (var_t372 * ((0.0112 * var_cell__V) - 25.914000000000001))); // dimensionless
        const double var_t387 = (((-0.060299999999999999) * var_t377) * var_iKr_Markov__Cr2) - ((0.0112 * var_t384) * var_iKr_Markov__Cr1); // dimensionless
        const double var_t389 = var_Environment__T / var_iKr_Markov__T_Base; // dimensionless
        const double var_t390 = var_t389 * var_t384; // dimensionless
        const double var_t391 = var_t389 * var_t377; // dimensionless
        const double var_t394 = exp(22.745999999999999 - (25.914000000000001 * var_t372)); // dimensionless
        const double var_t395 = var_t389 * var_t394; // dimensionless
        const double var_t396 = (-var_t395) - var_t391; // dimensionless
        const double var_t399 = exp(13.193 - (15.707000000000001 * var_t372)); // dimensionless
        const double var_t400 = var_t389 * var_t399; // dimensionless
        const double var_t405 = exp(7.3129999999999997 + (var_t372 * (((-0.039899999999999998) * var_cell__V) - 15.707000000000001))); // dimensionless
        const double var_t412 = exp(22.097999999999999 + (var_t372 * ((0.036499999999999998 * var_cell__V) - 25.914000000000001))); // dimensionless
        const double var_t414 = (0.036499999999999998 * var_t412) * var_iKr_Markov__Cr3; // dimensionless
        const double var_t416 = var_t389 * var_t412; // dimensionless
        const double var_t417 = (-var_t416) - var_t400; // dimensionless
        const double var_t418 = var_t389 * var_t405; // dimensionless
        const double var_t423 = exp(30.061 + (var_t372 * (((-0.031199999999999999) * var_cell__V) - 33.243000000000002))); // dimensionless
        const double var_t425 = (0.031199999999999999 * var_t423) * var_iKr_Markov__Ir5; // dimensionless
        const double var_t430 = exp(30.015999999999998 + (var_t372 * ((0.0223 * var_cell__V) - 30.888000000000002))); // dimensionless
        const double var_t432 = pow(1.0 / var_Environment__K_o, 0.40000000000000002); // dimensionless
        const double var_t433 = var_t430 * var_t432; // dimensionless
        const double var_t436 = (0.043778650189999997 * var_t433) - (0.039899999999999998 * var_t405); // dimensionless
        const double var_t440 = (1.9631681700000001 * var_t389) * var_t433; // dimensionless
        const double var_t441 = var_iKr_Markov_Sotalol_block__Sotalol_mM * var_iKr_Markov_Sotalol_block__kBinding; // dimensionless
        const double var_t443 = var_t389 * var_t423; // dimensionless
        const double var_t451 = (((-0.060299999999999999) * var_t377) * var_iKr_Markov_Sotalol_block__BCr2) - ((0.0112 * var_t384) * var_iKr_Markov_Sotalol_block__BCr1); // dimensionless
        const double var_t455 = (0.036499999999999998 * var_t412) * var_iKr_Markov_Sotalol_block__BCr3; // dimensionless
        const double var_t458 = (0.031199999999999999 * var_t423) * var_iKr_Markov_Sotalol_block__BIr5; // dimensionless
        const double var_t467 = exp(((-5.0) / 14.0) - ((1.0 / 14.0) * var_cell__V)); // dimensionless
        const double var_t468 = 1.0 + var_t467; // dimensionless
        const double var_t469 = pow(var_t468, 2.0); // dimensionless
        const double var_t472 = (1.0 / 6.0) * var_cell__V; // dimensionless
        const double var_t474 = exp((5.0 / 6.0) - var_t472); // dimensionless
        const double var_t475 = 1.0 + var_t474; // dimensionless
        const double var_t476 = pow(var_t475, 1.0 / 2.0); // dimensionless
        const double var_t477 = 1.0 / var_t476; // dimensionless
        const double var_t480 = exp(((1.0 / 15.0) * var_cell__V) - (7.0 / 3.0)); // dimensionless
        const double var_t481 = 1.0 + var_t480; // dimensionless
        const double var_t482 = 1.0 / var_t481; // dimensionless
        const double var_t485 = ((1400.0 * var_t477) * var_t482) + 80.0; // dimensionless
        const double var_t486 = 1.0 / var_t485; // dimensionless
        const double var_t491 = pow(var_t485, 2.0); // dimensionless
        const double var_t499 = pow(var_t481, 2.0); // dimensionless
        const double var_t507 = (1.0 / 5.0) * var_cell__V; // dimensionless
        const double var_t509 = exp(var_t507 + 4.0); // dimensionless
        const double var_t510 = 1.0 + var_t509; // dimensionless
        const double var_t511 = pow(var_t510, 2.0); // dimensionless
        const double var_t515 = pow(var_cell__V + 45.0, 2.0); // dimensionless
        const double var_t517 = exp(((-1.0) / 320.0) * var_t515); // dimensionless
        const double var_t520 = exp(var_t507 - 4.0); // dimensionless
        const double var_t521 = 1.0 + var_t520; // dimensionless
        const double var_t524 = ((85.0 * var_t517) + (5.0 / var_t521)) + 3.0; // dimensionless
        const double var_t525 = 1.0 / var_t524; // dimensionless
        const double var_t530 = pow(var_t524, 2.0); // dimensionless
        const double var_t537 = pow(var_t521, 2.0); // dimensionless
        const double var_t544 = exp((10.0 / 3.0) - var_t472); // dimensionless
        const double var_t545 = 1.0 + var_t544; // dimensionless
        const double var_t546 = pow(var_t545, 2.0); // dimensionless
        const double var_t550 = pow(var_cell__V + 40.0, 2.0); // dimensionless
        const double var_t552 = exp(((-1.0) / 1800.0) * var_t550); // dimensionless
        const double var_t554 = (9.5 * var_t552) + 0.80000000000000004; // dimensionless
        const double var_t555 = 1.0 / var_t554; // dimensionless
        const double var_t560 = pow(var_t554, 2.0); // dimensionless
        const double var_t571 = exp((-6.2967884820000002) - (0.1107419712 * var_cell__V)); // dimensionless
        const double var_t572 = 1.0 + var_t571; // dimensionless
        const double var_t573 = pow(var_t572, 2.0); // dimensionless
        const double var_t578 = exp((-12.0) - var_t507); // dimensionless
        const double var_t579 = 1.0 + var_t578; // dimensionless
        const double var_t581 = exp(var_t507 + 7.0); // dimensionless
        const double var_t582 = 1.0 + var_t581; // dimensionless
        const double var_t587 = exp(((1.0 / 200.0) * var_cell__V) - (1.0 / 4.0)); // dimensionless
        const double var_t588 = 1.0 + var_t587; // dimensionless
        const double var_t591 = (0.10000000000000001 / var_t582) + (0.10000000000000001 / var_t588); // dimensionless
        const double var_t592 = 1.0 / var_t591; // dimensionless
        const double var_t593 = var_t579 * var_t592; // dimensionless
        const double var_t597 = (1.0 / var_t573) - var_iNa_m_gate__m; // dimensionless
        const double var_t602 = pow(var_t591, 2.0); // dimensionless
        const double var_t604 = pow(var_t582, 2.0); // dimensionless
        const double var_t608 = pow(var_t588, 2.0); // dimensionless
        const double var_t619 = exp(((0.134589502 * var_cell__V) + 9.6298788680000005) - (0.134589502 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t620 = 1.0 + var_t619; // dimensionless
        const double var_t621 = pow(var_t620, 2.0); // dimensionless
        const double var_t624 = ((1.0 / var_t621) / var_t620) * var_t619; // dimensionless
        const double var_t626 = var_cell__V < ((-40.0) + var_INa__shift_INa_inact); // dimensionless
        const double var_t630 = exp((((-0.14705882349999999) * var_cell__V) - 11.764705879999999) + (0.14705882349999999 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t632 = var_t626 ? (0.057000000000000002 * var_t630) : 0.0; // dimensionless
        const double var_t636 = exp((0.079000000000000001 * var_cell__V) - (0.079000000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t641 = exp((0.34849999999999998 * var_cell__V) - (0.34849999999999998 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t647 = exp((((-0.090090090090000005) * var_cell__V) - 0.96036036039999995) + (0.090090090090000005 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t652 = var_t626 ? ((2.7000000000000002 * var_t636) + (310000.0 * var_t641)) : (0.77000000000000002 / (0.13 + (0.13 * var_t647))); // dimensionless
        const double var_t653 = var_t632 + var_t652; // dimensionless
        const double var_t656 = 1.0 / var_t621; // dimensionless
        const double var_t658 = (-40.0) + var_INa__shift_INa_inact; // dimensionless
        const double var_t659 = var_cell__V < var_t658; // dimensionless
        const double var_t662 = var_t658 < var_cell__V; // dimensionless
        const double var_t663 = var_t659 ? ((-0.0083823529409999993) * var_t630) : (var_t658 <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t667 = exp((0.079000000000000001 * var_cell__V) - (0.079000000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t672 = exp((0.34849999999999998 * var_cell__V) - (0.34849999999999998 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t677 = pow(0.13 + (0.13 * var_t647), 2.0); // dimensionless
        const double var_t681 = (var_cell__V <= var_t658) ? ((0.21329999999999999 * var_t667) + (108035.0 * var_t672)) : var_t662 ? ((0.009018018018 / var_t677) * var_t647) : NAN; // dimensionless
        const double var_t688 = exp((0.24440000000000001 * var_cell__V) - (0.24440000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t693 = exp(((-0.043909999999999998) * var_cell__V) + (0.043909999999999998 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t701 = exp(((0.311 * var_cell__V) + 24.640529999999998) - (0.311 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t705 = var_t626 ? (((((-25428.0) * var_t688) - (6.9480000000000002e-06 * var_t693)) * (var_cell__V + 37.780000000000001)) / (1.0 + var_t701)) : 0.0; // dimensionless
        const double var_t709 = exp(((-0.01052) * var_cell__V) + (0.01052 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t713 = exp((((-0.13780000000000001) * var_cell__V) - 5.5312919999999997) + (0.13780000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t721 = exp((0.057000000000000002 * var_cell__V) - (0.057000000000000002 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t725 = exp((((-0.10000000000000001) * var_cell__V) - 3.2000000000000002) + (0.10000000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t730 = var_t626 ? ((0.024240000000000001 * var_t709) / (1.0 + var_t713)) : ((0.59999999999999998 * var_t721) / (1.0 + var_t725)); // dimensionless
        const double var_t731 = var_t705 + var_t730; // dimensionless
        const double var_t738 = exp((0.24440000000000001 * var_cell__V) - (0.24440000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t743 = exp(((-0.043909999999999998) * var_cell__V) + (0.043909999999999998 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t746 = var_cell__V + 37.780000000000001; // dimensionless
        const double var_t751 = exp(((0.311 * var_cell__V) + 24.640530009999999) - (0.311 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t752 = 1.0 + var_t751; // dimensionless
        const double var_t753 = 1.0 / var_t752; // dimensionless
        const double var_t757 = ((-25428.0) * var_t738) - (6.9480000000000002e-06 * var_t743); // dimensionless
        const double var_t760 = pow(var_t752, 2.0); // dimensionless
        const double var_t766 = var_t659 ? (((((((-6214.6031999999996) * var_t738) + (3.0508668000000001e-07 * var_t743)) * var_t746) * var_t753) + (var_t757 * var_t753)) - ((((0.311 * var_t757) * var_t746) / var_t760) * var_t751)) : (var_t658 <= var_cell__V) ? 0.0 : NAN; // dimensionless
        const double var_t770 = exp(((-0.01052) * var_cell__V) + (0.01052 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t774 = exp((((-0.13780000000000001) * var_cell__V) - 5.5312919950000001) + (0.13780000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t775 = 1.0 + var_t774; // dimensionless
        const double var_t779 = pow(var_t775, 2.0); // dimensionless
        const double var_t788 = exp((0.057000000000000002 * var_cell__V) - (0.057000000000000002 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t792 = exp((((-0.10000000000000001) * var_cell__V) - 3.2000000000000002) + (0.10000000000000001 * var_INa__shift_INa_inact)); // dimensionless
        const double var_t793 = 1.0 + var_t792; // dimensionless
        const double var_t797 = pow(var_t793, 2.0); // dimensionless
        const double var_t803 = (var_cell__V <= var_t658) ? ((((-0.00025500479999999997) * var_t770) / var_t775) + (((0.003340272 * var_t770) / var_t779) * var_t774)) : var_t662 ? (((0.034200000000000001 * var_t788) / var_t793) + (((0.059999999999999998 * var_t788) / var_t797) * var_t792)) : NAN; // dimensionless
        const double var_t810 = exp((0.1333333333 * var_iCaL_d_gate__d_inf_shift) - (0.1333333333 * var_cell__V)); // dimensionless
        const double var_t811 = 1.0 + var_t810; // dimensionless
        const double var_t812 = pow(var_t811, 2.0); // dimensionless
        const double var_t817 = exp(((-35.0) / 13.0) - ((1.0 / 13.0) * var_cell__V)); // dimensionless
        const double var_t818 = 1.0 + var_t817; // dimensionless
        const double var_t821 = (1.3999999999999999 / var_t818) + 0.25; // dimensionless
        const double var_t823 = exp(var_t507 + 1.0); // dimensionless
        const double var_t824 = 1.0 + var_t823; // dimensionless
        const double var_t825 = 1.0 / var_t824; // dimensionless
        const double var_t830 = exp((5.0 / 2.0) - ((1.0 / 20.0) * var_cell__V)); // dimensionless
        const double var_t831 = 1.0 + var_t830; // dimensionless
        const double var_t833 = ((1.3999999999999999 * var_t821) * var_t825) + (1.0 / var_t831); // dimensionless
        const double var_t834 = 1.0 / var_t833; // dimensionless
        const double var_t839 = pow(var_t833, 2.0); // dimensionless
        const double var_t842 = pow(var_t818, 2.0); // dimensionless
        const double var_t847 = pow(var_t824, 2.0); // dimensionless
        const double var_t852 = pow(var_t831, 2.0); // dimensionless
        const double var_t859 = (1.0 / 7.0) * var_cell__V; // dimensionless
        const double var_t861 = exp(var_t859 + (20.0 / 7.0)); // dimensionless
        const double var_t862 = 1.0 + var_t861; // dimensionless
        const double var_t863 = pow(var_t862, 2.0); // dimensionless
        const double var_t867 = pow(var_cell__V + 27.0, 2.0); // dimensionless
        const double var_t869 = exp(((-1.0) / 225.0) * var_t867); // dimensionless
        const double var_t871 = (1.0 / 10.0) * var_cell__V; // dimensionless
        const double var_t873 = exp((13.0 / 10.0) - var_t871); // dimensionless
        const double var_t874 = 1.0 + var_t873; // dimensionless
        const double var_t878 = exp(var_t871 + 3.0); // dimensionless
        const double var_t879 = 1.0 + var_t878; // dimensionless
        const double var_t880 = 1.0 / var_t879; // dimensionless
        const double var_t882 = (((275.625 * var_t869) + (50.0 / var_t874)) + (45.0 * var_t880)) + 5.0; // dimensionless
        const double var_t883 = 1.0 / var_t882; // dimensionless
        const double var_t888 = pow(var_t882, 2.0); // dimensionless
        const double var_t895 = pow(var_t874, 2.0); // dimensionless
        const double var_t899 = pow(var_t879, 2.0); // dimensionless
        const double var_t901 = (1.0 / var_t899) * var_t878; // dimensionless
        const double var_t907 = exp(var_t859 + 5.0); // dimensionless
        const double var_t908 = 1.0 + var_t907; // dimensionless
        const double var_t909 = pow(var_t908, 2.0); // dimensionless
        const double var_t913 = exp(((-1.0) / 240.0) * var_t867); // dimensionless
        const double var_t916 = exp((5.0 / 2.0) - var_t871); // dimensionless
        const double var_t917 = 1.0 + var_t916; // dimensionless
        const double var_t921 = ((281.0 * var_t913) + ((31.0 / 2.0) / var_t917)) + (40.0 * var_t880); // dimensionless
        const double var_t922 = 1.0 / var_t921; // dimensionless
        const double var_t928 = pow(var_t921, 2.0); // dimensionless
        const double var_t935 = pow(var_t917, 2.0); // dimensionless
        const double var_t943 = pow(var_Ca__Ca_ss, 2.0); // dimensionless
        const double var_t945 = 1.0 + (400.0 * var_t943); // dimensionless
        const double var_t946 = 1.0 / var_t945; // dimensionless
        const double var_t948 = (80.0 * var_t946) + 2.0; // dimensionless
        const double var_t949 = 1.0 / var_t948; // dimensionless
        const double var_t950 = pow(var_t945, 2.0); // dimensionless
        const double var_t952 = (1.0 / var_t950) * var_Ca__Ca_ss; // dimensionless
        const double var_t957 = pow(var_t948, 2.0); // dimensionless
        const double var_t963 = var_Ca_buffer__Buf_c * var_Ca_buffer__K_buf_c; // dimensionless
        const double var_t964 = var_Ca__Ca_i + var_Ca_buffer__K_buf_c; // dimensionless
        const double var_t965 = pow(var_t964, 2.0); // dimensionless
        const double var_t968 = 1.0 + (var_t963 / var_t965); // dimensionless
        const double var_t969 = 1.0 / var_t968; // dimensionless
        const double var_t974 = 1.0 / var_cell__Vol_c; // dimensionless
        const double var_t976 = (var_cell__Cm * var_t974) * var_t6; // dimensionless
        const double var_t979 = pow(var_t968, 2.0); // dimensionless
        const double var_t982 = var_Ileak_Iup_Ixfer__Vol_leak * (var_Ca__Ca_SR - var_Ca__Ca_i); // dimensionless
        const double var_t983 = pow(var_Ileak_Iup_Ixfer__K_up, 2.0); // dimensionless
        const double var_t984 = pow(var_Ca__Ca_i, 2.0); // dimensionless
        const double var_t987 = 1.0 + (var_t983 / var_t984); // dimensionless
        const double var_t989 = var_Ileak_Iup_Ixfer__Vmax_up / var_t987; // dimensionless
        const double var_t994 = var_Ileak_Iup_Ixfer__Vol_xfer * (var_Ca__Ca_ss - var_Ca__Ca_i); // dimensionless
        const double var_t996 = log(var_Environment__Ca_o * var_t291); // dimensionless
        const double var_t1007 = var_t974 * var_t6; // dimensionless
        const double var_t1017 = pow(var_t987, 2.0); // dimensionless
        const double var_t1025 = (-var_Ileak_Iup_Ixfer__Vol_leak) - (((((2.0 * var_Ileak_Iup_Ixfer__Vmax_up) / var_t1017) * var_t983) / var_t984) / var_Ca__Ca_i); // dimensionless
        const double var_t1047 = var_Ca_buffer__Buf_sr * var_Ca_buffer__K_buf_sr; // dimensionless
        const double var_t1048 = var_Ca__Ca_SR + var_Ca_buffer__K_buf_sr; // dimensionless
        const double var_t1049 = pow(var_t1048, 2.0); // dimensionless
        const double var_t1052 = 1.0 + (var_t1047 / var_t1049); // dimensionless
        const double var_t1053 = 1.0 / var_t1052; // dimensionless
        const double var_t1055 = pow(var_t1052, 2.0); // dimensionless
        const double var_t1057 = var_Irel__Vol_rel * var_Irel__k1_prime; // dimensionless
        const double var_t1058 = var_Irel__max_sr - var_Irel__min_sr; // dimensionless
        const double var_t1059 = pow(var_Irel__EC, 2.0); // dimensionless
        const double var_t1060 = pow(var_Ca__Ca_SR, 2.0); // dimensionless
        const double var_t1063 = 1.0 + (var_t1059 / var_t1060); // dimensionless
        const double var_t1066 = var_Irel__max_sr - (var_t1058 / var_t1063); // dimensionless
        const double var_t1067 = 1.0 / var_t1066; // dimensionless
        const double var_t1068 = var_t1057 * var_t1067; // dimensionless
        const double var_t1069 = var_t943 * var_Irel__R_prime; // dimensionless
        const double var_t1070 = var_Irel__k1_prime * var_t1067; // dimensionless
        const double var_t1072 = var_Irel__k3 + (var_t1070 * var_t943); // dimensionless
        const double var_t1073 = 1.0 / var_t1072; // dimensionless
        const double var_t1074 = var_Ca__Ca_SR - var_Ca__Ca_ss; // dimensionless
        const double var_t1075 = var_t1073 * var_t1074; // dimensionless
        const double var_t1085 = pow(var_t1066, 2.0); // dimensionless
        const double var_t1086 = 1.0 / var_t1085; // dimensionless
        const double var_t1091 = pow(var_t1063, 2.0); // dimensionless
        const double var_t1092 = 1.0 / var_t1091; // dimensionless
        const double var_t1095 = (1.0 / var_t1060) / var_Ca__Ca_SR; // dimensionless
        const double var_t1096 = (var_t1092 * var_t1059) * var_t1095; // dimensionless
        const double var_t1100 = pow(var_Irel__k1_prime, 2.0); // dimensionless
        const double var_t1101 = var_Irel__Vol_rel * var_t1100; // dimensionless
        const double var_t1103 = (1.0 / var_t1085) / var_t1066; // dimensionless
        const double var_t1104 = pow(var_t943, 2.0); // dimensionless
        const double var_t1108 = pow(var_t1072, 2.0); // dimensionless
        const double var_t1109 = 1.0 / var_t1108; // dimensionless
        const double var_t1110 = var_t1109 * var_t1074; // dimensionless
        const double var_t1115 = var_t1069 * var_t1073; // dimensionless
        const double var_t1116 = var_t1068 * var_t1115; // dimensionless
        const double var_t1120 = var_Ca__Ca_ss * var_Irel__R_prime; // dimensionless
        const double var_t1125 = var_t943 * var_Ca__Ca_ss; // dimensionless
        const double var_t1134 = var_t1067 * var_t943; // dimensionless
        const double var_t1137 = var_Ca_buffer__Buf_ss * var_Ca_buffer__K_buf_ss; // dimensionless
        const double var_t1138 = var_Ca__Ca_ss + var_Ca_buffer__K_buf_ss; // dimensionless
        const double var_t1139 = pow(var_t1138, 2.0); // dimensionless
        const double var_t1142 = 1.0 + (var_t1137 / var_t1139); // dimensionless
        const double var_t1143 = 1.0 / var_t1142; // dimensionless
        const double var_t1145 = 1.0 / var_Ca__V_ss; // dimensionless
        const double var_t1146 = var_cell__Cm * var_t1145; // dimensionless
        const double var_t1148 = ((var_t175 * var_t107) * var_t110) * var_t1146; // dimensionless
        const double var_t1151 = var_t93 * var_t99; // dimensionless
        const double var_t1152 = var_t115 * var_t1151; // dimensionless
        const double var_t1153 = var_t114 * var_t1152; // dimensionless
        const double var_t1154 = var_t94 * var_t121; // dimensionless
        const double var_t1156 = var_t126 * var_t1146; // dimensionless
        const double var_t1168 = var_t1143 * var_ICaL__g_CaL; // dimensionless
        const double var_t1173 = var_t1168 * var_iCaL_d_gate__d; // dimensionless
        const double var_t1186 = var_cell__Vol_c * var_t1145; // dimensionless
        const double var_t1191 = (var_t1074 * var_Ca__V_sr) * var_t1145; // dimensionless
        const double var_t1193 = var_t1059 * var_t1095; // dimensionless
        const double var_t1195 = ((var_t1191 * var_t1058) * var_t1092) * var_t1193; // dimensionless
        const double var_t1204 = var_t1057 * var_t1134; // dimensionless
        const double var_t1205 = var_Irel__R_prime * var_t1073; // dimensionless
        const double var_t1208 = ((var_t1204 * var_t1205) * var_Ca__V_sr) * var_t1145; // dimensionless
        const double var_t1211 = pow(var_t1142, 2.0); // dimensionless
        const double var_t1215 = var_t1205 * var_t1191; // dimensionless
        const double var_t1253 = var_Irel__k2_prime * var_t1066; // dimensionless
        const double var_t1265 = (var_t261 * var_cell__Cm) * var_t1007; // dimensionless
        const double var_t1287 = var_t6 * var_cell__Cm; // dimensionless
        
        // Matrix entries
        IJth(rJacobian, 0, 0) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t235);
        IJth(rJacobian, 1, 0) = var_chaste_interface__Environment__fake_dt * (var_t387);
        IJth(rJacobian, 2, 0) = var_chaste_interface__Environment__fake_dt * (-var_t387);
        IJth(rJacobian, 3, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.039899999999999998) * var_t405) * var_iKr_Markov__Or4) - var_t414);
        IJth(rJacobian, 4, 0) = var_chaste_interface__Environment__fake_dt * ((var_t414 - var_t425) - (var_t436 * var_iKr_Markov__Or4));
        IJth(rJacobian, 5, 0) = var_chaste_interface__Environment__fake_dt * (((0.043778650189999997 * var_t433) * var_iKr_Markov__Or4) + var_t425);
        IJth(rJacobian, 6, 0) = var_chaste_interface__Environment__fake_dt * (var_t451);
        IJth(rJacobian, 7, 0) = var_chaste_interface__Environment__fake_dt * (-var_t451);
        IJth(rJacobian, 8, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.039899999999999998) * var_t405) * var_iKr_Markov_Sotalol_block__BOr4) - var_t455);
        IJth(rJacobian, 9, 0) = var_chaste_interface__Environment__fake_dt * ((var_t455 - var_t458) - (var_t436 * var_iKr_Markov_Sotalol_block__BOr4));
        IJth(rJacobian, 10, 0) = var_chaste_interface__Environment__fake_dt * (((0.043778650189999997 * var_t433) * var_iKr_Markov_Sotalol_block__BOr4) + var_t458);
        IJth(rJacobian, 11, 0) = var_chaste_interface__Environment__fake_dt * (((((1.0 / 14.0) / var_t469) * var_t467) * var_t486) - ((((1.0 / var_t468) - var_iKs_Xs_gate__Xs) / var_t491) * ((((((350.0 / 3.0) / var_t476) / var_t475) * var_t482) * var_t474) - ((((280.0 / 3.0) * var_t477) / var_t499) * var_t480))));
        IJth(rJacobian, 12, 0) = var_chaste_interface__Environment__fake_dt * ((((((-1.0) / 5.0) / var_t511) * var_t509) * var_t525) - ((((1.0 / var_t510) - var_ito_s_gate__s) / var_t530) * (((85.0 * ((((-1.0) / 160.0) * var_cell__V) - (9.0 / 32.0))) * var_t517) - ((1.0 / var_t537) * var_t520))));
        IJth(rJacobian, 13, 0) = var_chaste_interface__Environment__fake_dt * (((((1.0 / 6.0) / var_t546) * var_t544) * var_t555) - ((((9.5 * ((1.0 / var_t545) - var_ito_r_gate__r)) / var_t560) * ((((-1.0) / 900.0) * var_cell__V) - (2.0 / 45.0))) * var_t552));
        IJth(rJacobian, 14, 0) = var_chaste_interface__Environment__fake_dt * ((((((0.22148394239999999 / var_t573) / var_t572) * var_t571) * var_t593) - ((((1.0 / 5.0) * var_t597) * var_t578) * var_t592)) - (((var_t597 * var_t579) / var_t602) * ((((-0.02) / var_t604) * var_t581) - ((0.00050000000000000001 / var_t608) * var_t587))));
        IJth(rJacobian, 15, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.269179004) * var_t624) * var_t653) + ((var_t656 - var_iNa_h_gate__h) * (var_t663 + var_t681)));
        IJth(rJacobian, 16, 0) = var_chaste_interface__Environment__fake_dt * ((((-0.269179004) * var_t624) * var_t731) + ((var_t656 - var_iNa_j_gate__j) * (var_t766 + var_t803)));
        IJth(rJacobian, 17, 0) = var_chaste_interface__Environment__fake_dt * ((((0.1333333333 / var_t812) * var_t810) * var_t834) - ((((1.0 / var_t811) - var_iCaL_d_gate__d) / var_t839) * (((((0.15076923079999999 / var_t842) * var_t817) * var_t825) - (((0.28000000000000003 * var_t821) / var_t847) * var_t823)) + (((1.0 / 20.0) / var_t852) * var_t830))));
        IJth(rJacobian, 18, 0) = var_chaste_interface__Environment__fake_dt * ((((((-1.0) / 7.0) / var_t863) * var_t861) * var_t883) - ((((1.0 / var_t862) - var_iCaL_f_gate__f) / var_t888) * ((((275.625 * ((((-2.0) / 225.0) * var_cell__V) - (6.0 / 25.0))) * var_t869) + ((5.0 / var_t895) * var_t873)) - ((9.0 / 2.0) * var_t901))));
        IJth(rJacobian, 19, 0) = var_chaste_interface__Environment__fake_dt * (((((-0.1071428571) / var_t909) * var_t907) * var_t922) - (((((0.75 / var_t908) + 0.25) - var_iCaL_f2_gate__f2) / var_t928) * ((((281.0 * ((((-1.0) / 120.0) * var_cell__V) - (9.0 / 40.0))) * var_t913) + (((31.0 / 20.0) / var_t935) * var_t916)) - (4.0 * var_t901))));
        IJth(rJacobian, 21, 0) = var_chaste_interface__Environment__fake_dt * (((((-1.0) / 2.0) * var_t969) * ((var_ICab__g_bca - (2.0 * var_t209)) + (2.0 * var_t222))) * var_t976);
        IJth(rJacobian, 23, 0) = var_chaste_interface__Environment__fake_dt * (var_t1143 * ((((((-1.0) / 2.0) * var_t117) * var_t1148) - ((((0.25 * var_t1153) * var_t1154) * var_t125) * var_t1156)) + ((((((var_t1153 * var_t1154) * var_t131) * var_t133) * var_cell__Cm) * var_t1145) * var_t104)));
        IJth(rJacobian, 25, 0) = var_chaste_interface__Environment__fake_dt * (((((((-var_t171) - var_INab__g_bna) + (3.0 * var_t166)) - (3.0 * var_t209)) + (3.0 * var_t222)) * var_cell__Cm) * var_t1007);
        IJth(rJacobian, 26, 0) = var_chaste_interface__Environment__fake_dt * ((((((((((-var_t73) - var_t80) - var_t82) - var_t86) - var_t88) - var_t228) - var_t234) - (2.0 * var_t166)) * var_t974) * var_t1287);
        IJth(rJacobian, 1, 1) = var_chaste_interface__Environment__fake_dt * (-var_t390);
        IJth(rJacobian, 2, 1) = var_chaste_interface__Environment__fake_dt * (var_t390);
        IJth(rJacobian, 1, 2) = var_chaste_interface__Environment__fake_dt * (var_t391);
        IJth(rJacobian, 2, 2) = var_chaste_interface__Environment__fake_dt * (var_t396);
        IJth(rJacobian, 3, 2) = var_chaste_interface__Environment__fake_dt * (var_t395);
        IJth(rJacobian, 2, 3) = var_chaste_interface__Environment__fake_dt * (var_t400);
        IJth(rJacobian, 3, 3) = var_chaste_interface__Environment__fake_dt * (var_t417);
        IJth(rJacobian, 4, 3) = var_chaste_interface__Environment__fake_dt * (var_t416);
        IJth(rJacobian, 0, 4) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-0.43033148290000001) * var_t83) * var_t4) * var_t70));
        IJth(rJacobian, 3, 4) = var_chaste_interface__Environment__fake_dt * (var_t418);
        IJth(rJacobian, 4, 4) = var_chaste_interface__Environment__fake_dt * (((-var_t440) - var_t418) - var_t441);
        IJth(rJacobian, 5, 4) = var_chaste_interface__Environment__fake_dt * (var_t440);
        IJth(rJacobian, 9, 4) = var_chaste_interface__Environment__fake_dt * (var_t441);
        IJth(rJacobian, 26, 4) = var_chaste_interface__Environment__fake_dt * ((((((-0.43033148290000001) * var_t83) * var_t4) * var_t70) * var_t974) * var_t1287);
        IJth(rJacobian, 4, 5) = var_chaste_interface__Environment__fake_dt * (var_t443);
        IJth(rJacobian, 5, 5) = var_chaste_interface__Environment__fake_dt * (-var_t443);
        IJth(rJacobian, 6, 6) = var_chaste_interface__Environment__fake_dt * (-var_t390);
        IJth(rJacobian, 7, 6) = var_chaste_interface__Environment__fake_dt * (var_t390);
        IJth(rJacobian, 6, 7) = var_chaste_interface__Environment__fake_dt * (var_t391);
        IJth(rJacobian, 7, 7) = var_chaste_interface__Environment__fake_dt * (var_t396);
        IJth(rJacobian, 8, 7) = var_chaste_interface__Environment__fake_dt * (var_t395);
        IJth(rJacobian, 7, 8) = var_chaste_interface__Environment__fake_dt * (var_t400);
        IJth(rJacobian, 8, 8) = var_chaste_interface__Environment__fake_dt * (var_t417);
        IJth(rJacobian, 9, 8) = var_chaste_interface__Environment__fake_dt * (var_t416);
        IJth(rJacobian, 4, 9) = var_chaste_interface__Environment__fake_dt * (var_iKr_Markov_Sotalol_block__kDiss);
        IJth(rJacobian, 8, 9) = var_chaste_interface__Environment__fake_dt * (var_t418);
        IJth(rJacobian, 9, 9) = var_chaste_interface__Environment__fake_dt * (((-var_t440) - var_t418) - var_iKr_Markov_Sotalol_block__kDiss);
        IJth(rJacobian, 10, 9) = var_chaste_interface__Environment__fake_dt * (var_t440);
        IJth(rJacobian, 9, 10) = var_chaste_interface__Environment__fake_dt * (var_t443);
        IJth(rJacobian, 10, 10) = var_chaste_interface__Environment__fake_dt * (-var_t443);
        IJth(rJacobian, 0, 11) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((-2.0) * var_t250));
        IJth(rJacobian, 11, 11) = var_chaste_interface__Environment__fake_dt * (-var_t486);
        IJth(rJacobian, 26, 11) = var_chaste_interface__Environment__fake_dt * (((-2.0) * var_t250) * var_t976);
        IJth(rJacobian, 0, 12) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t252));
        IJth(rJacobian, 12, 12) = var_chaste_interface__Environment__fake_dt * (-var_t525);
        IJth(rJacobian, 26, 12) = var_chaste_interface__Environment__fake_dt * ((-var_t252) * var_t976);
        IJth(rJacobian, 0, 13) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (-var_t254));
        IJth(rJacobian, 13, 13) = var_chaste_interface__Environment__fake_dt * (-var_t555);
        IJth(rJacobian, 26, 13) = var_chaste_interface__Environment__fake_dt * ((-var_t254) * var_t976);
        IJth(rJacobian, 0, 14) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-3.0) * var_t255) * var_t170) * var_t261));
        IJth(rJacobian, 14, 14) = var_chaste_interface__Environment__fake_dt * (-var_t593);
        IJth(rJacobian, 25, 14) = var_chaste_interface__Environment__fake_dt * ((((-3.0) * var_t255) * var_t170) * var_t1265);
        IJth(rJacobian, 0, 15) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t169) * var_iNa_j_gate__j) * var_t261));
        IJth(rJacobian, 15, 15) = var_chaste_interface__Environment__fake_dt * (-var_t653);
        IJth(rJacobian, 25, 15) = var_chaste_interface__Environment__fake_dt * (((-var_t169) * var_iNa_j_gate__j) * var_t1265);
        IJth(rJacobian, 0, 16) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t169) * var_iNa_h_gate__h) * var_t261));
        IJth(rJacobian, 16, 16) = var_chaste_interface__Environment__fake_dt * (-var_t731);
        IJth(rJacobian, 25, 16) = var_chaste_interface__Environment__fake_dt * (((-var_t169) * var_iNa_h_gate__h) * var_t1265);
        IJth(rJacobian, 0, 17) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_ICaL__g_CaL) * var_iCaL_f_gate__f) * var_t116) * var_t273));
        IJth(rJacobian, 17, 17) = var_chaste_interface__Environment__fake_dt * (-var_t834);
        IJth(rJacobian, 23, 17) = var_chaste_interface__Environment__fake_dt * ((((((-1.0) / 2.0) * var_t1168) * var_iCaL_f_gate__f) * var_t1152) * var_t1148);
        IJth(rJacobian, 0, 18) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((-var_t89) * var_t116) * var_t273));
        IJth(rJacobian, 18, 18) = var_chaste_interface__Environment__fake_dt * (-var_t883);
        IJth(rJacobian, 23, 18) = var_chaste_interface__Environment__fake_dt * (((((-1.0) / 2.0) * var_t1173) * var_t1152) * var_t1148);
        IJth(rJacobian, 0, 19) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t89) * var_t277) * var_t93) * var_t273));
        IJth(rJacobian, 19, 19) = var_chaste_interface__Environment__fake_dt * (-var_t922);
        IJth(rJacobian, 23, 19) = var_chaste_interface__Environment__fake_dt * ((((((-1.0) / 2.0) * var_t1173) * var_t277) * var_t1151) * var_t1148);
        IJth(rJacobian, 0, 20) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((-var_t89) * var_t90) * var_t93) * var_t273));
        IJth(rJacobian, 20, 20) = var_chaste_interface__Environment__fake_dt * (-var_t949);
        IJth(rJacobian, 23, 20) = var_chaste_interface__Environment__fake_dt * ((((((-1.0) / 2.0) * var_t1173) * var_t90) * var_t1151) * var_t1148);
        IJth(rJacobian, 0, 21) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : (((var_t289 - var_t294) - var_t297) + var_t301));
        IJth(rJacobian, 21, 21) = var_chaste_interface__Environment__fake_dt * ((((((2.0 / var_t979) * (((((var_t982 - var_t989) * var_Ca__V_sr) * var_t974) + var_t994) - ((((1.0 / 2.0) * (((var_ICab__g_bca * (var_cell__V - (((0.5 * var_t67) * var_t6) * var_t996))) + (var_t298 * var_t296)) - ((2.0 * var_t213) * var_t208))) * var_cell__Cm) * var_t1007))) * var_t963) / var_t965) / var_t964) + (var_t969 * ((((var_t1025 * var_Ca__V_sr) * var_t974) - var_Ileak_Iup_Ixfer__Vol_xfer) - ((((1.0 / 2.0) * (((var_t294 + var_t297) - var_t301) + (2.0 * var_t289))) * var_cell__Cm) * var_t1007))));
        IJth(rJacobian, 22, 21) = var_chaste_interface__Environment__fake_dt * ((-var_t1053) * var_t1025);
        IJth(rJacobian, 23, 21) = var_chaste_interface__Environment__fake_dt * ((var_t1143 * var_Ileak_Iup_Ixfer__Vol_xfer) * var_t1186);
        IJth(rJacobian, 25, 21) = var_chaste_interface__Environment__fake_dt * ((((((3.0 * var_t284) * var_t191) * var_INaCa__alpha) * var_t201) * var_t287) * var_t976);
        IJth(rJacobian, 21, 22) = var_chaste_interface__Environment__fake_dt * (((var_t969 * var_Ileak_Iup_Ixfer__Vol_leak) * var_Ca__V_sr) * var_t974);
        IJth(rJacobian, 22, 22) = var_chaste_interface__Environment__fake_dt * ((((((2.0 / var_t1055) * ((var_t989 - ((var_t1068 * var_t1069) * var_t1075)) - var_t982)) * var_t1047) / var_t1049) / var_t1048) + (var_t1053 * (((((((((((-2.0) * var_t1057) * var_t1086) * var_t943) * var_Irel__R_prime) * var_t1075) * var_t1058) * var_t1096) + (((((((2.0 * var_t1101) * var_t1103) * var_t1104) * var_Irel__R_prime) * var_t1110) * var_t1058) * var_t1096)) - var_t1116) - var_Ileak_Iup_Ixfer__Vol_leak)));
        IJth(rJacobian, 23, 22) = var_chaste_interface__Environment__fake_dt * (var_t1143 * ((((((2.0 * var_t1057) * var_t1086) * var_t1115) * var_t1195) - ((((((2.0 * var_t1101) * var_t1103) * var_t1104) * var_Irel__R_prime) * var_t1109) * var_t1195)) + var_t1208));
        IJth(rJacobian, 24, 22) = var_chaste_interface__Environment__fake_dt * (((((2.0 * var_Irel__k2_prime) * var_t1058) * var_t1092) * var_t1193) * var_t1120);
        IJth(rJacobian, 0, 23) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-0.25) * var_t117) * var_t272) * var_t98) * var_t104) * var_t110));
        IJth(rJacobian, 20, 23) = var_chaste_interface__Environment__fake_dt * ((((-320.0) * var_t952) * var_t949) + (((64000.0 * (((0.40000000000000002 * var_t946) + 0.59999999999999998) - var_iCaL_fCass_gate__fCass)) / var_t957) * var_t952));
        IJth(rJacobian, 21, 23) = var_chaste_interface__Environment__fake_dt * (var_t969 * var_Ileak_Iup_Ixfer__Vol_xfer);
        IJth(rJacobian, 22, 23) = var_chaste_interface__Environment__fake_dt * (var_t1053 * ((((((-2.0) * var_t1068) * var_t1120) * var_t1075) + (((((2.0 * var_t1101) * var_t1086) * var_t1125) * var_Irel__R_prime) * var_t1110)) + var_t1116));
        IJth(rJacobian, 23, 23) = var_chaste_interface__Environment__fake_dt * ((((((2.0 / var_t1211) * ((((((-1.0) / 2.0) * var_t1153) * var_t1148) + (var_t1204 * var_t1215)) - (var_t994 * var_t1186))) * var_t1137) / var_t1139) / var_t1138) + (var_t1143 * ((((((((-0.125) * var_t1153) * var_t175) * var_t1156) + ((((2.0 * var_t1057) * var_t1067) * var_Ca__Ca_ss) * var_t1215)) - ((((((2.0 * var_t1101) * var_t1086) * var_t1125) * var_Irel__R_prime) * var_t1109) * var_t1191)) - var_t1208) - ((var_Ileak_Iup_Ixfer__Vol_xfer * var_cell__Vol_c) * var_t1145))));
        IJth(rJacobian, 24, 23) = var_chaste_interface__Environment__fake_dt * ((-var_t1253) * var_Irel__R_prime);
        IJth(rJacobian, 22, 24) = var_chaste_interface__Environment__fake_dt * (((((-var_t1053) * var_Irel__Vol_rel) * var_Irel__k1_prime) * var_t1134) * var_t1075);
        IJth(rJacobian, 23, 24) = var_chaste_interface__Environment__fake_dt * (((((var_t1143 * var_Irel__Vol_rel) * var_t1070) * var_t943) * var_t1073) * var_t1191);
        IJth(rJacobian, 24, 24) = var_chaste_interface__Environment__fake_dt * (((-var_t1253) * var_Ca__Ca_ss) - var_Irel__k4);
        IJth(rJacobian, 0, 25) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : ((((((-var_t311) - var_t315) + var_t320) - var_t323) - var_t326) - (3.0 * var_t331)));
        IJth(rJacobian, 21, 25) = var_chaste_interface__Environment__fake_dt * (((((((3.0 * var_t969) * var_INaCa__K_NaCa) * var_t177) * var_t179) * var_Environment__Ca_o) * var_t208) * var_t976);
        IJth(rJacobian, 25, 25) = var_chaste_interface__Environment__fake_dt * (((((((-var_t323) - var_t326) - (3.0 * var_t315)) + (3.0 * var_t320)) - (9.0 * var_t331)) * var_cell__Cm) * var_t1007);
        IJth(rJacobian, 26, 25) = var_chaste_interface__Environment__fake_dt * (((((-var_t311) + (2.0 * var_t315)) - (2.0 * var_t320)) * var_t974) * var_t1287);
        IJth(rJacobian, 0, 26) = var_chaste_interface__Environment__fake_dt * (mSetVoltageDerivativeToZero ? 0.0 : var_t371);
        IJth(rJacobian, 26, 26) = var_chaste_interface__Environment__fake_dt * ((var_t371 * var_t974) * var_t1287);
    }
    
template<>
void OdeSystemInformation<Dynamicfink_noble_giles_model_2008FromCellMLCvode>::Initialise(void)
{
    this->mSystemName = "fink_noble_giles_model_2008";
    this->mFreeVariableName = "Environment__time";
    this->mFreeVariableUnits = "millisecond";
    
    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-86.45);

    // rY[1]:
    this->mVariableNames.push_back("iKr_Markov__Cr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9786);

    // rY[2]:
    this->mVariableNames.push_back("iKr_Markov__Cr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0031);

    // rY[3]:
    this->mVariableNames.push_back("iKr_Markov__Cr3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0029);

    // rY[4]:
    this->mVariableNames.push_back("iKr_Markov__Or4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.014);

    // rY[5]:
    this->mVariableNames.push_back("iKr_Markov__Ir5");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0014);

    // rY[6]:
    this->mVariableNames.push_back("iKr_Markov_Sotalol_block__BCr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[7]:
    this->mVariableNames.push_back("iKr_Markov_Sotalol_block__BCr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[8]:
    this->mVariableNames.push_back("iKr_Markov_Sotalol_block__BCr3");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[9]:
    this->mVariableNames.push_back("iKr_Markov_Sotalol_block__BOr4");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[10]:
    this->mVariableNames.push_back("iKr_Markov_Sotalol_block__BIr5");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0);

    // rY[11]:
    this->mVariableNames.push_back("iKs_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00303);

    // rY[12]:
    this->mVariableNames.push_back("ito_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[13]:
    this->mVariableNames.push_back("ito_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.11e-8);

    // rY[14]:
    this->mVariableNames.push_back("iNa_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00132);

    // rY[15]:
    this->mVariableNames.push_back("iNa_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7768);

    // rY[16]:
    this->mVariableNames.push_back("iNa_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7766);

    // rY[17]:
    this->mVariableNames.push_back("iCaL_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(5.06e-6);

    // rY[18]:
    this->mVariableNames.push_back("iCaL_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9999);

    // rY[19]:
    this->mVariableNames.push_back("iCaL_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9995);

    // rY[20]:
    this->mVariableNames.push_back("iCaL_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1);

    // rY[21]:
    this->mVariableNames.push_back("Ca__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.092e-4);

    // rY[22]:
    this->mVariableNames.push_back("Ca__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.7656);

    // rY[23]:
    this->mVariableNames.push_back("Ca__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.893e-4);

    // rY[24]:
    this->mVariableNames.push_back("Irel__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9864);

    // rY[25]:
    this->mVariableNames.push_back("Na__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(7.940167);

    // rY[26]:
    this->mVariableNames.push_back("K__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(141.0167);

    this->mAttributes["SuggestedForwardEulerTimestep"] = 0.001;
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Dynamicfink_noble_giles_model_2008FromCellMLCvode)


#endif // CHASTE_CVODE
